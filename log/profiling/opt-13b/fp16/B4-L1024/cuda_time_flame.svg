<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="294" onload="init(evt)" viewBox="0 0 1200 294" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="294.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >CUDA Time</text>
<text id="details" x="10.00" y="277" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="277" > </text>
<g id="frames">
<g >
<title>nn.Module:_OPTDecoderLayer (5,528,979 us., 4.27%)</title><rect x="874.5" y="165" width="50.4" height="15.0" fill="rgb(232,99,51)" rx="2" ry="2" />
<text  x="877.52" y="175.5" >nn.Mo..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (1,970,584 us., 1.52%)</title><rect x="1102.0" y="133" width="18.0" height="15.0" fill="rgb(247,54,22)" rx="2" ry="2" />
<text  x="1105.03" y="143.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,491,086 us., 1.15%)</title><rect x="1052.4" y="101" width="13.6" height="15.0" fill="rgb(222,8,32)" rx="2" ry="2" />
<text  x="1055.42" y="111.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (3,938,600 us., 3.04%)</title><rect x="1066.2" y="117" width="35.8" height="15.0" fill="rgb(229,183,19)" rx="2" ry="2" />
<text  x="1069.17" y="127.5" >tra..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (3,938,600 us., 3.04%)</title><rect x="1066.2" y="149" width="35.8" height="15.0" fill="rgb(233,217,40)" rx="2" ry="2" />
<text  x="1069.17" y="159.5" >tra..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (5,528,979 us., 4.27%)</title><rect x="874.5" y="181" width="50.4" height="15.0" fill="rgb(221,15,50)" rx="2" ry="2" />
<text  x="877.52" y="191.5" >trans..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(160):_forward (31,917,278 us., 24.63%)</title><rect x="10.0" y="181" width="290.6" height="15.0" fill="rgb(232,16,2)" rx="2" ry="2" />
<text  x="13.00" y="191.5" >transformers/models/opt/modeling_opt.py..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (1,491,086 us., 1.15%)</title><rect x="1052.4" y="117" width="13.6" height="15.0" fill="rgb(230,108,15)" rx="2" ry="2" />
<text  x="1055.42" y="127.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (1,629,812 us., 1.26%)</title><rect x="979.2" y="149" width="14.8" height="15.0" fill="rgb(215,126,39)" rx="2" ry="2" />
<text  x="982.17" y="159.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (18,680 us., 0.01%)</title><rect x="1066.0" y="85" width="0.2" height="15.0" fill="rgb(240,222,25)" rx="2" ry="2" />
<text  x="1069.00" y="95.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (76,716 us., 0.06%)</title><rect x="1051.6" y="165" width="0.7" height="15.0" fill="rgb(248,225,45)" rx="2" ry="2" />
<text  x="1054.62" y="175.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (31,917,278 us., 24.63%)</title><rect x="10.0" y="53" width="290.6" height="15.0" fill="rgb(206,126,4)" rx="2" ry="2" />
<text  x="13.00" y="63.5" >profiling/utils.py(18):_profile_model</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (18,681 us., 0.01%)</title><rect x="1189.8" y="165" width="0.2" height="15.0" fill="rgb(244,185,49)" rx="2" ry="2" />
<text  x="1192.83" y="175.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (6,180,362 us., 4.77%)</title><rect x="1120.0" y="165" width="56.3" height="15.0" fill="rgb(245,132,39)" rx="2" ry="2" />
<text  x="1123.00" y="175.5" >trans..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,629,812 us., 1.26%)</title><rect x="979.2" y="69" width="14.8" height="15.0" fill="rgb(222,127,26)" rx="2" ry="2" />
<text  x="982.17" y="79.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (1,485,280 us., 1.15%)</title><rect x="1176.3" y="197" width="13.5" height="15.0" fill="rgb(240,103,48)" rx="2" ry="2" />
<text  x="1179.27" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_OPTAttention (6,180,362 us., 4.77%)</title><rect x="1120.0" y="213" width="56.3" height="15.0" fill="rgb(232,32,46)" rx="2" ry="2" />
<text  x="1123.00" y="223.5" >nn.Mo..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (1,629,812 us., 1.26%)</title><rect x="979.2" y="165" width="14.8" height="15.0" fill="rgb(239,228,13)" rx="2" ry="2" />
<text  x="982.17" y="175.5" ></text>
</g>
<g >
<title>&lt;built-in_method_bmm_of_type_object_at_0x7f982a89a9c0&gt; (5,528,979 us., 4.27%)</title><rect x="874.5" y="229" width="50.4" height="15.0" fill="rgb(242,6,2)" rx="2" ry="2" />
<text  x="877.52" y="239.5" >&lt;buil..</text>
</g>
<g >
<title>&lt;built-in_method_embedding_of_type_object_at_0x7f982a89a9c0&gt; (49,837 us., 0.04%)</title><rect x="924.9" y="229" width="0.4" height="15.0" fill="rgb(240,128,49)" rx="2" ry="2" />
<text  x="927.89" y="239.5" ></text>
</g>
<g >
<title>torch/nn/functional.py(2488):_layer_norm (1,509,766 us., 1.16%)</title><rect x="1052.4" y="213" width="13.8" height="15.0" fill="rgb(206,81,16)" rx="2" ry="2" />
<text  x="1055.42" y="223.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (61,171,145 us., 47.20%)</title><rect x="300.6" y="181" width="556.9" height="15.0" fill="rgb(217,119,12)" rx="2" ry="2" />
<text  x="303.59" y="191.5" >transformers/models/opt/modeling_opt.py(298):_forward</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (24,845 us., 0.02%)</title><rect x="925.1" y="85" width="0.2" height="15.0" fill="rgb(209,74,3)" rx="2" ry="2" />
<text  x="928.12" y="95.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (5,910,660 us., 4.56%)</title><rect x="925.3" y="69" width="53.9" height="15.0" fill="rgb(208,91,44)" rx="2" ry="2" />
<text  x="928.35" y="79.5" >profi..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (5,910,660 us., 4.56%)</title><rect x="925.3" y="117" width="53.9" height="15.0" fill="rgb(251,151,1)" rx="2" ry="2" />
<text  x="928.35" y="127.5" >nn.Mo..</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (3,938,600 us., 3.04%)</title><rect x="1066.2" y="101" width="35.8" height="15.0" fill="rgb(252,63,26)" rx="2" ry="2" />
<text  x="1069.17" y="111.5" >nn...</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (1,491,086 us., 1.15%)</title><rect x="1052.4" y="85" width="13.6" height="15.0" fill="rgb(215,185,4)" rx="2" ry="2" />
<text  x="1055.42" y="95.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (11,893 us., 0.01%)</title><rect x="1052.3" y="101" width="0.1" height="15.0" fill="rgb(215,157,5)" rx="2" ry="2" />
<text  x="1055.32" y="111.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,970,584 us., 1.52%)</title><rect x="1102.0" y="101" width="18.0" height="15.0" fill="rgb(212,116,40)" rx="2" ry="2" />
<text  x="1105.03" y="111.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (1,491,086 us., 1.15%)</title><rect x="1052.4" y="165" width="13.6" height="15.0" fill="rgb(241,184,23)" rx="2" ry="2" />
<text  x="1055.42" y="175.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(160):_forward (5,910,660 us., 4.56%)</title><rect x="925.3" y="197" width="53.9" height="15.0" fill="rgb(242,30,25)" rx="2" ry="2" />
<text  x="928.35" y="207.5" >trans..</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (1,485,280 us., 1.15%)</title><rect x="1176.3" y="149" width="13.5" height="15.0" fill="rgb(245,222,15)" rx="2" ry="2" />
<text  x="1179.27" y="159.5" ></text>
</g>
<g >
<title>&lt;built-in_method_layer_norm_of_type_object_at_0x7f982a89a9c0&gt; (1,509,766 us., 1.16%)</title><rect x="1052.4" y="229" width="13.8" height="15.0" fill="rgb(214,161,51)" rx="2" ry="2" />
<text  x="1055.42" y="239.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,866,055 us., 1.44%)</title><rect x="857.5" y="149" width="17.0" height="15.0" fill="rgb(235,172,15)" rx="2" ry="2" />
<text  x="860.53" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (6,180,362 us., 4.77%)</title><rect x="1120.0" y="117" width="56.3" height="15.0" fill="rgb(205,117,40)" rx="2" ry="2" />
<text  x="1123.00" y="127.5" >nn.Mo..</text>
</g>
<g >
<title>nn.Module:_LayerNorm (1,509,766 us., 1.16%)</title><rect x="1052.4" y="181" width="13.8" height="15.0" fill="rgb(224,9,1)" rx="2" ry="2" />
<text  x="1055.42" y="191.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (6,180,362 us., 4.77%)</title><rect x="1120.0" y="133" width="56.3" height="15.0" fill="rgb(221,13,11)" rx="2" ry="2" />
<text  x="1123.00" y="143.5" >trans..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (5,528,979 us., 4.27%)</title><rect x="874.5" y="69" width="50.4" height="15.0" fill="rgb(239,3,46)" rx="2" ry="2" />
<text  x="877.52" y="79.5" >torch..</text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (31,917,278 us., 24.63%)</title><rect x="10.0" y="133" width="290.6" height="15.0" fill="rgb(251,183,25)" rx="2" ry="2" />
<text  x="13.00" y="143.5" >nn.Module:_OPTDecoderLayer</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (3,938,600 us., 3.04%)</title><rect x="1066.2" y="181" width="35.8" height="15.0" fill="rgb(231,39,14)" rx="2" ry="2" />
<text  x="1069.17" y="191.5" >tra..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (61,171,145 us., 47.20%)</title><rect x="300.6" y="85" width="556.9" height="15.0" fill="rgb(215,185,11)" rx="2" ry="2" />
<text  x="303.59" y="95.5" >profiling/utils.py(18):_profile_model</text>
</g>
<g >
<title>nn.Module:_OPTAttention (5,528,979 us., 4.27%)</title><rect x="874.5" y="197" width="50.4" height="15.0" fill="rgb(214,141,26)" rx="2" ry="2" />
<text  x="877.52" y="207.5" >nn.Mo..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,629,812 us., 1.26%)</title><rect x="979.2" y="101" width="14.8" height="15.0" fill="rgb(250,229,28)" rx="2" ry="2" />
<text  x="982.17" y="111.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoder (31,917,278 us., 24.63%)</title><rect x="10.0" y="101" width="290.6" height="15.0" fill="rgb(229,9,13)" rx="2" ry="2" />
<text  x="13.00" y="111.5" >nn.Module:_OPTDecoder</text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (1,970,584 us., 1.52%)</title><rect x="1102.0" y="149" width="18.0" height="15.0" fill="rgb(226,163,41)" rx="2" ry="2" />
<text  x="1105.03" y="159.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (24,845 us., 0.02%)</title><rect x="925.1" y="69" width="0.2" height="15.0" fill="rgb(242,0,0)" rx="2" ry="2" />
<text  x="928.12" y="79.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoder (76,716 us., 0.06%)</title><rect x="1051.6" y="181" width="0.7" height="15.0" fill="rgb(212,131,22)" rx="2" ry="2" />
<text  x="1054.62" y="191.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (5,528,979 us., 4.27%)</title><rect x="874.5" y="149" width="50.4" height="15.0" fill="rgb(219,82,50)" rx="2" ry="2" />
<text  x="877.52" y="159.5" >trans..</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (24,992 us., 0.02%)</title><rect x="924.9" y="117" width="0.2" height="15.0" fill="rgb(217,36,6)" rx="2" ry="2" />
<text  x="927.89" y="127.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (61,171,145 us., 47.20%)</title><rect x="300.6" y="165" width="556.9" height="15.0" fill="rgb(243,85,4)" rx="2" ry="2" />
<text  x="303.59" y="175.5" >nn.Module:_OPTDecoderLayer</text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (3,938,600 us., 3.04%)</title><rect x="1066.2" y="165" width="35.8" height="15.0" fill="rgb(250,212,3)" rx="2" ry="2" />
<text  x="1069.17" y="175.5" >nn...</text>
</g>
<g >
<title>&lt;built-in_method_encode_of_str_object_at_0x7f97363914b0&gt; (13,957,287 us., 10.77%)</title><rect x="925.3" y="229" width="127.1" height="15.0" fill="rgb(211,180,11)" rx="2" ry="2" />
<text  x="928.35" y="239.5" >&lt;built-in_metho..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (6,327,803 us., 4.88%)</title><rect x="994.0" y="117" width="57.6" height="15.0" fill="rgb(228,132,33)" rx="2" ry="2" />
<text  x="997.00" y="127.5" >transf..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (24,992 us., 0.02%)</title><rect x="924.9" y="133" width="0.2" height="15.0" fill="rgb(241,49,41)" rx="2" ry="2" />
<text  x="927.89" y="143.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (5,528,979 us., 4.27%)</title><rect x="874.5" y="117" width="50.4" height="15.0" fill="rgb(207,91,34)" rx="2" ry="2" />
<text  x="877.52" y="127.5" >trans..</text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (1,491,086 us., 1.15%)</title><rect x="1052.4" y="149" width="13.6" height="15.0" fill="rgb(250,69,41)" rx="2" ry="2" />
<text  x="1055.42" y="159.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(160):_forward (6,327,803 us., 4.88%)</title><rect x="994.0" y="213" width="57.6" height="15.0" fill="rgb(245,194,30)" rx="2" ry="2" />
<text  x="997.00" y="223.5" >transf..</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (6,327,803 us., 4.88%)</title><rect x="994.0" y="101" width="57.6" height="15.0" fill="rgb(239,89,52)" rx="2" ry="2" />
<text  x="997.00" y="111.5" >nn.Mod..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (61,171,145 us., 47.20%)</title><rect x="300.6" y="133" width="556.9" height="15.0" fill="rgb(213,12,0)" rx="2" ry="2" />
<text  x="303.59" y="143.5" >nn.Module:_OPTDecoder</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (1,491,086 us., 1.15%)</title><rect x="1052.4" y="133" width="13.6" height="15.0" fill="rgb(253,45,16)" rx="2" ry="2" />
<text  x="1055.42" y="143.5" ></text>
</g>
<g >
<title>nn.Module:_OPTAttention (5,910,660 us., 4.56%)</title><rect x="925.3" y="181" width="53.9" height="15.0" fill="rgb(213,190,45)" rx="2" ry="2" />
<text  x="928.35" y="191.5" >nn.Mo..</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (5,910,660 us., 4.56%)</title><rect x="925.3" y="85" width="53.9" height="15.0" fill="rgb(216,130,25)" rx="2" ry="2" />
<text  x="928.35" y="95.5" >nn.Mo..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (24,992 us., 0.02%)</title><rect x="924.9" y="85" width="0.2" height="15.0" fill="rgb(206,172,46)" rx="2" ry="2" />
<text  x="927.89" y="95.5" ></text>
</g>
<g >
<title>nn.Module:_ReLU (1,970,584 us., 1.52%)</title><rect x="1102.0" y="181" width="18.0" height="15.0" fill="rgb(213,95,40)" rx="2" ry="2" />
<text  x="1105.03" y="191.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (5,910,660 us., 4.56%)</title><rect x="925.3" y="165" width="53.9" height="15.0" fill="rgb(213,39,47)" rx="2" ry="2" />
<text  x="928.35" y="175.5" >trans..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (6,327,803 us., 4.88%)</title><rect x="994.0" y="133" width="57.6" height="15.0" fill="rgb(219,182,30)" rx="2" ry="2" />
<text  x="997.00" y="143.5" >nn.Mod..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (1,970,584 us., 1.52%)</title><rect x="1102.0" y="165" width="18.0" height="15.0" fill="rgb(231,98,41)" rx="2" ry="2" />
<text  x="1105.03" y="175.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (24,992 us., 0.02%)</title><rect x="924.9" y="101" width="0.2" height="15.0" fill="rgb(253,140,8)" rx="2" ry="2" />
<text  x="927.89" y="111.5" ></text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (1,629,812 us., 1.26%)</title><rect x="979.2" y="85" width="14.8" height="15.0" fill="rgb(249,64,30)" rx="2" ry="2" />
<text  x="982.17" y="95.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (31,917,278 us., 24.63%)</title><rect x="10.0" y="149" width="290.6" height="15.0" fill="rgb(242,28,19)" rx="2" ry="2" />
<text  x="13.00" y="159.5" >transformers/models/opt/modeling_opt.py..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,491,086 us., 1.15%)</title><rect x="1052.4" y="53" width="13.6" height="15.0" fill="rgb(206,160,45)" rx="2" ry="2" />
<text  x="1055.42" y="63.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(160):_forward (1,629,812 us., 1.26%)</title><rect x="979.2" y="197" width="14.8" height="15.0" fill="rgb(237,130,48)" rx="2" ry="2" />
<text  x="982.17" y="207.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (31,917,278 us., 24.63%)</title><rect x="10.0" y="117" width="290.6" height="15.0" fill="rgb(222,89,35)" rx="2" ry="2" />
<text  x="13.00" y="127.5" >transformers/models/opt/modeling_opt.py..</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (1,970,584 us., 1.52%)</title><rect x="1102.0" y="85" width="18.0" height="15.0" fill="rgb(205,52,35)" rx="2" ry="2" />
<text  x="1105.03" y="95.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (6,327,803 us., 4.88%)</title><rect x="994.0" y="69" width="57.6" height="15.0" fill="rgb(206,202,22)" rx="2" ry="2" />
<text  x="997.00" y="79.5" >torch/..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (76,716 us., 0.06%)</title><rect x="1051.6" y="117" width="0.7" height="15.0" fill="rgb(252,109,25)" rx="2" ry="2" />
<text  x="1054.62" y="127.5" ></text>
</g>
<g >
<title>nn.Module:_OPTAttention (3,938,600 us., 3.04%)</title><rect x="1066.2" y="197" width="35.8" height="15.0" fill="rgb(227,186,53)" rx="2" ry="2" />
<text  x="1069.17" y="207.5" >nn...</text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (5,910,660 us., 4.56%)</title><rect x="925.3" y="149" width="53.9" height="15.0" fill="rgb(227,222,41)" rx="2" ry="2" />
<text  x="928.35" y="159.5" >nn.Mo..</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (31,917,278 us., 24.63%)</title><rect x="10.0" y="69" width="290.6" height="15.0" fill="rgb(215,204,7)" rx="2" ry="2" />
<text  x="13.00" y="79.5" >nn.Module:_OPTForCausalLM</text>
</g>
<g >
<title>nn.Module:_Linear (94,954,478 us., 73.26%)</title><rect x="10.0" y="197" width="864.5" height="15.0" fill="rgb(214,188,39)" rx="2" ry="2" />
<text  x="13.00" y="207.5" >nn.Module:_Linear</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (6,327,803 us., 4.88%)</title><rect x="994.0" y="181" width="57.6" height="15.0" fill="rgb(225,139,26)" rx="2" ry="2" />
<text  x="997.00" y="191.5" >transf..</text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (6,327,803 us., 4.88%)</title><rect x="994.0" y="165" width="57.6" height="15.0" fill="rgb(218,68,54)" rx="2" ry="2" />
<text  x="997.00" y="175.5" >nn.Mod..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (76,716 us., 0.06%)</title><rect x="1051.6" y="133" width="0.7" height="15.0" fill="rgb(232,144,16)" rx="2" ry="2" />
<text  x="1054.62" y="143.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (18,681 us., 0.01%)</title><rect x="1189.8" y="197" width="0.2" height="15.0" fill="rgb(228,143,49)" rx="2" ry="2" />
<text  x="1192.83" y="207.5" ></text>
</g>
<g >
<title>torch/nn/modules/sparse.py(157):_forward (49,837 us., 0.04%)</title><rect x="924.9" y="197" width="0.4" height="15.0" fill="rgb(218,43,29)" rx="2" ry="2" />
<text  x="927.89" y="207.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (1,485,280 us., 1.15%)</title><rect x="1176.3" y="229" width="13.5" height="15.0" fill="rgb(205,121,52)" rx="2" ry="2" />
<text  x="1179.27" y="239.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,970,584 us., 1.52%)</title><rect x="1102.0" y="69" width="18.0" height="15.0" fill="rgb(234,224,43)" rx="2" ry="2" />
<text  x="1105.03" y="79.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (24,845 us., 0.02%)</title><rect x="925.1" y="181" width="0.2" height="15.0" fill="rgb(205,113,43)" rx="2" ry="2" />
<text  x="928.12" y="191.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (18,680 us., 0.01%)</title><rect x="1066.0" y="101" width="0.2" height="15.0" fill="rgb(216,4,42)" rx="2" ry="2" />
<text  x="1069.00" y="111.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (18,680 us., 0.01%)</title><rect x="1066.0" y="133" width="0.2" height="15.0" fill="rgb(234,118,27)" rx="2" ry="2" />
<text  x="1069.00" y="143.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (5,910,660 us., 4.56%)</title><rect x="925.3" y="101" width="53.9" height="15.0" fill="rgb(224,135,17)" rx="2" ry="2" />
<text  x="928.35" y="111.5" >trans..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (11,893 us., 0.01%)</title><rect x="1052.3" y="181" width="0.1" height="15.0" fill="rgb(209,100,50)" rx="2" ry="2" />
<text  x="1055.32" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoder (1,970,584 us., 1.52%)</title><rect x="1102.0" y="117" width="18.0" height="15.0" fill="rgb(215,79,29)" rx="2" ry="2" />
<text  x="1105.03" y="127.5" ></text>
</g>
<g >
<title>&lt;built-in_function_linear&gt; (94,954,478 us., 73.26%)</title><rect x="10.0" y="229" width="864.5" height="15.0" fill="rgb(238,168,3)" rx="2" ry="2" />
<text  x="13.00" y="239.5" >&lt;built-in_function_linear&gt;</text>
</g>
<g >
<title>nn.Module:_OPTAttention (6,327,803 us., 4.88%)</title><rect x="994.0" y="197" width="57.6" height="15.0" fill="rgb(235,1,3)" rx="2" ry="2" />
<text  x="997.00" y="207.5" >nn.Mod..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (24,992 us., 0.02%)</title><rect x="924.9" y="165" width="0.2" height="15.0" fill="rgb(241,136,13)" rx="2" ry="2" />
<text  x="927.89" y="175.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (6,180,362 us., 4.77%)</title><rect x="1120.0" y="101" width="56.3" height="15.0" fill="rgb(205,64,0)" rx="2" ry="2" />
<text  x="1123.00" y="111.5" >profi..</text>
</g>
<g >
<title>nn.Module:_OPTAttention (1,629,812 us., 1.26%)</title><rect x="979.2" y="181" width="14.8" height="15.0" fill="rgb(205,210,17)" rx="2" ry="2" />
<text  x="982.17" y="191.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (18,680 us., 0.01%)</title><rect x="1066.0" y="165" width="0.2" height="15.0" fill="rgb(245,67,27)" rx="2" ry="2" />
<text  x="1069.00" y="175.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,866,055 us., 1.44%)</title><rect x="857.5" y="181" width="17.0" height="15.0" fill="rgb(233,136,17)" rx="2" ry="2" />
<text  x="860.53" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoder (18,680 us., 0.01%)</title><rect x="1066.0" y="149" width="0.2" height="15.0" fill="rgb(245,58,14)" rx="2" ry="2" />
<text  x="1069.00" y="159.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(160):_forward (3,938,600 us., 3.04%)</title><rect x="1066.2" y="213" width="35.8" height="15.0" fill="rgb(252,112,15)" rx="2" ry="2" />
<text  x="1069.17" y="223.5" >tra..</text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (6,180,362 us., 4.77%)</title><rect x="1120.0" y="181" width="56.3" height="15.0" fill="rgb(239,22,8)" rx="2" ry="2" />
<text  x="1123.00" y="191.5" >nn.Mo..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (11,893 us., 0.01%)</title><rect x="1052.3" y="149" width="0.1" height="15.0" fill="rgb(253,75,37)" rx="2" ry="2" />
<text  x="1055.32" y="159.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (18,681 us., 0.01%)</title><rect x="1189.8" y="149" width="0.2" height="15.0" fill="rgb(218,176,18)" rx="2" ry="2" />
<text  x="1192.83" y="159.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,491,086 us., 1.15%)</title><rect x="1052.4" y="69" width="13.6" height="15.0" fill="rgb(253,154,37)" rx="2" ry="2" />
<text  x="1055.42" y="79.5" ></text>
</g>
<g >
<title>torch/nn/modules/activation.py(97):_forward (1,970,584 us., 1.52%)</title><rect x="1102.0" y="197" width="18.0" height="15.0" fill="rgb(247,207,30)" rx="2" ry="2" />
<text  x="1105.03" y="207.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (61,171,145 us., 47.20%)</title><rect x="300.6" y="69" width="556.9" height="15.0" fill="rgb(216,140,5)" rx="2" ry="2" />
<text  x="303.59" y="79.5" >torch/autograd/grad_mode.py(27):_decorate_context</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (61,171,145 us., 47.20%)</title><rect x="300.6" y="149" width="556.9" height="15.0" fill="rgb(225,130,36)" rx="2" ry="2" />
<text  x="303.59" y="159.5" >transformers/models/opt/modeling_opt.py(553):_forward</text>
</g>
<g >
<title>nn.Module:_Embedding (24,992 us., 0.02%)</title><rect x="924.9" y="181" width="0.2" height="15.0" fill="rgb(228,59,0)" rx="2" ry="2" />
<text  x="927.89" y="191.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,485,280 us., 1.15%)</title><rect x="1176.3" y="117" width="13.5" height="15.0" fill="rgb(209,139,7)" rx="2" ry="2" />
<text  x="1179.27" y="127.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoder (1,485,280 us., 1.15%)</title><rect x="1176.3" y="181" width="13.5" height="15.0" fill="rgb(245,175,27)" rx="2" ry="2" />
<text  x="1179.27" y="191.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (31,917,278 us., 24.63%)</title><rect x="10.0" y="85" width="290.6" height="15.0" fill="rgb(211,128,50)" rx="2" ry="2" />
<text  x="13.00" y="95.5" >transformers/models/opt/modeling_opt.py..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (18,681 us., 0.01%)</title><rect x="1189.8" y="213" width="0.2" height="15.0" fill="rgb(213,182,34)" rx="2" ry="2" />
<text  x="1192.83" y="223.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(89):__expand_mask (11,893 us., 0.01%)</title><rect x="1052.3" y="213" width="0.1" height="15.0" fill="rgb(222,50,24)" rx="2" ry="2" />
<text  x="1055.32" y="223.5" ></text>
</g>
<g >
<title>&lt;built-in_method_max_of_type_object_at_0x7f982a89a9c0&gt; (3,938,600 us., 3.04%)</title><rect x="1066.2" y="229" width="35.8" height="15.0" fill="rgb(236,130,25)" rx="2" ry="2" />
<text  x="1069.17" y="239.5" >&lt;bu..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (6,180,362 us., 4.77%)</title><rect x="1120.0" y="197" width="56.3" height="15.0" fill="rgb(217,130,27)" rx="2" ry="2" />
<text  x="1123.00" y="207.5" >trans..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (6,327,803 us., 4.88%)</title><rect x="994.0" y="149" width="57.6" height="15.0" fill="rgb(232,202,5)" rx="2" ry="2" />
<text  x="997.00" y="159.5" >transf..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (1,629,812 us., 1.26%)</title><rect x="979.2" y="133" width="14.8" height="15.0" fill="rgb(212,178,12)" rx="2" ry="2" />
<text  x="982.17" y="143.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,866,055 us., 1.44%)</title><rect x="857.5" y="133" width="17.0" height="15.0" fill="rgb(237,16,43)" rx="2" ry="2" />
<text  x="860.53" y="143.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (3,938,600 us., 3.04%)</title><rect x="1066.2" y="85" width="35.8" height="15.0" fill="rgb(218,71,15)" rx="2" ry="2" />
<text  x="1069.17" y="95.5" >pro..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (11,893 us., 0.01%)</title><rect x="1052.3" y="117" width="0.1" height="15.0" fill="rgb(222,12,41)" rx="2" ry="2" />
<text  x="1055.32" y="127.5" ></text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (76,716 us., 0.06%)</title><rect x="1051.6" y="149" width="0.7" height="15.0" fill="rgb(222,18,18)" rx="2" ry="2" />
<text  x="1054.62" y="159.5" ></text>
</g>
<g >
<title>all (129,605,378 us., 100%)</title><rect x="10.0" y="245" width="1180.0" height="15.0" fill="rgb(211,117,53)" rx="2" ry="2" />
<text  x="13.00" y="255.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (5,528,979 us., 4.27%)</title><rect x="874.5" y="85" width="50.4" height="15.0" fill="rgb(220,115,54)" rx="2" ry="2" />
<text  x="877.52" y="95.5" >profi..</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (11,893 us., 0.01%)</title><rect x="1052.3" y="133" width="0.1" height="15.0" fill="rgb(253,55,32)" rx="2" ry="2" />
<text  x="1055.32" y="143.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (24,845 us., 0.02%)</title><rect x="925.1" y="149" width="0.2" height="15.0" fill="rgb(251,154,28)" rx="2" ry="2" />
<text  x="928.12" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoder (6,180,362 us., 4.77%)</title><rect x="1120.0" y="149" width="56.3" height="15.0" fill="rgb(236,201,24)" rx="2" ry="2" />
<text  x="1123.00" y="159.5" >nn.Mo..</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (1,866,055 us., 1.44%)</title><rect x="857.5" y="165" width="17.0" height="15.0" fill="rgb(223,174,48)" rx="2" ry="2" />
<text  x="860.53" y="175.5" ></text>
</g>
<g >
<title>torch/nn/functional.py(1446):_relu (1,970,584 us., 1.52%)</title><rect x="1102.0" y="213" width="18.0" height="15.0" fill="rgb(244,98,16)" rx="2" ry="2" />
<text  x="1105.03" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (5,528,979 us., 4.27%)</title><rect x="874.5" y="101" width="50.4" height="15.0" fill="rgb(205,168,41)" rx="2" ry="2" />
<text  x="877.52" y="111.5" >nn.Mo..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,485,280 us., 1.15%)</title><rect x="1176.3" y="165" width="13.5" height="15.0" fill="rgb(250,201,51)" rx="2" ry="2" />
<text  x="1179.27" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoder (24,992 us., 0.02%)</title><rect x="924.9" y="149" width="0.2" height="15.0" fill="rgb(245,74,25)" rx="2" ry="2" />
<text  x="927.89" y="159.5" ></text>
</g>
<g >
<title>torch/nn/modules/linear.py(113):_forward (94,954,478 us., 73.26%)</title><rect x="10.0" y="213" width="864.5" height="15.0" fill="rgb(212,191,41)" rx="2" ry="2" />
<text  x="13.00" y="223.5" >torch/nn/modules/linear.py(113):_forward</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(157):__shape (1,629,812 us., 1.26%)</title><rect x="979.2" y="213" width="14.8" height="15.0" fill="rgb(239,209,44)" rx="2" ry="2" />
<text  x="982.17" y="223.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (61,171,145 us., 47.20%)</title><rect x="300.6" y="117" width="556.9" height="15.0" fill="rgb(223,40,45)" rx="2" ry="2" />
<text  x="303.59" y="127.5" >transformers/models/opt/modeling_opt.py(840):_forward</text>
</g>
<g >
<title>torch/nn/functional.py(2099):_embedding (49,837 us., 0.04%)</title><rect x="924.9" y="213" width="0.4" height="15.0" fill="rgb(221,82,7)" rx="2" ry="2" />
<text  x="927.89" y="223.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,970,584 us., 1.52%)</title><rect x="1102.0" y="53" width="18.0" height="15.0" fill="rgb(240,131,47)" rx="2" ry="2" />
<text  x="1105.03" y="63.5" ></text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (18,680 us., 0.01%)</title><rect x="1066.0" y="117" width="0.2" height="15.0" fill="rgb(210,100,38)" rx="2" ry="2" />
<text  x="1069.00" y="127.5" ></text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (61,171,145 us., 47.20%)</title><rect x="300.6" y="101" width="556.9" height="15.0" fill="rgb(242,48,53)" rx="2" ry="2" />
<text  x="303.59" y="111.5" >nn.Module:_OPTForCausalLM</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(533):__prepare_decoder_attention_mask (11,893 us., 0.01%)</title><rect x="1052.3" y="197" width="0.1" height="15.0" fill="rgb(232,121,6)" rx="2" ry="2" />
<text  x="1055.32" y="207.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (5,910,660 us., 4.56%)</title><rect x="925.3" y="133" width="53.9" height="15.0" fill="rgb(220,5,35)" rx="2" ry="2" />
<text  x="928.35" y="143.5" >trans..</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (18,681 us., 0.01%)</title><rect x="1189.8" y="181" width="0.2" height="15.0" fill="rgb(235,93,53)" rx="2" ry="2" />
<text  x="1192.83" y="191.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (6,327,803 us., 4.88%)</title><rect x="994.0" y="85" width="57.6" height="15.0" fill="rgb(251,35,13)" rx="2" ry="2" />
<text  x="997.00" y="95.5" >profil..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (3,938,600 us., 3.04%)</title><rect x="1066.2" y="133" width="35.8" height="15.0" fill="rgb(232,116,3)" rx="2" ry="2" />
<text  x="1069.17" y="143.5" >nn...</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (3,938,600 us., 3.04%)</title><rect x="1066.2" y="69" width="35.8" height="15.0" fill="rgb(226,4,27)" rx="2" ry="2" />
<text  x="1069.17" y="79.5" >tor..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (24,845 us., 0.02%)</title><rect x="925.1" y="133" width="0.2" height="15.0" fill="rgb(232,118,41)" rx="2" ry="2" />
<text  x="928.12" y="143.5" ></text>
</g>
<g >
<title>torch/nn/modules/normalization.py(188):_forward (1,509,766 us., 1.16%)</title><rect x="1052.4" y="197" width="13.8" height="15.0" fill="rgb(206,199,12)" rx="2" ry="2" />
<text  x="1055.42" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (24,845 us., 0.02%)</title><rect x="925.1" y="165" width="0.2" height="15.0" fill="rgb(239,110,21)" rx="2" ry="2" />
<text  x="928.12" y="175.5" ></text>
</g>
<g >
<title>&lt;built-in_method_relu_of_type_object_at_0x7f982a89a9c0&gt; (1,970,584 us., 1.52%)</title><rect x="1102.0" y="229" width="18.0" height="15.0" fill="rgb(241,116,36)" rx="2" ry="2" />
<text  x="1105.03" y="239.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(160):_forward (5,528,979 us., 4.27%)</title><rect x="874.5" y="213" width="50.4" height="15.0" fill="rgb(220,29,1)" rx="2" ry="2" />
<text  x="877.52" y="223.5" >trans..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (1,629,812 us., 1.26%)</title><rect x="979.2" y="117" width="14.8" height="15.0" fill="rgb(233,205,36)" rx="2" ry="2" />
<text  x="982.17" y="127.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (1,485,280 us., 1.15%)</title><rect x="1176.3" y="213" width="13.5" height="15.0" fill="rgb(244,21,7)" rx="2" ry="2" />
<text  x="1179.27" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoder (11,893 us., 0.01%)</title><rect x="1052.3" y="165" width="0.1" height="15.0" fill="rgb(231,98,17)" rx="2" ry="2" />
<text  x="1055.32" y="175.5" ></text>
</g>
<g >
<title>torch/nn/functional.py(1804):_softmax (5,910,660 us., 4.56%)</title><rect x="925.3" y="213" width="53.9" height="15.0" fill="rgb(238,170,20)" rx="2" ry="2" />
<text  x="928.35" y="223.5" >torch..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (5,528,979 us., 4.27%)</title><rect x="874.5" y="133" width="50.4" height="15.0" fill="rgb(242,218,3)" rx="2" ry="2" />
<text  x="877.52" y="143.5" >nn.Mo..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (18,681 us., 0.01%)</title><rect x="1189.8" y="229" width="0.2" height="15.0" fill="rgb(217,121,33)" rx="2" ry="2" />
<text  x="1192.83" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (24,845 us., 0.02%)</title><rect x="925.1" y="101" width="0.2" height="15.0" fill="rgb(232,38,48)" rx="2" ry="2" />
<text  x="928.12" y="111.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(160):_forward (6,180,362 us., 4.77%)</title><rect x="1120.0" y="229" width="56.3" height="15.0" fill="rgb(214,82,20)" rx="2" ry="2" />
<text  x="1123.00" y="239.5" >trans..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(533):__prepare_decoder_attention_mask (76,716 us., 0.06%)</title><rect x="1051.6" y="213" width="0.7" height="15.0" fill="rgb(205,78,16)" rx="2" ry="2" />
<text  x="1054.62" y="223.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (6,180,362 us., 4.77%)</title><rect x="1120.0" y="85" width="56.3" height="15.0" fill="rgb(207,110,35)" rx="2" ry="2" />
<text  x="1123.00" y="95.5" >torch..</text>
</g>
<g >
<title>nn.Module:_OPTAttention (31,917,278 us., 24.63%)</title><rect x="10.0" y="165" width="290.6" height="15.0" fill="rgb(242,100,37)" rx="2" ry="2" />
<text  x="13.00" y="175.5" >nn.Module:_OPTAttention</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (76,716 us., 0.06%)</title><rect x="1051.6" y="197" width="0.7" height="15.0" fill="rgb(229,179,0)" rx="2" ry="2" />
<text  x="1054.62" y="207.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (5,910,660 us., 4.56%)</title><rect x="925.3" y="53" width="53.9" height="15.0" fill="rgb(226,16,27)" rx="2" ry="2" />
<text  x="928.35" y="63.5" >torch..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (31,917,278 us., 24.63%)</title><rect x="10.0" y="37" width="290.6" height="15.0" fill="rgb(248,85,46)" rx="2" ry="2" />
<text  x="13.00" y="47.5" >torch/autograd/grad_mode.py(27):_decora..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,629,812 us., 1.26%)</title><rect x="979.2" y="53" width="14.8" height="15.0" fill="rgb(219,156,45)" rx="2" ry="2" />
<text  x="982.17" y="63.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (24,845 us., 0.02%)</title><rect x="925.1" y="117" width="0.2" height="15.0" fill="rgb(246,169,20)" rx="2" ry="2" />
<text  x="928.12" y="127.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,485,280 us., 1.15%)</title><rect x="1176.3" y="133" width="13.5" height="15.0" fill="rgb(250,112,38)" rx="2" ry="2" />
<text  x="1179.27" y="143.5" ></text>
</g>
</g>
</svg>
