<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="326" onload="init(evt)" viewBox="0 0 1200 326" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="326.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >CUDA Time</text>
<text id="details" x="10.00" y="309" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="309" > </text>
<g id="frames">
<g >
<title>nn.Module:_Int8OPTForCausalLM (2,913 us., 0.08%)</title><rect x="75.4" y="149" width="1.0" height="15.0" fill="rgb(227,19,46)" rx="2" ry="2" />
<text  x="78.44" y="159.5" ></text>
</g>
<g >
<title>torch/nn/functional.py(2488):_layer_norm (129,850 us., 3.45%)</title><rect x="789.5" y="245" width="40.7" height="15.0" fill="rgb(210,79,38)" rx="2" ry="2" />
<text  x="792.52" y="255.5" >tor..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (119,861 us., 3.18%)</title><rect x="909.2" y="85" width="37.5" height="15.0" fill="rgb(252,98,20)" rx="2" ry="2" />
<text  x="912.18" y="95.5" >tor..</text>
</g>
<g >
<title>torch_int/nn/opt.py(213):_forward (379,092 us., 10.06%)</title><rect x="157.5" y="213" width="118.6" height="15.0" fill="rgb(220,28,24)" rx="2" ry="2" />
<text  x="160.46" y="223.5" >torch_int/nn/o..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (1,133 us., 0.03%)</title><rect x="394.5" y="213" width="0.4" height="15.0" fill="rgb(208,118,49)" rx="2" ry="2" />
<text  x="397.55" y="223.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(213):_forward (119,861 us., 3.18%)</title><rect x="909.2" y="197" width="37.5" height="15.0" fill="rgb(223,156,36)" rx="2" ry="2" />
<text  x="912.18" y="207.5" >tor..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (66,498 us., 1.76%)</title><rect x="888.4" y="101" width="20.8" height="15.0" fill="rgb(232,107,9)" rx="2" ry="2" />
<text  x="891.36" y="111.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (66,498 us., 1.76%)</title><rect x="888.4" y="37" width="20.8" height="15.0" fill="rgb(217,173,40)" rx="2" ry="2" />
<text  x="891.36" y="47.5" ></text>
</g>
<g >
<title>nn.Module:_Embedding (2,913 us., 0.08%)</title><rect x="75.4" y="213" width="1.0" height="15.0" fill="rgb(223,208,17)" rx="2" ry="2" />
<text  x="78.44" y="223.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(213):_forward (519,845 us., 13.79%)</title><rect x="1027.1" y="213" width="162.7" height="15.0" fill="rgb(247,39,24)" rx="2" ry="2" />
<text  x="1030.06" y="223.5" >torch_int/nn/opt.py(..</text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (2,502 us., 0.07%)</title><rect x="1026.3" y="261" width="0.8" height="15.0" fill="rgb(227,69,22)" rx="2" ry="2" />
<text  x="1029.27" y="271.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (1,615 us., 0.04%)</title><rect x="789.5" y="181" width="0.5" height="15.0" fill="rgb(232,25,16)" rx="2" ry="2" />
<text  x="792.52" y="191.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (2,913 us., 0.08%)</title><rect x="75.4" y="165" width="1.0" height="15.0" fill="rgb(245,30,10)" rx="2" ry="2" />
<text  x="78.44" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (66,498 us., 1.76%)</title><rect x="888.4" y="165" width="20.8" height="15.0" fill="rgb(208,190,41)" rx="2" ry="2" />
<text  x="891.36" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (165,319 us., 4.39%)</title><rect x="394.9" y="101" width="51.8" height="15.0" fill="rgb(229,183,45)" rx="2" ry="2" />
<text  x="397.90" y="111.5" >nn.Mo..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (1,157 us., 0.03%)</title><rect x="789.2" y="197" width="0.3" height="15.0" fill="rgb(218,224,52)" rx="2" ry="2" />
<text  x="792.16" y="207.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (1,093,640 us., 29.02%)</title><rect x="446.7" y="165" width="342.4" height="15.0" fill="rgb(237,134,22)" rx="2" ry="2" />
<text  x="449.66" y="175.5" >torch_int/nn/opt.py(346):_forward</text>
</g>
<g >
<title>torch/nn/functional.py(2099):_embedding (5,607 us., 0.15%)</title><rect x="75.4" y="245" width="1.8" height="15.0" fill="rgb(246,44,20)" rx="2" ry="2" />
<text  x="78.44" y="255.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (256,359 us., 6.80%)</title><rect x="77.2" y="149" width="80.3" height="15.0" fill="rgb(250,125,50)" rx="2" ry="2" />
<text  x="80.20" y="159.5" >torch_int..</text>
</g>
<g >
<title>torch_int/nn/opt.py(72):_forward (165,319 us., 4.39%)</title><rect x="394.9" y="229" width="51.8" height="15.0" fill="rgb(206,8,5)" rx="2" ry="2" />
<text  x="397.90" y="239.5" >torch..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (128,235 us., 3.40%)</title><rect x="790.0" y="181" width="40.2" height="15.0" fill="rgb(242,187,22)" rx="2" ry="2" />
<text  x="793.03" y="191.5" >nn...</text>
</g>
<g >
<title>torch_int/nn/opt.py(213):_forward (1,093,640 us., 29.02%)</title><rect x="446.7" y="197" width="342.4" height="15.0" fill="rgb(215,159,1)" rx="2" ry="2" />
<text  x="449.66" y="207.5" >torch_int/nn/opt.py(213):_forward</text>
</g>
<g >
<title>&lt;built-in_method_max_of_type_object_at_0x7f86197ff9c0&gt; (253,532 us., 6.73%)</title><rect x="946.7" y="261" width="79.4" height="15.0" fill="rgb(214,32,13)" rx="2" ry="2" />
<text  x="949.71" y="271.5" >&lt;built-in..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (900 us., 0.02%)</title><rect x="75.2" y="197" width="0.2" height="15.0" fill="rgb(208,158,0)" rx="2" ry="2" />
<text  x="78.16" y="207.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(213):_forward (128,235 us., 3.40%)</title><rect x="790.0" y="197" width="40.2" height="15.0" fill="rgb(223,123,33)" rx="2" ry="2" />
<text  x="793.03" y="207.5" >tor..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (128,235 us., 3.40%)</title><rect x="790.0" y="133" width="40.2" height="15.0" fill="rgb(236,30,11)" rx="2" ry="2" />
<text  x="793.03" y="143.5" >tra..</text>
</g>
<g >
<title>torch_int/nn/opt.py(72):_forward (66,498 us., 1.76%)</title><rect x="888.4" y="197" width="20.8" height="15.0" fill="rgb(230,79,24)" rx="2" ry="2" />
<text  x="891.36" y="207.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (598 us., 0.02%)</title><rect x="1189.8" y="261" width="0.2" height="15.0" fill="rgb(245,228,13)" rx="2" ry="2" />
<text  x="1192.81" y="271.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (2,694 us., 0.07%)</title><rect x="76.4" y="101" width="0.8" height="15.0" fill="rgb(218,94,18)" rx="2" ry="2" />
<text  x="79.35" y="111.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (1,157 us., 0.03%)</title><rect x="789.2" y="165" width="0.3" height="15.0" fill="rgb(250,147,27)" rx="2" ry="2" />
<text  x="792.16" y="175.5" ></text>
</g>
<g >
<title>torch_int/nn/fused.py(13):_forward (379,092 us., 10.06%)</title><rect x="157.5" y="245" width="118.6" height="15.0" fill="rgb(251,12,39)" rx="2" ry="2" />
<text  x="160.46" y="255.5" >torch_int/nn/f..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,093,640 us., 29.02%)</title><rect x="446.7" y="101" width="342.4" height="15.0" fill="rgb(217,211,19)" rx="2" ry="2" />
<text  x="449.66" y="111.5" >profiling/utils.py(18):_profile_model</text>
</g>
<g >
<title>&lt;built-in_method_linear_a8_w8_bfp32_ofp32_of_PyCapsule_object_at_0x7f8524c997b0&gt; (133,143 us., 3.53%)</title><rect x="867.5" y="261" width="41.7" height="15.0" fill="rgb(213,104,50)" rx="2" ry="2" />
<text  x="870.50" y="271.5" >&lt;bu..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (165,319 us., 4.39%)</title><rect x="394.9" y="117" width="51.8" height="15.0" fill="rgb(206,100,21)" rx="2" ry="2" />
<text  x="397.90" y="127.5" >trans..</text>
</g>
<g >
<title>torch/nn/modules/sparse.py(157):_forward (5,607 us., 0.15%)</title><rect x="75.4" y="229" width="1.8" height="15.0" fill="rgb(216,136,15)" rx="2" ry="2" />
<text  x="78.44" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (2,913 us., 0.08%)</title><rect x="75.4" y="181" width="1.0" height="15.0" fill="rgb(244,30,9)" rx="2" ry="2" />
<text  x="78.44" y="191.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (2,694 us., 0.07%)</title><rect x="76.4" y="149" width="0.8" height="15.0" fill="rgb(231,121,48)" rx="2" ry="2" />
<text  x="79.35" y="159.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (119,197 us., 3.16%)</title><rect x="830.2" y="181" width="37.3" height="15.0" fill="rgb(242,9,53)" rx="2" ry="2" />
<text  x="833.18" y="191.5" >tor..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (378,169 us., 10.03%)</title><rect x="276.1" y="149" width="118.4" height="15.0" fill="rgb(212,226,13)" rx="2" ry="2" />
<text  x="279.15" y="159.5" >profiling/util..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (1,615 us., 0.04%)</title><rect x="789.5" y="149" width="0.5" height="15.0" fill="rgb(234,184,0)" rx="2" ry="2" />
<text  x="792.52" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_LayerNormQ (128,235 us., 3.40%)</title><rect x="790.0" y="213" width="40.2" height="15.0" fill="rgb(222,82,33)" rx="2" ry="2" />
<text  x="793.03" y="223.5" >nn...</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(89):__expand_mask (1,157 us., 0.03%)</title><rect x="789.2" y="245" width="0.3" height="15.0" fill="rgb(244,102,9)" rx="2" ry="2" />
<text  x="792.16" y="255.5" ></text>
</g>
<g >
<title>&lt;built-in_method_embedding_of_type_object_at_0x7f86197ff9c0&gt; (5,607 us., 0.15%)</title><rect x="75.4" y="261" width="1.8" height="15.0" fill="rgb(229,17,38)" rx="2" ry="2" />
<text  x="78.44" y="271.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (66,498 us., 1.76%)</title><rect x="888.4" y="53" width="20.8" height="15.0" fill="rgb(248,87,53)" rx="2" ry="2" />
<text  x="891.36" y="63.5" ></text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (900 us., 0.02%)</title><rect x="75.2" y="229" width="0.2" height="15.0" fill="rgb(252,78,16)" rx="2" ry="2" />
<text  x="78.16" y="239.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (119,197 us., 3.16%)</title><rect x="830.2" y="85" width="37.3" height="15.0" fill="rgb(213,51,51)" rx="2" ry="2" />
<text  x="833.18" y="95.5" >tra..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (378,169 us., 10.03%)</title><rect x="276.1" y="133" width="118.4" height="15.0" fill="rgb(229,29,5)" rx="2" ry="2" />
<text  x="279.15" y="143.5" >torch/autograd..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,157 us., 0.03%)</title><rect x="789.2" y="133" width="0.3" height="15.0" fill="rgb(233,170,2)" rx="2" ry="2" />
<text  x="792.16" y="143.5" ></text>
</g>
<g >
<title>torch_int/nn/linear.py(225):_forward (133,143 us., 3.53%)</title><rect x="867.5" y="245" width="41.7" height="15.0" fill="rgb(247,137,26)" rx="2" ry="2" />
<text  x="870.50" y="255.5" >tor..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (256,359 us., 6.80%)</title><rect x="77.2" y="165" width="80.3" height="15.0" fill="rgb(244,83,42)" rx="2" ry="2" />
<text  x="80.20" y="175.5" >nn.Module..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (133,143 us., 3.53%)</title><rect x="867.5" y="229" width="41.7" height="15.0" fill="rgb(243,127,43)" rx="2" ry="2" />
<text  x="870.50" y="239.5" >tor..</text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (598 us., 0.02%)</title><rect x="1189.8" y="229" width="0.2" height="15.0" fill="rgb(249,106,38)" rx="2" ry="2" />
<text  x="1192.81" y="239.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(213):_forward (378,169 us., 10.03%)</title><rect x="276.1" y="245" width="118.4" height="15.0" fill="rgb(235,207,19)" rx="2" ry="2" />
<text  x="279.15" y="255.5" >torch_int/nn/o..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (119,197 us., 3.16%)</title><rect x="830.2" y="53" width="37.3" height="15.0" fill="rgb(212,67,53)" rx="2" ry="2" />
<text  x="833.18" y="63.5" >pro..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (66,498 us., 1.76%)</title><rect x="888.4" y="181" width="20.8" height="15.0" fill="rgb(240,55,53)" rx="2" ry="2" />
<text  x="891.36" y="191.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,093,640 us., 29.02%)</title><rect x="446.7" y="133" width="342.4" height="15.0" fill="rgb(205,147,47)" rx="2" ry="2" />
<text  x="449.66" y="143.5" >transformers/models/opt/modeling_opt.py(840):_..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (66,498 us., 1.76%)</title><rect x="888.4" y="69" width="20.8" height="15.0" fill="rgb(227,93,27)" rx="2" ry="2" />
<text  x="891.36" y="79.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,615 us., 0.04%)</title><rect x="789.5" y="133" width="0.5" height="15.0" fill="rgb(207,167,53)" rx="2" ry="2" />
<text  x="792.52" y="143.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (519,845 us., 13.79%)</title><rect x="1027.1" y="181" width="162.7" height="15.0" fill="rgb(240,41,37)" rx="2" ry="2" />
<text  x="1030.06" y="191.5" >torch_int/nn/opt.py(..</text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (66,498 us., 1.76%)</title><rect x="888.4" y="117" width="20.8" height="15.0" fill="rgb(211,166,46)" rx="2" ry="2" />
<text  x="891.36" y="127.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (208,119 us., 5.52%)</title><rect x="10.0" y="197" width="65.2" height="15.0" fill="rgb(251,123,6)" rx="2" ry="2" />
<text  x="13.00" y="207.5" >nn.Modu..</text>
</g>
<g >
<title>nn.Module:_LayerNormQ (379,092 us., 10.06%)</title><rect x="157.5" y="229" width="118.6" height="15.0" fill="rgb(226,75,21)" rx="2" ry="2" />
<text  x="160.46" y="239.5" >nn.Module:_Lay..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (2,694 us., 0.07%)</title><rect x="76.4" y="117" width="0.8" height="15.0" fill="rgb(214,0,14)" rx="2" ry="2" />
<text  x="79.35" y="127.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (378,169 us., 10.03%)</title><rect x="276.1" y="213" width="118.4" height="15.0" fill="rgb(237,63,9)" rx="2" ry="2" />
<text  x="279.15" y="223.5" >torch_int/nn/o..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (598 us., 0.02%)</title><rect x="1189.8" y="149" width="0.2" height="15.0" fill="rgb(205,104,15)" rx="2" ry="2" />
<text  x="1192.81" y="159.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (66,645 us., 1.77%)</title><rect x="867.5" y="133" width="20.9" height="15.0" fill="rgb(227,45,27)" rx="2" ry="2" />
<text  x="870.50" y="143.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (519,845 us., 13.79%)</title><rect x="1027.1" y="229" width="162.7" height="15.0" fill="rgb(206,151,40)" rx="2" ry="2" />
<text  x="1030.06" y="239.5" >nn.Module:_Int8OPTAt..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (519,845 us., 13.79%)</title><rect x="1027.1" y="101" width="162.7" height="15.0" fill="rgb(232,79,13)" rx="2" ry="2" />
<text  x="1030.06" y="111.5" >torch/autograd/grad_..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (378,169 us., 10.03%)</title><rect x="276.1" y="197" width="118.4" height="15.0" fill="rgb(236,52,25)" rx="2" ry="2" />
<text  x="279.15" y="207.5" >nn.Module:_Int..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (253,532 us., 6.73%)</title><rect x="946.7" y="133" width="79.4" height="15.0" fill="rgb(221,115,44)" rx="2" ry="2" />
<text  x="949.71" y="143.5" >transform..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (256,359 us., 6.80%)</title><rect x="77.2" y="133" width="80.3" height="15.0" fill="rgb(226,139,47)" rx="2" ry="2" />
<text  x="80.20" y="143.5" >nn.Module..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (253,532 us., 6.73%)</title><rect x="946.7" y="101" width="79.4" height="15.0" fill="rgb(230,61,43)" rx="2" ry="2" />
<text  x="949.71" y="111.5" >profiling..</text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (2,694 us., 0.07%)</title><rect x="76.4" y="181" width="0.8" height="15.0" fill="rgb(248,208,34)" rx="2" ry="2" />
<text  x="79.35" y="191.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (165,319 us., 4.39%)</title><rect x="394.9" y="149" width="51.8" height="15.0" fill="rgb(212,48,35)" rx="2" ry="2" />
<text  x="397.90" y="159.5" >torch..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (119,197 us., 3.16%)</title><rect x="830.2" y="229" width="37.3" height="15.0" fill="rgb(218,184,50)" rx="2" ry="2" />
<text  x="833.18" y="239.5" >tor..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (256,359 us., 6.80%)</title><rect x="77.2" y="101" width="80.3" height="15.0" fill="rgb(211,164,24)" rx="2" ry="2" />
<text  x="80.20" y="111.5" >nn.Module..</text>
</g>
<g >
<title>torch_int/nn/opt.py(213):_forward (66,645 us., 1.77%)</title><rect x="867.5" y="197" width="20.9" height="15.0" fill="rgb(227,187,6)" rx="2" ry="2" />
<text  x="870.50" y="207.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (119,861 us., 3.18%)</title><rect x="909.2" y="165" width="37.5" height="15.0" fill="rgb(211,85,33)" rx="2" ry="2" />
<text  x="912.18" y="175.5" >tor..</text>
</g>
<g >
<title>torch_int/nn/opt.py(325):__prepare_decoder_attention_mask (1,133 us., 0.03%)</title><rect x="394.5" y="245" width="0.4" height="15.0" fill="rgb(231,66,31)" rx="2" ry="2" />
<text  x="397.55" y="255.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (378,169 us., 10.03%)</title><rect x="276.1" y="181" width="118.4" height="15.0" fill="rgb(236,222,53)" rx="2" ry="2" />
<text  x="279.15" y="191.5" >transformers/m..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (900 us., 0.02%)</title><rect x="75.2" y="181" width="0.2" height="15.0" fill="rgb(242,133,45)" rx="2" ry="2" />
<text  x="78.16" y="191.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (165,319 us., 4.39%)</title><rect x="394.9" y="213" width="51.8" height="15.0" fill="rgb(230,83,34)" rx="2" ry="2" />
<text  x="397.90" y="223.5" >torch..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (379,092 us., 10.06%)</title><rect x="157.5" y="149" width="118.6" height="15.0" fill="rgb(237,34,41)" rx="2" ry="2" />
<text  x="160.46" y="159.5" >transformers/m..</text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (598 us., 0.02%)</title><rect x="1189.8" y="245" width="0.2" height="15.0" fill="rgb(245,83,2)" rx="2" ry="2" />
<text  x="1192.81" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (119,197 us., 3.16%)</title><rect x="830.2" y="69" width="37.3" height="15.0" fill="rgb(230,138,3)" rx="2" ry="2" />
<text  x="833.18" y="79.5" >nn...</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (165,319 us., 4.39%)</title><rect x="394.9" y="165" width="51.8" height="15.0" fill="rgb(233,134,8)" rx="2" ry="2" />
<text  x="397.90" y="175.5" >nn.Mo..</text>
</g>
<g >
<title>&lt;built-in_method_linear_a8_w8_b8_o8_of_PyCapsule_object_at_0x7f8524c99810&gt; (119,197 us., 3.16%)</title><rect x="830.2" y="261" width="37.3" height="15.0" fill="rgb(239,63,44)" rx="2" ry="2" />
<text  x="833.18" y="271.5" >&lt;bu..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (2,502 us., 0.07%)</title><rect x="1026.3" y="229" width="0.8" height="15.0" fill="rgb(240,161,3)" rx="2" ry="2" />
<text  x="1029.27" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (119,861 us., 3.18%)</title><rect x="909.2" y="181" width="37.5" height="15.0" fill="rgb(253,107,7)" rx="2" ry="2" />
<text  x="912.18" y="191.5" >nn...</text>
</g>
<g >
<title>torch_int/nn/opt.py(325):__prepare_decoder_attention_mask (1,157 us., 0.03%)</title><rect x="789.2" y="229" width="0.3" height="15.0" fill="rgb(228,53,34)" rx="2" ry="2" />
<text  x="792.16" y="239.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(213):_forward (119,197 us., 3.16%)</title><rect x="830.2" y="149" width="37.3" height="15.0" fill="rgb(206,76,51)" rx="2" ry="2" />
<text  x="833.18" y="159.5" >tor..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (1,093,640 us., 29.02%)</title><rect x="446.7" y="117" width="342.4" height="15.0" fill="rgb(233,175,8)" rx="2" ry="2" />
<text  x="449.66" y="127.5" >nn.Module:_Int8OPTForCausalLM</text>
</g>
<g >
<title>torch/nn/modules/normalization.py(188):_forward (1,615 us., 0.04%)</title><rect x="789.5" y="229" width="0.5" height="15.0" fill="rgb(208,93,13)" rx="2" ry="2" />
<text  x="792.52" y="239.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (66,645 us., 1.77%)</title><rect x="867.5" y="165" width="20.9" height="15.0" fill="rgb(236,106,51)" rx="2" ry="2" />
<text  x="870.50" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (379,092 us., 10.06%)</title><rect x="157.5" y="197" width="118.6" height="15.0" fill="rgb(221,163,12)" rx="2" ry="2" />
<text  x="160.46" y="207.5" >nn.Module:_Int..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (66,645 us., 1.77%)</title><rect x="867.5" y="117" width="20.9" height="15.0" fill="rgb(227,76,5)" rx="2" ry="2" />
<text  x="870.50" y="127.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (379,092 us., 10.06%)</title><rect x="157.5" y="165" width="118.6" height="15.0" fill="rgb(234,92,43)" rx="2" ry="2" />
<text  x="160.46" y="175.5" >nn.Module:_Int..</text>
</g>
<g >
<title>torch_int/nn/opt.py(72):_forward (253,532 us., 6.73%)</title><rect x="946.7" y="245" width="79.4" height="15.0" fill="rgb(253,207,28)" rx="2" ry="2" />
<text  x="949.71" y="255.5" >torch_int..</text>
</g>
<g >
<title>torch_int/nn/linear.py(40):_forward (119,197 us., 3.16%)</title><rect x="830.2" y="245" width="37.3" height="15.0" fill="rgb(240,224,24)" rx="2" ry="2" />
<text  x="833.18" y="255.5" >tor..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (208,119 us., 5.52%)</title><rect x="10.0" y="213" width="65.2" height="15.0" fill="rgb(229,172,22)" rx="2" ry="2" />
<text  x="13.00" y="223.5" >transfo..</text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (253,532 us., 6.73%)</title><rect x="946.7" y="213" width="79.4" height="15.0" fill="rgb(245,53,51)" rx="2" ry="2" />
<text  x="949.71" y="223.5" >nn.Module..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (2,694 us., 0.07%)</title><rect x="76.4" y="165" width="0.8" height="15.0" fill="rgb(245,198,0)" rx="2" ry="2" />
<text  x="79.35" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_W8A8BFP32OFP32Linear (133,143 us., 3.53%)</title><rect x="867.5" y="213" width="41.7" height="15.0" fill="rgb(242,194,20)" rx="2" ry="2" />
<text  x="870.50" y="223.5" >nn...</text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (2,694 us., 0.07%)</title><rect x="76.4" y="197" width="0.8" height="15.0" fill="rgb(234,216,33)" rx="2" ry="2" />
<text  x="79.35" y="207.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(72):_forward (119,197 us., 3.16%)</title><rect x="830.2" y="197" width="37.3" height="15.0" fill="rgb(245,133,10)" rx="2" ry="2" />
<text  x="833.18" y="207.5" >tor..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (66,645 us., 1.77%)</title><rect x="867.5" y="149" width="20.9" height="15.0" fill="rgb(213,117,37)" rx="2" ry="2" />
<text  x="870.50" y="159.5" ></text>
</g>
<g >
<title>torch_int/nn/fused.py(13):_forward (128,235 us., 3.40%)</title><rect x="790.0" y="229" width="40.2" height="15.0" fill="rgb(230,186,24)" rx="2" ry="2" />
<text  x="793.03" y="239.5" >tor..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (253,532 us., 6.73%)</title><rect x="946.7" y="229" width="79.4" height="15.0" fill="rgb(213,164,21)" rx="2" ry="2" />
<text  x="949.71" y="239.5" >torch/aut..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (1,093,640 us., 29.02%)</title><rect x="446.7" y="181" width="342.4" height="15.0" fill="rgb(254,152,25)" rx="2" ry="2" />
<text  x="449.66" y="191.5" >nn.Module:_Int8OPTDecoderLayer</text>
</g>
<g >
<title>torch_int/nn/opt.py(213):_forward (256,359 us., 6.80%)</title><rect x="77.2" y="181" width="80.3" height="15.0" fill="rgb(237,41,29)" rx="2" ry="2" />
<text  x="80.20" y="191.5" >torch_int..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (378,169 us., 10.03%)</title><rect x="276.1" y="229" width="118.4" height="15.0" fill="rgb(227,175,27)" rx="2" ry="2" />
<text  x="279.15" y="239.5" >nn.Module:_Int..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (598 us., 0.02%)</title><rect x="1189.8" y="213" width="0.2" height="15.0" fill="rgb(244,144,4)" rx="2" ry="2" />
<text  x="1192.81" y="223.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,133 us., 0.03%)</title><rect x="394.5" y="197" width="0.4" height="15.0" fill="rgb(250,192,47)" rx="2" ry="2" />
<text  x="397.55" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (2,694 us., 0.07%)</title><rect x="76.4" y="133" width="0.8" height="15.0" fill="rgb(223,189,19)" rx="2" ry="2" />
<text  x="79.35" y="143.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (1,133 us., 0.03%)</title><rect x="394.5" y="229" width="0.4" height="15.0" fill="rgb(205,151,15)" rx="2" ry="2" />
<text  x="397.55" y="239.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (165,319 us., 4.39%)</title><rect x="394.9" y="85" width="51.8" height="15.0" fill="rgb(212,0,8)" rx="2" ry="2" />
<text  x="397.90" y="95.5" >profi..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (119,861 us., 3.18%)</title><rect x="909.2" y="149" width="37.5" height="15.0" fill="rgb(235,144,35)" rx="2" ry="2" />
<text  x="912.18" y="159.5" >nn...</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (2,502 us., 0.07%)</title><rect x="1026.3" y="213" width="0.8" height="15.0" fill="rgb(253,130,15)" rx="2" ry="2" />
<text  x="1029.27" y="223.5" ></text>
</g>
<g >
<title>all (3,768,927 us., 100%)</title><rect x="10.0" y="277" width="1180.0" height="15.0" fill="rgb(226,125,38)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (900 us., 0.02%)</title><rect x="75.2" y="133" width="0.2" height="15.0" fill="rgb(247,219,48)" rx="2" ry="2" />
<text  x="78.16" y="143.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(213):_forward (66,498 us., 1.76%)</title><rect x="888.4" y="149" width="20.8" height="15.0" fill="rgb(238,182,29)" rx="2" ry="2" />
<text  x="891.36" y="159.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,157 us., 0.03%)</title><rect x="789.2" y="149" width="0.3" height="15.0" fill="rgb(249,18,13)" rx="2" ry="2" />
<text  x="792.16" y="159.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (256,359 us., 6.80%)</title><rect x="77.2" y="85" width="80.3" height="15.0" fill="rgb(226,203,42)" rx="2" ry="2" />
<text  x="80.20" y="95.5" >profiling..</text>
</g>
<g >
<title>nn.Module:_Linear (208,119 us., 5.52%)</title><rect x="10.0" y="229" width="65.2" height="15.0" fill="rgb(229,211,50)" rx="2" ry="2" />
<text  x="13.00" y="239.5" >nn.Modu..</text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (1,615 us., 0.04%)</title><rect x="789.5" y="197" width="0.5" height="15.0" fill="rgb(215,114,25)" rx="2" ry="2" />
<text  x="792.52" y="207.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (1,157 us., 0.03%)</title><rect x="789.2" y="213" width="0.3" height="15.0" fill="rgb(224,2,27)" rx="2" ry="2" />
<text  x="792.16" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (119,861 us., 3.18%)</title><rect x="909.2" y="117" width="37.5" height="15.0" fill="rgb(224,167,36)" rx="2" ry="2" />
<text  x="912.18" y="127.5" >nn...</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (119,197 us., 3.16%)</title><rect x="830.2" y="101" width="37.3" height="15.0" fill="rgb(235,88,16)" rx="2" ry="2" />
<text  x="833.18" y="111.5" >nn...</text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (379,092 us., 10.06%)</title><rect x="157.5" y="181" width="118.6" height="15.0" fill="rgb(223,151,17)" rx="2" ry="2" />
<text  x="160.46" y="191.5" >torch_int/nn/o..</text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (256,359 us., 6.80%)</title><rect x="77.2" y="197" width="80.3" height="15.0" fill="rgb(248,79,18)" rx="2" ry="2" />
<text  x="80.20" y="207.5" >nn.Module..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (256,359 us., 6.80%)</title><rect x="77.2" y="69" width="80.3" height="15.0" fill="rgb(234,182,47)" rx="2" ry="2" />
<text  x="80.20" y="79.5" >torch/aut..</text>
</g>
<g >
<title>&lt;built-in_method_layer_norm_of_type_object_at_0x7f86197ff9c0&gt; (129,850 us., 3.45%)</title><rect x="789.5" y="261" width="40.7" height="15.0" fill="rgb(236,202,52)" rx="2" ry="2" />
<text  x="792.52" y="271.5" >&lt;bu..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (253,532 us., 6.73%)</title><rect x="946.7" y="117" width="79.4" height="15.0" fill="rgb(230,137,53)" rx="2" ry="2" />
<text  x="949.71" y="127.5" >nn.Module..</text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (2,913 us., 0.08%)</title><rect x="75.4" y="197" width="1.0" height="15.0" fill="rgb(252,67,23)" rx="2" ry="2" />
<text  x="78.44" y="207.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (253,532 us., 6.73%)</title><rect x="946.7" y="165" width="79.4" height="15.0" fill="rgb(212,134,14)" rx="2" ry="2" />
<text  x="949.71" y="175.5" >torch_int..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (598 us., 0.02%)</title><rect x="1189.8" y="181" width="0.2" height="15.0" fill="rgb(205,94,20)" rx="2" ry="2" />
<text  x="1192.81" y="191.5" ></text>
</g>
<g >
<title>&lt;built-in_function_linear&gt; (208,119 us., 5.52%)</title><rect x="10.0" y="261" width="65.2" height="15.0" fill="rgb(230,26,23)" rx="2" ry="2" />
<text  x="13.00" y="271.5" >&lt;built-..</text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (165,319 us., 4.39%)</title><rect x="394.9" y="197" width="51.8" height="15.0" fill="rgb(239,202,23)" rx="2" ry="2" />
<text  x="397.90" y="207.5" >nn.Mo..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (900 us., 0.02%)</title><rect x="75.2" y="149" width="0.2" height="15.0" fill="rgb(245,63,4)" rx="2" ry="2" />
<text  x="78.16" y="159.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (208,119 us., 5.52%)</title><rect x="10.0" y="165" width="65.2" height="15.0" fill="rgb(210,170,40)" rx="2" ry="2" />
<text  x="13.00" y="175.5" >torch/a..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (900 us., 0.02%)</title><rect x="75.2" y="245" width="0.2" height="15.0" fill="rgb(238,194,7)" rx="2" ry="2" />
<text  x="78.16" y="255.5" ></text>
</g>
<g >
<title>&lt;built-in_method_cumsum_of_type_object_at_0x7f86197ff9c0&gt; (900 us., 0.02%)</title><rect x="75.2" y="261" width="0.2" height="15.0" fill="rgb(210,159,3)" rx="2" ry="2" />
<text  x="78.16" y="271.5" ></text>
</g>
<g >
<title>nn.Module:_W8A8B8O8LinearReLU (119,861 us., 3.18%)</title><rect x="909.2" y="213" width="37.5" height="15.0" fill="rgb(206,89,52)" rx="2" ry="2" />
<text  x="912.18" y="223.5" >nn...</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (66,645 us., 1.77%)</title><rect x="867.5" y="101" width="20.9" height="15.0" fill="rgb(230,117,17)" rx="2" ry="2" />
<text  x="870.50" y="111.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (519,845 us., 13.79%)</title><rect x="1027.1" y="165" width="162.7" height="15.0" fill="rgb(238,200,25)" rx="2" ry="2" />
<text  x="1030.06" y="175.5" >nn.Module:_Int8OPTDe..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,133 us., 0.03%)</title><rect x="394.5" y="149" width="0.4" height="15.0" fill="rgb(224,57,1)" rx="2" ry="2" />
<text  x="397.55" y="159.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(213):_forward (165,319 us., 4.39%)</title><rect x="394.9" y="181" width="51.8" height="15.0" fill="rgb(241,202,6)" rx="2" ry="2" />
<text  x="397.90" y="191.5" >torch..</text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (128,235 us., 3.40%)</title><rect x="790.0" y="165" width="40.2" height="15.0" fill="rgb(229,35,35)" rx="2" ry="2" />
<text  x="793.03" y="175.5" >tor..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (119,861 us., 3.18%)</title><rect x="909.2" y="101" width="37.5" height="15.0" fill="rgb(213,197,23)" rx="2" ry="2" />
<text  x="912.18" y="111.5" >pro..</text>
</g>
<g >
<title>torch_int/nn/opt.py(69):__shape (165,319 us., 4.39%)</title><rect x="394.9" y="245" width="51.8" height="15.0" fill="rgb(235,181,51)" rx="2" ry="2" />
<text  x="397.90" y="255.5" >torch..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (379,092 us., 10.06%)</title><rect x="157.5" y="101" width="118.6" height="15.0" fill="rgb(217,162,38)" rx="2" ry="2" />
<text  x="160.46" y="111.5" >torch/autograd..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (2,913 us., 0.08%)</title><rect x="75.4" y="117" width="1.0" height="15.0" fill="rgb(219,0,16)" rx="2" ry="2" />
<text  x="78.44" y="127.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (119,197 us., 3.16%)</title><rect x="830.2" y="117" width="37.3" height="15.0" fill="rgb(244,102,48)" rx="2" ry="2" />
<text  x="833.18" y="127.5" >tor..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (378,169 us., 10.03%)</title><rect x="276.1" y="165" width="118.4" height="15.0" fill="rgb(251,113,37)" rx="2" ry="2" />
<text  x="279.15" y="175.5" >nn.Module:_Int..</text>
</g>
<g >
<title>nn.Module:_LayerNorm (1,615 us., 0.04%)</title><rect x="789.5" y="213" width="0.5" height="15.0" fill="rgb(246,52,22)" rx="2" ry="2" />
<text  x="792.52" y="223.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (253,532 us., 6.73%)</title><rect x="946.7" y="85" width="79.4" height="15.0" fill="rgb(215,45,10)" rx="2" ry="2" />
<text  x="949.71" y="95.5" >torch/aut..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (256,359 us., 6.80%)</title><rect x="77.2" y="213" width="80.3" height="15.0" fill="rgb(222,189,31)" rx="2" ry="2" />
<text  x="80.20" y="223.5" >torch/aut..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (519,845 us., 13.79%)</title><rect x="1027.1" y="133" width="162.7" height="15.0" fill="rgb(251,182,43)" rx="2" ry="2" />
<text  x="1030.06" y="143.5" >nn.Module:_Int8OPTFo..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (128,235 us., 3.40%)</title><rect x="790.0" y="149" width="40.2" height="15.0" fill="rgb(252,42,5)" rx="2" ry="2" />
<text  x="793.03" y="159.5" >nn...</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (2,502 us., 0.07%)</title><rect x="1026.3" y="197" width="0.8" height="15.0" fill="rgb(245,43,2)" rx="2" ry="2" />
<text  x="1029.27" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (66,645 us., 1.77%)</title><rect x="867.5" y="181" width="20.9" height="15.0" fill="rgb(243,107,4)" rx="2" ry="2" />
<text  x="870.50" y="191.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,615 us., 0.04%)</title><rect x="789.5" y="117" width="0.5" height="15.0" fill="rgb(216,196,1)" rx="2" ry="2" />
<text  x="792.52" y="127.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,157 us., 0.03%)</title><rect x="789.2" y="181" width="0.3" height="15.0" fill="rgb(253,114,45)" rx="2" ry="2" />
<text  x="792.16" y="191.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (1,093,640 us., 29.02%)</title><rect x="446.7" y="229" width="342.4" height="15.0" fill="rgb(227,173,1)" rx="2" ry="2" />
<text  x="449.66" y="239.5" >torch/autograd/grad_mode.py(24):_decorate_cont..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (519,845 us., 13.79%)</title><rect x="1027.1" y="117" width="162.7" height="15.0" fill="rgb(210,157,31)" rx="2" ry="2" />
<text  x="1030.06" y="127.5" >profiling/utils.py(1..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (119,861 us., 3.18%)</title><rect x="909.2" y="229" width="37.5" height="15.0" fill="rgb(227,119,37)" rx="2" ry="2" />
<text  x="912.18" y="239.5" >tor..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,133 us., 0.03%)</title><rect x="394.5" y="165" width="0.4" height="15.0" fill="rgb(229,28,50)" rx="2" ry="2" />
<text  x="397.55" y="175.5" ></text>
</g>
<g >
<title>&lt;built-in_method_linear_relu_a8_w8_b8_o8_of_PyCapsule_object_at_0x7f8524c99750&gt; (119,861 us., 3.18%)</title><rect x="909.2" y="261" width="37.5" height="15.0" fill="rgb(244,155,51)" rx="2" ry="2" />
<text  x="912.18" y="271.5" >&lt;bu..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (128,235 us., 3.40%)</title><rect x="790.0" y="117" width="40.2" height="15.0" fill="rgb(209,18,36)" rx="2" ry="2" />
<text  x="793.03" y="127.5" >nn...</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (165,319 us., 4.39%)</title><rect x="394.9" y="133" width="51.8" height="15.0" fill="rgb(223,125,51)" rx="2" ry="2" />
<text  x="397.90" y="143.5" >nn.Mo..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (2,694 us., 0.07%)</title><rect x="76.4" y="213" width="0.8" height="15.0" fill="rgb(250,98,1)" rx="2" ry="2" />
<text  x="79.35" y="223.5" ></text>
</g>
<g >
<title>torch/nn/modules/linear.py(113):_forward (208,119 us., 5.52%)</title><rect x="10.0" y="245" width="65.2" height="15.0" fill="rgb(209,86,34)" rx="2" ry="2" />
<text  x="13.00" y="255.5" >torch/n..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (256,359 us., 6.80%)</title><rect x="77.2" y="117" width="80.3" height="15.0" fill="rgb(250,99,17)" rx="2" ry="2" />
<text  x="80.20" y="127.5" >transform..</text>
</g>
<g >
<title>torch_int/nn/linear.py(90):_forward (119,861 us., 3.18%)</title><rect x="909.2" y="245" width="37.5" height="15.0" fill="rgb(205,59,15)" rx="2" ry="2" />
<text  x="912.18" y="255.5" >tor..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (66,645 us., 1.77%)</title><rect x="867.5" y="85" width="20.9" height="15.0" fill="rgb(213,137,21)" rx="2" ry="2" />
<text  x="870.50" y="95.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (2,502 us., 0.07%)</title><rect x="1026.3" y="181" width="0.8" height="15.0" fill="rgb(229,178,21)" rx="2" ry="2" />
<text  x="1029.27" y="191.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(213):_forward (253,532 us., 6.73%)</title><rect x="946.7" y="197" width="79.4" height="15.0" fill="rgb(208,61,27)" rx="2" ry="2" />
<text  x="949.71" y="207.5" >torch_int..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (128,235 us., 3.40%)</title><rect x="790.0" y="85" width="40.2" height="15.0" fill="rgb(251,69,35)" rx="2" ry="2" />
<text  x="793.03" y="95.5" >tor..</text>
</g>
<g >
<title>torch_int/nn/opt.py(72):_forward (256,359 us., 6.80%)</title><rect x="77.2" y="229" width="80.3" height="15.0" fill="rgb(219,220,43)" rx="2" ry="2" />
<text  x="80.20" y="239.5" >torch_int..</text>
</g>
<g >
<title>nn.Module:_W8A8B8O8Linear (119,197 us., 3.16%)</title><rect x="830.2" y="213" width="37.3" height="15.0" fill="rgb(245,52,43)" rx="2" ry="2" />
<text  x="833.18" y="223.5" >nn...</text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (119,197 us., 3.16%)</title><rect x="830.2" y="165" width="37.3" height="15.0" fill="rgb(211,222,26)" rx="2" ry="2" />
<text  x="833.18" y="175.5" >nn...</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (1,093,640 us., 29.02%)</title><rect x="446.7" y="149" width="342.4" height="15.0" fill="rgb(230,204,1)" rx="2" ry="2" />
<text  x="449.66" y="159.5" >nn.Module:_Int8OPTDecoder</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (119,197 us., 3.16%)</title><rect x="830.2" y="37" width="37.3" height="15.0" fill="rgb(233,100,0)" rx="2" ry="2" />
<text  x="833.18" y="47.5" >tor..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (2,502 us., 0.07%)</title><rect x="1026.3" y="245" width="0.8" height="15.0" fill="rgb(220,29,47)" rx="2" ry="2" />
<text  x="1029.27" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (519,845 us., 13.79%)</title><rect x="1027.1" y="197" width="162.7" height="15.0" fill="rgb(252,145,45)" rx="2" ry="2" />
<text  x="1030.06" y="207.5" >nn.Module:_Int8OPTDe..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (900 us., 0.02%)</title><rect x="75.2" y="165" width="0.2" height="15.0" fill="rgb(233,145,29)" rx="2" ry="2" />
<text  x="78.16" y="175.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (119,861 us., 3.18%)</title><rect x="909.2" y="133" width="37.5" height="15.0" fill="rgb(238,69,13)" rx="2" ry="2" />
<text  x="912.18" y="143.5" >tra..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (208,119 us., 5.52%)</title><rect x="10.0" y="181" width="65.2" height="15.0" fill="rgb(219,154,29)" rx="2" ry="2" />
<text  x="13.00" y="191.5" >profili..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (119,197 us., 3.16%)</title><rect x="830.2" y="133" width="37.3" height="15.0" fill="rgb(237,209,28)" rx="2" ry="2" />
<text  x="833.18" y="143.5" >nn...</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (128,235 us., 3.40%)</title><rect x="790.0" y="101" width="40.2" height="15.0" fill="rgb(235,175,31)" rx="2" ry="2" />
<text  x="793.03" y="111.5" >pro..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (253,532 us., 6.73%)</title><rect x="946.7" y="149" width="79.4" height="15.0" fill="rgb(218,9,8)" rx="2" ry="2" />
<text  x="949.71" y="159.5" >nn.Module..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,093,640 us., 29.02%)</title><rect x="446.7" y="85" width="342.4" height="15.0" fill="rgb(208,73,39)" rx="2" ry="2" />
<text  x="449.66" y="95.5" >torch/autograd/grad_mode.py(27):_decorate_cont..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (66,498 us., 1.76%)</title><rect x="888.4" y="133" width="20.8" height="15.0" fill="rgb(242,184,46)" rx="2" ry="2" />
<text  x="891.36" y="143.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (379,092 us., 10.06%)</title><rect x="157.5" y="133" width="118.6" height="15.0" fill="rgb(224,40,28)" rx="2" ry="2" />
<text  x="160.46" y="143.5" >nn.Module:_Int..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (165,319 us., 4.39%)</title><rect x="394.9" y="69" width="51.8" height="15.0" fill="rgb(234,224,16)" rx="2" ry="2" />
<text  x="397.90" y="79.5" >torch..</text>
</g>
<g >
<title>torch_int/nn/opt.py(72):_forward (1,093,640 us., 29.02%)</title><rect x="446.7" y="245" width="342.4" height="15.0" fill="rgb(214,134,17)" rx="2" ry="2" />
<text  x="449.66" y="255.5" >torch_int/nn/opt.py(72):_forward</text>
</g>
<g >
<title>&lt;built-in_method_encode_of_str_object_at_0x7f85252f2510&gt; (2,275,173 us., 60.37%)</title><rect x="77.2" y="261" width="712.3" height="15.0" fill="rgb(230,108,22)" rx="2" ry="2" />
<text  x="80.20" y="271.5" >&lt;built-in_method_encode_of_str_object_at_0x7f85252f2510&gt;</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (2,913 us., 0.08%)</title><rect x="75.4" y="133" width="1.0" height="15.0" fill="rgb(233,21,50)" rx="2" ry="2" />
<text  x="78.44" y="143.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (598 us., 0.02%)</title><rect x="1189.8" y="165" width="0.2" height="15.0" fill="rgb(233,69,25)" rx="2" ry="2" />
<text  x="1192.81" y="175.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(72):_forward (519,845 us., 13.79%)</title><rect x="1027.1" y="261" width="162.7" height="15.0" fill="rgb(221,65,3)" rx="2" ry="2" />
<text  x="1030.06" y="271.5" >torch_int/nn/opt.py(..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (1,133 us., 0.03%)</title><rect x="394.5" y="181" width="0.4" height="15.0" fill="rgb(224,205,23)" rx="2" ry="2" />
<text  x="397.55" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (253,532 us., 6.73%)</title><rect x="946.7" y="181" width="79.4" height="15.0" fill="rgb(224,210,24)" rx="2" ry="2" />
<text  x="949.71" y="191.5" >nn.Module..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (66,498 us., 1.76%)</title><rect x="888.4" y="85" width="20.8" height="15.0" fill="rgb(233,166,5)" rx="2" ry="2" />
<text  x="891.36" y="95.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (1,093,640 us., 29.02%)</title><rect x="446.7" y="213" width="342.4" height="15.0" fill="rgb(229,29,47)" rx="2" ry="2" />
<text  x="449.66" y="223.5" >nn.Module:_Int8OPTAttention</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (379,092 us., 10.06%)</title><rect x="157.5" y="117" width="118.6" height="15.0" fill="rgb(239,39,42)" rx="2" ry="2" />
<text  x="160.46" y="127.5" >profiling/util..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (519,845 us., 13.79%)</title><rect x="1027.1" y="245" width="162.7" height="15.0" fill="rgb(232,39,26)" rx="2" ry="2" />
<text  x="1030.06" y="255.5" >torch/autograd/grad_..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (519,845 us., 13.79%)</title><rect x="1027.1" y="149" width="162.7" height="15.0" fill="rgb(206,128,28)" rx="2" ry="2" />
<text  x="1030.06" y="159.5" >transformers/models/..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (598 us., 0.02%)</title><rect x="1189.8" y="197" width="0.2" height="15.0" fill="rgb(215,117,21)" rx="2" ry="2" />
<text  x="1192.81" y="207.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (900 us., 0.02%)</title><rect x="75.2" y="213" width="0.2" height="15.0" fill="rgb(218,82,48)" rx="2" ry="2" />
<text  x="78.16" y="223.5" ></text>
</g>
<g >
<title>torch/nn/functional.py(1804):_softmax (256,359 us., 6.80%)</title><rect x="77.2" y="245" width="80.3" height="15.0" fill="rgb(217,152,4)" rx="2" ry="2" />
<text  x="80.20" y="255.5" >torch/nn/..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,615 us., 0.04%)</title><rect x="789.5" y="165" width="0.5" height="15.0" fill="rgb(225,13,46)" rx="2" ry="2" />
<text  x="792.52" y="175.5" ></text>
</g>
</g>
</svg>
