<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="326" onload="init(evt)" viewBox="0 0 1200 326" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="326.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >CUDA Time</text>
<text id="details" x="10.00" y="309" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="309" > </text>
<g id="frames">
<g >
<title>torch_int/nn/opt.py(213):_forward (764,707 us., 10.27%)</title><rect x="272.6" y="245" width="121.2" height="15.0" fill="rgb(205,121,43)" rx="2" ry="2" />
<text  x="275.59" y="255.5" >torch_int/nn/op..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(89):__expand_mask (1,294 us., 0.02%)</title><rect x="784.3" y="245" width="0.2" height="15.0" fill="rgb(213,10,6)" rx="2" ry="2" />
<text  x="787.31" y="255.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (4,785 us., 0.06%)</title><rect x="1028.7" y="181" width="0.8" height="15.0" fill="rgb(215,222,51)" rx="2" ry="2" />
<text  x="1031.73" y="191.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (4,540 us., 0.06%)</title><rect x="784.5" y="133" width="0.7" height="15.0" fill="rgb(233,10,25)" rx="2" ry="2" />
<text  x="787.52" y="143.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (499,376 us., 6.71%)</title><rect x="949.4" y="85" width="79.2" height="15.0" fill="rgb(205,228,8)" rx="2" ry="2" />
<text  x="952.45" y="95.5" >torch/aut..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (764,707 us., 10.27%)</title><rect x="272.6" y="229" width="121.2" height="15.0" fill="rgb(243,168,17)" rx="2" ry="2" />
<text  x="275.59" y="239.5" >nn.Module:_Int8..</text>
</g>
<g >
<title>torch/nn/functional.py(2488):_layer_norm (366,910 us., 4.93%)</title><rect x="784.5" y="245" width="58.2" height="15.0" fill="rgb(207,188,4)" rx="2" ry="2" />
<text  x="787.52" y="255.5" >torch/..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (125,083 us., 1.68%)</title><rect x="874.3" y="117" width="19.8" height="15.0" fill="rgb(248,84,10)" rx="2" ry="2" />
<text  x="877.29" y="127.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (220,485 us., 2.96%)</title><rect x="914.5" y="149" width="34.9" height="15.0" fill="rgb(215,149,2)" rx="2" ry="2" />
<text  x="917.49" y="159.5" >nn..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (4,540 us., 0.06%)</title><rect x="784.5" y="181" width="0.7" height="15.0" fill="rgb(213,109,48)" rx="2" ry="2" />
<text  x="787.52" y="191.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (199,355 us., 2.68%)</title><rect x="842.7" y="229" width="31.6" height="15.0" fill="rgb(243,74,43)" rx="2" ry="2" />
<text  x="845.69" y="239.5" >to..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (128,479 us., 1.73%)</title><rect x="894.1" y="101" width="20.4" height="15.0" fill="rgb(232,55,12)" rx="2" ry="2" />
<text  x="897.12" y="111.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (1,294 us., 0.02%)</title><rect x="784.3" y="165" width="0.2" height="15.0" fill="rgb(240,150,25)" rx="2" ry="2" />
<text  x="787.31" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (220,485 us., 2.96%)</title><rect x="914.5" y="181" width="34.9" height="15.0" fill="rgb(232,148,52)" rx="2" ry="2" />
<text  x="917.49" y="191.5" >nn..</text>
</g>
<g >
<title>&lt;built-in_method_layer_norm_of_type_object_at_0x7fb927f719c0&gt; (366,910 us., 4.93%)</title><rect x="784.5" y="261" width="58.2" height="15.0" fill="rgb(216,74,8)" rx="2" ry="2" />
<text  x="787.52" y="271.5" >&lt;built..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (499,376 us., 6.71%)</title><rect x="949.4" y="117" width="79.2" height="15.0" fill="rgb(246,4,52)" rx="2" ry="2" />
<text  x="952.45" y="127.5" >nn.Module..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (764,180 us., 10.27%)</title><rect x="151.4" y="197" width="121.2" height="15.0" fill="rgb(209,52,31)" rx="2" ry="2" />
<text  x="154.44" y="207.5" >nn.Module:_Int8..</text>
</g>
<g >
<title>nn.Module:_LayerNormQ (764,180 us., 10.27%)</title><rect x="151.4" y="229" width="121.2" height="15.0" fill="rgb(228,107,31)" rx="2" ry="2" />
<text  x="154.44" y="239.5" >nn.Module:_Laye..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (5,544 us., 0.07%)</title><rect x="70.2" y="165" width="0.8" height="15.0" fill="rgb(234,218,18)" rx="2" ry="2" />
<text  x="73.16" y="175.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (900 us., 0.01%)</title><rect x="70.0" y="245" width="0.2" height="15.0" fill="rgb(223,21,46)" rx="2" ry="2" />
<text  x="73.02" y="255.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (2,132,037 us., 28.64%)</title><rect x="446.3" y="85" width="338.0" height="15.0" fill="rgb(220,63,48)" rx="2" ry="2" />
<text  x="449.26" y="95.5" >torch/autograd/grad_mode.py(27):_decorate_con..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (199,355 us., 2.68%)</title><rect x="842.7" y="69" width="31.6" height="15.0" fill="rgb(232,182,30)" rx="2" ry="2" />
<text  x="845.69" y="79.5" >nn..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (764,180 us., 10.27%)</title><rect x="151.4" y="149" width="121.2" height="15.0" fill="rgb(212,75,37)" rx="2" ry="2" />
<text  x="154.44" y="159.5" >transformers/mo..</text>
</g>
<g >
<title>torch_int/nn/opt.py(213):_forward (125,083 us., 1.68%)</title><rect x="874.3" y="197" width="19.8" height="15.0" fill="rgb(216,205,41)" rx="2" ry="2" />
<text  x="877.29" y="207.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (220,485 us., 2.96%)</title><rect x="914.5" y="101" width="34.9" height="15.0" fill="rgb(246,107,53)" rx="2" ry="2" />
<text  x="917.49" y="111.5" >pr..</text>
</g>
<g >
<title>torch_int/nn/opt.py(72):_forward (128,479 us., 1.73%)</title><rect x="894.1" y="197" width="20.4" height="15.0" fill="rgb(215,213,32)" rx="2" ry="2" />
<text  x="897.12" y="207.5" ></text>
</g>
<g >
<title>torch_int/nn/fused.py(13):_forward (362,370 us., 4.87%)</title><rect x="785.2" y="229" width="57.5" height="15.0" fill="rgb(208,189,18)" rx="2" ry="2" />
<text  x="788.24" y="239.5" >torch_..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (220,485 us., 2.96%)</title><rect x="914.5" y="85" width="34.9" height="15.0" fill="rgb(230,124,51)" rx="2" ry="2" />
<text  x="917.49" y="95.5" >to..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (378,581 us., 5.09%)</title><rect x="10.0" y="197" width="60.0" height="15.0" fill="rgb(210,90,40)" rx="2" ry="2" />
<text  x="13.00" y="207.5" >nn.Mod..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (900 us., 0.01%)</title><rect x="70.0" y="133" width="0.2" height="15.0" fill="rgb(211,190,46)" rx="2" ry="2" />
<text  x="73.02" y="143.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (220,485 us., 2.96%)</title><rect x="914.5" y="117" width="34.9" height="15.0" fill="rgb(251,184,15)" rx="2" ry="2" />
<text  x="917.49" y="127.5" >nn..</text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (328,611 us., 4.42%)</title><rect x="394.2" y="149" width="52.1" height="15.0" fill="rgb(234,49,10)" rx="2" ry="2" />
<text  x="397.16" y="159.5" >torch..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,294 us., 0.02%)</title><rect x="784.3" y="149" width="0.2" height="15.0" fill="rgb(245,100,24)" rx="2" ry="2" />
<text  x="787.31" y="159.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(69):__shape (328,611 us., 4.42%)</title><rect x="394.2" y="245" width="52.1" height="15.0" fill="rgb(238,22,24)" rx="2" ry="2" />
<text  x="397.16" y="255.5" >torch..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (764,180 us., 10.27%)</title><rect x="151.4" y="101" width="121.2" height="15.0" fill="rgb(221,90,20)" rx="2" ry="2" />
<text  x="154.44" y="111.5" >torch/autograd/..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (2,132,037 us., 28.64%)</title><rect x="446.3" y="229" width="338.0" height="15.0" fill="rgb(245,106,3)" rx="2" ry="2" />
<text  x="449.26" y="239.5" >torch/autograd/grad_mode.py(24):_decorate_con..</text>
</g>
<g >
<title>torch_int/nn/opt.py(213):_forward (328,611 us., 4.42%)</title><rect x="394.2" y="181" width="52.1" height="15.0" fill="rgb(221,224,18)" rx="2" ry="2" />
<text  x="397.16" y="191.5" >torch..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (764,707 us., 10.27%)</title><rect x="272.6" y="133" width="121.2" height="15.0" fill="rgb(242,72,40)" rx="2" ry="2" />
<text  x="275.59" y="143.5" >torch/autograd/..</text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (2,132,037 us., 28.64%)</title><rect x="446.3" y="165" width="338.0" height="15.0" fill="rgb(244,212,32)" rx="2" ry="2" />
<text  x="449.26" y="175.5" >torch_int/nn/opt.py(346):_forward</text>
</g>
<g >
<title>torch/nn/functional.py(1804):_softmax (501,959 us., 6.74%)</title><rect x="71.9" y="245" width="79.5" height="15.0" fill="rgb(229,4,52)" rx="2" ry="2" />
<text  x="74.86" y="255.5" >torch/nn/..</text>
</g>
<g >
<title>torch_int/nn/opt.py(72):_forward (499,376 us., 6.71%)</title><rect x="949.4" y="245" width="79.2" height="15.0" fill="rgb(243,63,0)" rx="2" ry="2" />
<text  x="952.45" y="255.5" >torch_int..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (501,959 us., 6.74%)</title><rect x="71.9" y="85" width="79.5" height="15.0" fill="rgb(235,73,41)" rx="2" ry="2" />
<text  x="74.86" y="95.5" >profiling..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (220,485 us., 2.96%)</title><rect x="914.5" y="229" width="34.9" height="15.0" fill="rgb(208,203,33)" rx="2" ry="2" />
<text  x="917.49" y="239.5" >to..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (4,785 us., 0.06%)</title><rect x="1028.7" y="229" width="0.8" height="15.0" fill="rgb(210,0,34)" rx="2" ry="2" />
<text  x="1031.73" y="239.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (5,544 us., 0.07%)</title><rect x="70.2" y="117" width="0.8" height="15.0" fill="rgb(241,81,38)" rx="2" ry="2" />
<text  x="73.16" y="127.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (328,611 us., 4.42%)</title><rect x="394.2" y="197" width="52.1" height="15.0" fill="rgb(214,72,14)" rx="2" ry="2" />
<text  x="397.16" y="207.5" >nn.Mo..</text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (1,294 us., 0.02%)</title><rect x="784.3" y="213" width="0.2" height="15.0" fill="rgb(226,16,25)" rx="2" ry="2" />
<text  x="787.31" y="223.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (128,479 us., 1.73%)</title><rect x="894.1" y="85" width="20.4" height="15.0" fill="rgb(230,209,27)" rx="2" ry="2" />
<text  x="897.12" y="95.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (362,370 us., 4.87%)</title><rect x="785.2" y="133" width="57.5" height="15.0" fill="rgb(249,69,24)" rx="2" ry="2" />
<text  x="788.24" y="143.5" >transf..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (4,540 us., 0.06%)</title><rect x="784.5" y="165" width="0.7" height="15.0" fill="rgb(213,149,41)" rx="2" ry="2" />
<text  x="787.52" y="175.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(213):_forward (199,355 us., 2.68%)</title><rect x="842.7" y="149" width="31.6" height="15.0" fill="rgb(218,120,19)" rx="2" ry="2" />
<text  x="845.69" y="159.5" >to..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (5,544 us., 0.07%)</title><rect x="70.2" y="133" width="0.8" height="15.0" fill="rgb(254,51,2)" rx="2" ry="2" />
<text  x="73.16" y="143.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (4,540 us., 0.06%)</title><rect x="784.5" y="117" width="0.7" height="15.0" fill="rgb(208,148,26)" rx="2" ry="2" />
<text  x="787.52" y="127.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (764,180 us., 10.27%)</title><rect x="151.4" y="165" width="121.2" height="15.0" fill="rgb(239,181,8)" rx="2" ry="2" />
<text  x="154.44" y="175.5" >nn.Module:_Int8..</text>
</g>
<g >
<title>nn.Module:_LayerNormQ (362,370 us., 4.87%)</title><rect x="785.2" y="213" width="57.5" height="15.0" fill="rgb(248,176,43)" rx="2" ry="2" />
<text  x="788.24" y="223.5" >nn.Mod..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (328,611 us., 4.42%)</title><rect x="394.2" y="117" width="52.1" height="15.0" fill="rgb(238,213,14)" rx="2" ry="2" />
<text  x="397.16" y="127.5" >trans..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (378,581 us., 5.09%)</title><rect x="10.0" y="181" width="60.0" height="15.0" fill="rgb(210,161,33)" rx="2" ry="2" />
<text  x="13.00" y="191.5" >profil..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (125,083 us., 1.68%)</title><rect x="874.3" y="149" width="19.8" height="15.0" fill="rgb(223,214,47)" rx="2" ry="2" />
<text  x="877.29" y="159.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,011,868 us., 13.59%)</title><rect x="1029.5" y="101" width="160.4" height="15.0" fill="rgb(227,9,44)" rx="2" ry="2" />
<text  x="1032.49" y="111.5" >torch/autograd/grad_..</text>
</g>
<g >
<title>torch_int/nn/opt.py(213):_forward (220,485 us., 2.96%)</title><rect x="914.5" y="197" width="34.9" height="15.0" fill="rgb(244,126,34)" rx="2" ry="2" />
<text  x="917.49" y="207.5" >to..</text>
</g>
<g >
<title>torch_int/nn/opt.py(213):_forward (362,370 us., 4.87%)</title><rect x="785.2" y="197" width="57.5" height="15.0" fill="rgb(206,66,17)" rx="2" ry="2" />
<text  x="788.24" y="207.5" >torch_..</text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (1,011,868 us., 13.59%)</title><rect x="1029.5" y="181" width="160.4" height="15.0" fill="rgb(251,109,36)" rx="2" ry="2" />
<text  x="1032.49" y="191.5" >torch_int/nn/opt.py(..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (1,011,868 us., 13.59%)</title><rect x="1029.5" y="197" width="160.4" height="15.0" fill="rgb(214,29,22)" rx="2" ry="2" />
<text  x="1032.49" y="207.5" >nn.Module:_Int8OPTDe..</text>
</g>
<g >
<title>nn.Module:_W8A8BFP32OFP32Linear (253,562 us., 3.41%)</title><rect x="874.3" y="213" width="40.2" height="15.0" fill="rgb(230,122,51)" rx="2" ry="2" />
<text  x="877.29" y="223.5" >nn...</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (499,376 us., 6.71%)</title><rect x="949.4" y="101" width="79.2" height="15.0" fill="rgb(236,46,27)" rx="2" ry="2" />
<text  x="952.45" y="111.5" >profiling..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (2,132,037 us., 28.64%)</title><rect x="446.3" y="149" width="338.0" height="15.0" fill="rgb(232,50,13)" rx="2" ry="2" />
<text  x="449.26" y="159.5" >nn.Module:_Int8OPTDecoder</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (125,083 us., 1.68%)</title><rect x="874.3" y="181" width="19.8" height="15.0" fill="rgb(238,0,54)" rx="2" ry="2" />
<text  x="877.29" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (900 us., 0.01%)</title><rect x="70.0" y="165" width="0.2" height="15.0" fill="rgb(227,145,22)" rx="2" ry="2" />
<text  x="73.02" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (1,011,868 us., 13.59%)</title><rect x="1029.5" y="133" width="160.4" height="15.0" fill="rgb(212,127,49)" rx="2" ry="2" />
<text  x="1032.49" y="143.5" >nn.Module:_Int8OPTFo..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (328,611 us., 4.42%)</title><rect x="394.2" y="101" width="52.1" height="15.0" fill="rgb(223,140,5)" rx="2" ry="2" />
<text  x="397.16" y="111.5" >nn.Mo..</text>
</g>
<g >
<title>&lt;built-in_method_linear_relu_a8_w8_b8_o8_of_PyCapsule_object_at_0x7fb83340b750&gt; (220,485 us., 2.96%)</title><rect x="914.5" y="261" width="34.9" height="15.0" fill="rgb(212,149,24)" rx="2" ry="2" />
<text  x="917.49" y="271.5" >&lt;b..</text>
</g>
<g >
<title>&lt;built-in_method_encode_of_str_object_at_0x7fb833a684b0&gt; (4,495,189 us., 60.39%)</title><rect x="71.9" y="261" width="712.6" height="15.0" fill="rgb(214,52,18)" rx="2" ry="2" />
<text  x="74.86" y="271.5" >&lt;built-in_method_encode_of_str_object_at_0x7fb833a684b0&gt;</text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (900 us., 0.01%)</title><rect x="70.0" y="213" width="0.2" height="15.0" fill="rgb(215,59,22)" rx="2" ry="2" />
<text  x="73.02" y="223.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (499,376 us., 6.71%)</title><rect x="949.4" y="165" width="79.2" height="15.0" fill="rgb(225,16,28)" rx="2" ry="2" />
<text  x="952.45" y="175.5" >torch_int..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (900 us., 0.01%)</title><rect x="70.0" y="181" width="0.2" height="15.0" fill="rgb(224,104,36)" rx="2" ry="2" />
<text  x="73.02" y="191.5" ></text>
</g>
<g >
<title>torch/nn/modules/sparse.py(157):_forward (10,734 us., 0.14%)</title><rect x="70.2" y="229" width="1.7" height="15.0" fill="rgb(233,69,38)" rx="2" ry="2" />
<text  x="73.16" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (5,544 us., 0.07%)</title><rect x="70.2" y="181" width="0.8" height="15.0" fill="rgb(245,196,42)" rx="2" ry="2" />
<text  x="73.16" y="191.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (199,355 us., 2.68%)</title><rect x="842.7" y="181" width="31.6" height="15.0" fill="rgb(222,186,33)" rx="2" ry="2" />
<text  x="845.69" y="191.5" >to..</text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (5,190 us., 0.07%)</title><rect x="71.0" y="181" width="0.9" height="15.0" fill="rgb(245,179,22)" rx="2" ry="2" />
<text  x="74.04" y="191.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,011,868 us., 13.59%)</title><rect x="1029.5" y="117" width="160.4" height="15.0" fill="rgb(241,11,46)" rx="2" ry="2" />
<text  x="1032.49" y="127.5" >profiling/utils.py(1..</text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (128,479 us., 1.73%)</title><rect x="894.1" y="165" width="20.4" height="15.0" fill="rgb(224,74,47)" rx="2" ry="2" />
<text  x="897.12" y="175.5" ></text>
</g>
<g >
<title>torch/nn/modules/normalization.py(188):_forward (4,540 us., 0.06%)</title><rect x="784.5" y="229" width="0.7" height="15.0" fill="rgb(230,121,16)" rx="2" ry="2" />
<text  x="787.52" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_LayerNorm (4,540 us., 0.06%)</title><rect x="784.5" y="213" width="0.7" height="15.0" fill="rgb(232,158,47)" rx="2" ry="2" />
<text  x="787.52" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (2,098 us., 0.03%)</title><rect x="393.8" y="213" width="0.4" height="15.0" fill="rgb(250,37,34)" rx="2" ry="2" />
<text  x="396.83" y="223.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (128,479 us., 1.73%)</title><rect x="894.1" y="181" width="20.4" height="15.0" fill="rgb(235,110,14)" rx="2" ry="2" />
<text  x="897.12" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (1,011,868 us., 13.59%)</title><rect x="1029.5" y="165" width="160.4" height="15.0" fill="rgb(211,109,22)" rx="2" ry="2" />
<text  x="1032.49" y="175.5" >nn.Module:_Int8OPTDe..</text>
</g>
<g >
<title>torch_int/nn/opt.py(72):_forward (328,611 us., 4.42%)</title><rect x="394.2" y="229" width="52.1" height="15.0" fill="rgb(205,14,28)" rx="2" ry="2" />
<text  x="397.16" y="239.5" >torch..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (900 us., 0.01%)</title><rect x="70.0" y="149" width="0.2" height="15.0" fill="rgb(223,101,9)" rx="2" ry="2" />
<text  x="73.02" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (2,132,037 us., 28.64%)</title><rect x="446.3" y="181" width="338.0" height="15.0" fill="rgb(242,119,41)" rx="2" ry="2" />
<text  x="449.26" y="191.5" >nn.Module:_Int8OPTDecoderLayer</text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (2,098 us., 0.03%)</title><rect x="393.8" y="229" width="0.4" height="15.0" fill="rgb(219,136,19)" rx="2" ry="2" />
<text  x="396.83" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (5,190 us., 0.07%)</title><rect x="71.0" y="165" width="0.9" height="15.0" fill="rgb(231,166,15)" rx="2" ry="2" />
<text  x="74.04" y="175.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,294 us., 0.02%)</title><rect x="784.3" y="181" width="0.2" height="15.0" fill="rgb(210,2,32)" rx="2" ry="2" />
<text  x="787.31" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (4,785 us., 0.06%)</title><rect x="1028.7" y="245" width="0.8" height="15.0" fill="rgb(222,180,46)" rx="2" ry="2" />
<text  x="1031.73" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (4,785 us., 0.06%)</title><rect x="1028.7" y="213" width="0.8" height="15.0" fill="rgb(222,214,1)" rx="2" ry="2" />
<text  x="1031.73" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (1,294 us., 0.02%)</title><rect x="784.3" y="197" width="0.2" height="15.0" fill="rgb(249,30,53)" rx="2" ry="2" />
<text  x="787.31" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (764,707 us., 10.27%)</title><rect x="272.6" y="197" width="121.2" height="15.0" fill="rgb(229,102,8)" rx="2" ry="2" />
<text  x="275.59" y="207.5" >nn.Module:_Int8..</text>
</g>
<g >
<title>&lt;built-in_method_linear_a8_w8_b8_o8_of_PyCapsule_object_at_0x7fb83340b810&gt; (199,355 us., 2.68%)</title><rect x="842.7" y="261" width="31.6" height="15.0" fill="rgb(211,92,49)" rx="2" ry="2" />
<text  x="845.69" y="271.5" >&lt;b..</text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (4,785 us., 0.06%)</title><rect x="1028.7" y="261" width="0.8" height="15.0" fill="rgb(212,82,22)" rx="2" ry="2" />
<text  x="1031.73" y="271.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (5,544 us., 0.07%)</title><rect x="70.2" y="149" width="0.8" height="15.0" fill="rgb(210,77,46)" rx="2" ry="2" />
<text  x="73.16" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (499,376 us., 6.71%)</title><rect x="949.4" y="149" width="79.2" height="15.0" fill="rgb(221,201,26)" rx="2" ry="2" />
<text  x="952.45" y="159.5" >nn.Module..</text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (499,376 us., 6.71%)</title><rect x="949.4" y="213" width="79.2" height="15.0" fill="rgb(221,225,6)" rx="2" ry="2" />
<text  x="952.45" y="223.5" >nn.Module..</text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (764,180 us., 10.27%)</title><rect x="151.4" y="181" width="121.2" height="15.0" fill="rgb(249,217,53)" rx="2" ry="2" />
<text  x="154.44" y="191.5" >torch_int/nn/op..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (499,376 us., 6.71%)</title><rect x="949.4" y="229" width="79.2" height="15.0" fill="rgb(222,18,9)" rx="2" ry="2" />
<text  x="952.45" y="239.5" >torch/aut..</text>
</g>
<g >
<title>&lt;built-in_method_max_of_type_object_at_0x7fb927f719c0&gt; (499,376 us., 6.71%)</title><rect x="949.4" y="261" width="79.2" height="15.0" fill="rgb(221,0,30)" rx="2" ry="2" />
<text  x="952.45" y="271.5" >&lt;built-in..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (125,083 us., 1.68%)</title><rect x="874.3" y="133" width="19.8" height="15.0" fill="rgb(218,145,51)" rx="2" ry="2" />
<text  x="877.29" y="143.5" ></text>
</g>
<g >
<title>all (7,443,047 us., 100%)</title><rect x="10.0" y="277" width="1180.0" height="15.0" fill="rgb(217,42,5)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>torch_int/nn/linear.py(90):_forward (220,485 us., 2.96%)</title><rect x="914.5" y="245" width="34.9" height="15.0" fill="rgb(243,67,21)" rx="2" ry="2" />
<text  x="917.49" y="255.5" >to..</text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (362,370 us., 4.87%)</title><rect x="785.2" y="165" width="57.5" height="15.0" fill="rgb(227,191,13)" rx="2" ry="2" />
<text  x="788.24" y="175.5" >torch_..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (2,098 us., 0.03%)</title><rect x="393.8" y="165" width="0.4" height="15.0" fill="rgb(243,148,12)" rx="2" ry="2" />
<text  x="396.83" y="175.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (501,959 us., 6.74%)</title><rect x="71.9" y="69" width="79.5" height="15.0" fill="rgb(209,80,16)" rx="2" ry="2" />
<text  x="74.86" y="79.5" >torch/aut..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (128,479 us., 1.73%)</title><rect x="894.1" y="53" width="20.4" height="15.0" fill="rgb(244,58,9)" rx="2" ry="2" />
<text  x="897.12" y="63.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (5,190 us., 0.07%)</title><rect x="71.0" y="101" width="0.9" height="15.0" fill="rgb(222,89,46)" rx="2" ry="2" />
<text  x="74.04" y="111.5" ></text>
</g>
<g >
<title>&lt;built-in_method_linear_a8_w8_bfp32_ofp32_of_PyCapsule_object_at_0x7fb83340b7b0&gt; (253,562 us., 3.41%)</title><rect x="874.3" y="261" width="40.2" height="15.0" fill="rgb(244,82,47)" rx="2" ry="2" />
<text  x="877.29" y="271.5" >&lt;bu..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (128,479 us., 1.73%)</title><rect x="894.1" y="37" width="20.4" height="15.0" fill="rgb(208,205,27)" rx="2" ry="2" />
<text  x="897.12" y="47.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (199,355 us., 2.68%)</title><rect x="842.7" y="85" width="31.6" height="15.0" fill="rgb(252,107,8)" rx="2" ry="2" />
<text  x="845.69" y="95.5" >tr..</text>
</g>
<g >
<title>torch_int/nn/opt.py(213):_forward (499,376 us., 6.71%)</title><rect x="949.4" y="197" width="79.2" height="15.0" fill="rgb(249,7,23)" rx="2" ry="2" />
<text  x="952.45" y="207.5" >torch_int..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (2,098 us., 0.03%)</title><rect x="393.8" y="181" width="0.4" height="15.0" fill="rgb(252,143,43)" rx="2" ry="2" />
<text  x="396.83" y="191.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (199,355 us., 2.68%)</title><rect x="842.7" y="37" width="31.6" height="15.0" fill="rgb(230,206,13)" rx="2" ry="2" />
<text  x="845.69" y="47.5" >to..</text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (501,959 us., 6.74%)</title><rect x="71.9" y="149" width="79.5" height="15.0" fill="rgb(220,136,27)" rx="2" ry="2" />
<text  x="74.86" y="159.5" >torch_int..</text>
</g>
<g >
<title>&lt;built-in_method_embedding_of_type_object_at_0x7fb927f719c0&gt; (10,734 us., 0.14%)</title><rect x="70.2" y="261" width="1.7" height="15.0" fill="rgb(220,58,54)" rx="2" ry="2" />
<text  x="73.16" y="271.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (199,355 us., 2.68%)</title><rect x="842.7" y="101" width="31.6" height="15.0" fill="rgb(243,113,42)" rx="2" ry="2" />
<text  x="845.69" y="111.5" >nn..</text>
</g>
<g >
<title>torch/nn/modules/linear.py(113):_forward (378,581 us., 5.09%)</title><rect x="10.0" y="245" width="60.0" height="15.0" fill="rgb(253,60,42)" rx="2" ry="2" />
<text  x="13.00" y="255.5" >torch/..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (764,707 us., 10.27%)</title><rect x="272.6" y="149" width="121.2" height="15.0" fill="rgb(205,91,44)" rx="2" ry="2" />
<text  x="275.59" y="159.5" >profiling/utils..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (378,581 us., 5.09%)</title><rect x="10.0" y="213" width="60.0" height="15.0" fill="rgb(253,77,8)" rx="2" ry="2" />
<text  x="13.00" y="223.5" >transf..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (499,376 us., 6.71%)</title><rect x="949.4" y="133" width="79.2" height="15.0" fill="rgb(217,54,16)" rx="2" ry="2" />
<text  x="952.45" y="143.5" >transform..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (5,190 us., 0.07%)</title><rect x="71.0" y="149" width="0.9" height="15.0" fill="rgb(212,215,20)" rx="2" ry="2" />
<text  x="74.04" y="159.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(213):_forward (1,011,868 us., 13.59%)</title><rect x="1029.5" y="213" width="160.4" height="15.0" fill="rgb(215,41,24)" rx="2" ry="2" />
<text  x="1032.49" y="223.5" >torch_int/nn/opt.py(..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (328,611 us., 4.42%)</title><rect x="394.2" y="85" width="52.1" height="15.0" fill="rgb(233,168,50)" rx="2" ry="2" />
<text  x="397.16" y="95.5" >profi..</text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (501,959 us., 6.74%)</title><rect x="71.9" y="197" width="79.5" height="15.0" fill="rgb(247,149,33)" rx="2" ry="2" />
<text  x="74.86" y="207.5" >nn.Module..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (199,355 us., 2.68%)</title><rect x="842.7" y="133" width="31.6" height="15.0" fill="rgb(228,222,11)" rx="2" ry="2" />
<text  x="845.69" y="143.5" >nn..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (501,959 us., 6.74%)</title><rect x="71.9" y="101" width="79.5" height="15.0" fill="rgb(230,194,33)" rx="2" ry="2" />
<text  x="74.86" y="111.5" >nn.Module..</text>
</g>
<g >
<title>torch_int/nn/fused.py(13):_forward (764,180 us., 10.27%)</title><rect x="151.4" y="245" width="121.2" height="15.0" fill="rgb(224,20,52)" rx="2" ry="2" />
<text  x="154.44" y="255.5" >torch_int/nn/fu..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (4,785 us., 0.06%)</title><rect x="1028.7" y="197" width="0.8" height="15.0" fill="rgb(244,216,36)" rx="2" ry="2" />
<text  x="1031.73" y="207.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (362,370 us., 4.87%)</title><rect x="785.2" y="101" width="57.5" height="15.0" fill="rgb(240,7,53)" rx="2" ry="2" />
<text  x="788.24" y="111.5" >profil..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (2,098 us., 0.03%)</title><rect x="393.8" y="149" width="0.4" height="15.0" fill="rgb(222,153,22)" rx="2" ry="2" />
<text  x="396.83" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (900 us., 0.01%)</title><rect x="70.0" y="197" width="0.2" height="15.0" fill="rgb(248,38,12)" rx="2" ry="2" />
<text  x="73.02" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (362,370 us., 4.87%)</title><rect x="785.2" y="181" width="57.5" height="15.0" fill="rgb(209,33,30)" rx="2" ry="2" />
<text  x="788.24" y="191.5" >nn.Mod..</text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (2,132,037 us., 28.64%)</title><rect x="446.3" y="213" width="338.0" height="15.0" fill="rgb(228,139,44)" rx="2" ry="2" />
<text  x="449.26" y="223.5" >nn.Module:_Int8OPTAttention</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (128,479 us., 1.73%)</title><rect x="894.1" y="133" width="20.4" height="15.0" fill="rgb(207,121,33)" rx="2" ry="2" />
<text  x="897.12" y="143.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (2,098 us., 0.03%)</title><rect x="393.8" y="197" width="0.4" height="15.0" fill="rgb(229,14,11)" rx="2" ry="2" />
<text  x="396.83" y="207.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(72):_forward (2,132,037 us., 28.64%)</title><rect x="446.3" y="245" width="338.0" height="15.0" fill="rgb(253,17,32)" rx="2" ry="2" />
<text  x="449.26" y="255.5" >torch_int/nn/opt.py(72):_forward</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (764,707 us., 10.27%)</title><rect x="272.6" y="181" width="121.2" height="15.0" fill="rgb(211,57,6)" rx="2" ry="2" />
<text  x="275.59" y="191.5" >transformers/mo..</text>
</g>
<g >
<title>&lt;built-in_function_linear&gt; (378,581 us., 5.09%)</title><rect x="10.0" y="261" width="60.0" height="15.0" fill="rgb(246,148,40)" rx="2" ry="2" />
<text  x="13.00" y="271.5" >&lt;built..</text>
</g>
<g >
<title>nn.Module:_W8A8B8O8LinearReLU (220,485 us., 2.96%)</title><rect x="914.5" y="213" width="34.9" height="15.0" fill="rgb(225,156,45)" rx="2" ry="2" />
<text  x="917.49" y="223.5" >nn..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (125,083 us., 1.68%)</title><rect x="874.3" y="101" width="19.8" height="15.0" fill="rgb(253,153,50)" rx="2" ry="2" />
<text  x="877.29" y="111.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (220,485 us., 2.96%)</title><rect x="914.5" y="165" width="34.9" height="15.0" fill="rgb(212,95,15)" rx="2" ry="2" />
<text  x="917.49" y="175.5" >to..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (501,959 us., 6.74%)</title><rect x="71.9" y="165" width="79.5" height="15.0" fill="rgb(219,80,42)" rx="2" ry="2" />
<text  x="74.86" y="175.5" >nn.Module..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (499,376 us., 6.71%)</title><rect x="949.4" y="181" width="79.2" height="15.0" fill="rgb(249,105,48)" rx="2" ry="2" />
<text  x="952.45" y="191.5" >nn.Module..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (328,611 us., 4.42%)</title><rect x="394.2" y="133" width="52.1" height="15.0" fill="rgb(224,18,47)" rx="2" ry="2" />
<text  x="397.16" y="143.5" >nn.Mo..</text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (764,707 us., 10.27%)</title><rect x="272.6" y="213" width="121.2" height="15.0" fill="rgb(213,145,29)" rx="2" ry="2" />
<text  x="275.59" y="223.5" >torch_int/nn/op..</text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (128,479 us., 1.73%)</title><rect x="894.1" y="117" width="20.4" height="15.0" fill="rgb(227,18,21)" rx="2" ry="2" />
<text  x="897.12" y="127.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (128,479 us., 1.73%)</title><rect x="894.1" y="69" width="20.4" height="15.0" fill="rgb(237,158,48)" rx="2" ry="2" />
<text  x="897.12" y="79.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(72):_forward (501,959 us., 6.74%)</title><rect x="71.9" y="229" width="79.5" height="15.0" fill="rgb(242,47,12)" rx="2" ry="2" />
<text  x="74.86" y="239.5" >torch_int..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,011,868 us., 13.59%)</title><rect x="1029.5" y="149" width="160.4" height="15.0" fill="rgb(254,16,33)" rx="2" ry="2" />
<text  x="1032.49" y="159.5" >transformers/models/..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (328,611 us., 4.42%)</title><rect x="394.2" y="165" width="52.1" height="15.0" fill="rgb(233,206,11)" rx="2" ry="2" />
<text  x="397.16" y="175.5" >nn.Mo..</text>
</g>
<g >
<title>&lt;built-in_method_cumsum_of_type_object_at_0x7fb927f719c0&gt; (900 us., 0.01%)</title><rect x="70.0" y="261" width="0.2" height="15.0" fill="rgb(248,31,49)" rx="2" ry="2" />
<text  x="73.02" y="271.5" ></text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (900 us., 0.01%)</title><rect x="70.0" y="229" width="0.2" height="15.0" fill="rgb(226,124,40)" rx="2" ry="2" />
<text  x="73.02" y="239.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (5,190 us., 0.07%)</title><rect x="71.0" y="213" width="0.9" height="15.0" fill="rgb(224,26,21)" rx="2" ry="2" />
<text  x="74.04" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (362,370 us., 4.87%)</title><rect x="785.2" y="117" width="57.5" height="15.0" fill="rgb(246,50,43)" rx="2" ry="2" />
<text  x="788.24" y="127.5" >nn.Mod..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (378,581 us., 5.09%)</title><rect x="10.0" y="165" width="60.0" height="15.0" fill="rgb(226,144,26)" rx="2" ry="2" />
<text  x="13.00" y="175.5" >torch/..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (764,707 us., 10.27%)</title><rect x="272.6" y="165" width="121.2" height="15.0" fill="rgb(219,104,54)" rx="2" ry="2" />
<text  x="275.59" y="175.5" >nn.Module:_Int8..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (2,132,037 us., 28.64%)</title><rect x="446.3" y="117" width="338.0" height="15.0" fill="rgb(220,10,6)" rx="2" ry="2" />
<text  x="449.26" y="127.5" >nn.Module:_Int8OPTForCausalLM</text>
</g>
<g >
<title>torch_int/nn/opt.py(213):_forward (128,479 us., 1.73%)</title><rect x="894.1" y="149" width="20.4" height="15.0" fill="rgb(237,24,25)" rx="2" ry="2" />
<text  x="897.12" y="159.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (1,011,868 us., 13.59%)</title><rect x="1029.5" y="245" width="160.4" height="15.0" fill="rgb(205,147,13)" rx="2" ry="2" />
<text  x="1032.49" y="255.5" >torch/autograd/grad_..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (501,959 us., 6.74%)</title><rect x="71.9" y="117" width="79.5" height="15.0" fill="rgb(221,99,27)" rx="2" ry="2" />
<text  x="74.86" y="127.5" >transform..</text>
</g>
<g >
<title>torch_int/nn/linear.py(40):_forward (199,355 us., 2.68%)</title><rect x="842.7" y="245" width="31.6" height="15.0" fill="rgb(209,31,25)" rx="2" ry="2" />
<text  x="845.69" y="255.5" >to..</text>
</g>
<g >
<title>nn.Module:_Linear (378,581 us., 5.09%)</title><rect x="10.0" y="229" width="60.0" height="15.0" fill="rgb(246,64,39)" rx="2" ry="2" />
<text  x="13.00" y="239.5" >nn.Mod..</text>
</g>
<g >
<title>torch_int/nn/opt.py(325):__prepare_decoder_attention_mask (2,098 us., 0.03%)</title><rect x="393.8" y="245" width="0.4" height="15.0" fill="rgb(236,217,48)" rx="2" ry="2" />
<text  x="396.83" y="255.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(325):__prepare_decoder_attention_mask (1,294 us., 0.02%)</title><rect x="784.3" y="229" width="0.2" height="15.0" fill="rgb(235,86,25)" rx="2" ry="2" />
<text  x="787.31" y="239.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (5,190 us., 0.07%)</title><rect x="71.0" y="117" width="0.9" height="15.0" fill="rgb(213,226,44)" rx="2" ry="2" />
<text  x="74.04" y="127.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (125,083 us., 1.68%)</title><rect x="874.3" y="85" width="19.8" height="15.0" fill="rgb(215,77,32)" rx="2" ry="2" />
<text  x="877.29" y="95.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (764,180 us., 10.27%)</title><rect x="151.4" y="133" width="121.2" height="15.0" fill="rgb(231,156,46)" rx="2" ry="2" />
<text  x="154.44" y="143.5" >nn.Module:_Int8..</text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (4,540 us., 0.06%)</title><rect x="784.5" y="197" width="0.7" height="15.0" fill="rgb(254,135,43)" rx="2" ry="2" />
<text  x="787.52" y="207.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (2,132,037 us., 28.64%)</title><rect x="446.3" y="101" width="338.0" height="15.0" fill="rgb(220,35,39)" rx="2" ry="2" />
<text  x="449.26" y="111.5" >profiling/utils.py(18):_profile_model</text>
</g>
<g >
<title>nn.Module:_Embedding (5,544 us., 0.07%)</title><rect x="70.2" y="213" width="0.8" height="15.0" fill="rgb(227,162,24)" rx="2" ry="2" />
<text  x="73.16" y="223.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(213):_forward (764,180 us., 10.27%)</title><rect x="151.4" y="213" width="121.2" height="15.0" fill="rgb(211,19,54)" rx="2" ry="2" />
<text  x="154.44" y="223.5" >torch_int/nn/op..</text>
</g>
<g >
<title>torch_int/nn/opt.py(72):_forward (199,355 us., 2.68%)</title><rect x="842.7" y="197" width="31.6" height="15.0" fill="rgb(231,137,26)" rx="2" ry="2" />
<text  x="845.69" y="207.5" >to..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (199,355 us., 2.68%)</title><rect x="842.7" y="53" width="31.6" height="15.0" fill="rgb(220,211,30)" rx="2" ry="2" />
<text  x="845.69" y="63.5" >pr..</text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (125,083 us., 1.68%)</title><rect x="874.3" y="165" width="19.8" height="15.0" fill="rgb(209,40,0)" rx="2" ry="2" />
<text  x="877.29" y="175.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (199,355 us., 2.68%)</title><rect x="842.7" y="117" width="31.6" height="15.0" fill="rgb(222,160,5)" rx="2" ry="2" />
<text  x="845.69" y="127.5" >to..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,294 us., 0.02%)</title><rect x="784.3" y="133" width="0.2" height="15.0" fill="rgb(240,155,4)" rx="2" ry="2" />
<text  x="787.31" y="143.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (220,485 us., 2.96%)</title><rect x="914.5" y="133" width="34.9" height="15.0" fill="rgb(215,83,24)" rx="2" ry="2" />
<text  x="917.49" y="143.5" >tr..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (362,370 us., 4.87%)</title><rect x="785.2" y="149" width="57.5" height="15.0" fill="rgb(216,63,7)" rx="2" ry="2" />
<text  x="788.24" y="159.5" >nn.Mod..</text>
</g>
<g >
<title>torch_int/nn/opt.py(72):_forward (1,011,868 us., 13.59%)</title><rect x="1029.5" y="261" width="160.4" height="15.0" fill="rgb(252,173,32)" rx="2" ry="2" />
<text  x="1032.49" y="271.5" >torch_int/nn/opt.py(..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (328,611 us., 4.42%)</title><rect x="394.2" y="213" width="52.1" height="15.0" fill="rgb(237,83,6)" rx="2" ry="2" />
<text  x="397.16" y="223.5" >torch..</text>
</g>
<g >
<title>torch_int/nn/linear.py(225):_forward (253,562 us., 3.41%)</title><rect x="874.3" y="245" width="40.2" height="15.0" fill="rgb(221,21,5)" rx="2" ry="2" />
<text  x="877.29" y="255.5" >tor..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (501,959 us., 6.74%)</title><rect x="71.9" y="213" width="79.5" height="15.0" fill="rgb(225,140,20)" rx="2" ry="2" />
<text  x="74.86" y="223.5" >torch/aut..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (362,370 us., 4.87%)</title><rect x="785.2" y="85" width="57.5" height="15.0" fill="rgb(233,18,0)" rx="2" ry="2" />
<text  x="788.24" y="95.5" >torch/..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (4,540 us., 0.06%)</title><rect x="784.5" y="149" width="0.7" height="15.0" fill="rgb(244,24,16)" rx="2" ry="2" />
<text  x="787.52" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (199,355 us., 2.68%)</title><rect x="842.7" y="165" width="31.6" height="15.0" fill="rgb(219,44,46)" rx="2" ry="2" />
<text  x="845.69" y="175.5" >nn..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (501,959 us., 6.74%)</title><rect x="71.9" y="133" width="79.5" height="15.0" fill="rgb(213,7,0)" rx="2" ry="2" />
<text  x="74.86" y="143.5" >nn.Module..</text>
</g>
<g >
<title>torch_int/nn/opt.py(213):_forward (501,959 us., 6.74%)</title><rect x="71.9" y="181" width="79.5" height="15.0" fill="rgb(211,41,8)" rx="2" ry="2" />
<text  x="74.86" y="191.5" >torch_int..</text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (5,544 us., 0.07%)</title><rect x="70.2" y="197" width="0.8" height="15.0" fill="rgb(227,11,47)" rx="2" ry="2" />
<text  x="73.16" y="207.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (2,132,037 us., 28.64%)</title><rect x="446.3" y="133" width="338.0" height="15.0" fill="rgb(243,227,23)" rx="2" ry="2" />
<text  x="449.26" y="143.5" >transformers/models/opt/modeling_opt.py(840):..</text>
</g>
<g >
<title>nn.Module:_W8A8B8O8Linear (199,355 us., 2.68%)</title><rect x="842.7" y="213" width="31.6" height="15.0" fill="rgb(242,47,34)" rx="2" ry="2" />
<text  x="845.69" y="223.5" >nn..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (253,562 us., 3.41%)</title><rect x="874.3" y="229" width="40.2" height="15.0" fill="rgb(221,21,23)" rx="2" ry="2" />
<text  x="877.29" y="239.5" >tor..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (328,611 us., 4.42%)</title><rect x="394.2" y="69" width="52.1" height="15.0" fill="rgb(219,13,14)" rx="2" ry="2" />
<text  x="397.16" y="79.5" >torch..</text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (5,190 us., 0.07%)</title><rect x="71.0" y="197" width="0.9" height="15.0" fill="rgb(250,81,21)" rx="2" ry="2" />
<text  x="74.04" y="207.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(213):_forward (2,132,037 us., 28.64%)</title><rect x="446.3" y="197" width="338.0" height="15.0" fill="rgb(231,75,20)" rx="2" ry="2" />
<text  x="449.26" y="207.5" >torch_int/nn/opt.py(213):_forward</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (5,190 us., 0.07%)</title><rect x="71.0" y="133" width="0.9" height="15.0" fill="rgb(245,25,53)" rx="2" ry="2" />
<text  x="74.04" y="143.5" ></text>
</g>
<g >
<title>torch/nn/functional.py(2099):_embedding (10,734 us., 0.14%)</title><rect x="70.2" y="245" width="1.7" height="15.0" fill="rgb(230,170,0)" rx="2" ry="2" />
<text  x="73.16" y="255.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (764,180 us., 10.27%)</title><rect x="151.4" y="117" width="121.2" height="15.0" fill="rgb(207,32,26)" rx="2" ry="2" />
<text  x="154.44" y="127.5" >profiling/utils..</text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (1,011,868 us., 13.59%)</title><rect x="1029.5" y="229" width="160.4" height="15.0" fill="rgb(218,27,9)" rx="2" ry="2" />
<text  x="1032.49" y="239.5" >nn.Module:_Int8OPTAt..</text>
</g>
</g>
</svg>
