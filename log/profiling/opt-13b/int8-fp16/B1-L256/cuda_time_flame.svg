<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="326" onload="init(evt)" viewBox="0 0 1200 326" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="326.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >CUDA Time</text>
<text id="details" x="10.00" y="309" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="309" > </text>
<g id="frames">
<g >
<title>nn.Module:_Int8OPTAttention (87,979 us., 4.70%)</title><rect x="334.3" y="197" width="55.5" height="15.0" fill="rgb(210,228,2)" rx="2" ry="2" />
<text  x="337.26" y="207.5" >nn.Mo..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (114,445 us., 6.12%)</title><rect x="170.6" y="165" width="72.2" height="15.0" fill="rgb(214,198,45)" rx="2" ry="2" />
<text  x="173.57" y="175.5" >nn.Modul..</text>
</g>
<g >
<title>torch_int/nn/linear.py(225):_forward (71,791 us., 3.84%)</title><rect x="849.0" y="245" width="45.2" height="15.0" fill="rgb(230,10,54)" rx="2" ry="2" />
<text  x="851.97" y="255.5" >torc..</text>
</g>
<g >
<title>torch_int/nn/opt.py(213):_forward (562,053 us., 30.04%)</title><rect x="389.8" y="197" width="354.5" height="15.0" fill="rgb(224,20,40)" rx="2" ry="2" />
<text  x="392.76" y="207.5" >torch_int/nn/opt.py(213):_forward</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (74,815 us., 4.00%)</title><rect x="801.8" y="85" width="47.2" height="15.0" fill="rgb(254,146,0)" rx="2" ry="2" />
<text  x="804.78" y="95.5" >tran..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (199 us., 0.01%)</title><rect x="1016.8" y="149" width="0.2" height="15.0" fill="rgb(252,98,32)" rx="2" ry="2" />
<text  x="1019.84" y="159.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,497 us., 0.08%)</title><rect x="85.4" y="149" width="0.9" height="15.0" fill="rgb(233,39,38)" rx="2" ry="2" />
<text  x="88.38" y="159.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (199 us., 0.01%)</title><rect x="1016.8" y="101" width="0.2" height="15.0" fill="rgb(246,147,52)" rx="2" ry="2" />
<text  x="1019.84" y="111.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(72):_forward (130,505 us., 6.98%)</title><rect x="934.4" y="245" width="82.3" height="15.0" fill="rgb(243,48,28)" rx="2" ry="2" />
<text  x="937.40" y="255.5" >torch_int..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (130,505 us., 6.98%)</title><rect x="934.4" y="133" width="82.3" height="15.0" fill="rgb(237,20,17)" rx="2" ry="2" />
<text  x="937.40" y="143.5" >transform..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (206 us., 0.01%)</title><rect x="744.3" y="245" width="0.1" height="15.0" fill="rgb(230,18,31)" rx="2" ry="2" />
<text  x="747.28" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (87,979 us., 4.70%)</title><rect x="334.3" y="101" width="55.5" height="15.0" fill="rgb(223,12,47)" rx="2" ry="2" />
<text  x="337.26" y="111.5" >nn.Mo..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (200 us., 0.01%)</title><rect x="1016.7" y="165" width="0.1" height="15.0" fill="rgb(232,166,36)" rx="2" ry="2" />
<text  x="1019.71" y="175.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (74,815 us., 4.00%)</title><rect x="801.8" y="37" width="47.2" height="15.0" fill="rgb(250,176,43)" rx="2" ry="2" />
<text  x="804.78" y="47.5" >torc..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (724 us., 0.04%)</title><rect x="333.8" y="213" width="0.5" height="15.0" fill="rgb(232,94,3)" rx="2" ry="2" />
<text  x="336.81" y="223.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (199 us., 0.01%)</title><rect x="1016.8" y="117" width="0.2" height="15.0" fill="rgb(212,194,54)" rx="2" ry="2" />
<text  x="1019.84" y="127.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (35,814 us., 1.91%)</title><rect x="849.0" y="165" width="22.6" height="15.0" fill="rgb(227,213,38)" rx="2" ry="2" />
<text  x="851.97" y="175.5" >t..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (74,815 us., 4.00%)</title><rect x="801.8" y="229" width="47.2" height="15.0" fill="rgb(241,229,39)" rx="2" ry="2" />
<text  x="804.78" y="239.5" >torc..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (312 us., 0.02%)</title><rect x="84.2" y="133" width="0.2" height="15.0" fill="rgb(205,116,38)" rx="2" ry="2" />
<text  x="87.17" y="143.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (88,755 us., 4.74%)</title><rect x="745.8" y="101" width="56.0" height="15.0" fill="rgb(219,182,24)" rx="2" ry="2" />
<text  x="748.79" y="111.5" >profi..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (562,053 us., 30.04%)</title><rect x="389.8" y="117" width="354.5" height="15.0" fill="rgb(220,39,31)" rx="2" ry="2" />
<text  x="392.76" y="127.5" >nn.Module:_Int8OPTForCausalLM</text>
</g>
<g >
<title>torch/nn/functional.py(1804):_softmax (133,561 us., 7.14%)</title><rect x="86.3" y="245" width="84.3" height="15.0" fill="rgb(244,131,40)" rx="2" ry="2" />
<text  x="89.33" y="255.5" >torch/nn/..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (562,053 us., 30.04%)</title><rect x="389.8" y="85" width="354.5" height="15.0" fill="rgb(238,164,18)" rx="2" ry="2" />
<text  x="392.76" y="95.5" >torch/autograd/grad_mode.py(27):_decorate_context</text>
</g>
<g >
<title>torch_int/nn/fused.py(13):_forward (88,755 us., 4.74%)</title><rect x="745.8" y="229" width="56.0" height="15.0" fill="rgb(236,132,35)" rx="2" ry="2" />
<text  x="748.79" y="239.5" >torch..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (1,497 us., 0.08%)</title><rect x="85.4" y="133" width="0.9" height="15.0" fill="rgb(241,185,42)" rx="2" ry="2" />
<text  x="88.38" y="143.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (272,729 us., 14.58%)</title><rect x="1017.6" y="197" width="172.0" height="15.0" fill="rgb(251,164,54)" rx="2" ry="2" />
<text  x="1020.60" y="207.5" >nn.Module:_Int8OPTDeco..</text>
</g>
<g >
<title>torch_int/nn/opt.py(213):_forward (63,648 us., 3.40%)</title><rect x="894.2" y="197" width="40.2" height="15.0" fill="rgb(239,22,1)" rx="2" ry="2" />
<text  x="897.25" y="207.5" >tor..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,099 us., 0.06%)</title><rect x="744.4" y="149" width="0.7" height="15.0" fill="rgb(237,60,11)" rx="2" ry="2" />
<text  x="747.41" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (35,977 us., 1.92%)</title><rect x="871.6" y="69" width="22.6" height="15.0" fill="rgb(252,130,21)" rx="2" ry="2" />
<text  x="874.56" y="79.5" >n..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (1,099 us., 0.06%)</title><rect x="744.4" y="197" width="0.7" height="15.0" fill="rgb(236,209,33)" rx="2" ry="2" />
<text  x="747.41" y="207.5" ></text>
</g>
<g >
<title>&lt;built-in_method_encode_of_str_object_at_0x7f7cfb9eb4b0&gt; (1,044,409 us., 55.83%)</title><rect x="86.3" y="261" width="658.8" height="15.0" fill="rgb(247,219,8)" rx="2" ry="2" />
<text  x="89.33" y="271.5" >&lt;built-in_method_encode_of_str_object_at_0x7f7cfb9eb4b0&gt;</text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (199 us., 0.01%)</title><rect x="1016.8" y="181" width="0.2" height="15.0" fill="rgb(223,211,13)" rx="2" ry="2" />
<text  x="1019.84" y="191.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (200 us., 0.01%)</title><rect x="1017.0" y="165" width="0.1" height="15.0" fill="rgb(223,137,10)" rx="2" ry="2" />
<text  x="1019.96" y="175.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(89):__expand_mask (1,099 us., 0.06%)</title><rect x="744.4" y="245" width="0.7" height="15.0" fill="rgb(216,89,1)" rx="2" ry="2" />
<text  x="747.41" y="255.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(325):__prepare_decoder_attention_mask (199 us., 0.01%)</title><rect x="1016.8" y="197" width="0.2" height="15.0" fill="rgb(225,20,53)" rx="2" ry="2" />
<text  x="1019.84" y="207.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (200 us., 0.01%)</title><rect x="1016.7" y="213" width="0.1" height="15.0" fill="rgb(242,205,7)" rx="2" ry="2" />
<text  x="1019.71" y="223.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (312 us., 0.02%)</title><rect x="84.2" y="149" width="0.2" height="15.0" fill="rgb(246,143,4)" rx="2" ry="2" />
<text  x="87.17" y="159.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (206 us., 0.01%)</title><rect x="744.3" y="213" width="0.1" height="15.0" fill="rgb(214,138,31)" rx="2" ry="2" />
<text  x="747.28" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_W8A8B8O8Linear (74,815 us., 4.00%)</title><rect x="801.8" y="213" width="47.2" height="15.0" fill="rgb(244,210,30)" rx="2" ry="2" />
<text  x="804.78" y="223.5" >nn.M..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (724 us., 0.04%)</title><rect x="333.8" y="165" width="0.5" height="15.0" fill="rgb(220,73,10)" rx="2" ry="2" />
<text  x="336.81" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (117,595 us., 6.29%)</title><rect x="10.0" y="197" width="74.2" height="15.0" fill="rgb(252,135,14)" rx="2" ry="2" />
<text  x="13.00" y="207.5" >nn.Modul..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (312 us., 0.02%)</title><rect x="84.2" y="165" width="0.2" height="15.0" fill="rgb(214,194,49)" rx="2" ry="2" />
<text  x="87.17" y="175.5" ></text>
</g>
<g >
<title>torch/nn/modules/sparse.py(157):_forward (3,104 us., 0.17%)</title><rect x="84.4" y="229" width="1.9" height="15.0" fill="rgb(250,172,46)" rx="2" ry="2" />
<text  x="87.37" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (35,814 us., 1.91%)</title><rect x="849.0" y="181" width="22.6" height="15.0" fill="rgb(250,12,20)" rx="2" ry="2" />
<text  x="851.97" y="191.5" >n..</text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (74,815 us., 4.00%)</title><rect x="801.8" y="165" width="47.2" height="15.0" fill="rgb(243,222,9)" rx="2" ry="2" />
<text  x="804.78" y="175.5" >nn.M..</text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (724 us., 0.04%)</title><rect x="333.8" y="229" width="0.5" height="15.0" fill="rgb(209,178,25)" rx="2" ry="2" />
<text  x="336.81" y="239.5" ></text>
</g>
<g >
<title>&lt;built-in_method_layer_norm_of_type_object_at_0x7f7defef49c0&gt; (89,854 us., 4.80%)</title><rect x="745.1" y="261" width="56.7" height="15.0" fill="rgb(206,55,25)" rx="2" ry="2" />
<text  x="748.10" y="271.5" >&lt;built..</text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (35,977 us., 1.92%)</title><rect x="871.6" y="117" width="22.6" height="15.0" fill="rgb(211,144,17)" rx="2" ry="2" />
<text  x="874.56" y="127.5" >t..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(89):__expand_mask (199 us., 0.01%)</title><rect x="1016.8" y="213" width="0.2" height="15.0" fill="rgb(234,43,40)" rx="2" ry="2" />
<text  x="1019.84" y="223.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (35,977 us., 1.92%)</title><rect x="871.6" y="53" width="22.6" height="15.0" fill="rgb(244,51,34)" rx="2" ry="2" />
<text  x="874.56" y="63.5" >p..</text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (200 us., 0.01%)</title><rect x="1016.7" y="245" width="0.1" height="15.0" fill="rgb(249,44,39)" rx="2" ry="2" />
<text  x="1019.71" y="255.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (562,053 us., 30.04%)</title><rect x="389.8" y="229" width="354.5" height="15.0" fill="rgb(253,21,1)" rx="2" ry="2" />
<text  x="392.76" y="239.5" >torch/autograd/grad_mode.py(24):_decorate_context</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (597 us., 0.03%)</title><rect x="1189.6" y="213" width="0.4" height="15.0" fill="rgb(242,153,17)" rx="2" ry="2" />
<text  x="1192.62" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (114,445 us., 6.12%)</title><rect x="170.6" y="197" width="72.2" height="15.0" fill="rgb(213,113,22)" rx="2" ry="2" />
<text  x="173.57" y="207.5" >nn.Modul..</text>
</g>
<g >
<title>torch/nn/modules/normalization.py(188):_forward (1,099 us., 0.06%)</title><rect x="745.1" y="229" width="0.7" height="15.0" fill="rgb(235,123,5)" rx="2" ry="2" />
<text  x="748.10" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (597 us., 0.03%)</title><rect x="1189.6" y="245" width="0.4" height="15.0" fill="rgb(228,113,14)" rx="2" ry="2" />
<text  x="1192.62" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (200 us., 0.01%)</title><rect x="1016.7" y="197" width="0.1" height="15.0" fill="rgb(219,83,1)" rx="2" ry="2" />
<text  x="1019.71" y="207.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (133,561 us., 7.14%)</title><rect x="86.3" y="85" width="84.3" height="15.0" fill="rgb(219,101,24)" rx="2" ry="2" />
<text  x="89.33" y="95.5" >profiling..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (597 us., 0.03%)</title><rect x="1189.6" y="149" width="0.4" height="15.0" fill="rgb(237,157,3)" rx="2" ry="2" />
<text  x="1192.62" y="159.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (63,648 us., 3.40%)</title><rect x="894.2" y="101" width="40.2" height="15.0" fill="rgb(225,102,32)" rx="2" ry="2" />
<text  x="897.25" y="111.5" >pro..</text>
</g>
<g >
<title>&lt;built-in_method_ones_of_type_object_at_0x7f7defef49c0&gt; (200 us., 0.01%)</title><rect x="1016.7" y="261" width="0.1" height="15.0" fill="rgb(226,35,48)" rx="2" ry="2" />
<text  x="1019.71" y="271.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (87,979 us., 4.70%)</title><rect x="334.3" y="213" width="55.5" height="15.0" fill="rgb(243,11,37)" rx="2" ry="2" />
<text  x="337.26" y="223.5" >torch..</text>
</g>
<g >
<title>torch_int/nn/opt.py(213):_forward (88,755 us., 4.74%)</title><rect x="745.8" y="197" width="56.0" height="15.0" fill="rgb(254,64,42)" rx="2" ry="2" />
<text  x="748.79" y="207.5" >torch..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (200 us., 0.01%)</title><rect x="1017.0" y="181" width="0.1" height="15.0" fill="rgb(220,30,1)" rx="2" ry="2" />
<text  x="1019.96" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (272,729 us., 14.58%)</title><rect x="1017.6" y="133" width="172.0" height="15.0" fill="rgb(228,76,23)" rx="2" ry="2" />
<text  x="1020.60" y="143.5" >nn.Module:_Int8OPTForC..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (200 us., 0.01%)</title><rect x="1017.0" y="229" width="0.1" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="1019.96" y="239.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (200 us., 0.01%)</title><rect x="1017.0" y="245" width="0.1" height="15.0" fill="rgb(248,1,25)" rx="2" ry="2" />
<text  x="1019.96" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (1,497 us., 0.08%)</title><rect x="85.4" y="165" width="0.9" height="15.0" fill="rgb(238,86,41)" rx="2" ry="2" />
<text  x="88.38" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (130,505 us., 6.98%)</title><rect x="934.4" y="117" width="82.3" height="15.0" fill="rgb(248,79,10)" rx="2" ry="2" />
<text  x="937.40" y="127.5" >nn.Module..</text>
</g>
<g >
<title>&lt;built-in_method_embedding_of_type_object_at_0x7f7defef49c0&gt; (3,104 us., 0.17%)</title><rect x="84.4" y="261" width="1.9" height="15.0" fill="rgb(243,102,1)" rx="2" ry="2" />
<text  x="87.37" y="271.5" ></text>
</g>
<g >
<title>torch/_tensor.py(26):_wrapped (199 us., 0.01%)</title><rect x="1016.8" y="229" width="0.2" height="15.0" fill="rgb(254,56,14)" rx="2" ry="2" />
<text  x="1019.84" y="239.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (130,505 us., 6.98%)</title><rect x="934.4" y="229" width="82.3" height="15.0" fill="rgb(230,219,17)" rx="2" ry="2" />
<text  x="937.40" y="239.5" >torch/aut..</text>
</g>
<g >
<title>torch_int/nn/opt.py(213):_forward (87,979 us., 4.70%)</title><rect x="334.3" y="181" width="55.5" height="15.0" fill="rgb(245,216,34)" rx="2" ry="2" />
<text  x="337.26" y="191.5" >torch..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (63,648 us., 3.40%)</title><rect x="894.2" y="181" width="40.2" height="15.0" fill="rgb(253,0,3)" rx="2" ry="2" />
<text  x="897.25" y="191.5" >nn...</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (200 us., 0.01%)</title><rect x="1016.7" y="181" width="0.1" height="15.0" fill="rgb(230,95,46)" rx="2" ry="2" />
<text  x="1019.71" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_W8A8B8O8LinearReLU (63,648 us., 3.40%)</title><rect x="894.2" y="213" width="40.2" height="15.0" fill="rgb(234,23,7)" rx="2" ry="2" />
<text  x="897.25" y="223.5" >nn...</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (144,342 us., 7.72%)</title><rect x="242.8" y="197" width="91.0" height="15.0" fill="rgb(232,188,42)" rx="2" ry="2" />
<text  x="245.76" y="207.5" >nn.Module:..</text>
</g>
<g >
<title>torch_int/nn/opt.py(325):__prepare_decoder_attention_mask (1,099 us., 0.06%)</title><rect x="744.4" y="229" width="0.7" height="15.0" fill="rgb(233,49,52)" rx="2" ry="2" />
<text  x="747.41" y="239.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(213):_forward (144,342 us., 7.72%)</title><rect x="242.8" y="245" width="91.0" height="15.0" fill="rgb(254,9,14)" rx="2" ry="2" />
<text  x="245.76" y="255.5" >torch_int/..</text>
</g>
<g >
<title>torch_int/nn/opt.py(69):__shape (87,979 us., 4.70%)</title><rect x="334.3" y="245" width="55.5" height="15.0" fill="rgb(244,75,50)" rx="2" ry="2" />
<text  x="337.26" y="255.5" >torch..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,497 us., 0.08%)</title><rect x="85.4" y="101" width="0.9" height="15.0" fill="rgb(211,109,21)" rx="2" ry="2" />
<text  x="88.38" y="111.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (35,977 us., 1.92%)</title><rect x="871.6" y="165" width="22.6" height="15.0" fill="rgb(238,103,41)" rx="2" ry="2" />
<text  x="874.56" y="175.5" >n..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (1,497 us., 0.08%)</title><rect x="85.4" y="213" width="0.9" height="15.0" fill="rgb(210,223,24)" rx="2" ry="2" />
<text  x="88.38" y="223.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(213):_forward (133,561 us., 7.14%)</title><rect x="86.3" y="181" width="84.3" height="15.0" fill="rgb(248,178,10)" rx="2" ry="2" />
<text  x="89.33" y="191.5" >torch_int..</text>
</g>
<g >
<title>nn.Module:_Linear (117,595 us., 6.29%)</title><rect x="10.0" y="229" width="74.2" height="15.0" fill="rgb(211,152,11)" rx="2" ry="2" />
<text  x="13.00" y="239.5" >nn.Modul..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (199 us., 0.01%)</title><rect x="1016.8" y="165" width="0.2" height="15.0" fill="rgb(217,7,3)" rx="2" ry="2" />
<text  x="1019.84" y="175.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (117,595 us., 6.29%)</title><rect x="10.0" y="165" width="74.2" height="15.0" fill="rgb(227,95,15)" rx="2" ry="2" />
<text  x="13.00" y="175.5" >torch/au..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (130,505 us., 6.98%)</title><rect x="934.4" y="149" width="82.3" height="15.0" fill="rgb(254,229,25)" rx="2" ry="2" />
<text  x="937.40" y="159.5" >nn.Module..</text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (114,445 us., 6.12%)</title><rect x="170.6" y="181" width="72.2" height="15.0" fill="rgb(231,10,24)" rx="2" ry="2" />
<text  x="173.57" y="191.5" >torch_in..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (597 us., 0.03%)</title><rect x="1189.6" y="261" width="0.4" height="15.0" fill="rgb(214,190,51)" rx="2" ry="2" />
<text  x="1192.62" y="271.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (724 us., 0.04%)</title><rect x="333.8" y="149" width="0.5" height="15.0" fill="rgb(214,188,53)" rx="2" ry="2" />
<text  x="336.81" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (272,729 us., 14.58%)</title><rect x="1017.6" y="165" width="172.0" height="15.0" fill="rgb(248,128,23)" rx="2" ry="2" />
<text  x="1020.60" y="175.5" >nn.Module:_Int8OPTDeco..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (200 us., 0.01%)</title><rect x="1017.0" y="197" width="0.1" height="15.0" fill="rgb(247,6,21)" rx="2" ry="2" />
<text  x="1019.96" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (206 us., 0.01%)</title><rect x="744.3" y="229" width="0.1" height="15.0" fill="rgb(232,74,26)" rx="2" ry="2" />
<text  x="747.28" y="239.5" ></text>
</g>
<g >
<title>torch_int/nn/fused.py(13):_forward (114,445 us., 6.12%)</title><rect x="170.6" y="245" width="72.2" height="15.0" fill="rgb(217,157,42)" rx="2" ry="2" />
<text  x="173.57" y="255.5" >torch_in..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (74,815 us., 4.00%)</title><rect x="801.8" y="133" width="47.2" height="15.0" fill="rgb(217,5,23)" rx="2" ry="2" />
<text  x="804.78" y="143.5" >nn.M..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (312 us., 0.02%)</title><rect x="84.2" y="245" width="0.2" height="15.0" fill="rgb(247,80,18)" rx="2" ry="2" />
<text  x="87.17" y="255.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (1,099 us., 0.06%)</title><rect x="745.1" y="197" width="0.7" height="15.0" fill="rgb(248,212,8)" rx="2" ry="2" />
<text  x="748.10" y="207.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (133,561 us., 7.14%)</title><rect x="86.3" y="213" width="84.3" height="15.0" fill="rgb(206,63,0)" rx="2" ry="2" />
<text  x="89.33" y="223.5" >torch/aut..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (35,814 us., 1.91%)</title><rect x="849.0" y="85" width="22.6" height="15.0" fill="rgb(234,123,31)" rx="2" ry="2" />
<text  x="851.97" y="95.5" >t..</text>
</g>
<g >
<title>all (1,870,762 us., 100%)</title><rect x="10.0" y="277" width="1180.0" height="15.0" fill="rgb(243,127,48)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (562,053 us., 30.04%)</title><rect x="389.8" y="165" width="354.5" height="15.0" fill="rgb(215,113,5)" rx="2" ry="2" />
<text  x="392.76" y="175.5" >torch_int/nn/opt.py(346):_forward</text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (133,561 us., 7.14%)</title><rect x="86.3" y="149" width="84.3" height="15.0" fill="rgb(247,179,24)" rx="2" ry="2" />
<text  x="89.33" y="159.5" >torch_int..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (144,342 us., 7.72%)</title><rect x="242.8" y="229" width="91.0" height="15.0" fill="rgb(212,28,38)" rx="2" ry="2" />
<text  x="245.76" y="239.5" >nn.Module:..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (1,607 us., 0.09%)</title><rect x="84.4" y="149" width="1.0" height="15.0" fill="rgb(240,135,33)" rx="2" ry="2" />
<text  x="87.37" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (1,497 us., 0.08%)</title><rect x="85.4" y="197" width="0.9" height="15.0" fill="rgb(208,10,39)" rx="2" ry="2" />
<text  x="88.38" y="207.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (562,053 us., 30.04%)</title><rect x="389.8" y="101" width="354.5" height="15.0" fill="rgb(246,81,0)" rx="2" ry="2" />
<text  x="392.76" y="111.5" >profiling/utils.py(18):_profile_model</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (312 us., 0.02%)</title><rect x="84.2" y="181" width="0.2" height="15.0" fill="rgb(220,165,10)" rx="2" ry="2" />
<text  x="87.17" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Embedding (1,607 us., 0.09%)</title><rect x="84.4" y="213" width="1.0" height="15.0" fill="rgb(212,167,40)" rx="2" ry="2" />
<text  x="87.37" y="223.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (117,595 us., 6.29%)</title><rect x="10.0" y="181" width="74.2" height="15.0" fill="rgb(215,117,43)" rx="2" ry="2" />
<text  x="13.00" y="191.5" >profilin..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (35,977 us., 1.92%)</title><rect x="871.6" y="181" width="22.6" height="15.0" fill="rgb(223,224,0)" rx="2" ry="2" />
<text  x="874.56" y="191.5" >t..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (804 us., 0.04%)</title><rect x="1017.1" y="213" width="0.5" height="15.0" fill="rgb(249,84,49)" rx="2" ry="2" />
<text  x="1020.09" y="223.5" ></text>
</g>
<g >
<title>&lt;built-in_function_linear&gt; (117,595 us., 6.29%)</title><rect x="10.0" y="261" width="74.2" height="15.0" fill="rgb(213,79,5)" rx="2" ry="2" />
<text  x="13.00" y="271.5" >&lt;built-i..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (724 us., 0.04%)</title><rect x="333.8" y="197" width="0.5" height="15.0" fill="rgb(241,60,44)" rx="2" ry="2" />
<text  x="336.81" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (130,505 us., 6.98%)</title><rect x="934.4" y="213" width="82.3" height="15.0" fill="rgb(225,102,11)" rx="2" ry="2" />
<text  x="937.40" y="223.5" >nn.Module..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (74,815 us., 4.00%)</title><rect x="801.8" y="53" width="47.2" height="15.0" fill="rgb(229,98,45)" rx="2" ry="2" />
<text  x="804.78" y="63.5" >prof..</text>
</g>
<g >
<title>torch/nn/functional.py(2488):_layer_norm (89,854 us., 4.80%)</title><rect x="745.1" y="245" width="56.7" height="15.0" fill="rgb(252,207,20)" rx="2" ry="2" />
<text  x="748.10" y="255.5" >torch/..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (200 us., 0.01%)</title><rect x="1017.0" y="213" width="0.1" height="15.0" fill="rgb(238,222,5)" rx="2" ry="2" />
<text  x="1019.96" y="223.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (562,053 us., 30.04%)</title><rect x="389.8" y="133" width="354.5" height="15.0" fill="rgb(245,92,34)" rx="2" ry="2" />
<text  x="392.76" y="143.5" >transformers/models/opt/modeling_opt.py(840):_fo..</text>
</g>
<g >
<title>&lt;built-in_method_max_of_type_object_at_0x7f7defef49c0&gt; (130,505 us., 6.98%)</title><rect x="934.4" y="261" width="82.3" height="15.0" fill="rgb(209,175,29)" rx="2" ry="2" />
<text  x="937.40" y="271.5" >&lt;built-in..</text>
</g>
<g >
<title>torch_int/nn/opt.py(213):_forward (74,815 us., 4.00%)</title><rect x="801.8" y="149" width="47.2" height="15.0" fill="rgb(217,139,24)" rx="2" ry="2" />
<text  x="804.78" y="159.5" >torc..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (71,791 us., 3.84%)</title><rect x="849.0" y="229" width="45.2" height="15.0" fill="rgb(217,62,31)" rx="2" ry="2" />
<text  x="851.97" y="239.5" >torc..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (88,755 us., 4.74%)</title><rect x="745.8" y="85" width="56.0" height="15.0" fill="rgb(231,159,20)" rx="2" ry="2" />
<text  x="748.79" y="95.5" >torch..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (63,648 us., 3.40%)</title><rect x="894.2" y="133" width="40.2" height="15.0" fill="rgb(207,142,24)" rx="2" ry="2" />
<text  x="897.25" y="143.5" >tra..</text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (804 us., 0.04%)</title><rect x="1017.1" y="261" width="0.5" height="15.0" fill="rgb(225,206,45)" rx="2" ry="2" />
<text  x="1020.09" y="271.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (87,979 us., 4.70%)</title><rect x="334.3" y="133" width="55.5" height="15.0" fill="rgb(221,51,32)" rx="2" ry="2" />
<text  x="337.26" y="143.5" >nn.Mo..</text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (1,099 us., 0.06%)</title><rect x="744.4" y="213" width="0.7" height="15.0" fill="rgb(238,9,2)" rx="2" ry="2" />
<text  x="747.41" y="223.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (597 us., 0.03%)</title><rect x="1189.6" y="229" width="0.4" height="15.0" fill="rgb(237,26,25)" rx="2" ry="2" />
<text  x="1192.62" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (35,814 us., 1.91%)</title><rect x="849.0" y="117" width="22.6" height="15.0" fill="rgb(214,150,4)" rx="2" ry="2" />
<text  x="851.97" y="127.5" >n..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (130,505 us., 6.98%)</title><rect x="934.4" y="101" width="82.3" height="15.0" fill="rgb(220,209,2)" rx="2" ry="2" />
<text  x="937.40" y="111.5" >profiling..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (63,648 us., 3.40%)</title><rect x="894.2" y="229" width="40.2" height="15.0" fill="rgb(249,134,50)" rx="2" ry="2" />
<text  x="897.25" y="239.5" >tor..</text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (312 us., 0.02%)</title><rect x="84.2" y="213" width="0.2" height="15.0" fill="rgb(215,120,24)" rx="2" ry="2" />
<text  x="87.17" y="223.5" ></text>
</g>
<g >
<title>torch/nn/functional.py(2099):_embedding (3,104 us., 0.17%)</title><rect x="84.4" y="245" width="1.9" height="15.0" fill="rgb(231,54,35)" rx="2" ry="2" />
<text  x="87.37" y="255.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (35,977 us., 1.92%)</title><rect x="871.6" y="85" width="22.6" height="15.0" fill="rgb(239,166,41)" rx="2" ry="2" />
<text  x="874.56" y="95.5" >t..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (272,729 us., 14.58%)</title><rect x="1017.6" y="245" width="172.0" height="15.0" fill="rgb(235,185,49)" rx="2" ry="2" />
<text  x="1020.60" y="255.5" >torch/autograd/grad_mo..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,099 us., 0.06%)</title><rect x="745.1" y="117" width="0.7" height="15.0" fill="rgb(237,178,20)" rx="2" ry="2" />
<text  x="748.10" y="127.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (114,445 us., 6.12%)</title><rect x="170.6" y="117" width="72.2" height="15.0" fill="rgb(242,86,1)" rx="2" ry="2" />
<text  x="173.57" y="127.5" >profilin..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (87,979 us., 4.70%)</title><rect x="334.3" y="117" width="55.5" height="15.0" fill="rgb(241,0,51)" rx="2" ry="2" />
<text  x="337.26" y="127.5" >trans..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (74,815 us., 4.00%)</title><rect x="801.8" y="69" width="47.2" height="15.0" fill="rgb(206,1,17)" rx="2" ry="2" />
<text  x="804.78" y="79.5" >nn.M..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (133,561 us., 7.14%)</title><rect x="86.3" y="165" width="84.3" height="15.0" fill="rgb(224,173,5)" rx="2" ry="2" />
<text  x="89.33" y="175.5" >nn.Module..</text>
</g>
<g >
<title>torch_int/nn/opt.py(213):_forward (130,505 us., 6.98%)</title><rect x="934.4" y="197" width="82.3" height="15.0" fill="rgb(231,182,43)" rx="2" ry="2" />
<text  x="937.40" y="207.5" >torch_int..</text>
</g>
<g >
<title>&lt;built-in_method_linear_a8_w8_b8_o8_of_PyCapsule_object_at_0x7f7cfb38e810&gt; (74,815 us., 4.00%)</title><rect x="801.8" y="261" width="47.2" height="15.0" fill="rgb(217,62,46)" rx="2" ry="2" />
<text  x="804.78" y="271.5" >&lt;bui..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (562,053 us., 30.04%)</title><rect x="389.8" y="149" width="354.5" height="15.0" fill="rgb(243,198,7)" rx="2" ry="2" />
<text  x="392.76" y="159.5" >nn.Module:_Int8OPTDecoder</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (312 us., 0.02%)</title><rect x="84.2" y="197" width="0.2" height="15.0" fill="rgb(224,119,7)" rx="2" ry="2" />
<text  x="87.17" y="207.5" ></text>
</g>
<g >
<title>torch_int/nn/linear.py(40):_forward (74,815 us., 4.00%)</title><rect x="801.8" y="245" width="47.2" height="15.0" fill="rgb(250,83,18)" rx="2" ry="2" />
<text  x="804.78" y="255.5" >torc..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (88,755 us., 4.74%)</title><rect x="745.8" y="117" width="56.0" height="15.0" fill="rgb(233,42,52)" rx="2" ry="2" />
<text  x="748.79" y="127.5" >nn.Mo..</text>
</g>
<g >
<title>torch/_tensor.py(637):___rsub__ (199 us., 0.01%)</title><rect x="1016.8" y="245" width="0.2" height="15.0" fill="rgb(237,0,37)" rx="2" ry="2" />
<text  x="1019.84" y="255.5" ></text>
</g>
<g >
<title>&lt;built-in_method_cumsum_of_type_object_at_0x7f7defef49c0&gt; (312 us., 0.02%)</title><rect x="84.2" y="261" width="0.2" height="15.0" fill="rgb(234,160,41)" rx="2" ry="2" />
<text  x="87.17" y="271.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (63,648 us., 3.40%)</title><rect x="894.2" y="117" width="40.2" height="15.0" fill="rgb(217,26,39)" rx="2" ry="2" />
<text  x="897.25" y="127.5" >nn...</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,607 us., 0.09%)</title><rect x="84.4" y="165" width="1.0" height="15.0" fill="rgb(221,156,36)" rx="2" ry="2" />
<text  x="87.37" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (133,561 us., 7.14%)</title><rect x="86.3" y="133" width="84.3" height="15.0" fill="rgb(209,53,2)" rx="2" ry="2" />
<text  x="89.33" y="143.5" >nn.Module..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (597 us., 0.03%)</title><rect x="1189.6" y="181" width="0.4" height="15.0" fill="rgb(252,120,42)" rx="2" ry="2" />
<text  x="1192.62" y="191.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (35,814 us., 1.91%)</title><rect x="849.0" y="101" width="22.6" height="15.0" fill="rgb(212,144,11)" rx="2" ry="2" />
<text  x="851.97" y="111.5" >p..</text>
</g>
<g >
<title>&lt;built-in_method_rsub_of_type_object_at_0x7f7defef49c0&gt; (199 us., 0.01%)</title><rect x="1016.8" y="261" width="0.2" height="15.0" fill="rgb(219,8,54)" rx="2" ry="2" />
<text  x="1019.84" y="271.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(325):__prepare_decoder_attention_mask (200 us., 0.01%)</title><rect x="1017.0" y="261" width="0.1" height="15.0" fill="rgb(231,26,40)" rx="2" ry="2" />
<text  x="1019.96" y="271.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (88,755 us., 4.74%)</title><rect x="745.8" y="133" width="56.0" height="15.0" fill="rgb(253,93,51)" rx="2" ry="2" />
<text  x="748.79" y="143.5" >trans..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,497 us., 0.08%)</title><rect x="85.4" y="117" width="0.9" height="15.0" fill="rgb(214,190,39)" rx="2" ry="2" />
<text  x="88.38" y="127.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (206 us., 0.01%)</title><rect x="744.3" y="149" width="0.1" height="15.0" fill="rgb(226,41,35)" rx="2" ry="2" />
<text  x="747.28" y="159.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (1,607 us., 0.09%)</title><rect x="84.4" y="197" width="1.0" height="15.0" fill="rgb(233,30,53)" rx="2" ry="2" />
<text  x="87.37" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (312 us., 0.02%)</title><rect x="84.2" y="229" width="0.2" height="15.0" fill="rgb(239,216,30)" rx="2" ry="2" />
<text  x="87.17" y="239.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (35,977 us., 1.92%)</title><rect x="871.6" y="37" width="22.6" height="15.0" fill="rgb(224,223,44)" rx="2" ry="2" />
<text  x="874.56" y="47.5" >t..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,607 us., 0.09%)</title><rect x="84.4" y="133" width="1.0" height="15.0" fill="rgb(250,2,52)" rx="2" ry="2" />
<text  x="87.37" y="143.5" ></text>
</g>
<g >
<title>nn.Module:_LayerNormQ (88,755 us., 4.74%)</title><rect x="745.8" y="213" width="56.0" height="15.0" fill="rgb(213,16,1)" rx="2" ry="2" />
<text  x="748.79" y="223.5" >nn.Mo..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (199 us., 0.01%)</title><rect x="1016.8" y="133" width="0.2" height="15.0" fill="rgb(242,118,19)" rx="2" ry="2" />
<text  x="1019.84" y="143.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (87,979 us., 4.70%)</title><rect x="334.3" y="69" width="55.5" height="15.0" fill="rgb(223,118,45)" rx="2" ry="2" />
<text  x="337.26" y="79.5" >torch..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (117,595 us., 6.29%)</title><rect x="10.0" y="213" width="74.2" height="15.0" fill="rgb(246,168,30)" rx="2" ry="2" />
<text  x="13.00" y="223.5" >transfor..</text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (87,979 us., 4.70%)</title><rect x="334.3" y="149" width="55.5" height="15.0" fill="rgb(209,81,24)" rx="2" ry="2" />
<text  x="337.26" y="159.5" >torch..</text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (144,342 us., 7.72%)</title><rect x="242.8" y="213" width="91.0" height="15.0" fill="rgb(221,192,37)" rx="2" ry="2" />
<text  x="245.76" y="223.5" >torch_int/..</text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (130,505 us., 6.98%)</title><rect x="934.4" y="165" width="82.3" height="15.0" fill="rgb(211,181,24)" rx="2" ry="2" />
<text  x="937.40" y="175.5" >torch_int..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (87,979 us., 4.70%)</title><rect x="334.3" y="165" width="55.5" height="15.0" fill="rgb(233,154,25)" rx="2" ry="2" />
<text  x="337.26" y="175.5" >nn.Mo..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (206 us., 0.01%)</title><rect x="744.3" y="133" width="0.1" height="15.0" fill="rgb(218,42,10)" rx="2" ry="2" />
<text  x="747.28" y="143.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,099 us., 0.06%)</title><rect x="744.4" y="133" width="0.7" height="15.0" fill="rgb(214,195,51)" rx="2" ry="2" />
<text  x="747.41" y="143.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,099 us., 0.06%)</title><rect x="745.1" y="133" width="0.7" height="15.0" fill="rgb(219,8,34)" rx="2" ry="2" />
<text  x="748.10" y="143.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (74,815 us., 4.00%)</title><rect x="801.8" y="117" width="47.2" height="15.0" fill="rgb(229,109,35)" rx="2" ry="2" />
<text  x="804.78" y="127.5" >torc..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (804 us., 0.04%)</title><rect x="1017.1" y="181" width="0.5" height="15.0" fill="rgb(245,100,27)" rx="2" ry="2" />
<text  x="1020.09" y="191.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (133,561 us., 7.14%)</title><rect x="86.3" y="69" width="84.3" height="15.0" fill="rgb(231,118,34)" rx="2" ry="2" />
<text  x="89.33" y="79.5" >torch/aut..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (133,561 us., 7.14%)</title><rect x="86.3" y="101" width="84.3" height="15.0" fill="rgb(232,226,5)" rx="2" ry="2" />
<text  x="89.33" y="111.5" >nn.Module..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,099 us., 0.06%)</title><rect x="744.4" y="181" width="0.7" height="15.0" fill="rgb(236,219,8)" rx="2" ry="2" />
<text  x="747.41" y="191.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (597 us., 0.03%)</title><rect x="1189.6" y="165" width="0.4" height="15.0" fill="rgb(213,158,20)" rx="2" ry="2" />
<text  x="1192.62" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (88,755 us., 4.74%)</title><rect x="745.8" y="149" width="56.0" height="15.0" fill="rgb(223,101,44)" rx="2" ry="2" />
<text  x="748.79" y="159.5" >nn.Mo..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (114,445 us., 6.12%)</title><rect x="170.6" y="133" width="72.2" height="15.0" fill="rgb(249,146,27)" rx="2" ry="2" />
<text  x="173.57" y="143.5" >nn.Modul..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (63,648 us., 3.40%)</title><rect x="894.2" y="85" width="40.2" height="15.0" fill="rgb(229,163,0)" rx="2" ry="2" />
<text  x="897.25" y="95.5" >tor..</text>
</g>
<g >
<title>torch_int/nn/opt.py(72):_forward (74,815 us., 4.00%)</title><rect x="801.8" y="197" width="47.2" height="15.0" fill="rgb(234,219,37)" rx="2" ry="2" />
<text  x="804.78" y="207.5" >torc..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (144,342 us., 7.72%)</title><rect x="242.8" y="149" width="91.0" height="15.0" fill="rgb(209,61,18)" rx="2" ry="2" />
<text  x="245.76" y="159.5" >profiling/..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (724 us., 0.04%)</title><rect x="333.8" y="181" width="0.5" height="15.0" fill="rgb(235,148,51)" rx="2" ry="2" />
<text  x="336.81" y="191.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (206 us., 0.01%)</title><rect x="744.3" y="181" width="0.1" height="15.0" fill="rgb(206,84,22)" rx="2" ry="2" />
<text  x="747.28" y="191.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (804 us., 0.04%)</title><rect x="1017.1" y="229" width="0.5" height="15.0" fill="rgb(227,174,36)" rx="2" ry="2" />
<text  x="1020.09" y="239.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (1,497 us., 0.08%)</title><rect x="85.4" y="181" width="0.9" height="15.0" fill="rgb(252,75,7)" rx="2" ry="2" />
<text  x="88.38" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (88,755 us., 4.74%)</title><rect x="745.8" y="181" width="56.0" height="15.0" fill="rgb(238,46,16)" rx="2" ry="2" />
<text  x="748.79" y="191.5" >nn.Mo..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (597 us., 0.03%)</title><rect x="1189.6" y="197" width="0.4" height="15.0" fill="rgb(246,185,12)" rx="2" ry="2" />
<text  x="1192.62" y="207.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (272,729 us., 14.58%)</title><rect x="1017.6" y="181" width="172.0" height="15.0" fill="rgb(247,201,7)" rx="2" ry="2" />
<text  x="1020.60" y="191.5" >torch_int/nn/opt.py(34..</text>
</g>
<g >
<title>torch_int/nn/linear.py(90):_forward (63,648 us., 3.40%)</title><rect x="894.2" y="245" width="40.2" height="15.0" fill="rgb(253,94,28)" rx="2" ry="2" />
<text  x="897.25" y="255.5" >tor..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (130,505 us., 6.98%)</title><rect x="934.4" y="85" width="82.3" height="15.0" fill="rgb(218,124,35)" rx="2" ry="2" />
<text  x="937.40" y="95.5" >torch/aut..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,607 us., 0.09%)</title><rect x="84.4" y="117" width="1.0" height="15.0" fill="rgb(250,134,37)" rx="2" ry="2" />
<text  x="87.37" y="127.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (130,505 us., 6.98%)</title><rect x="934.4" y="181" width="82.3" height="15.0" fill="rgb(248,156,13)" rx="2" ry="2" />
<text  x="937.40" y="191.5" >nn.Module..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (35,814 us., 1.91%)</title><rect x="849.0" y="149" width="22.6" height="15.0" fill="rgb(214,101,12)" rx="2" ry="2" />
<text  x="851.97" y="159.5" >n..</text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (88,755 us., 4.74%)</title><rect x="745.8" y="165" width="56.0" height="15.0" fill="rgb(223,212,2)" rx="2" ry="2" />
<text  x="748.79" y="175.5" >torch..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (272,729 us., 14.58%)</title><rect x="1017.6" y="117" width="172.0" height="15.0" fill="rgb(226,229,20)" rx="2" ry="2" />
<text  x="1020.60" y="127.5" >profiling/utils.py(18)..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (144,342 us., 7.72%)</title><rect x="242.8" y="133" width="91.0" height="15.0" fill="rgb(251,70,34)" rx="2" ry="2" />
<text  x="245.76" y="143.5" >torch/auto..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (74,815 us., 4.00%)</title><rect x="801.8" y="101" width="47.2" height="15.0" fill="rgb(252,75,8)" rx="2" ry="2" />
<text  x="804.78" y="111.5" >nn.M..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (1,099 us., 0.06%)</title><rect x="744.4" y="165" width="0.7" height="15.0" fill="rgb(209,222,11)" rx="2" ry="2" />
<text  x="747.41" y="175.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(213):_forward (35,977 us., 1.92%)</title><rect x="871.6" y="149" width="22.6" height="15.0" fill="rgb(221,20,5)" rx="2" ry="2" />
<text  x="874.56" y="159.5" >t..</text>
</g>
<g >
<title>&lt;built-in_method_linear_relu_a8_w8_b8_o8_of_PyCapsule_object_at_0x7f7cfb38e750&gt; (63,648 us., 3.40%)</title><rect x="894.2" y="261" width="40.2" height="15.0" fill="rgb(231,52,39)" rx="2" ry="2" />
<text  x="897.25" y="271.5" >&lt;bu..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (35,814 us., 1.91%)</title><rect x="849.0" y="133" width="22.6" height="15.0" fill="rgb(225,29,41)" rx="2" ry="2" />
<text  x="851.97" y="143.5" >t..</text>
</g>
<g >
<title>torch_int/nn/opt.py(72):_forward (272,729 us., 14.58%)</title><rect x="1017.6" y="261" width="172.0" height="15.0" fill="rgb(251,228,3)" rx="2" ry="2" />
<text  x="1020.60" y="271.5" >torch_int/nn/opt.py(72..</text>
</g>
<g >
<title>nn.Module:_W8A8BFP32OFP32Linear (71,791 us., 3.84%)</title><rect x="849.0" y="213" width="45.2" height="15.0" fill="rgb(206,29,36)" rx="2" ry="2" />
<text  x="851.97" y="223.5" >nn.M..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (206 us., 0.01%)</title><rect x="744.3" y="165" width="0.1" height="15.0" fill="rgb(213,114,15)" rx="2" ry="2" />
<text  x="747.28" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_LayerNorm (1,099 us., 0.06%)</title><rect x="745.1" y="213" width="0.7" height="15.0" fill="rgb(227,128,5)" rx="2" ry="2" />
<text  x="748.10" y="223.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(213):_forward (272,729 us., 14.58%)</title><rect x="1017.6" y="213" width="172.0" height="15.0" fill="rgb(240,49,1)" rx="2" ry="2" />
<text  x="1020.60" y="223.5" >torch_int/nn/opt.py(21..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (144,342 us., 7.72%)</title><rect x="242.8" y="181" width="91.0" height="15.0" fill="rgb(246,90,54)" rx="2" ry="2" />
<text  x="245.76" y="191.5" >transforme..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,099 us., 0.06%)</title><rect x="745.1" y="165" width="0.7" height="15.0" fill="rgb(225,208,45)" rx="2" ry="2" />
<text  x="748.10" y="175.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (63,648 us., 3.40%)</title><rect x="894.2" y="165" width="40.2" height="15.0" fill="rgb(226,97,1)" rx="2" ry="2" />
<text  x="897.25" y="175.5" >tor..</text>
</g>
<g >
<title>torch_int/nn/opt.py(213):_forward (114,445 us., 6.12%)</title><rect x="170.6" y="213" width="72.2" height="15.0" fill="rgb(227,61,47)" rx="2" ry="2" />
<text  x="173.57" y="223.5" >torch_in..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (1,099 us., 0.06%)</title><rect x="745.1" y="181" width="0.7" height="15.0" fill="rgb(229,23,41)" rx="2" ry="2" />
<text  x="748.10" y="191.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(325):__prepare_decoder_attention_mask (724 us., 0.04%)</title><rect x="333.8" y="245" width="0.5" height="15.0" fill="rgb(236,85,50)" rx="2" ry="2" />
<text  x="336.81" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_LayerNormQ (114,445 us., 6.12%)</title><rect x="170.6" y="229" width="72.2" height="15.0" fill="rgb(236,161,6)" rx="2" ry="2" />
<text  x="173.57" y="239.5" >nn.Modul..</text>
</g>
<g >
<title>torch_int/nn/opt.py(72):_forward (35,977 us., 1.92%)</title><rect x="871.6" y="197" width="22.6" height="15.0" fill="rgb(241,203,54)" rx="2" ry="2" />
<text  x="874.56" y="207.5" >t..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (63,648 us., 3.40%)</title><rect x="894.2" y="149" width="40.2" height="15.0" fill="rgb(217,153,1)" rx="2" ry="2" />
<text  x="897.25" y="159.5" >nn...</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (74,815 us., 4.00%)</title><rect x="801.8" y="181" width="47.2" height="15.0" fill="rgb(246,24,21)" rx="2" ry="2" />
<text  x="804.78" y="191.5" >torc..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (272,729 us., 14.58%)</title><rect x="1017.6" y="149" width="172.0" height="15.0" fill="rgb(211,66,17)" rx="2" ry="2" />
<text  x="1020.60" y="159.5" >transformers/models/op..</text>
</g>
<g >
<title>torch_int/nn/opt.py(72):_forward (562,053 us., 30.04%)</title><rect x="389.8" y="245" width="354.5" height="15.0" fill="rgb(244,182,13)" rx="2" ry="2" />
<text  x="392.76" y="255.5" >torch_int/nn/opt.py(72):_forward</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (35,977 us., 1.92%)</title><rect x="871.6" y="133" width="22.6" height="15.0" fill="rgb(213,67,35)" rx="2" ry="2" />
<text  x="874.56" y="143.5" >n..</text>
</g>
<g >
<title>torch_int/nn/opt.py(72):_forward (87,979 us., 4.70%)</title><rect x="334.3" y="229" width="55.5" height="15.0" fill="rgb(247,62,50)" rx="2" ry="2" />
<text  x="337.26" y="239.5" >torch..</text>
</g>
<g >
<title>torch_int/nn/opt.py(213):_forward (35,814 us., 1.91%)</title><rect x="849.0" y="197" width="22.6" height="15.0" fill="rgb(228,194,34)" rx="2" ry="2" />
<text  x="851.97" y="207.5" >t..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (804 us., 0.04%)</title><rect x="1017.1" y="245" width="0.5" height="15.0" fill="rgb(234,110,8)" rx="2" ry="2" />
<text  x="1020.09" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (1,099 us., 0.06%)</title><rect x="745.1" y="149" width="0.7" height="15.0" fill="rgb(233,165,30)" rx="2" ry="2" />
<text  x="748.10" y="159.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (114,445 us., 6.12%)</title><rect x="170.6" y="101" width="72.2" height="15.0" fill="rgb(246,17,42)" rx="2" ry="2" />
<text  x="173.57" y="111.5" >torch/au..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (200 us., 0.01%)</title><rect x="1016.7" y="229" width="0.1" height="15.0" fill="rgb(215,22,17)" rx="2" ry="2" />
<text  x="1019.71" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (206 us., 0.01%)</title><rect x="744.3" y="197" width="0.1" height="15.0" fill="rgb(223,149,25)" rx="2" ry="2" />
<text  x="747.28" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (562,053 us., 30.04%)</title><rect x="389.8" y="181" width="354.5" height="15.0" fill="rgb(236,164,12)" rx="2" ry="2" />
<text  x="392.76" y="191.5" >nn.Module:_Int8OPTDecoderLayer</text>
</g>
<g >
<title>torch/nn/modules/linear.py(113):_forward (117,595 us., 6.29%)</title><rect x="10.0" y="245" width="74.2" height="15.0" fill="rgb(216,228,13)" rx="2" ry="2" />
<text  x="13.00" y="255.5" >torch/nn..</text>
</g>
<g >
<title>torch_int/nn/opt.py(72):_forward (133,561 us., 7.14%)</title><rect x="86.3" y="229" width="84.3" height="15.0" fill="rgb(243,128,13)" rx="2" ry="2" />
<text  x="89.33" y="239.5" >torch_int..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (144,342 us., 7.72%)</title><rect x="242.8" y="165" width="91.0" height="15.0" fill="rgb(208,18,3)" rx="2" ry="2" />
<text  x="245.76" y="175.5" >nn.Module:..</text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (272,729 us., 14.58%)</title><rect x="1017.6" y="229" width="172.0" height="15.0" fill="rgb(239,168,0)" rx="2" ry="2" />
<text  x="1020.60" y="239.5" >nn.Module:_Int8OPTAtte..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (114,445 us., 6.12%)</title><rect x="170.6" y="149" width="72.2" height="15.0" fill="rgb(223,144,40)" rx="2" ry="2" />
<text  x="173.57" y="159.5" >transfor..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (35,977 us., 1.92%)</title><rect x="871.6" y="101" width="22.6" height="15.0" fill="rgb(210,136,31)" rx="2" ry="2" />
<text  x="874.56" y="111.5" >n..</text>
</g>
<g >
<title>&lt;built-in_method_linear_a8_w8_bfp32_ofp32_of_PyCapsule_object_at_0x7f7cfb38e7b0&gt; (71,791 us., 3.84%)</title><rect x="849.0" y="261" width="45.2" height="15.0" fill="rgb(221,13,32)" rx="2" ry="2" />
<text  x="851.97" y="271.5" >&lt;bui..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (1,607 us., 0.09%)</title><rect x="84.4" y="181" width="1.0" height="15.0" fill="rgb(249,182,20)" rx="2" ry="2" />
<text  x="87.37" y="191.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (272,729 us., 14.58%)</title><rect x="1017.6" y="101" width="172.0" height="15.0" fill="rgb(208,102,3)" rx="2" ry="2" />
<text  x="1020.60" y="111.5" >torch/autograd/grad_mo..</text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (133,561 us., 7.14%)</title><rect x="86.3" y="197" width="84.3" height="15.0" fill="rgb(244,51,13)" rx="2" ry="2" />
<text  x="89.33" y="207.5" >nn.Module..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (804 us., 0.04%)</title><rect x="1017.1" y="197" width="0.5" height="15.0" fill="rgb(251,111,18)" rx="2" ry="2" />
<text  x="1020.09" y="207.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (87,979 us., 4.70%)</title><rect x="334.3" y="85" width="55.5" height="15.0" fill="rgb(245,101,30)" rx="2" ry="2" />
<text  x="337.26" y="95.5" >profi..</text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (562,053 us., 30.04%)</title><rect x="389.8" y="213" width="354.5" height="15.0" fill="rgb(218,94,0)" rx="2" ry="2" />
<text  x="392.76" y="223.5" >nn.Module:_Int8OPTAttention</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (133,561 us., 7.14%)</title><rect x="86.3" y="117" width="84.3" height="15.0" fill="rgb(242,40,23)" rx="2" ry="2" />
<text  x="89.33" y="127.5" >transform..</text>
</g>
</g>
</svg>
