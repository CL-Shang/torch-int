<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="326" onload="init(evt)" viewBox="0 0 1200 326" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="326.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >CUDA Time</text>
<text id="details" x="10.00" y="309" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="309" > </text>
<g id="frames">
<g >
<title>all (5,608,346 us., 100%)</title><rect x="10.0" y="277" width="1180.0" height="15.0" fill="rgb(229,85,33)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (498,918 us., 8.90%)</title><rect x="868.6" y="213" width="105.0" height="15.0" fill="rgb(237,119,46)" rx="2" ry="2" />
<text  x="871.59" y="223.5" >nn.Module:_I..</text>
</g>
<g >
<title>torch_int/nn/linear.py(90):_forward (116,509 us., 2.08%)</title><rect x="844.1" y="245" width="24.5" height="15.0" fill="rgb(230,153,28)" rx="2" ry="2" />
<text  x="847.08" y="255.5" >t..</text>
</g>
<g >
<title>nn.Module:_LayerNormQ (126,447 us., 2.25%)</title><rect x="765.2" y="213" width="26.6" height="15.0" fill="rgb(232,40,35)" rx="2" ry="2" />
<text  x="768.18" y="223.5" >n..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (503,629 us., 8.98%)</title><rect x="54.5" y="165" width="105.9" height="15.0" fill="rgb(246,201,52)" rx="2" ry="2" />
<text  x="57.46" y="175.5" >nn.Module:_I..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (116,743 us., 2.08%)</title><rect x="791.8" y="53" width="24.5" height="15.0" fill="rgb(221,59,8)" rx="2" ry="2" />
<text  x="794.78" y="63.5" >p..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (2,887 us., 0.05%)</title><rect x="53.3" y="165" width="0.6" height="15.0" fill="rgb(205,38,26)" rx="2" ry="2" />
<text  x="56.27" y="175.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (65,777 us., 1.17%)</title><rect x="816.3" y="165" width="13.9" height="15.0" fill="rgb(209,21,9)" rx="2" ry="2" />
<text  x="819.35" y="175.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (503,629 us., 8.98%)</title><rect x="54.5" y="69" width="105.9" height="15.0" fill="rgb(242,192,8)" rx="2" ry="2" />
<text  x="57.46" y="79.5" >torch/autogr..</text>
</g>
<g >
<title>torch_int/nn/opt.py(72):_forward (498,918 us., 8.90%)</title><rect x="868.6" y="245" width="105.0" height="15.0" fill="rgb(242,36,49)" rx="2" ry="2" />
<text  x="871.59" y="255.5" >torch_int/nn..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (2,461 us., 0.04%)</title><rect x="973.7" y="213" width="0.5" height="15.0" fill="rgb(248,60,26)" rx="2" ry="2" />
<text  x="976.71" y="223.5" ></text>
</g>
<g >
<title>torch_int/nn/linear.py(40):_forward (116,743 us., 2.08%)</title><rect x="791.8" y="245" width="24.5" height="15.0" fill="rgb(235,211,43)" rx="2" ry="2" />
<text  x="794.78" y="255.5" >t..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (146,714 us., 2.62%)</title><rect x="319.1" y="117" width="30.9" height="15.0" fill="rgb(251,177,26)" rx="2" ry="2" />
<text  x="322.14" y="127.5" >tr..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (66,042 us., 1.18%)</title><rect x="830.2" y="69" width="13.9" height="15.0" fill="rgb(230,162,49)" rx="2" ry="2" />
<text  x="833.19" y="79.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (126,447 us., 2.25%)</title><rect x="765.2" y="117" width="26.6" height="15.0" fill="rgb(228,112,49)" rx="2" ry="2" />
<text  x="768.18" y="127.5" >n..</text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (66,042 us., 1.18%)</title><rect x="830.2" y="117" width="13.9" height="15.0" fill="rgb(215,53,54)" rx="2" ry="2" />
<text  x="833.19" y="127.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (131,819 us., 2.35%)</title><rect x="816.3" y="229" width="27.8" height="15.0" fill="rgb(215,1,35)" rx="2" ry="2" />
<text  x="819.35" y="239.5" >t..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (2,461 us., 0.04%)</title><rect x="973.7" y="229" width="0.5" height="15.0" fill="rgb(213,98,53)" rx="2" ry="2" />
<text  x="976.71" y="239.5" ></text>
</g>
<g >
<title>torch_int/nn/fused.py(13):_forward (376,427 us., 6.71%)</title><rect x="160.4" y="245" width="79.2" height="15.0" fill="rgb(231,154,20)" rx="2" ry="2" />
<text  x="163.43" y="255.5" >torch_int..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,253 us., 0.02%)</title><rect x="764.6" y="181" width="0.2" height="15.0" fill="rgb(211,140,51)" rx="2" ry="2" />
<text  x="767.58" y="191.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (116,509 us., 2.08%)</title><rect x="844.1" y="85" width="24.5" height="15.0" fill="rgb(206,13,27)" rx="2" ry="2" />
<text  x="847.08" y="95.5" >t..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (2,096 us., 0.04%)</title><rect x="318.7" y="213" width="0.4" height="15.0" fill="rgb(218,104,36)" rx="2" ry="2" />
<text  x="321.70" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (376,427 us., 6.71%)</title><rect x="160.4" y="165" width="79.2" height="15.0" fill="rgb(249,224,35)" rx="2" ry="2" />
<text  x="163.43" y="175.5" >nn.Module..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (116,743 us., 2.08%)</title><rect x="791.8" y="85" width="24.5" height="15.0" fill="rgb(243,66,44)" rx="2" ry="2" />
<text  x="794.78" y="95.5" >t..</text>
</g>
<g >
<title>nn.Module:_Embedding (2,887 us., 0.05%)</title><rect x="53.3" y="213" width="0.6" height="15.0" fill="rgb(206,82,53)" rx="2" ry="2" />
<text  x="56.27" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (375,834 us., 6.70%)</title><rect x="239.6" y="165" width="79.1" height="15.0" fill="rgb(223,204,25)" rx="2" ry="2" />
<text  x="242.63" y="175.5" >nn.Module..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (2,461 us., 0.04%)</title><rect x="973.7" y="245" width="0.5" height="15.0" fill="rgb(254,228,41)" rx="2" ry="2" />
<text  x="976.71" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (503,629 us., 8.98%)</title><rect x="54.5" y="133" width="105.9" height="15.0" fill="rgb(220,160,49)" rx="2" ry="2" />
<text  x="57.46" y="143.5" >nn.Module:_I..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (1,253 us., 0.02%)</title><rect x="764.6" y="197" width="0.2" height="15.0" fill="rgb(238,145,4)" rx="2" ry="2" />
<text  x="767.58" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (498,918 us., 8.90%)</title><rect x="868.6" y="181" width="105.0" height="15.0" fill="rgb(232,190,13)" rx="2" ry="2" />
<text  x="871.59" y="191.5" >nn.Module:_I..</text>
</g>
<g >
<title>&lt;built-in_function_linear&gt; (205,365 us., 3.66%)</title><rect x="10.0" y="261" width="43.2" height="15.0" fill="rgb(211,148,2)" rx="2" ry="2" />
<text  x="13.00" y="271.5" >&lt;bui..</text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (1,970,082 us., 35.13%)</title><rect x="350.0" y="165" width="414.5" height="15.0" fill="rgb(222,74,42)" rx="2" ry="2" />
<text  x="353.01" y="175.5" >torch_int/nn/opt.py(346):_forward</text>
</g>
<g >
<title>torch_int/nn/opt.py(213):_forward (376,427 us., 6.71%)</title><rect x="160.4" y="213" width="79.2" height="15.0" fill="rgb(222,138,25)" rx="2" ry="2" />
<text  x="163.43" y="223.5" >torch_int..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,024,946 us., 18.28%)</title><rect x="974.2" y="117" width="215.7" height="15.0" fill="rgb(238,159,11)" rx="2" ry="2" />
<text  x="977.22" y="127.5" >profiling/utils.py(18):_prof..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (65,777 us., 1.17%)</title><rect x="816.3" y="117" width="13.9" height="15.0" fill="rgb(239,77,39)" rx="2" ry="2" />
<text  x="819.35" y="127.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (1,253 us., 0.02%)</title><rect x="764.6" y="165" width="0.2" height="15.0" fill="rgb(251,135,18)" rx="2" ry="2" />
<text  x="767.58" y="175.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (66,042 us., 1.18%)</title><rect x="830.2" y="53" width="13.9" height="15.0" fill="rgb(205,86,32)" rx="2" ry="2" />
<text  x="833.19" y="63.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (2,096 us., 0.04%)</title><rect x="318.7" y="229" width="0.4" height="15.0" fill="rgb(216,197,7)" rx="2" ry="2" />
<text  x="321.70" y="239.5" ></text>
</g>
<g >
<title>torch/nn/functional.py(1804):_softmax (503,629 us., 8.98%)</title><rect x="54.5" y="245" width="105.9" height="15.0" fill="rgb(214,212,54)" rx="2" ry="2" />
<text  x="57.46" y="255.5" >torch/nn/fun..</text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (498,918 us., 8.90%)</title><rect x="868.6" y="165" width="105.0" height="15.0" fill="rgb(205,128,31)" rx="2" ry="2" />
<text  x="871.59" y="175.5" >torch_int/nn..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (116,509 us., 2.08%)</title><rect x="844.1" y="149" width="24.5" height="15.0" fill="rgb(249,198,15)" rx="2" ry="2" />
<text  x="847.08" y="159.5" >n..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (376,427 us., 6.71%)</title><rect x="160.4" y="101" width="79.2" height="15.0" fill="rgb(248,127,20)" rx="2" ry="2" />
<text  x="163.43" y="111.5" >torch/aut..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (503,629 us., 8.98%)</title><rect x="54.5" y="117" width="105.9" height="15.0" fill="rgb(220,32,28)" rx="2" ry="2" />
<text  x="57.46" y="127.5" >transformers..</text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (503,629 us., 8.98%)</title><rect x="54.5" y="197" width="105.9" height="15.0" fill="rgb(238,183,16)" rx="2" ry="2" />
<text  x="57.46" y="207.5" >nn.Module:_I..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (2,887 us., 0.05%)</title><rect x="53.3" y="149" width="0.6" height="15.0" fill="rgb(207,67,0)" rx="2" ry="2" />
<text  x="56.27" y="159.5" ></text>
</g>
<g >
<title>torch/nn/functional.py(2488):_layer_norm (128,029 us., 2.28%)</title><rect x="764.8" y="245" width="27.0" height="15.0" fill="rgb(231,67,25)" rx="2" ry="2" />
<text  x="767.85" y="255.5" >t..</text>
</g>
<g >
<title>nn.Module:_LayerNormQ (376,427 us., 6.71%)</title><rect x="160.4" y="229" width="79.2" height="15.0" fill="rgb(224,14,17)" rx="2" ry="2" />
<text  x="163.43" y="239.5" >nn.Module..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (2,887 us., 0.05%)</title><rect x="53.3" y="181" width="0.6" height="15.0" fill="rgb(217,46,6)" rx="2" ry="2" />
<text  x="56.27" y="191.5" ></text>
</g>
<g >
<title>torch_int/nn/linear.py(225):_forward (131,819 us., 2.35%)</title><rect x="816.3" y="245" width="27.8" height="15.0" fill="rgb(249,58,13)" rx="2" ry="2" />
<text  x="819.35" y="255.5" >t..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (1,970,082 us., 35.13%)</title><rect x="350.0" y="181" width="414.5" height="15.0" fill="rgb(231,7,10)" rx="2" ry="2" />
<text  x="353.01" y="191.5" >nn.Module:_Int8OPTDecoderLayer</text>
</g>
<g >
<title>torch_int/nn/opt.py(72):_forward (1,970,082 us., 35.13%)</title><rect x="350.0" y="245" width="414.5" height="15.0" fill="rgb(227,22,27)" rx="2" ry="2" />
<text  x="353.01" y="255.5" >torch_int/nn/opt.py(72):_forward</text>
</g>
<g >
<title>nn.Module:_W8A8B8O8Linear (116,743 us., 2.08%)</title><rect x="791.8" y="213" width="24.5" height="15.0" fill="rgb(247,199,48)" rx="2" ry="2" />
<text  x="794.78" y="223.5" >n..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (146,714 us., 2.62%)</title><rect x="319.1" y="213" width="30.9" height="15.0" fill="rgb(214,155,49)" rx="2" ry="2" />
<text  x="322.14" y="223.5" >to..</text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (2,764 us., 0.05%)</title><rect x="53.9" y="181" width="0.6" height="15.0" fill="rgb(209,218,2)" rx="2" ry="2" />
<text  x="56.88" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (65,777 us., 1.17%)</title><rect x="816.3" y="181" width="13.9" height="15.0" fill="rgb(231,205,17)" rx="2" ry="2" />
<text  x="819.35" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (598 us., 0.01%)</title><rect x="1189.9" y="245" width="0.1" height="15.0" fill="rgb(238,195,24)" rx="2" ry="2" />
<text  x="1192.87" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Linear (205,365 us., 3.66%)</title><rect x="10.0" y="229" width="43.2" height="15.0" fill="rgb(240,133,21)" rx="2" ry="2" />
<text  x="13.00" y="239.5" >nn.M..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (1,024,946 us., 18.28%)</title><rect x="974.2" y="165" width="215.7" height="15.0" fill="rgb(230,174,13)" rx="2" ry="2" />
<text  x="977.22" y="175.5" >nn.Module:_Int8OPTDecoder</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (503,629 us., 8.98%)</title><rect x="54.5" y="213" width="105.9" height="15.0" fill="rgb(226,161,50)" rx="2" ry="2" />
<text  x="57.46" y="223.5" >torch/autogr..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (205,365 us., 3.66%)</title><rect x="10.0" y="213" width="43.2" height="15.0" fill="rgb(221,142,53)" rx="2" ry="2" />
<text  x="13.00" y="223.5" >tran..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (375,834 us., 6.70%)</title><rect x="239.6" y="181" width="79.1" height="15.0" fill="rgb(245,205,14)" rx="2" ry="2" />
<text  x="242.63" y="191.5" >transform..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (1,970,082 us., 35.13%)</title><rect x="350.0" y="229" width="414.5" height="15.0" fill="rgb(212,225,7)" rx="2" ry="2" />
<text  x="353.01" y="239.5" >torch/autograd/grad_mode.py(24):_decorate_context</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (66,042 us., 1.18%)</title><rect x="830.2" y="133" width="13.9" height="15.0" fill="rgb(216,156,45)" rx="2" ry="2" />
<text  x="833.19" y="143.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (116,509 us., 2.08%)</title><rect x="844.1" y="229" width="24.5" height="15.0" fill="rgb(216,122,6)" rx="2" ry="2" />
<text  x="847.08" y="239.5" >t..</text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (503,629 us., 8.98%)</title><rect x="54.5" y="149" width="105.9" height="15.0" fill="rgb(217,113,45)" rx="2" ry="2" />
<text  x="57.46" y="159.5" >torch_int/nn..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (1,024,946 us., 18.28%)</title><rect x="974.2" y="197" width="215.7" height="15.0" fill="rgb(211,129,11)" rx="2" ry="2" />
<text  x="977.22" y="207.5" >nn.Module:_Int8OPTDecoderLayer</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (375,834 us., 6.70%)</title><rect x="239.6" y="197" width="79.1" height="15.0" fill="rgb(214,54,6)" rx="2" ry="2" />
<text  x="242.63" y="207.5" >nn.Module..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (65,777 us., 1.17%)</title><rect x="816.3" y="149" width="13.9" height="15.0" fill="rgb(224,73,18)" rx="2" ry="2" />
<text  x="819.35" y="159.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,253 us., 0.02%)</title><rect x="764.6" y="133" width="0.2" height="15.0" fill="rgb(218,140,41)" rx="2" ry="2" />
<text  x="767.58" y="143.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (146,714 us., 2.62%)</title><rect x="319.1" y="133" width="30.9" height="15.0" fill="rgb(238,117,31)" rx="2" ry="2" />
<text  x="322.14" y="143.5" >nn..</text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (116,743 us., 2.08%)</title><rect x="791.8" y="117" width="24.5" height="15.0" fill="rgb(247,163,10)" rx="2" ry="2" />
<text  x="794.78" y="127.5" >t..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (2,461 us., 0.04%)</title><rect x="973.7" y="181" width="0.5" height="15.0" fill="rgb(232,200,30)" rx="2" ry="2" />
<text  x="976.71" y="191.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(72):_forward (146,714 us., 2.62%)</title><rect x="319.1" y="229" width="30.9" height="15.0" fill="rgb(235,143,11)" rx="2" ry="2" />
<text  x="322.14" y="239.5" >to..</text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (66,042 us., 1.18%)</title><rect x="830.2" y="165" width="13.9" height="15.0" fill="rgb(206,206,22)" rx="2" ry="2" />
<text  x="833.19" y="175.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (375,834 us., 6.70%)</title><rect x="239.6" y="213" width="79.1" height="15.0" fill="rgb(238,113,28)" rx="2" ry="2" />
<text  x="242.63" y="223.5" >torch_int..</text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (1,582 us., 0.03%)</title><rect x="764.8" y="197" width="0.4" height="15.0" fill="rgb(230,99,9)" rx="2" ry="2" />
<text  x="767.85" y="207.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,024,946 us., 18.28%)</title><rect x="974.2" y="149" width="215.7" height="15.0" fill="rgb(230,80,50)" rx="2" ry="2" />
<text  x="977.22" y="159.5" >transformers/models/opt/mode..</text>
</g>
<g >
<title>torch_int/nn/opt.py(325):__prepare_decoder_attention_mask (1,253 us., 0.02%)</title><rect x="764.6" y="229" width="0.2" height="15.0" fill="rgb(244,1,22)" rx="2" ry="2" />
<text  x="767.58" y="239.5" ></text>
</g>
<g >
<title>torch/nn/modules/sparse.py(157):_forward (5,651 us., 0.10%)</title><rect x="53.3" y="229" width="1.2" height="15.0" fill="rgb(248,65,31)" rx="2" ry="2" />
<text  x="56.27" y="239.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (66,042 us., 1.18%)</title><rect x="830.2" y="85" width="13.9" height="15.0" fill="rgb(216,140,43)" rx="2" ry="2" />
<text  x="833.19" y="95.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (503,629 us., 8.98%)</title><rect x="54.5" y="85" width="105.9" height="15.0" fill="rgb(213,89,26)" rx="2" ry="2" />
<text  x="57.46" y="95.5" >profiling/ut..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (598 us., 0.01%)</title><rect x="1189.9" y="181" width="0.1" height="15.0" fill="rgb(222,121,28)" rx="2" ry="2" />
<text  x="1192.87" y="191.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,970,082 us., 35.13%)</title><rect x="350.0" y="101" width="414.5" height="15.0" fill="rgb(252,36,27)" rx="2" ry="2" />
<text  x="353.01" y="111.5" >profiling/utils.py(18):_profile_model</text>
</g>
<g >
<title>torch_int/nn/opt.py(213):_forward (146,714 us., 2.62%)</title><rect x="319.1" y="181" width="30.9" height="15.0" fill="rgb(206,114,46)" rx="2" ry="2" />
<text  x="322.14" y="191.5" >to..</text>
</g>
<g >
<title>torch_int/nn/opt.py(72):_forward (1,024,946 us., 18.28%)</title><rect x="974.2" y="261" width="215.7" height="15.0" fill="rgb(233,219,12)" rx="2" ry="2" />
<text  x="977.22" y="271.5" >torch_int/nn/opt.py(72):_for..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (375,834 us., 6.70%)</title><rect x="239.6" y="149" width="79.1" height="15.0" fill="rgb(239,115,38)" rx="2" ry="2" />
<text  x="242.63" y="159.5" >profiling..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (498,918 us., 8.90%)</title><rect x="868.6" y="133" width="105.0" height="15.0" fill="rgb(231,155,50)" rx="2" ry="2" />
<text  x="871.59" y="143.5" >transformers..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (116,743 us., 2.08%)</title><rect x="791.8" y="181" width="24.5" height="15.0" fill="rgb(231,14,39)" rx="2" ry="2" />
<text  x="794.78" y="191.5" >t..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (2,764 us., 0.05%)</title><rect x="53.9" y="117" width="0.6" height="15.0" fill="rgb(212,142,15)" rx="2" ry="2" />
<text  x="56.88" y="127.5" ></text>
</g>
<g >
<title>torch/nn/modules/linear.py(113):_forward (205,365 us., 3.66%)</title><rect x="10.0" y="245" width="43.2" height="15.0" fill="rgb(244,36,22)" rx="2" ry="2" />
<text  x="13.00" y="255.5" >torc..</text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (116,509 us., 2.08%)</title><rect x="844.1" y="165" width="24.5" height="15.0" fill="rgb(232,94,36)" rx="2" ry="2" />
<text  x="847.08" y="175.5" >t..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (146,714 us., 2.62%)</title><rect x="319.1" y="101" width="30.9" height="15.0" fill="rgb(232,81,18)" rx="2" ry="2" />
<text  x="322.14" y="111.5" >nn..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (376,427 us., 6.71%)</title><rect x="160.4" y="149" width="79.2" height="15.0" fill="rgb(209,0,51)" rx="2" ry="2" />
<text  x="163.43" y="159.5" >transform..</text>
</g>
<g >
<title>torch_int/nn/opt.py(213):_forward (66,042 us., 1.18%)</title><rect x="830.2" y="149" width="13.9" height="15.0" fill="rgb(217,58,40)" rx="2" ry="2" />
<text  x="833.19" y="159.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (116,743 us., 2.08%)</title><rect x="791.8" y="229" width="24.5" height="15.0" fill="rgb(211,115,24)" rx="2" ry="2" />
<text  x="794.78" y="239.5" >t..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (376,427 us., 6.71%)</title><rect x="160.4" y="197" width="79.2" height="15.0" fill="rgb(218,70,52)" rx="2" ry="2" />
<text  x="163.43" y="207.5" >nn.Module..</text>
</g>
<g >
<title>torch_int/nn/opt.py(213):_forward (65,777 us., 1.17%)</title><rect x="816.3" y="197" width="13.9" height="15.0" fill="rgb(243,185,18)" rx="2" ry="2" />
<text  x="819.35" y="207.5" ></text>
</g>
<g >
<title>&lt;built-in_method_layer_norm_of_type_object_at_0x7f73104549c0&gt; (128,029 us., 2.28%)</title><rect x="764.8" y="261" width="27.0" height="15.0" fill="rgb(216,56,18)" rx="2" ry="2" />
<text  x="767.85" y="271.5" >&lt;..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (65,777 us., 1.17%)</title><rect x="816.3" y="85" width="13.9" height="15.0" fill="rgb(230,129,52)" rx="2" ry="2" />
<text  x="819.35" y="95.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (2,887 us., 0.05%)</title><rect x="53.3" y="117" width="0.6" height="15.0" fill="rgb(242,108,45)" rx="2" ry="2" />
<text  x="56.27" y="127.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (1,582 us., 0.03%)</title><rect x="764.8" y="149" width="0.4" height="15.0" fill="rgb(248,81,12)" rx="2" ry="2" />
<text  x="767.85" y="159.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(325):__prepare_decoder_attention_mask (2,096 us., 0.04%)</title><rect x="318.7" y="245" width="0.4" height="15.0" fill="rgb(243,27,9)" rx="2" ry="2" />
<text  x="321.70" y="255.5" ></text>
</g>
<g >
<title>&lt;built-in_method_linear_relu_a8_w8_b8_o8_of_PyCapsule_object_at_0x7f721b8ee750&gt; (116,509 us., 2.08%)</title><rect x="844.1" y="261" width="24.5" height="15.0" fill="rgb(243,220,27)" rx="2" ry="2" />
<text  x="847.08" y="271.5" >&lt;..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (2,764 us., 0.05%)</title><rect x="53.9" y="165" width="0.6" height="15.0" fill="rgb(251,19,24)" rx="2" ry="2" />
<text  x="56.88" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (1,024,946 us., 18.28%)</title><rect x="974.2" y="229" width="215.7" height="15.0" fill="rgb(215,175,32)" rx="2" ry="2" />
<text  x="977.22" y="239.5" >nn.Module:_Int8OPTAttention</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (1,024,946 us., 18.28%)</title><rect x="974.2" y="133" width="215.7" height="15.0" fill="rgb(231,77,22)" rx="2" ry="2" />
<text  x="977.22" y="143.5" >nn.Module:_Int8OPTForCausalLM</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,253 us., 0.02%)</title><rect x="764.6" y="149" width="0.2" height="15.0" fill="rgb(208,87,9)" rx="2" ry="2" />
<text  x="767.58" y="159.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(213):_forward (503,629 us., 8.98%)</title><rect x="54.5" y="181" width="105.9" height="15.0" fill="rgb(215,134,54)" rx="2" ry="2" />
<text  x="57.46" y="191.5" >torch_int/nn..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (503,629 us., 8.98%)</title><rect x="54.5" y="101" width="105.9" height="15.0" fill="rgb(240,201,0)" rx="2" ry="2" />
<text  x="57.46" y="111.5" >nn.Module:_I..</text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (1,970,082 us., 35.13%)</title><rect x="350.0" y="213" width="414.5" height="15.0" fill="rgb(228,145,31)" rx="2" ry="2" />
<text  x="353.01" y="223.5" >nn.Module:_Int8OPTAttention</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (116,743 us., 2.08%)</title><rect x="791.8" y="69" width="24.5" height="15.0" fill="rgb(240,221,11)" rx="2" ry="2" />
<text  x="794.78" y="79.5" >n..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (1,970,082 us., 35.13%)</title><rect x="350.0" y="117" width="414.5" height="15.0" fill="rgb(253,56,6)" rx="2" ry="2" />
<text  x="353.01" y="127.5" >nn.Module:_Int8OPTForCausalLM</text>
</g>
<g >
<title>torch/nn/functional.py(2099):_embedding (5,651 us., 0.10%)</title><rect x="53.3" y="245" width="1.2" height="15.0" fill="rgb(227,112,33)" rx="2" ry="2" />
<text  x="56.27" y="255.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,970,082 us., 35.13%)</title><rect x="350.0" y="133" width="414.5" height="15.0" fill="rgb(238,216,34)" rx="2" ry="2" />
<text  x="353.01" y="143.5" >transformers/models/opt/modeling_opt.py(840):_forward</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (598 us., 0.01%)</title><rect x="1189.9" y="213" width="0.1" height="15.0" fill="rgb(253,191,49)" rx="2" ry="2" />
<text  x="1192.87" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (376,427 us., 6.71%)</title><rect x="160.4" y="133" width="79.2" height="15.0" fill="rgb(229,222,1)" rx="2" ry="2" />
<text  x="163.43" y="143.5" >nn.Module..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (116,743 us., 2.08%)</title><rect x="791.8" y="101" width="24.5" height="15.0" fill="rgb(248,16,3)" rx="2" ry="2" />
<text  x="794.78" y="111.5" >n..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (65,777 us., 1.17%)</title><rect x="816.3" y="101" width="13.9" height="15.0" fill="rgb(209,177,29)" rx="2" ry="2" />
<text  x="819.35" y="111.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (66,042 us., 1.18%)</title><rect x="830.2" y="101" width="13.9" height="15.0" fill="rgb(250,79,51)" rx="2" ry="2" />
<text  x="833.19" y="111.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,582 us., 0.03%)</title><rect x="764.8" y="133" width="0.4" height="15.0" fill="rgb(219,80,24)" rx="2" ry="2" />
<text  x="767.85" y="143.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (66,042 us., 1.18%)</title><rect x="830.2" y="37" width="13.9" height="15.0" fill="rgb(216,105,30)" rx="2" ry="2" />
<text  x="833.19" y="47.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (1,024,946 us., 18.28%)</title><rect x="974.2" y="245" width="215.7" height="15.0" fill="rgb(223,46,0)" rx="2" ry="2" />
<text  x="977.22" y="255.5" >torch/autograd/grad_mode.py(..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (126,447 us., 2.25%)</title><rect x="765.2" y="85" width="26.6" height="15.0" fill="rgb(252,174,21)" rx="2" ry="2" />
<text  x="768.18" y="95.5" >t..</text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (126,447 us., 2.25%)</title><rect x="765.2" y="165" width="26.6" height="15.0" fill="rgb(208,214,22)" rx="2" ry="2" />
<text  x="768.18" y="175.5" >t..</text>
</g>
<g >
<title>torch_int/nn/opt.py(72):_forward (503,629 us., 8.98%)</title><rect x="54.5" y="229" width="105.9" height="15.0" fill="rgb(230,130,47)" rx="2" ry="2" />
<text  x="57.46" y="239.5" >torch_int/nn..</text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (146,714 us., 2.62%)</title><rect x="319.1" y="197" width="30.9" height="15.0" fill="rgb(221,12,46)" rx="2" ry="2" />
<text  x="322.14" y="207.5" >nn..</text>
</g>
<g >
<title>torch_int/nn/opt.py(213):_forward (1,970,082 us., 35.13%)</title><rect x="350.0" y="197" width="414.5" height="15.0" fill="rgb(215,182,43)" rx="2" ry="2" />
<text  x="353.01" y="207.5" >torch_int/nn/opt.py(213):_forward</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (2,764 us., 0.05%)</title><rect x="53.9" y="213" width="0.6" height="15.0" fill="rgb(231,186,52)" rx="2" ry="2" />
<text  x="56.88" y="223.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (205,365 us., 3.66%)</title><rect x="10.0" y="181" width="43.2" height="15.0" fill="rgb(253,225,42)" rx="2" ry="2" />
<text  x="13.00" y="191.5" >prof..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,024,946 us., 18.28%)</title><rect x="974.2" y="101" width="215.7" height="15.0" fill="rgb(252,115,54)" rx="2" ry="2" />
<text  x="977.22" y="111.5" >torch/autograd/grad_mode.py(..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (2,887 us., 0.05%)</title><rect x="53.3" y="133" width="0.6" height="15.0" fill="rgb(246,4,16)" rx="2" ry="2" />
<text  x="56.27" y="143.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (2,764 us., 0.05%)</title><rect x="53.9" y="133" width="0.6" height="15.0" fill="rgb(209,194,9)" rx="2" ry="2" />
<text  x="56.88" y="143.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (146,714 us., 2.62%)</title><rect x="319.1" y="165" width="30.9" height="15.0" fill="rgb(237,101,11)" rx="2" ry="2" />
<text  x="322.14" y="175.5" >nn..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (2,096 us., 0.04%)</title><rect x="318.7" y="165" width="0.4" height="15.0" fill="rgb(251,17,18)" rx="2" ry="2" />
<text  x="321.70" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (2,096 us., 0.04%)</title><rect x="318.7" y="181" width="0.4" height="15.0" fill="rgb(252,19,29)" rx="2" ry="2" />
<text  x="321.70" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (205,365 us., 3.66%)</title><rect x="10.0" y="197" width="43.2" height="15.0" fill="rgb(212,44,29)" rx="2" ry="2" />
<text  x="13.00" y="207.5" >nn.M..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (2,764 us., 0.05%)</title><rect x="53.9" y="101" width="0.6" height="15.0" fill="rgb(205,56,27)" rx="2" ry="2" />
<text  x="56.88" y="111.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(72):_forward (66,042 us., 1.18%)</title><rect x="830.2" y="197" width="13.9" height="15.0" fill="rgb(228,150,41)" rx="2" ry="2" />
<text  x="833.19" y="207.5" ></text>
</g>
<g >
<title>&lt;built-in_method_linear_a8_w8_bfp32_ofp32_of_PyCapsule_object_at_0x7f721b8ee7b0&gt; (131,819 us., 2.35%)</title><rect x="816.3" y="261" width="27.8" height="15.0" fill="rgb(206,79,39)" rx="2" ry="2" />
<text  x="819.35" y="271.5" >&lt;..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (2,096 us., 0.04%)</title><rect x="318.7" y="149" width="0.4" height="15.0" fill="rgb(215,204,6)" rx="2" ry="2" />
<text  x="321.70" y="159.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (598 us., 0.01%)</title><rect x="1189.9" y="165" width="0.1" height="15.0" fill="rgb(210,59,8)" rx="2" ry="2" />
<text  x="1192.87" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (2,764 us., 0.05%)</title><rect x="53.9" y="197" width="0.6" height="15.0" fill="rgb(234,53,50)" rx="2" ry="2" />
<text  x="56.88" y="207.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (376,427 us., 6.71%)</title><rect x="160.4" y="117" width="79.2" height="15.0" fill="rgb(223,199,42)" rx="2" ry="2" />
<text  x="163.43" y="127.5" >profiling..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,582 us., 0.03%)</title><rect x="764.8" y="165" width="0.4" height="15.0" fill="rgb(233,184,14)" rx="2" ry="2" />
<text  x="767.85" y="175.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(213):_forward (116,743 us., 2.08%)</title><rect x="791.8" y="149" width="24.5" height="15.0" fill="rgb(229,102,25)" rx="2" ry="2" />
<text  x="794.78" y="159.5" >t..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,970,082 us., 35.13%)</title><rect x="350.0" y="85" width="414.5" height="15.0" fill="rgb(220,72,23)" rx="2" ry="2" />
<text  x="353.01" y="95.5" >torch/autograd/grad_mode.py(27):_decorate_context</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (126,447 us., 2.25%)</title><rect x="765.2" y="149" width="26.6" height="15.0" fill="rgb(229,43,35)" rx="2" ry="2" />
<text  x="768.18" y="159.5" >n..</text>
</g>
<g >
<title>torch_int/nn/opt.py(213):_forward (375,834 us., 6.70%)</title><rect x="239.6" y="245" width="79.1" height="15.0" fill="rgb(225,83,52)" rx="2" ry="2" />
<text  x="242.63" y="255.5" >torch_int..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (116,743 us., 2.08%)</title><rect x="791.8" y="133" width="24.5" height="15.0" fill="rgb(237,0,20)" rx="2" ry="2" />
<text  x="794.78" y="143.5" >n..</text>
</g>
<g >
<title>torch_int/nn/opt.py(213):_forward (1,024,946 us., 18.28%)</title><rect x="974.2" y="213" width="215.7" height="15.0" fill="rgb(215,23,53)" rx="2" ry="2" />
<text  x="977.22" y="223.5" >torch_int/nn/opt.py(213):_fo..</text>
</g>
<g >
<title>torch/nn/modules/normalization.py(188):_forward (1,582 us., 0.03%)</title><rect x="764.8" y="229" width="0.4" height="15.0" fill="rgb(218,211,9)" rx="2" ry="2" />
<text  x="767.85" y="239.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (376,427 us., 6.71%)</title><rect x="160.4" y="181" width="79.2" height="15.0" fill="rgb(216,175,46)" rx="2" ry="2" />
<text  x="163.43" y="191.5" >torch_int..</text>
</g>
<g >
<title>torch_int/nn/opt.py(72):_forward (116,743 us., 2.08%)</title><rect x="791.8" y="197" width="24.5" height="15.0" fill="rgb(207,163,20)" rx="2" ry="2" />
<text  x="794.78" y="207.5" >t..</text>
</g>
<g >
<title>torch_int/nn/opt.py(69):__shape (146,714 us., 2.62%)</title><rect x="319.1" y="245" width="30.9" height="15.0" fill="rgb(213,211,20)" rx="2" ry="2" />
<text  x="322.14" y="255.5" >to..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (116,743 us., 2.08%)</title><rect x="791.8" y="37" width="24.5" height="15.0" fill="rgb(244,71,17)" rx="2" ry="2" />
<text  x="794.78" y="47.5" >t..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (146,714 us., 2.62%)</title><rect x="319.1" y="85" width="30.9" height="15.0" fill="rgb(212,162,27)" rx="2" ry="2" />
<text  x="322.14" y="95.5" >pr..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (498,918 us., 8.90%)</title><rect x="868.6" y="117" width="105.0" height="15.0" fill="rgb(217,78,54)" rx="2" ry="2" />
<text  x="871.59" y="127.5" >nn.Module:_I..</text>
</g>
<g >
<title>&lt;built-in_method_encode_of_str_object_at_0x7f721bf4b4b0&gt; (3,376,336 us., 60.20%)</title><rect x="54.5" y="261" width="710.3" height="15.0" fill="rgb(219,182,4)" rx="2" ry="2" />
<text  x="57.46" y="271.5" >&lt;built-in_method_encode_of_str_object_at_0x7f721bf4b4b0&gt;</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (498,918 us., 8.90%)</title><rect x="868.6" y="229" width="105.0" height="15.0" fill="rgb(253,98,23)" rx="2" ry="2" />
<text  x="871.59" y="239.5" >torch/autogr..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,582 us., 0.03%)</title><rect x="764.8" y="117" width="0.4" height="15.0" fill="rgb(245,181,26)" rx="2" ry="2" />
<text  x="767.85" y="127.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (2,461 us., 0.04%)</title><rect x="973.7" y="261" width="0.5" height="15.0" fill="rgb(229,222,22)" rx="2" ry="2" />
<text  x="976.71" y="271.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (116,509 us., 2.08%)</title><rect x="844.1" y="181" width="24.5" height="15.0" fill="rgb(214,172,26)" rx="2" ry="2" />
<text  x="847.08" y="191.5" >n..</text>
</g>
<g >
<title>nn.Module:_LayerNorm (1,582 us., 0.03%)</title><rect x="764.8" y="213" width="0.4" height="15.0" fill="rgb(245,17,42)" rx="2" ry="2" />
<text  x="767.85" y="223.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (205,365 us., 3.66%)</title><rect x="10.0" y="165" width="43.2" height="15.0" fill="rgb(208,189,11)" rx="2" ry="2" />
<text  x="13.00" y="175.5" >torc..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (1,582 us., 0.03%)</title><rect x="764.8" y="181" width="0.4" height="15.0" fill="rgb(207,147,19)" rx="2" ry="2" />
<text  x="767.85" y="191.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (375,834 us., 6.70%)</title><rect x="239.6" y="133" width="79.1" height="15.0" fill="rgb(233,108,42)" rx="2" ry="2" />
<text  x="242.63" y="143.5" >torch/aut..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (126,447 us., 2.25%)</title><rect x="765.2" y="181" width="26.6" height="15.0" fill="rgb(248,126,54)" rx="2" ry="2" />
<text  x="768.18" y="191.5" >n..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (1,970,082 us., 35.13%)</title><rect x="350.0" y="149" width="414.5" height="15.0" fill="rgb(215,161,38)" rx="2" ry="2" />
<text  x="353.01" y="159.5" >nn.Module:_Int8OPTDecoder</text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (116,743 us., 2.08%)</title><rect x="791.8" y="165" width="24.5" height="15.0" fill="rgb(243,115,17)" rx="2" ry="2" />
<text  x="794.78" y="175.5" >n..</text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (2,887 us., 0.05%)</title><rect x="53.3" y="197" width="0.6" height="15.0" fill="rgb(247,105,17)" rx="2" ry="2" />
<text  x="56.27" y="207.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (146,714 us., 2.62%)</title><rect x="319.1" y="149" width="30.9" height="15.0" fill="rgb(247,142,47)" rx="2" ry="2" />
<text  x="322.14" y="159.5" >to..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (126,447 us., 2.25%)</title><rect x="765.2" y="133" width="26.6" height="15.0" fill="rgb(209,80,47)" rx="2" ry="2" />
<text  x="768.18" y="143.5" >t..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (65,777 us., 1.17%)</title><rect x="816.3" y="133" width="13.9" height="15.0" fill="rgb(206,145,40)" rx="2" ry="2" />
<text  x="819.35" y="143.5" ></text>
</g>
<g >
<title>&lt;built-in_method_embedding_of_type_object_at_0x7f73104549c0&gt; (5,651 us., 0.10%)</title><rect x="53.3" y="261" width="1.2" height="15.0" fill="rgb(224,66,47)" rx="2" ry="2" />
<text  x="56.27" y="271.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (598 us., 0.01%)</title><rect x="1189.9" y="229" width="0.1" height="15.0" fill="rgb(206,0,14)" rx="2" ry="2" />
<text  x="1192.87" y="239.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (146,714 us., 2.62%)</title><rect x="319.1" y="69" width="30.9" height="15.0" fill="rgb(225,117,50)" rx="2" ry="2" />
<text  x="322.14" y="79.5" >to..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (598 us., 0.01%)</title><rect x="1189.9" y="149" width="0.1" height="15.0" fill="rgb(222,197,0)" rx="2" ry="2" />
<text  x="1192.87" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (375,834 us., 6.70%)</title><rect x="239.6" y="229" width="79.1" height="15.0" fill="rgb(230,218,25)" rx="2" ry="2" />
<text  x="242.63" y="239.5" >nn.Module..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (498,918 us., 8.90%)</title><rect x="868.6" y="85" width="105.0" height="15.0" fill="rgb(241,60,33)" rx="2" ry="2" />
<text  x="871.59" y="95.5" >torch/autogr..</text>
</g>
<g >
<title>nn.Module:_W8A8BFP32OFP32Linear (131,819 us., 2.35%)</title><rect x="816.3" y="213" width="27.8" height="15.0" fill="rgb(231,121,23)" rx="2" ry="2" />
<text  x="819.35" y="223.5" >n..</text>
</g>
<g >
<title>torch_int/nn/opt.py(213):_forward (116,509 us., 2.08%)</title><rect x="844.1" y="197" width="24.5" height="15.0" fill="rgb(238,33,53)" rx="2" ry="2" />
<text  x="847.08" y="207.5" >t..</text>
</g>
<g >
<title>&lt;built-in_method_linear_a8_w8_b8_o8_of_PyCapsule_object_at_0x7f721b8ee810&gt; (116,743 us., 2.08%)</title><rect x="791.8" y="261" width="24.5" height="15.0" fill="rgb(246,11,20)" rx="2" ry="2" />
<text  x="794.78" y="271.5" >&lt;..</text>
</g>
<g >
<title>torch_int/nn/opt.py(213):_forward (498,918 us., 8.90%)</title><rect x="868.6" y="197" width="105.0" height="15.0" fill="rgb(205,10,37)" rx="2" ry="2" />
<text  x="871.59" y="207.5" >torch_int/nn..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (598 us., 0.01%)</title><rect x="1189.9" y="197" width="0.1" height="15.0" fill="rgb(209,39,16)" rx="2" ry="2" />
<text  x="1192.87" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_W8A8B8O8LinearReLU (116,509 us., 2.08%)</title><rect x="844.1" y="213" width="24.5" height="15.0" fill="rgb(239,173,30)" rx="2" ry="2" />
<text  x="847.08" y="223.5" >n..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (66,042 us., 1.18%)</title><rect x="830.2" y="181" width="13.9" height="15.0" fill="rgb(234,92,14)" rx="2" ry="2" />
<text  x="833.19" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (116,509 us., 2.08%)</title><rect x="844.1" y="117" width="24.5" height="15.0" fill="rgb(226,187,51)" rx="2" ry="2" />
<text  x="847.08" y="127.5" >n..</text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (1,253 us., 0.02%)</title><rect x="764.6" y="213" width="0.2" height="15.0" fill="rgb(223,50,6)" rx="2" ry="2" />
<text  x="767.58" y="223.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (2,764 us., 0.05%)</title><rect x="53.9" y="149" width="0.6" height="15.0" fill="rgb(216,53,30)" rx="2" ry="2" />
<text  x="56.88" y="159.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (498,918 us., 8.90%)</title><rect x="868.6" y="101" width="105.0" height="15.0" fill="rgb(220,24,47)" rx="2" ry="2" />
<text  x="871.59" y="111.5" >profiling/ut..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (498,918 us., 8.90%)</title><rect x="868.6" y="149" width="105.0" height="15.0" fill="rgb(222,175,3)" rx="2" ry="2" />
<text  x="871.59" y="159.5" >nn.Module:_I..</text>
</g>
<g >
<title>torch_int/nn/fused.py(13):_forward (126,447 us., 2.25%)</title><rect x="765.2" y="229" width="26.6" height="15.0" fill="rgb(226,211,37)" rx="2" ry="2" />
<text  x="768.18" y="239.5" >t..</text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (1,024,946 us., 18.28%)</title><rect x="974.2" y="181" width="215.7" height="15.0" fill="rgb(213,15,7)" rx="2" ry="2" />
<text  x="977.22" y="191.5" >torch_int/nn/opt.py(346):_fo..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (116,509 us., 2.08%)</title><rect x="844.1" y="101" width="24.5" height="15.0" fill="rgb(218,217,28)" rx="2" ry="2" />
<text  x="847.08" y="111.5" >p..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(89):__expand_mask (1,253 us., 0.02%)</title><rect x="764.6" y="245" width="0.2" height="15.0" fill="rgb(218,76,9)" rx="2" ry="2" />
<text  x="767.58" y="255.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(213):_forward (126,447 us., 2.25%)</title><rect x="765.2" y="197" width="26.6" height="15.0" fill="rgb(216,29,53)" rx="2" ry="2" />
<text  x="768.18" y="207.5" >t..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (598 us., 0.01%)</title><rect x="1189.9" y="261" width="0.1" height="15.0" fill="rgb(238,220,8)" rx="2" ry="2" />
<text  x="1192.87" y="271.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (116,509 us., 2.08%)</title><rect x="844.1" y="133" width="24.5" height="15.0" fill="rgb(242,75,23)" rx="2" ry="2" />
<text  x="847.08" y="143.5" >t..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (126,447 us., 2.25%)</title><rect x="765.2" y="101" width="26.6" height="15.0" fill="rgb(234,227,19)" rx="2" ry="2" />
<text  x="768.18" y="111.5" >p..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (2,096 us., 0.04%)</title><rect x="318.7" y="197" width="0.4" height="15.0" fill="rgb(234,186,18)" rx="2" ry="2" />
<text  x="321.70" y="207.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (2,461 us., 0.04%)</title><rect x="973.7" y="197" width="0.5" height="15.0" fill="rgb(234,99,41)" rx="2" ry="2" />
<text  x="976.71" y="207.5" ></text>
</g>
<g >
<title>&lt;built-in_method_max_of_type_object_at_0x7f73104549c0&gt; (498,918 us., 8.90%)</title><rect x="868.6" y="261" width="105.0" height="15.0" fill="rgb(223,148,44)" rx="2" ry="2" />
<text  x="871.59" y="271.5" >&lt;built-in_me..</text>
</g>
</g>
</svg>
