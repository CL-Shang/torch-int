<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="326" onload="init(evt)" viewBox="0 0 1200 326" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="326.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >CUDA Time</text>
<text id="details" x="10.00" y="309" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="309" > </text>
<g id="frames">
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (25,581 us., 0.08%)</title><rect x="498.7" y="149" width="1.0" height="15.0" fill="rgb(236,169,41)" rx="2" ry="2" />
<text  x="501.75" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (4,173 us., 0.01%)</title><rect x="826.0" y="165" width="0.2" height="15.0" fill="rgb(228,32,34)" rx="2" ry="2" />
<text  x="829.02" y="175.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(89):__expand_mask (4,173 us., 0.01%)</title><rect x="826.0" y="245" width="0.2" height="15.0" fill="rgb(228,206,8)" rx="2" ry="2" />
<text  x="829.02" y="255.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (5,630,322 us., 18.34%)</title><rect x="205.4" y="101" width="216.3" height="15.0" fill="rgb(211,228,8)" rx="2" ry="2" />
<text  x="208.38" y="111.5" >profiling/utils.py(18):_prof..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (14,725 us., 0.05%)</title><rect x="422.3" y="165" width="0.6" height="15.0" fill="rgb(240,196,42)" rx="2" ry="2" />
<text  x="425.29" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (1,970,630 us., 6.42%)</title><rect x="878.3" y="117" width="75.7" height="15.0" fill="rgb(228,94,21)" rx="2" ry="2" />
<text  x="881.29" y="127.5" >nn.Modul..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (7,781,010 us., 25.34%)</title><rect x="527.0" y="117" width="299.0" height="15.0" fill="rgb(224,112,1)" rx="2" ry="2" />
<text  x="530.01" y="127.5" >nn.Module:_Int8OPTForCausalLM</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (5,630,322 us., 18.34%)</title><rect x="205.4" y="165" width="216.3" height="15.0" fill="rgb(223,186,49)" rx="2" ry="2" />
<text  x="208.38" y="175.5" >torch_int/nn/opt.py(321):_fo..</text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (5,630,322 us., 18.34%)</title><rect x="205.4" y="197" width="216.3" height="15.0" fill="rgb(224,36,27)" rx="2" ry="2" />
<text  x="208.38" y="207.5" >torch_int/nn/opt.py(183):_fo..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,970,630 us., 6.42%)</title><rect x="878.3" y="85" width="75.7" height="15.0" fill="rgb(251,47,22)" rx="2" ry="2" />
<text  x="881.29" y="95.5" >torch/au..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (37,790 us., 0.12%)</title><rect x="499.7" y="213" width="1.5" height="15.0" fill="rgb(229,72,33)" rx="2" ry="2" />
<text  x="502.73" y="223.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (31,116 us., 0.10%)</title><rect x="954.3" y="197" width="1.2" height="15.0" fill="rgb(247,215,18)" rx="2" ry="2" />
<text  x="957.35" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (1,970,630 us., 6.42%)</title><rect x="878.3" y="181" width="75.7" height="15.0" fill="rgb(227,103,9)" rx="2" ry="2" />
<text  x="881.29" y="191.5" >nn.Modul..</text>
</g>
<g >
<title>torch/nn/modules/normalization.py(188):_forward (18,626 us., 0.06%)</title><rect x="826.2" y="229" width="0.7" height="15.0" fill="rgb(215,216,43)" rx="2" ry="2" />
<text  x="829.18" y="239.5" ></text>
</g>
<g >
<title>torch_int/nn/linear.py(62):_forward (492,269 us., 1.60%)</title><rect x="826.9" y="245" width="18.9" height="15.0" fill="rgb(240,126,11)" rx="2" ry="2" />
<text  x="829.90" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (243,397 us., 0.79%)</title><rect x="826.9" y="117" width="9.3" height="15.0" fill="rgb(237,109,13)" rx="2" ry="2" />
<text  x="829.90" y="127.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,970,630 us., 6.42%)</title><rect x="878.3" y="133" width="75.7" height="15.0" fill="rgb(229,210,11)" rx="2" ry="2" />
<text  x="881.29" y="143.5" >transfor..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (31,116 us., 0.10%)</title><rect x="954.3" y="181" width="1.2" height="15.0" fill="rgb(225,209,35)" rx="2" ry="2" />
<text  x="957.35" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (25,581 us., 0.08%)</title><rect x="498.7" y="181" width="1.0" height="15.0" fill="rgb(210,221,15)" rx="2" ry="2" />
<text  x="501.75" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (7,781,010 us., 25.34%)</title><rect x="527.0" y="149" width="299.0" height="15.0" fill="rgb(230,76,7)" rx="2" ry="2" />
<text  x="530.01" y="159.5" >nn.Module:_Int8OPTDecoder</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (460,605 us., 1.50%)</title><rect x="860.6" y="181" width="17.7" height="15.0" fill="rgb(238,181,39)" rx="2" ry="2" />
<text  x="863.59" y="191.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (18,626 us., 0.06%)</title><rect x="826.2" y="165" width="0.7" height="15.0" fill="rgb(224,111,13)" rx="2" ry="2" />
<text  x="829.18" y="175.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (460,605 us., 1.50%)</title><rect x="860.6" y="197" width="17.7" height="15.0" fill="rgb(228,219,40)" rx="2" ry="2" />
<text  x="863.59" y="207.5" ></text>
</g>
<g >
<title>torch_int/nn/linear.py(122):_forward (460,605 us., 1.50%)</title><rect x="860.6" y="245" width="17.7" height="15.0" fill="rgb(214,39,31)" rx="2" ry="2" />
<text  x="863.59" y="255.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (18,866 us., 0.06%)</title><rect x="204.6" y="181" width="0.7" height="15.0" fill="rgb(239,216,45)" rx="2" ry="2" />
<text  x="207.56" y="191.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (672,056 us., 2.19%)</title><rect x="501.2" y="229" width="25.8" height="15.0" fill="rgb(206,98,26)" rx="2" ry="2" />
<text  x="504.18" y="239.5" >t..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (6,100,731 us., 19.87%)</title><rect x="955.5" y="245" width="234.5" height="15.0" fill="rgb(243,153,30)" rx="2" ry="2" />
<text  x="958.55" y="255.5" >torch/autograd/grad_mode.py(24)..</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (460,605 us., 1.50%)</title><rect x="860.6" y="165" width="17.7" height="15.0" fill="rgb(242,149,21)" rx="2" ry="2" />
<text  x="863.59" y="175.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (243,397 us., 0.79%)</title><rect x="826.9" y="165" width="9.3" height="15.0" fill="rgb(252,9,49)" rx="2" ry="2" />
<text  x="829.90" y="175.5" ></text>
</g>
<g >
<title>&lt;built-in_method_embedding_of_type_object_at_0x7f5034adf9c0&gt; (29,412 us., 0.10%)</title><rect x="421.7" y="261" width="1.2" height="15.0" fill="rgb(221,199,18)" rx="2" ry="2" />
<text  x="424.73" y="271.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (31,116 us., 0.10%)</title><rect x="954.3" y="245" width="1.2" height="15.0" fill="rgb(218,74,48)" rx="2" ry="2" />
<text  x="957.35" y="255.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (248,872 us., 0.81%)</title><rect x="836.2" y="53" width="9.6" height="15.0" fill="rgb(222,70,21)" rx="2" ry="2" />
<text  x="839.25" y="63.5" ></text>
</g>
<g >
<title>nn.Module:_Embedding (14,687 us., 0.05%)</title><rect x="421.7" y="213" width="0.6" height="15.0" fill="rgb(254,87,16)" rx="2" ry="2" />
<text  x="424.73" y="223.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (384,562 us., 1.25%)</title><rect x="845.8" y="37" width="14.8" height="15.0" fill="rgb(253,144,33)" rx="2" ry="2" />
<text  x="848.81" y="47.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (5,063,174 us., 16.49%)</title><rect x="10.0" y="181" width="194.6" height="15.0" fill="rgb(219,126,21)" rx="2" ry="2" />
<text  x="13.00" y="191.5" >profiling/utils.py(18):_p..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (6,100,731 us., 19.87%)</title><rect x="955.5" y="101" width="234.5" height="15.0" fill="rgb(233,134,5)" rx="2" ry="2" />
<text  x="958.55" y="111.5" >torch/autograd/grad_mode.py(27)..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (14,725 us., 0.05%)</title><rect x="422.3" y="149" width="0.6" height="15.0" fill="rgb(212,17,28)" rx="2" ry="2" />
<text  x="425.29" y="159.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (14,725 us., 0.05%)</title><rect x="422.3" y="213" width="0.6" height="15.0" fill="rgb(240,161,32)" rx="2" ry="2" />
<text  x="425.29" y="223.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (1,974,796 us., 6.43%)</title><rect x="422.9" y="229" width="75.8" height="15.0" fill="rgb(244,143,26)" rx="2" ry="2" />
<text  x="425.86" y="239.5" >torch_in..</text>
</g>
<g >
<title>torch_int/nn/fused.py(13):_forward (5,630,322 us., 18.34%)</title><rect x="205.4" y="229" width="216.3" height="15.0" fill="rgb(226,175,3)" rx="2" ry="2" />
<text  x="208.38" y="239.5" >torch_int/nn/fused.py(13):_f..</text>
</g>
<g >
<title>&lt;built-in_method_zeros_like_of_type_object_at_0x7f5034adf9c0&gt; (6,064 us., 0.02%)</title><rect x="954.1" y="261" width="0.2" height="15.0" fill="rgb(254,88,22)" rx="2" ry="2" />
<text  x="957.06" y="271.5" ></text>
</g>
<g >
<title>&lt;built-in_method_linear_a8_w8_b32_o32_with_scaling_of_PyCapsule_object_at_0x7f4f3ff72ed0&gt; (492,269 us., 1.60%)</title><rect x="826.9" y="261" width="18.9" height="15.0" fill="rgb(254,154,35)" rx="2" ry="2" />
<text  x="829.90" y="271.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (7,781,010 us., 25.34%)</title><rect x="527.0" y="229" width="299.0" height="15.0" fill="rgb(213,165,25)" rx="2" ry="2" />
<text  x="530.01" y="239.5" >torch/autograd/grad_mode.py(24):_decorat..</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (1,970,630 us., 6.42%)</title><rect x="878.3" y="165" width="75.7" height="15.0" fill="rgb(244,213,8)" rx="2" ry="2" />
<text  x="881.29" y="175.5" >torch_in..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (18,626 us., 0.06%)</title><rect x="826.2" y="117" width="0.7" height="15.0" fill="rgb(216,122,28)" rx="2" ry="2" />
<text  x="829.18" y="127.5" ></text>
</g>
<g >
<title>&lt;built-in_method_linear_a8_w8_b8_o8_of_PyCapsule_object_at_0x7f4f3ff72f00&gt; (384,562 us., 1.25%)</title><rect x="845.8" y="261" width="14.8" height="15.0" fill="rgb(209,71,5)" rx="2" ry="2" />
<text  x="848.81" y="271.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (14,687 us., 0.05%)</title><rect x="421.7" y="117" width="0.6" height="15.0" fill="rgb(220,17,54)" rx="2" ry="2" />
<text  x="424.73" y="127.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (384,562 us., 1.25%)</title><rect x="845.8" y="117" width="14.8" height="15.0" fill="rgb(208,166,46)" rx="2" ry="2" />
<text  x="848.81" y="127.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (672,056 us., 2.19%)</title><rect x="501.2" y="181" width="25.8" height="15.0" fill="rgb(239,211,11)" rx="2" ry="2" />
<text  x="504.18" y="191.5" >t..</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (25,581 us., 0.08%)</title><rect x="498.7" y="229" width="1.0" height="15.0" fill="rgb(220,84,30)" rx="2" ry="2" />
<text  x="501.75" y="239.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (672,056 us., 2.19%)</title><rect x="501.2" y="69" width="25.8" height="15.0" fill="rgb(208,213,50)" rx="2" ry="2" />
<text  x="504.18" y="79.5" >t..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (18,866 us., 0.06%)</title><rect x="204.6" y="213" width="0.7" height="15.0" fill="rgb(226,176,27)" rx="2" ry="2" />
<text  x="207.56" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (31,116 us., 0.10%)</title><rect x="954.3" y="213" width="1.2" height="15.0" fill="rgb(223,98,45)" rx="2" ry="2" />
<text  x="957.35" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (384,562 us., 1.25%)</title><rect x="845.8" y="165" width="14.8" height="15.0" fill="rgb(241,82,38)" rx="2" ry="2" />
<text  x="848.81" y="175.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (6,100,731 us., 19.87%)</title><rect x="955.5" y="149" width="234.5" height="15.0" fill="rgb(243,1,0)" rx="2" ry="2" />
<text  x="958.55" y="159.5" >transformers/models/opt/modelin..</text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (6,100,731 us., 19.87%)</title><rect x="955.5" y="213" width="234.5" height="15.0" fill="rgb(247,128,32)" rx="2" ry="2" />
<text  x="958.55" y="223.5" >torch_int/nn/opt.py(183):_forward</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (6,100,731 us., 19.87%)</title><rect x="955.5" y="181" width="234.5" height="15.0" fill="rgb(246,23,50)" rx="2" ry="2" />
<text  x="958.55" y="191.5" >torch_int/nn/opt.py(321):_forward</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (672,056 us., 2.19%)</title><rect x="501.2" y="101" width="25.8" height="15.0" fill="rgb(207,10,33)" rx="2" ry="2" />
<text  x="504.18" y="111.5" >n..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (5,630,322 us., 18.34%)</title><rect x="205.4" y="133" width="216.3" height="15.0" fill="rgb(239,108,26)" rx="2" ry="2" />
<text  x="208.38" y="143.5" >transformers/models/opt/mode..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (37,790 us., 0.12%)</title><rect x="499.7" y="181" width="1.5" height="15.0" fill="rgb(234,98,44)" rx="2" ry="2" />
<text  x="502.73" y="191.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (14,687 us., 0.05%)</title><rect x="421.7" y="133" width="0.6" height="15.0" fill="rgb(211,189,45)" rx="2" ry="2" />
<text  x="424.73" y="143.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (5,630,322 us., 18.34%)</title><rect x="205.4" y="117" width="216.3" height="15.0" fill="rgb(211,11,22)" rx="2" ry="2" />
<text  x="208.38" y="127.5" >nn.Module:_Int8OPTForCausalLM</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (31,116 us., 0.10%)</title><rect x="954.3" y="229" width="1.2" height="15.0" fill="rgb(235,48,53)" rx="2" ry="2" />
<text  x="957.35" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (384,562 us., 1.25%)</title><rect x="845.8" y="133" width="14.8" height="15.0" fill="rgb(244,195,18)" rx="2" ry="2" />
<text  x="848.81" y="143.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (7,781,010 us., 25.34%)</title><rect x="527.0" y="133" width="299.0" height="15.0" fill="rgb(214,122,22)" rx="2" ry="2" />
<text  x="530.01" y="143.5" >transformers/models/opt/modeling_opt.py(..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (14,687 us., 0.05%)</title><rect x="421.7" y="181" width="0.6" height="15.0" fill="rgb(247,175,51)" rx="2" ry="2" />
<text  x="424.73" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (1,970,630 us., 6.42%)</title><rect x="878.3" y="213" width="75.7" height="15.0" fill="rgb(224,211,34)" rx="2" ry="2" />
<text  x="881.29" y="223.5" >nn.Modul..</text>
</g>
<g >
<title>nn.Module:_LayerNorm (18,626 us., 0.06%)</title><rect x="826.2" y="213" width="0.7" height="15.0" fill="rgb(211,206,16)" rx="2" ry="2" />
<text  x="829.18" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (460,605 us., 1.50%)</title><rect x="860.6" y="117" width="17.7" height="15.0" fill="rgb(247,117,24)" rx="2" ry="2" />
<text  x="863.59" y="127.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (248,872 us., 0.81%)</title><rect x="836.2" y="133" width="9.6" height="15.0" fill="rgb(242,20,42)" rx="2" ry="2" />
<text  x="839.25" y="143.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,974,796 us., 6.43%)</title><rect x="422.9" y="69" width="75.8" height="15.0" fill="rgb(231,141,21)" rx="2" ry="2" />
<text  x="425.86" y="79.5" >torch/au..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (1,974,796 us., 6.43%)</title><rect x="422.9" y="165" width="75.8" height="15.0" fill="rgb(233,8,36)" rx="2" ry="2" />
<text  x="425.86" y="175.5" >nn.Modul..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (6,100,731 us., 19.87%)</title><rect x="955.5" y="117" width="234.5" height="15.0" fill="rgb(250,25,1)" rx="2" ry="2" />
<text  x="958.55" y="127.5" >profiling/utils.py(18):_profile..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (5,630,322 us., 18.34%)</title><rect x="205.4" y="149" width="216.3" height="15.0" fill="rgb(247,81,25)" rx="2" ry="2" />
<text  x="208.38" y="159.5" >nn.Module:_Int8OPTDecoder</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (5,063,174 us., 16.49%)</title><rect x="10.0" y="165" width="194.6" height="15.0" fill="rgb(242,40,40)" rx="2" ry="2" />
<text  x="13.00" y="175.5" >torch/autograd/grad_mode...</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (492,269 us., 1.60%)</title><rect x="826.9" y="229" width="18.9" height="15.0" fill="rgb(227,66,13)" rx="2" ry="2" />
<text  x="829.90" y="239.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (18,866 us., 0.06%)</title><rect x="204.6" y="165" width="0.7" height="15.0" fill="rgb(207,106,49)" rx="2" ry="2" />
<text  x="207.56" y="175.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(300):__prepare_decoder_attention_mask (25,581 us., 0.08%)</title><rect x="498.7" y="245" width="1.0" height="15.0" fill="rgb(243,207,7)" rx="2" ry="2" />
<text  x="501.75" y="255.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,974,796 us., 6.43%)</title><rect x="422.9" y="117" width="75.8" height="15.0" fill="rgb(221,185,28)" rx="2" ry="2" />
<text  x="425.86" y="127.5" >transfor..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (37,790 us., 0.12%)</title><rect x="499.7" y="229" width="1.5" height="15.0" fill="rgb(214,213,26)" rx="2" ry="2" />
<text  x="502.73" y="239.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (18,626 us., 0.06%)</title><rect x="826.2" y="197" width="0.7" height="15.0" fill="rgb(228,1,51)" rx="2" ry="2" />
<text  x="829.18" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (672,056 us., 2.19%)</title><rect x="501.2" y="165" width="25.8" height="15.0" fill="rgb(215,53,34)" rx="2" ry="2" />
<text  x="504.18" y="175.5" >n..</text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (243,397 us., 0.79%)</title><rect x="826.9" y="197" width="9.3" height="15.0" fill="rgb(222,148,0)" rx="2" ry="2" />
<text  x="829.90" y="207.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (460,605 us., 1.50%)</title><rect x="860.6" y="229" width="17.7" height="15.0" fill="rgb(242,228,13)" rx="2" ry="2" />
<text  x="863.59" y="239.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (7,781,010 us., 25.34%)</title><rect x="527.0" y="101" width="299.0" height="15.0" fill="rgb(213,170,44)" rx="2" ry="2" />
<text  x="530.01" y="111.5" >profiling/utils.py(18):_profile_model</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (384,562 us., 1.25%)</title><rect x="845.8" y="53" width="14.8" height="15.0" fill="rgb(235,57,34)" rx="2" ry="2" />
<text  x="848.81" y="63.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (4,173 us., 0.01%)</title><rect x="826.0" y="213" width="0.2" height="15.0" fill="rgb(229,4,37)" rx="2" ry="2" />
<text  x="829.02" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (14,725 us., 0.05%)</title><rect x="422.3" y="197" width="0.6" height="15.0" fill="rgb(229,143,14)" rx="2" ry="2" />
<text  x="425.29" y="207.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (31,116 us., 0.10%)</title><rect x="954.3" y="261" width="1.2" height="15.0" fill="rgb(207,218,48)" rx="2" ry="2" />
<text  x="957.35" y="271.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (248,872 us., 0.81%)</title><rect x="836.2" y="117" width="9.6" height="15.0" fill="rgb(215,141,31)" rx="2" ry="2" />
<text  x="839.25" y="127.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (1,970,630 us., 6.42%)</title><rect x="878.3" y="229" width="75.7" height="15.0" fill="rgb(218,28,4)" rx="2" ry="2" />
<text  x="881.29" y="239.5" >torch/au..</text>
</g>
<g >
<title>&lt;built-in_function_linear&gt; (5,063,174 us., 16.49%)</title><rect x="10.0" y="261" width="194.6" height="15.0" fill="rgb(231,136,41)" rx="2" ry="2" />
<text  x="13.00" y="271.5" >&lt;built-in_function_linear&gt;</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (460,605 us., 1.50%)</title><rect x="860.6" y="85" width="17.7" height="15.0" fill="rgb(252,187,24)" rx="2" ry="2" />
<text  x="863.59" y="95.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (243,397 us., 0.79%)</title><rect x="826.9" y="181" width="9.3" height="15.0" fill="rgb(253,164,0)" rx="2" ry="2" />
<text  x="829.90" y="191.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (7,781,010 us., 25.34%)</title><rect x="527.0" y="245" width="299.0" height="15.0" fill="rgb(248,22,9)" rx="2" ry="2" />
<text  x="530.01" y="255.5" >torch_int/nn/opt.py(46):_forward</text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (1,970,630 us., 6.42%)</title><rect x="878.3" y="197" width="75.7" height="15.0" fill="rgb(230,168,6)" rx="2" ry="2" />
<text  x="881.29" y="207.5" >torch_in..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (1,974,796 us., 6.43%)</title><rect x="422.9" y="213" width="75.8" height="15.0" fill="rgb(227,154,12)" rx="2" ry="2" />
<text  x="425.86" y="223.5" >torch/au..</text>
</g>
<g >
<title>&lt;built-in_method_encode_of_str_object_at_0x7f4f405d5450&gt; (10,495,811 us., 34.18%)</title><rect x="422.9" y="261" width="403.3" height="15.0" fill="rgb(224,102,16)" rx="2" ry="2" />
<text  x="425.86" y="271.5" >&lt;built-in_method_encode_of_str_object_at_0x7f4f405d5450&gt;</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (460,605 us., 1.50%)</title><rect x="860.6" y="133" width="17.7" height="15.0" fill="rgb(245,55,47)" rx="2" ry="2" />
<text  x="863.59" y="143.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (6,064 us., 0.02%)</title><rect x="954.1" y="181" width="0.2" height="15.0" fill="rgb(212,107,8)" rx="2" ry="2" />
<text  x="957.06" y="191.5" ></text>
</g>
<g >
<title>torch/nn/modules/linear.py(113):_forward (5,063,174 us., 16.49%)</title><rect x="10.0" y="245" width="194.6" height="15.0" fill="rgb(218,122,44)" rx="2" ry="2" />
<text  x="13.00" y="255.5" >torch/nn/modules/linear.p..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (25,581 us., 0.08%)</title><rect x="498.7" y="213" width="1.0" height="15.0" fill="rgb(210,108,1)" rx="2" ry="2" />
<text  x="501.75" y="223.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (7,781,010 us., 25.34%)</title><rect x="527.0" y="85" width="299.0" height="15.0" fill="rgb(220,166,18)" rx="2" ry="2" />
<text  x="530.01" y="95.5" >torch/autograd/grad_mode.py(27):_decorat..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (243,397 us., 0.79%)</title><rect x="826.9" y="149" width="9.3" height="15.0" fill="rgb(219,162,12)" rx="2" ry="2" />
<text  x="829.90" y="159.5" ></text>
</g>
<g >
<title>torch/nn/functional.py(2488):_layer_norm (18,626 us., 0.06%)</title><rect x="826.2" y="245" width="0.7" height="15.0" fill="rgb(246,51,22)" rx="2" ry="2" />
<text  x="829.18" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (5,063,174 us., 16.49%)</title><rect x="10.0" y="197" width="194.6" height="15.0" fill="rgb(217,82,32)" rx="2" ry="2" />
<text  x="13.00" y="207.5" >nn.Module:_Int8OPTForCaus..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (6,100,731 us., 19.87%)</title><rect x="955.5" y="165" width="234.5" height="15.0" fill="rgb(225,18,28)" rx="2" ry="2" />
<text  x="958.55" y="175.5" >nn.Module:_Int8OPTDecoder</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (243,397 us., 0.79%)</title><rect x="826.9" y="101" width="9.3" height="15.0" fill="rgb(232,26,9)" rx="2" ry="2" />
<text  x="829.90" y="111.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (243,397 us., 0.79%)</title><rect x="826.9" y="85" width="9.3" height="15.0" fill="rgb(242,182,5)" rx="2" ry="2" />
<text  x="829.90" y="95.5" ></text>
</g>
<g >
<title>nn.Module:_W8A8B8O8LinearReLU (460,605 us., 1.50%)</title><rect x="860.6" y="213" width="17.7" height="15.0" fill="rgb(243,40,37)" rx="2" ry="2" />
<text  x="863.59" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (248,872 us., 0.81%)</title><rect x="836.2" y="69" width="9.6" height="15.0" fill="rgb(234,34,41)" rx="2" ry="2" />
<text  x="839.25" y="79.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (6,064 us., 0.02%)</title><rect x="954.1" y="197" width="0.2" height="15.0" fill="rgb(239,66,41)" rx="2" ry="2" />
<text  x="957.06" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_W8A8B32O32LinearWithScaling (492,269 us., 1.60%)</title><rect x="826.9" y="213" width="18.9" height="15.0" fill="rgb(226,4,52)" rx="2" ry="2" />
<text  x="829.90" y="223.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (460,605 us., 1.50%)</title><rect x="860.6" y="101" width="17.7" height="15.0" fill="rgb(205,147,44)" rx="2" ry="2" />
<text  x="863.59" y="111.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (7,781,010 us., 25.34%)</title><rect x="527.0" y="181" width="299.0" height="15.0" fill="rgb(229,163,12)" rx="2" ry="2" />
<text  x="530.01" y="191.5" >nn.Module:_Int8OPTDecoderLayer</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (18,626 us., 0.06%)</title><rect x="826.2" y="133" width="0.7" height="15.0" fill="rgb(211,165,24)" rx="2" ry="2" />
<text  x="829.18" y="143.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (7,781,010 us., 25.34%)</title><rect x="527.0" y="165" width="299.0" height="15.0" fill="rgb(229,130,33)" rx="2" ry="2" />
<text  x="530.01" y="175.5" >torch_int/nn/opt.py(321):_forward</text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (7,781,010 us., 25.34%)</title><rect x="527.0" y="213" width="299.0" height="15.0" fill="rgb(218,30,21)" rx="2" ry="2" />
<text  x="530.01" y="223.5" >nn.Module:_Int8OPTAttention</text>
</g>
<g >
<title>nn.Module:_W8A8B8O8Linear (384,562 us., 1.25%)</title><rect x="845.8" y="213" width="14.8" height="15.0" fill="rgb(238,94,48)" rx="2" ry="2" />
<text  x="848.81" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (460,605 us., 1.50%)</title><rect x="860.6" y="149" width="17.7" height="15.0" fill="rgb(235,142,14)" rx="2" ry="2" />
<text  x="863.59" y="159.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (384,562 us., 1.25%)</title><rect x="845.8" y="181" width="14.8" height="15.0" fill="rgb(213,176,44)" rx="2" ry="2" />
<text  x="848.81" y="191.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (1,974,796 us., 6.43%)</title><rect x="422.9" y="181" width="75.8" height="15.0" fill="rgb(205,118,39)" rx="2" ry="2" />
<text  x="425.86" y="191.5" >torch_in..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (14,725 us., 0.05%)</title><rect x="422.3" y="133" width="0.6" height="15.0" fill="rgb(218,39,27)" rx="2" ry="2" />
<text  x="425.29" y="143.5" ></text>
</g>
<g >
<title>nn.Module:_Linear (5,063,174 us., 16.49%)</title><rect x="10.0" y="229" width="194.6" height="15.0" fill="rgb(239,75,13)" rx="2" ry="2" />
<text  x="13.00" y="239.5" >nn.Module:_Linear</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (243,397 us., 0.79%)</title><rect x="826.9" y="133" width="9.3" height="15.0" fill="rgb(227,69,14)" rx="2" ry="2" />
<text  x="829.90" y="143.5" ></text>
</g>
<g >
<title>torch_int/functional/fused.py(24):_dq_add_layernorm_q_cpp (5,630,322 us., 18.34%)</title><rect x="205.4" y="245" width="216.3" height="15.0" fill="rgb(226,54,48)" rx="2" ry="2" />
<text  x="208.38" y="255.5" >torch_int/functional/fused.p..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (6,100,731 us., 19.87%)</title><rect x="955.5" y="197" width="234.5" height="15.0" fill="rgb(226,192,5)" rx="2" ry="2" />
<text  x="958.55" y="207.5" >nn.Module:_Int8OPTDecoderLayer</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (1,970,630 us., 6.42%)</title><rect x="878.3" y="149" width="75.7" height="15.0" fill="rgb(241,78,26)" rx="2" ry="2" />
<text  x="881.29" y="159.5" >nn.Modul..</text>
</g>
<g >
<title>nn.Module:_DQ_Add_LayerNorm_Q (5,630,322 us., 18.34%)</title><rect x="205.4" y="213" width="216.3" height="15.0" fill="rgb(235,14,33)" rx="2" ry="2" />
<text  x="208.38" y="223.5" >nn.Module:_DQ_Add_LayerNorm_Q</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (5,630,322 us., 18.34%)</title><rect x="205.4" y="181" width="216.3" height="15.0" fill="rgb(217,199,28)" rx="2" ry="2" />
<text  x="208.38" y="191.5" >nn.Module:_Int8OPTDecoderLayer</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (18,866 us., 0.06%)</title><rect x="204.6" y="229" width="0.7" height="15.0" fill="rgb(226,95,33)" rx="2" ry="2" />
<text  x="207.56" y="239.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (384,562 us., 1.25%)</title><rect x="845.8" y="229" width="14.8" height="15.0" fill="rgb(246,33,21)" rx="2" ry="2" />
<text  x="848.81" y="239.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (14,687 us., 0.05%)</title><rect x="421.7" y="197" width="0.6" height="15.0" fill="rgb(230,161,2)" rx="2" ry="2" />
<text  x="424.73" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (6,064 us., 0.02%)</title><rect x="954.1" y="229" width="0.2" height="15.0" fill="rgb(217,198,15)" rx="2" ry="2" />
<text  x="957.06" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (18,626 us., 0.06%)</title><rect x="826.2" y="181" width="0.7" height="15.0" fill="rgb(216,71,46)" rx="2" ry="2" />
<text  x="829.18" y="191.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (248,872 us., 0.81%)</title><rect x="836.2" y="85" width="9.6" height="15.0" fill="rgb(225,87,23)" rx="2" ry="2" />
<text  x="839.25" y="95.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (6,064 us., 0.02%)</title><rect x="954.1" y="165" width="0.2" height="15.0" fill="rgb(238,11,32)" rx="2" ry="2" />
<text  x="957.06" y="175.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(43):__shape (672,056 us., 2.19%)</title><rect x="501.2" y="245" width="25.8" height="15.0" fill="rgb(226,10,42)" rx="2" ry="2" />
<text  x="504.18" y="255.5" >t..</text>
</g>
<g >
<title>&lt;built-in_method_max_of_type_object_at_0x7f5034adf9c0&gt; (1,970,630 us., 6.42%)</title><rect x="878.3" y="261" width="75.7" height="15.0" fill="rgb(247,100,7)" rx="2" ry="2" />
<text  x="881.29" y="271.5" >&lt;built-i..</text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (248,872 us., 0.81%)</title><rect x="836.2" y="197" width="9.6" height="15.0" fill="rgb(246,229,25)" rx="2" ry="2" />
<text  x="839.25" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (248,872 us., 0.81%)</title><rect x="836.2" y="165" width="9.6" height="15.0" fill="rgb(221,155,28)" rx="2" ry="2" />
<text  x="839.25" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (14,687 us., 0.05%)</title><rect x="421.7" y="149" width="0.6" height="15.0" fill="rgb(206,106,40)" rx="2" ry="2" />
<text  x="424.73" y="159.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (14,725 us., 0.05%)</title><rect x="422.3" y="101" width="0.6" height="15.0" fill="rgb(235,140,12)" rx="2" ry="2" />
<text  x="425.29" y="111.5" ></text>
</g>
<g >
<title>&lt;built-in_method_add_of_type_object_at_0x7f5034adf9c0&gt; (18,866 us., 0.06%)</title><rect x="204.6" y="261" width="0.7" height="15.0" fill="rgb(212,124,27)" rx="2" ry="2" />
<text  x="207.56" y="271.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (4,173 us., 0.01%)</title><rect x="826.0" y="197" width="0.2" height="15.0" fill="rgb(237,169,53)" rx="2" ry="2" />
<text  x="829.02" y="207.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(300):__prepare_decoder_attention_mask (4,173 us., 0.01%)</title><rect x="826.0" y="229" width="0.2" height="15.0" fill="rgb(207,82,28)" rx="2" ry="2" />
<text  x="829.02" y="239.5" ></text>
</g>
<g >
<title>&lt;built-in_method_linear_relu_a8_w8_b8_o8_of_PyCapsule_object_at_0x7f4f3ff72e70&gt; (460,605 us., 1.50%)</title><rect x="860.6" y="261" width="17.7" height="15.0" fill="rgb(214,215,12)" rx="2" ry="2" />
<text  x="863.59" y="271.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (5,630,322 us., 18.34%)</title><rect x="205.4" y="85" width="216.3" height="15.0" fill="rgb(216,205,27)" rx="2" ry="2" />
<text  x="208.38" y="95.5" >torch/autograd/grad_mode.py(..</text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (7,781,010 us., 25.34%)</title><rect x="527.0" y="197" width="299.0" height="15.0" fill="rgb(243,152,8)" rx="2" ry="2" />
<text  x="530.01" y="207.5" >torch_int/nn/opt.py(183):_forward</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (4,173 us., 0.01%)</title><rect x="826.0" y="149" width="0.2" height="15.0" fill="rgb(228,65,53)" rx="2" ry="2" />
<text  x="829.02" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (18,866 us., 0.06%)</title><rect x="204.6" y="197" width="0.7" height="15.0" fill="rgb(205,162,27)" rx="2" ry="2" />
<text  x="207.56" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (384,562 us., 1.25%)</title><rect x="845.8" y="101" width="14.8" height="15.0" fill="rgb(235,7,41)" rx="2" ry="2" />
<text  x="848.81" y="111.5" ></text>
</g>
<g >
<title>torch/nn/functional.py(1804):_softmax (1,974,796 us., 6.43%)</title><rect x="422.9" y="245" width="75.8" height="15.0" fill="rgb(226,137,37)" rx="2" ry="2" />
<text  x="425.86" y="255.5" >torch/nn..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (1,974,796 us., 6.43%)</title><rect x="422.9" y="133" width="75.8" height="15.0" fill="rgb(217,151,47)" rx="2" ry="2" />
<text  x="425.86" y="143.5" >nn.Modul..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (384,562 us., 1.25%)</title><rect x="845.8" y="69" width="14.8" height="15.0" fill="rgb(210,48,17)" rx="2" ry="2" />
<text  x="848.81" y="79.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (384,562 us., 1.25%)</title><rect x="845.8" y="197" width="14.8" height="15.0" fill="rgb(251,173,15)" rx="2" ry="2" />
<text  x="848.81" y="207.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (672,056 us., 2.19%)</title><rect x="501.2" y="213" width="25.8" height="15.0" fill="rgb(251,198,33)" rx="2" ry="2" />
<text  x="504.18" y="223.5" >t..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (4,173 us., 0.01%)</title><rect x="826.0" y="181" width="0.2" height="15.0" fill="rgb(214,139,44)" rx="2" ry="2" />
<text  x="829.02" y="191.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,974,796 us., 6.43%)</title><rect x="422.9" y="85" width="75.8" height="15.0" fill="rgb(205,137,34)" rx="2" ry="2" />
<text  x="425.86" y="95.5" >profilin..</text>
</g>
<g >
<title>torch/nn/modules/sparse.py(157):_forward (29,412 us., 0.10%)</title><rect x="421.7" y="229" width="1.2" height="15.0" fill="rgb(209,62,1)" rx="2" ry="2" />
<text  x="424.73" y="239.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (18,866 us., 0.06%)</title><rect x="204.6" y="245" width="0.7" height="15.0" fill="rgb(212,141,28)" rx="2" ry="2" />
<text  x="207.56" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (672,056 us., 2.19%)</title><rect x="501.2" y="133" width="25.8" height="15.0" fill="rgb(238,111,20)" rx="2" ry="2" />
<text  x="504.18" y="143.5" >n..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (6,064 us., 0.02%)</title><rect x="954.1" y="213" width="0.2" height="15.0" fill="rgb(240,49,28)" rx="2" ry="2" />
<text  x="957.06" y="223.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (672,056 us., 2.19%)</title><rect x="501.2" y="117" width="25.8" height="15.0" fill="rgb(234,0,17)" rx="2" ry="2" />
<text  x="504.18" y="127.5" >t..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (25,581 us., 0.08%)</title><rect x="498.7" y="197" width="1.0" height="15.0" fill="rgb(225,145,30)" rx="2" ry="2" />
<text  x="501.75" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (18,626 us., 0.06%)</title><rect x="826.2" y="149" width="0.7" height="15.0" fill="rgb(213,139,48)" rx="2" ry="2" />
<text  x="829.18" y="159.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (37,790 us., 0.12%)</title><rect x="499.7" y="165" width="1.5" height="15.0" fill="rgb(251,209,3)" rx="2" ry="2" />
<text  x="502.73" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (1,974,796 us., 6.43%)</title><rect x="422.9" y="101" width="75.8" height="15.0" fill="rgb(225,194,35)" rx="2" ry="2" />
<text  x="425.86" y="111.5" >nn.Modul..</text>
</g>
<g >
<title>&lt;built-in_method_layer_norm_of_type_object_at_0x7f5034adf9c0&gt; (18,626 us., 0.06%)</title><rect x="826.2" y="261" width="0.7" height="15.0" fill="rgb(245,116,31)" rx="2" ry="2" />
<text  x="829.18" y="271.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (1,970,630 us., 6.42%)</title><rect x="878.3" y="245" width="75.7" height="15.0" fill="rgb(210,49,25)" rx="2" ry="2" />
<text  x="881.29" y="255.5" >torch_in..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (384,562 us., 1.25%)</title><rect x="845.8" y="85" width="14.8" height="15.0" fill="rgb(243,15,54)" rx="2" ry="2" />
<text  x="848.81" y="95.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (14,725 us., 0.05%)</title><rect x="422.3" y="117" width="0.6" height="15.0" fill="rgb(245,122,35)" rx="2" ry="2" />
<text  x="425.29" y="127.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (6,100,731 us., 19.87%)</title><rect x="955.5" y="133" width="234.5" height="15.0" fill="rgb(245,24,42)" rx="2" ry="2" />
<text  x="958.55" y="143.5" >nn.Module:_Int8OPTForCausalLM</text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (672,056 us., 2.19%)</title><rect x="501.2" y="197" width="25.8" height="15.0" fill="rgb(222,34,49)" rx="2" ry="2" />
<text  x="504.18" y="207.5" >n..</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (14,725 us., 0.05%)</title><rect x="422.3" y="181" width="0.6" height="15.0" fill="rgb(246,9,30)" rx="2" ry="2" />
<text  x="425.29" y="191.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (37,790 us., 0.12%)</title><rect x="499.7" y="245" width="1.5" height="15.0" fill="rgb(211,132,9)" rx="2" ry="2" />
<text  x="502.73" y="255.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (6,100,731 us., 19.87%)</title><rect x="955.5" y="261" width="234.5" height="15.0" fill="rgb(236,180,26)" rx="2" ry="2" />
<text  x="958.55" y="271.5" >torch_int/nn/opt.py(46):_forward</text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (1,974,796 us., 6.43%)</title><rect x="422.9" y="197" width="75.8" height="15.0" fill="rgb(238,12,44)" rx="2" ry="2" />
<text  x="425.86" y="207.5" >nn.Modul..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (5,063,174 us., 16.49%)</title><rect x="10.0" y="213" width="194.6" height="15.0" fill="rgb(232,53,12)" rx="2" ry="2" />
<text  x="13.00" y="223.5" >transformers/models/opt/m..</text>
</g>
<g >
<title>torch/nn/functional.py(2099):_embedding (29,412 us., 0.10%)</title><rect x="421.7" y="245" width="1.2" height="15.0" fill="rgb(247,197,14)" rx="2" ry="2" />
<text  x="424.73" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (37,790 us., 0.12%)</title><rect x="499.7" y="197" width="1.5" height="15.0" fill="rgb(239,77,46)" rx="2" ry="2" />
<text  x="502.73" y="207.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (1,974,796 us., 6.43%)</title><rect x="422.9" y="149" width="75.8" height="15.0" fill="rgb(225,189,26)" rx="2" ry="2" />
<text  x="425.86" y="159.5" >torch_in..</text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (6,100,731 us., 19.87%)</title><rect x="955.5" y="229" width="234.5" height="15.0" fill="rgb(213,41,23)" rx="2" ry="2" />
<text  x="958.55" y="239.5" >nn.Module:_Int8OPTAttention</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (248,872 us., 0.81%)</title><rect x="836.2" y="101" width="9.6" height="15.0" fill="rgb(207,186,6)" rx="2" ry="2" />
<text  x="839.25" y="111.5" ></text>
</g>
<g >
<title>all (30,707,749 us., 100%)</title><rect x="10.0" y="277" width="1180.0" height="15.0" fill="rgb(210,83,39)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (384,562 us., 1.25%)</title><rect x="845.8" y="149" width="14.8" height="15.0" fill="rgb(249,151,21)" rx="2" ry="2" />
<text  x="848.81" y="159.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (6,064 us., 0.02%)</title><rect x="954.1" y="245" width="0.2" height="15.0" fill="rgb(231,29,2)" rx="2" ry="2" />
<text  x="957.06" y="255.5" ></text>
</g>
<g >
<title>&lt;built-in_method_dq_add_layernorm_q_of_PyCapsule_object_at_0x7f4f3ff72f30&gt; (5,630,322 us., 18.34%)</title><rect x="205.4" y="261" width="216.3" height="15.0" fill="rgb(208,187,10)" rx="2" ry="2" />
<text  x="208.38" y="271.5" >&lt;built-in_method_dq_add_laye..</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (672,056 us., 2.19%)</title><rect x="501.2" y="149" width="25.8" height="15.0" fill="rgb(231,77,40)" rx="2" ry="2" />
<text  x="504.18" y="159.5" >t..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (4,173 us., 0.01%)</title><rect x="826.0" y="133" width="0.2" height="15.0" fill="rgb(243,157,21)" rx="2" ry="2" />
<text  x="829.02" y="143.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (25,581 us., 0.08%)</title><rect x="498.7" y="165" width="1.0" height="15.0" fill="rgb(242,34,22)" rx="2" ry="2" />
<text  x="501.75" y="175.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (14,687 us., 0.05%)</title><rect x="421.7" y="165" width="0.6" height="15.0" fill="rgb(221,156,12)" rx="2" ry="2" />
<text  x="424.73" y="175.5" ></text>
</g>
<g >
<title>torch_int/nn/linear.py(92):_forward (384,562 us., 1.25%)</title><rect x="845.8" y="245" width="14.8" height="15.0" fill="rgb(252,162,11)" rx="2" ry="2" />
<text  x="848.81" y="255.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (672,056 us., 2.19%)</title><rect x="501.2" y="85" width="25.8" height="15.0" fill="rgb(248,213,12)" rx="2" ry="2" />
<text  x="504.18" y="95.5" >p..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (248,872 us., 0.81%)</title><rect x="836.2" y="37" width="9.6" height="15.0" fill="rgb(222,154,1)" rx="2" ry="2" />
<text  x="839.25" y="47.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (248,872 us., 0.81%)</title><rect x="836.2" y="149" width="9.6" height="15.0" fill="rgb(224,12,31)" rx="2" ry="2" />
<text  x="839.25" y="159.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,970,630 us., 6.42%)</title><rect x="878.3" y="101" width="75.7" height="15.0" fill="rgb(209,67,13)" rx="2" ry="2" />
<text  x="881.29" y="111.5" >profilin..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (248,872 us., 0.81%)</title><rect x="836.2" y="181" width="9.6" height="15.0" fill="rgb(218,138,29)" rx="2" ry="2" />
<text  x="839.25" y="191.5" ></text>
</g>
</g>
</svg>
