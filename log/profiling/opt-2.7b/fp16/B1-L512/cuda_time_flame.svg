<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="294" onload="init(evt)" viewBox="0 0 1200 294" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="294.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >CUDA Time</text>
<text id="details" x="10.00" y="277" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="277" > </text>
<g id="frames">
<g >
<title>nn.Module:_OPTDecoder (188,908 us., 4.73%)</title><rect x="1117.6" y="149" width="55.9" height="15.0" fill="rgb(250,190,13)" rx="2" ry="2" />
<text  x="1120.62" y="159.5" >nn.Mo..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(160):_forward (870,172 us., 21.80%)</title><rect x="10.0" y="181" width="257.2" height="15.0" fill="rgb(235,41,17)" rx="2" ry="2" />
<text  x="13.00" y="191.5" >transformers/models/opt/modeling_o..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (54,431 us., 1.36%)</title><rect x="1173.5" y="117" width="16.1" height="15.0" fill="rgb(241,206,33)" rx="2" ry="2" />
<text  x="1176.46" y="127.5" ></text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (305,868 us., 7.66%)</title><rect x="747.3" y="101" width="90.4" height="15.0" fill="rgb(216,46,19)" rx="2" ry="2" />
<text  x="750.25" y="111.5" >nn.Module:..</text>
</g>
<g >
<title>nn.Module:_OPTAttention (870,172 us., 21.80%)</title><rect x="10.0" y="165" width="257.2" height="15.0" fill="rgb(206,170,26)" rx="2" ry="2" />
<text  x="13.00" y="175.5" >nn.Module:_OPTAttention</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (1,305 us., 0.03%)</title><rect x="1020.2" y="133" width="0.4" height="15.0" fill="rgb(238,153,25)" rx="2" ry="2" />
<text  x="1023.21" y="143.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (188,908 us., 4.73%)</title><rect x="1117.6" y="181" width="55.9" height="15.0" fill="rgb(214,45,11)" rx="2" ry="2" />
<text  x="1120.62" y="191.5" >nn.Mo..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (1,207 us., 0.03%)</title><rect x="1189.6" y="229" width="0.4" height="15.0" fill="rgb(231,130,48)" rx="2" ry="2" />
<text  x="1192.64" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (54,431 us., 1.36%)</title><rect x="1173.5" y="213" width="16.1" height="15.0" fill="rgb(231,44,16)" rx="2" ry="2" />
<text  x="1176.46" y="223.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (54,431 us., 1.36%)</title><rect x="1173.5" y="133" width="16.1" height="15.0" fill="rgb(237,187,41)" rx="2" ry="2" />
<text  x="1176.46" y="143.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(157):__shape (86,214 us., 2.16%)</title><rect x="912.4" y="213" width="25.5" height="15.0" fill="rgb(214,182,43)" rx="2" ry="2" />
<text  x="915.40" y="223.5" >t..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,497,746 us., 37.52%)</title><rect x="267.2" y="69" width="442.8" height="15.0" fill="rgb(223,229,2)" rx="2" ry="2" />
<text  x="270.23" y="79.5" >torch/autograd/grad_mode.py(27):_decorate_context</text>
</g>
<g >
<title>nn.Module:_OPTAttention (188,908 us., 4.73%)</title><rect x="1117.6" y="213" width="55.9" height="15.0" fill="rgb(219,141,20)" rx="2" ry="2" />
<text  x="1120.62" y="223.5" >nn.Mo..</text>
</g>
<g >
<title>&lt;built-in_method_encode_of_str_object_at_0x7f2633a4e450&gt; (614,781 us., 15.40%)</title><rect x="838.9" y="229" width="181.7" height="15.0" fill="rgb(239,181,15)" rx="2" ry="2" />
<text  x="841.86" y="239.5" >&lt;built-in_method_encode..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (1,694 us., 0.04%)</title><rect x="838.4" y="181" width="0.5" height="15.0" fill="rgb(205,146,13)" rx="2" ry="2" />
<text  x="841.36" y="191.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (188,908 us., 4.73%)</title><rect x="1117.6" y="85" width="55.9" height="15.0" fill="rgb(242,215,16)" rx="2" ry="2" />
<text  x="1120.62" y="95.5" >torch..</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (1,497,746 us., 37.52%)</title><rect x="267.2" y="101" width="442.8" height="15.0" fill="rgb(218,212,34)" rx="2" ry="2" />
<text  x="270.23" y="111.5" >nn.Module:_OPTForCausalLM</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (2,109 us., 0.05%)</title><rect x="1019.6" y="117" width="0.6" height="15.0" fill="rgb(211,221,40)" rx="2" ry="2" />
<text  x="1022.58" y="127.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (102,021 us., 2.56%)</title><rect x="1087.2" y="101" width="30.2" height="15.0" fill="rgb(249,208,6)" rx="2" ry="2" />
<text  x="1090.23" y="111.5" >tr..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (86,214 us., 2.16%)</title><rect x="912.4" y="53" width="25.5" height="15.0" fill="rgb(252,85,40)" rx="2" ry="2" />
<text  x="915.40" y="63.5" >t..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (102,021 us., 2.56%)</title><rect x="1087.2" y="133" width="30.2" height="15.0" fill="rgb(222,151,16)" rx="2" ry="2" />
<text  x="1090.23" y="143.5" >tr..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (188,908 us., 4.73%)</title><rect x="1117.6" y="165" width="55.9" height="15.0" fill="rgb(249,77,49)" rx="2" ry="2" />
<text  x="1120.62" y="175.5" >trans..</text>
</g>
<g >
<title>&lt;built-in_method_cumsum_of_type_object_at_0x7f2727f589c0&gt; (494 us., 0.01%)</title><rect x="837.7" y="229" width="0.1" height="15.0" fill="rgb(222,211,30)" rx="2" ry="2" />
<text  x="840.67" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_OPTAttention (248,399 us., 6.22%)</title><rect x="838.9" y="181" width="73.4" height="15.0" fill="rgb(232,101,8)" rx="2" ry="2" />
<text  x="841.86" y="191.5" >nn.Modul..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (374 us., 0.01%)</title><rect x="912.3" y="101" width="0.1" height="15.0" fill="rgb(215,87,43)" rx="2" ry="2" />
<text  x="915.29" y="111.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (188,908 us., 4.73%)</title><rect x="1117.6" y="197" width="55.9" height="15.0" fill="rgb(217,35,18)" rx="2" ry="2" />
<text  x="1120.62" y="207.5" >trans..</text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (870,172 us., 21.80%)</title><rect x="10.0" y="133" width="257.2" height="15.0" fill="rgb(211,72,26)" rx="2" ry="2" />
<text  x="13.00" y="143.5" >nn.Module:_OPTDecoderLayer</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,694 us., 0.04%)</title><rect x="838.4" y="117" width="0.5" height="15.0" fill="rgb(213,125,39)" rx="2" ry="2" />
<text  x="841.36" y="127.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoder (870,172 us., 21.80%)</title><rect x="10.0" y="101" width="257.2" height="15.0" fill="rgb(223,55,54)" rx="2" ry="2" />
<text  x="13.00" y="111.5" >nn.Module:_OPTDecoder</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (54,431 us., 1.36%)</title><rect x="1173.5" y="229" width="16.1" height="15.0" fill="rgb(214,209,4)" rx="2" ry="2" />
<text  x="1176.46" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoder (248,399 us., 6.22%)</title><rect x="838.9" y="117" width="73.4" height="15.0" fill="rgb(233,195,51)" rx="2" ry="2" />
<text  x="841.86" y="127.5" >nn.Modul..</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (2,109 us., 0.05%)</title><rect x="1019.6" y="149" width="0.6" height="15.0" fill="rgb(223,197,43)" rx="2" ry="2" />
<text  x="1022.58" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoder (276,380 us., 6.92%)</title><rect x="937.9" y="133" width="81.7" height="15.0" fill="rgb(227,183,17)" rx="2" ry="2" />
<text  x="940.88" y="143.5" >nn.Module..</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (903 us., 0.02%)</title><rect x="1037.9" y="117" width="0.2" height="15.0" fill="rgb(212,28,22)" rx="2" ry="2" />
<text  x="1040.87" y="127.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (2,109 us., 0.05%)</title><rect x="1019.6" y="133" width="0.6" height="15.0" fill="rgb(238,133,49)" rx="2" ry="2" />
<text  x="1022.58" y="143.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (2,109 us., 0.05%)</title><rect x="1019.6" y="197" width="0.6" height="15.0" fill="rgb(206,111,32)" rx="2" ry="2" />
<text  x="1022.58" y="207.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (248,399 us., 6.22%)</title><rect x="838.9" y="53" width="73.4" height="15.0" fill="rgb(213,3,41)" rx="2" ry="2" />
<text  x="841.86" y="63.5" >torch/au..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (870,172 us., 21.80%)</title><rect x="10.0" y="85" width="257.2" height="15.0" fill="rgb(227,43,46)" rx="2" ry="2" />
<text  x="13.00" y="95.5" >transformers/models/opt/modeling_o..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (248,399 us., 6.22%)</title><rect x="838.9" y="165" width="73.4" height="15.0" fill="rgb(234,138,41)" rx="2" ry="2" />
<text  x="841.86" y="175.5" >transfor..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (903 us., 0.02%)</title><rect x="1037.9" y="101" width="0.2" height="15.0" fill="rgb(213,108,25)" rx="2" ry="2" />
<text  x="1040.87" y="111.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (305,868 us., 7.66%)</title><rect x="747.3" y="165" width="90.4" height="15.0" fill="rgb(209,59,44)" rx="2" ry="2" />
<text  x="750.25" y="175.5" >nn.Module:..</text>
</g>
<g >
<title>torch/nn/functional.py(2488):_layer_norm (59,345 us., 1.49%)</title><rect x="1020.6" y="213" width="17.5" height="15.0" fill="rgb(250,192,18)" rx="2" ry="2" />
<text  x="1023.59" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Embedding (1,846 us., 0.05%)</title><rect x="837.8" y="181" width="0.6" height="15.0" fill="rgb(254,110,18)" rx="2" ry="2" />
<text  x="840.81" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_ReLU (102,021 us., 2.56%)</title><rect x="1087.2" y="181" width="30.2" height="15.0" fill="rgb(243,147,8)" rx="2" ry="2" />
<text  x="1090.23" y="191.5" >nn..</text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (1,497,746 us., 37.52%)</title><rect x="267.2" y="165" width="442.8" height="15.0" fill="rgb(234,196,8)" rx="2" ry="2" />
<text  x="270.23" y="175.5" >nn.Module:_OPTDecoderLayer</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (305,868 us., 7.66%)</title><rect x="747.3" y="85" width="90.4" height="15.0" fill="rgb(224,4,6)" rx="2" ry="2" />
<text  x="750.25" y="95.5" >profiling/..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (1,305 us., 0.03%)</title><rect x="1020.2" y="165" width="0.4" height="15.0" fill="rgb(232,94,17)" rx="2" ry="2" />
<text  x="1023.21" y="175.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (276,380 us., 6.92%)</title><rect x="937.9" y="85" width="81.7" height="15.0" fill="rgb(227,99,17)" rx="2" ry="2" />
<text  x="940.88" y="95.5" >profiling..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (86,214 us., 2.16%)</title><rect x="912.4" y="117" width="25.5" height="15.0" fill="rgb(222,29,11)" rx="2" ry="2" />
<text  x="915.40" y="127.5" >n..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (374 us., 0.01%)</title><rect x="912.3" y="213" width="0.1" height="15.0" fill="rgb(228,186,27)" rx="2" ry="2" />
<text  x="915.29" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (870,172 us., 21.80%)</title><rect x="10.0" y="69" width="257.2" height="15.0" fill="rgb(235,39,37)" rx="2" ry="2" />
<text  x="13.00" y="79.5" >nn.Module:_OPTForCausalLM</text>
</g>
<g >
<title>nn.Module:_LayerNorm (59,345 us., 1.49%)</title><rect x="1020.6" y="181" width="17.5" height="15.0" fill="rgb(242,95,21)" rx="2" ry="2" />
<text  x="1023.59" y="191.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (58,442 us., 1.46%)</title><rect x="1020.6" y="165" width="17.3" height="15.0" fill="rgb(233,197,31)" rx="2" ry="2" />
<text  x="1023.59" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (374 us., 0.01%)</title><rect x="912.3" y="133" width="0.1" height="15.0" fill="rgb(217,187,41)" rx="2" ry="2" />
<text  x="915.29" y="143.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (2,109 us., 0.05%)</title><rect x="1019.6" y="165" width="0.6" height="15.0" fill="rgb(254,150,29)" rx="2" ry="2" />
<text  x="1022.58" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (54,431 us., 1.36%)</title><rect x="1173.5" y="149" width="16.1" height="15.0" fill="rgb(209,173,41)" rx="2" ry="2" />
<text  x="1176.46" y="159.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (248,399 us., 6.22%)</title><rect x="838.9" y="101" width="73.4" height="15.0" fill="rgb(236,117,1)" rx="2" ry="2" />
<text  x="841.86" y="111.5" >transfor..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (248,399 us., 6.22%)</title><rect x="838.9" y="69" width="73.4" height="15.0" fill="rgb(240,98,26)" rx="2" ry="2" />
<text  x="841.86" y="79.5" >profilin..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (86,214 us., 2.16%)</title><rect x="912.4" y="69" width="25.5" height="15.0" fill="rgb(246,23,34)" rx="2" ry="2" />
<text  x="915.40" y="79.5" >p..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (305,868 us., 7.66%)</title><rect x="747.3" y="117" width="90.4" height="15.0" fill="rgb(218,226,26)" rx="2" ry="2" />
<text  x="750.25" y="127.5" >transforme..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (126,119 us., 3.16%)</title><rect x="710.0" y="149" width="37.3" height="15.0" fill="rgb(247,212,42)" rx="2" ry="2" />
<text  x="712.97" y="159.5" >pro..</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (598 us., 0.01%)</title><rect x="1117.4" y="149" width="0.2" height="15.0" fill="rgb(234,207,48)" rx="2" ry="2" />
<text  x="1120.45" y="159.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (305,868 us., 7.66%)</title><rect x="747.3" y="181" width="90.4" height="15.0" fill="rgb(251,1,54)" rx="2" ry="2" />
<text  x="750.25" y="191.5" >transforme..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (102,021 us., 2.56%)</title><rect x="1087.2" y="69" width="30.2" height="15.0" fill="rgb(230,205,50)" rx="2" ry="2" />
<text  x="1090.23" y="79.5" >pr..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,497,746 us., 37.52%)</title><rect x="267.2" y="117" width="442.8" height="15.0" fill="rgb(212,61,37)" rx="2" ry="2" />
<text  x="270.23" y="127.5" >transformers/models/opt/modeling_opt.py(840):_forward</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (248,399 us., 6.22%)</title><rect x="838.9" y="133" width="73.4" height="15.0" fill="rgb(212,29,28)" rx="2" ry="2" />
<text  x="841.86" y="143.5" >transfor..</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (165,874 us., 4.16%)</title><rect x="1038.1" y="101" width="49.1" height="15.0" fill="rgb(221,61,48)" rx="2" ry="2" />
<text  x="1041.14" y="111.5" >nn.M..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (126,119 us., 3.16%)</title><rect x="710.0" y="181" width="37.3" height="15.0" fill="rgb(237,3,14)" rx="2" ry="2" />
<text  x="712.97" y="191.5" >tra..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (58,442 us., 1.46%)</title><rect x="1020.6" y="69" width="17.3" height="15.0" fill="rgb(224,180,24)" rx="2" ry="2" />
<text  x="1023.59" y="79.5" ></text>
</g>
<g >
<title>torch/nn/functional.py(1446):_relu (102,021 us., 2.56%)</title><rect x="1087.2" y="213" width="30.2" height="15.0" fill="rgb(251,50,3)" rx="2" ry="2" />
<text  x="1090.23" y="223.5" >to..</text>
</g>
<g >
<title>torch/nn/functional.py(1804):_softmax (248,399 us., 6.22%)</title><rect x="838.9" y="213" width="73.4" height="15.0" fill="rgb(235,84,54)" rx="2" ry="2" />
<text  x="841.86" y="223.5" >torch/nn..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,846 us., 0.05%)</title><rect x="837.8" y="85" width="0.6" height="15.0" fill="rgb(212,112,32)" rx="2" ry="2" />
<text  x="840.81" y="95.5" ></text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (494 us., 0.01%)</title><rect x="837.7" y="197" width="0.1" height="15.0" fill="rgb(205,212,33)" rx="2" ry="2" />
<text  x="840.67" y="207.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(160):_forward (188,908 us., 4.73%)</title><rect x="1117.6" y="229" width="55.9" height="15.0" fill="rgb(229,200,51)" rx="2" ry="2" />
<text  x="1120.62" y="239.5" >trans..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (86,214 us., 2.16%)</title><rect x="912.4" y="133" width="25.5" height="15.0" fill="rgb(231,62,11)" rx="2" ry="2" />
<text  x="915.40" y="143.5" >t..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,207 us., 0.03%)</title><rect x="1189.6" y="165" width="0.4" height="15.0" fill="rgb(252,226,3)" rx="2" ry="2" />
<text  x="1192.64" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (248,399 us., 6.22%)</title><rect x="838.9" y="149" width="73.4" height="15.0" fill="rgb(218,92,10)" rx="2" ry="2" />
<text  x="841.86" y="159.5" >nn.Modul..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(160):_forward (86,214 us., 2.16%)</title><rect x="912.4" y="197" width="25.5" height="15.0" fill="rgb(243,162,31)" rx="2" ry="2" />
<text  x="915.40" y="207.5" >t..</text>
</g>
<g >
<title>&lt;built-in_method_relu_of_type_object_at_0x7f2727f589c0&gt; (102,021 us., 2.56%)</title><rect x="1087.2" y="229" width="30.2" height="15.0" fill="rgb(238,30,54)" rx="2" ry="2" />
<text  x="1090.23" y="239.5" >&lt;b..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (276,380 us., 6.92%)</title><rect x="937.9" y="181" width="81.7" height="15.0" fill="rgb(243,103,2)" rx="2" ry="2" />
<text  x="940.88" y="191.5" >transform..</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (1,694 us., 0.04%)</title><rect x="838.4" y="101" width="0.5" height="15.0" fill="rgb(226,73,26)" rx="2" ry="2" />
<text  x="841.36" y="111.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(160):_forward (305,868 us., 7.66%)</title><rect x="747.3" y="213" width="90.4" height="15.0" fill="rgb(212,212,36)" rx="2" ry="2" />
<text  x="750.25" y="223.5" >transforme..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(533):__prepare_decoder_attention_mask (1,305 us., 0.03%)</title><rect x="1020.2" y="197" width="0.4" height="15.0" fill="rgb(223,6,23)" rx="2" ry="2" />
<text  x="1023.21" y="207.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (305,868 us., 7.66%)</title><rect x="747.3" y="69" width="90.4" height="15.0" fill="rgb(246,146,40)" rx="2" ry="2" />
<text  x="750.25" y="79.5" >torch/auto..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (903 us., 0.02%)</title><rect x="1037.9" y="149" width="0.2" height="15.0" fill="rgb(230,49,3)" rx="2" ry="2" />
<text  x="1040.87" y="159.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (903 us., 0.02%)</title><rect x="1037.9" y="85" width="0.2" height="15.0" fill="rgb(254,152,9)" rx="2" ry="2" />
<text  x="1040.87" y="95.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (188,908 us., 4.73%)</title><rect x="1117.6" y="133" width="55.9" height="15.0" fill="rgb(237,112,30)" rx="2" ry="2" />
<text  x="1120.62" y="143.5" >trans..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (1,497,746 us., 37.52%)</title><rect x="267.2" y="181" width="442.8" height="15.0" fill="rgb(217,219,40)" rx="2" ry="2" />
<text  x="270.23" y="191.5" >transformers/models/opt/modeling_opt.py(298):_forward</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (126,119 us., 3.16%)</title><rect x="710.0" y="165" width="37.3" height="15.0" fill="rgb(244,4,12)" rx="2" ry="2" />
<text  x="712.97" y="175.5" >nn...</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (374 us., 0.01%)</title><rect x="912.3" y="117" width="0.1" height="15.0" fill="rgb(210,117,45)" rx="2" ry="2" />
<text  x="915.29" y="127.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (903 us., 0.02%)</title><rect x="1037.9" y="133" width="0.2" height="15.0" fill="rgb(229,147,39)" rx="2" ry="2" />
<text  x="1040.87" y="143.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,305 us., 0.03%)</title><rect x="1020.2" y="101" width="0.4" height="15.0" fill="rgb(246,170,26)" rx="2" ry="2" />
<text  x="1023.21" y="111.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (494 us., 0.01%)</title><rect x="837.7" y="117" width="0.1" height="15.0" fill="rgb(249,90,54)" rx="2" ry="2" />
<text  x="840.67" y="127.5" ></text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (1,846 us., 0.05%)</title><rect x="837.8" y="117" width="0.6" height="15.0" fill="rgb(208,93,53)" rx="2" ry="2" />
<text  x="840.81" y="127.5" ></text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (276,380 us., 6.92%)</title><rect x="937.9" y="101" width="81.7" height="15.0" fill="rgb(208,21,51)" rx="2" ry="2" />
<text  x="940.88" y="111.5" >nn.Module..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (58,442 us., 1.46%)</title><rect x="1020.6" y="117" width="17.3" height="15.0" fill="rgb(234,52,22)" rx="2" ry="2" />
<text  x="1023.59" y="127.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (102,021 us., 2.56%)</title><rect x="1087.2" y="149" width="30.2" height="15.0" fill="rgb(205,91,54)" rx="2" ry="2" />
<text  x="1090.23" y="159.5" >nn..</text>
</g>
<g >
<title>torch/nn/modules/activation.py(97):_forward (102,021 us., 2.56%)</title><rect x="1087.2" y="197" width="30.2" height="15.0" fill="rgb(249,163,44)" rx="2" ry="2" />
<text  x="1090.23" y="207.5" >to..</text>
</g>
<g >
<title>&lt;built-in_method_layer_norm_of_type_object_at_0x7f2727f589c0&gt; (59,345 us., 1.49%)</title><rect x="1020.6" y="229" width="17.5" height="15.0" fill="rgb(215,90,43)" rx="2" ry="2" />
<text  x="1023.59" y="239.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,207 us., 0.03%)</title><rect x="1189.6" y="149" width="0.4" height="15.0" fill="rgb(227,3,32)" rx="2" ry="2" />
<text  x="1192.64" y="159.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (598 us., 0.01%)</title><rect x="1117.4" y="133" width="0.2" height="15.0" fill="rgb(245,38,24)" rx="2" ry="2" />
<text  x="1120.45" y="143.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoder (54,431 us., 1.36%)</title><rect x="1173.5" y="181" width="16.1" height="15.0" fill="rgb(230,173,26)" rx="2" ry="2" />
<text  x="1176.46" y="191.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,305 us., 0.03%)</title><rect x="1020.2" y="149" width="0.4" height="15.0" fill="rgb(252,138,53)" rx="2" ry="2" />
<text  x="1023.21" y="159.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (374 us., 0.01%)</title><rect x="912.3" y="181" width="0.1" height="15.0" fill="rgb(251,228,4)" rx="2" ry="2" />
<text  x="915.29" y="191.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (598 us., 0.01%)</title><rect x="1117.4" y="229" width="0.2" height="15.0" fill="rgb(247,23,42)" rx="2" ry="2" />
<text  x="1120.45" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (1,207 us., 0.03%)</title><rect x="1189.6" y="181" width="0.4" height="15.0" fill="rgb(210,199,31)" rx="2" ry="2" />
<text  x="1192.64" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (188,908 us., 4.73%)</title><rect x="1117.6" y="117" width="55.9" height="15.0" fill="rgb(245,79,24)" rx="2" ry="2" />
<text  x="1120.62" y="127.5" >nn.Mo..</text>
</g>
<g >
<title>nn.Module:_OPTAttention (86,214 us., 2.16%)</title><rect x="912.4" y="181" width="25.5" height="15.0" fill="rgb(250,66,14)" rx="2" ry="2" />
<text  x="915.40" y="191.5" >n..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (374 us., 0.01%)</title><rect x="912.3" y="149" width="0.1" height="15.0" fill="rgb(226,90,46)" rx="2" ry="2" />
<text  x="915.29" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (86,214 us., 2.16%)</title><rect x="912.4" y="149" width="25.5" height="15.0" fill="rgb(239,28,54)" rx="2" ry="2" />
<text  x="915.40" y="159.5" >n..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (165,874 us., 4.16%)</title><rect x="1038.1" y="69" width="49.1" height="15.0" fill="rgb(206,36,47)" rx="2" ry="2" />
<text  x="1041.14" y="79.5" >torc..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (598 us., 0.01%)</title><rect x="1117.4" y="197" width="0.2" height="15.0" fill="rgb(209,106,49)" rx="2" ry="2" />
<text  x="1120.45" y="207.5" ></text>
</g>
<g >
<title>torch/nn/modules/linear.py(113):_forward (2,494,037 us., 62.48%)</title><rect x="10.0" y="213" width="737.3" height="15.0" fill="rgb(208,167,27)" rx="2" ry="2" />
<text  x="13.00" y="223.5" >torch/nn/modules/linear.py(113):_forward</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (1,846 us., 0.05%)</title><rect x="837.8" y="149" width="0.6" height="15.0" fill="rgb(206,114,17)" rx="2" ry="2" />
<text  x="840.81" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoder (374 us., 0.01%)</title><rect x="912.3" y="165" width="0.1" height="15.0" fill="rgb(248,101,32)" rx="2" ry="2" />
<text  x="915.29" y="175.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (58,442 us., 1.46%)</title><rect x="1020.6" y="133" width="17.3" height="15.0" fill="rgb(218,86,45)" rx="2" ry="2" />
<text  x="1023.59" y="143.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (165,874 us., 4.16%)</title><rect x="1038.1" y="149" width="49.1" height="15.0" fill="rgb(229,227,14)" rx="2" ry="2" />
<text  x="1041.14" y="159.5" >tran..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (598 us., 0.01%)</title><rect x="1117.4" y="117" width="0.2" height="15.0" fill="rgb(211,90,23)" rx="2" ry="2" />
<text  x="1120.45" y="127.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (276,380 us., 6.92%)</title><rect x="937.9" y="165" width="81.7" height="15.0" fill="rgb(210,199,31)" rx="2" ry="2" />
<text  x="940.88" y="175.5" >nn.Module..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (165,874 us., 4.16%)</title><rect x="1038.1" y="117" width="49.1" height="15.0" fill="rgb(253,122,9)" rx="2" ry="2" />
<text  x="1041.14" y="127.5" >tran..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (598 us., 0.01%)</title><rect x="1117.4" y="181" width="0.2" height="15.0" fill="rgb(236,209,25)" rx="2" ry="2" />
<text  x="1120.45" y="191.5" ></text>
</g>
<g >
<title>&lt;built-in_method_bmm_of_type_object_at_0x7f2727f589c0&gt; (305,868 us., 7.66%)</title><rect x="747.3" y="229" width="90.4" height="15.0" fill="rgb(245,11,40)" rx="2" ry="2" />
<text  x="750.25" y="239.5" >&lt;built-in_..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,846 us., 0.05%)</title><rect x="837.8" y="101" width="0.6" height="15.0" fill="rgb(226,99,12)" rx="2" ry="2" />
<text  x="840.81" y="111.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (165,874 us., 4.16%)</title><rect x="1038.1" y="85" width="49.1" height="15.0" fill="rgb(235,25,43)" rx="2" ry="2" />
<text  x="1041.14" y="95.5" >prof..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (1,305 us., 0.03%)</title><rect x="1020.2" y="181" width="0.4" height="15.0" fill="rgb(206,47,42)" rx="2" ry="2" />
<text  x="1023.21" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (248,399 us., 6.22%)</title><rect x="838.9" y="85" width="73.4" height="15.0" fill="rgb(231,10,19)" rx="2" ry="2" />
<text  x="841.86" y="95.5" >nn.Modul..</text>
</g>
<g >
<title>nn.Module:_Linear (2,494,037 us., 62.48%)</title><rect x="10.0" y="197" width="737.3" height="15.0" fill="rgb(205,17,28)" rx="2" ry="2" />
<text  x="13.00" y="207.5" >nn.Module:_Linear</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (102,021 us., 2.56%)</title><rect x="1087.2" y="165" width="30.2" height="15.0" fill="rgb(254,109,2)" rx="2" ry="2" />
<text  x="1090.23" y="175.5" >tr..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (903 us., 0.02%)</title><rect x="1037.9" y="165" width="0.2" height="15.0" fill="rgb(206,121,26)" rx="2" ry="2" />
<text  x="1040.87" y="175.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (276,380 us., 6.92%)</title><rect x="937.9" y="149" width="81.7" height="15.0" fill="rgb(250,126,50)" rx="2" ry="2" />
<text  x="940.88" y="159.5" >transform..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (58,442 us., 1.46%)</title><rect x="1020.6" y="101" width="17.3" height="15.0" fill="rgb(254,90,9)" rx="2" ry="2" />
<text  x="1023.59" y="111.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoder (102,021 us., 2.56%)</title><rect x="1087.2" y="117" width="30.2" height="15.0" fill="rgb(233,212,27)" rx="2" ry="2" />
<text  x="1090.23" y="127.5" >nn..</text>
</g>
<g >
<title>nn.Module:_OPTAttention (305,868 us., 7.66%)</title><rect x="747.3" y="197" width="90.4" height="15.0" fill="rgb(237,188,38)" rx="2" ry="2" />
<text  x="750.25" y="207.5" >nn.Module:..</text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (165,874 us., 4.16%)</title><rect x="1038.1" y="165" width="49.1" height="15.0" fill="rgb(221,180,34)" rx="2" ry="2" />
<text  x="1041.14" y="175.5" >nn.M..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,305 us., 0.03%)</title><rect x="1020.2" y="117" width="0.4" height="15.0" fill="rgb(210,205,28)" rx="2" ry="2" />
<text  x="1023.21" y="127.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,207 us., 0.03%)</title><rect x="1189.6" y="197" width="0.4" height="15.0" fill="rgb(216,180,10)" rx="2" ry="2" />
<text  x="1192.64" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (102,021 us., 2.56%)</title><rect x="1087.2" y="85" width="30.2" height="15.0" fill="rgb(244,121,12)" rx="2" ry="2" />
<text  x="1090.23" y="95.5" >nn..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (1,497,746 us., 37.52%)</title><rect x="267.2" y="133" width="442.8" height="15.0" fill="rgb(246,202,35)" rx="2" ry="2" />
<text  x="270.23" y="143.5" >nn.Module:_OPTDecoder</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (870,172 us., 21.80%)</title><rect x="10.0" y="53" width="257.2" height="15.0" fill="rgb(241,197,7)" rx="2" ry="2" />
<text  x="13.00" y="63.5" >profiling/utils.py(18):_profile_mo..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (86,214 us., 2.16%)</title><rect x="912.4" y="101" width="25.5" height="15.0" fill="rgb(227,46,31)" rx="2" ry="2" />
<text  x="915.40" y="111.5" >t..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (54,431 us., 1.36%)</title><rect x="1173.5" y="165" width="16.1" height="15.0" fill="rgb(244,213,4)" rx="2" ry="2" />
<text  x="1176.46" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (1,694 us., 0.04%)</title><rect x="838.4" y="165" width="0.5" height="15.0" fill="rgb(218,66,18)" rx="2" ry="2" />
<text  x="841.36" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (58,442 us., 1.46%)</title><rect x="1020.6" y="149" width="17.3" height="15.0" fill="rgb(225,70,53)" rx="2" ry="2" />
<text  x="1023.59" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (374 us., 0.01%)</title><rect x="912.3" y="197" width="0.1" height="15.0" fill="rgb(234,82,52)" rx="2" ry="2" />
<text  x="915.29" y="207.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(533):__prepare_decoder_attention_mask (2,109 us., 0.05%)</title><rect x="1019.6" y="213" width="0.6" height="15.0" fill="rgb(240,203,19)" rx="2" ry="2" />
<text  x="1022.58" y="223.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (494 us., 0.01%)</title><rect x="837.7" y="101" width="0.1" height="15.0" fill="rgb(216,51,21)" rx="2" ry="2" />
<text  x="840.67" y="111.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,497,746 us., 37.52%)</title><rect x="267.2" y="85" width="442.8" height="15.0" fill="rgb(223,221,21)" rx="2" ry="2" />
<text  x="270.23" y="95.5" >profiling/utils.py(18):_profile_model</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (494 us., 0.01%)</title><rect x="837.7" y="133" width="0.1" height="15.0" fill="rgb(210,23,25)" rx="2" ry="2" />
<text  x="840.67" y="143.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (870,172 us., 21.80%)</title><rect x="10.0" y="149" width="257.2" height="15.0" fill="rgb(214,167,31)" rx="2" ry="2" />
<text  x="13.00" y="159.5" >transformers/models/opt/modeling_o..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (1,694 us., 0.04%)</title><rect x="838.4" y="149" width="0.5" height="15.0" fill="rgb(210,158,46)" rx="2" ry="2" />
<text  x="841.36" y="159.5" ></text>
</g>
<g >
<title>&lt;built-in_method_embedding_of_type_object_at_0x7f2727f589c0&gt; (3,540 us., 0.09%)</title><rect x="837.8" y="229" width="1.1" height="15.0" fill="rgb(210,169,12)" rx="2" ry="2" />
<text  x="840.81" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoder (165,874 us., 4.16%)</title><rect x="1038.1" y="133" width="49.1" height="15.0" fill="rgb(252,24,2)" rx="2" ry="2" />
<text  x="1041.14" y="143.5" >nn.M..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (1,694 us., 0.04%)</title><rect x="838.4" y="133" width="0.5" height="15.0" fill="rgb(244,72,28)" rx="2" ry="2" />
<text  x="841.36" y="143.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(160):_forward (276,380 us., 6.92%)</title><rect x="937.9" y="213" width="81.7" height="15.0" fill="rgb(226,24,23)" rx="2" ry="2" />
<text  x="940.88" y="223.5" >transform..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (305,868 us., 7.66%)</title><rect x="747.3" y="133" width="90.4" height="15.0" fill="rgb(251,93,0)" rx="2" ry="2" />
<text  x="750.25" y="143.5" >nn.Module:..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,694 us., 0.04%)</title><rect x="838.4" y="69" width="0.5" height="15.0" fill="rgb(206,42,51)" rx="2" ry="2" />
<text  x="841.36" y="79.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(160):_forward (165,874 us., 4.16%)</title><rect x="1038.1" y="213" width="49.1" height="15.0" fill="rgb(225,134,47)" rx="2" ry="2" />
<text  x="1041.14" y="223.5" >tran..</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (58,442 us., 1.46%)</title><rect x="1020.6" y="85" width="17.3" height="15.0" fill="rgb(239,219,24)" rx="2" ry="2" />
<text  x="1023.59" y="95.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (102,021 us., 2.56%)</title><rect x="1087.2" y="53" width="30.2" height="15.0" fill="rgb(221,148,29)" rx="2" ry="2" />
<text  x="1090.23" y="63.5" >to..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (494 us., 0.01%)</title><rect x="837.7" y="181" width="0.1" height="15.0" fill="rgb(223,72,44)" rx="2" ry="2" />
<text  x="840.67" y="191.5" ></text>
</g>
<g >
<title>torch/nn/modules/sparse.py(157):_forward (3,540 us., 0.09%)</title><rect x="837.8" y="197" width="1.1" height="15.0" fill="rgb(217,229,26)" rx="2" ry="2" />
<text  x="840.81" y="207.5" ></text>
</g>
<g >
<title>all (3,991,803 us., 100%)</title><rect x="10.0" y="245" width="1180.0" height="15.0" fill="rgb(213,107,46)" rx="2" ry="2" />
<text  x="13.00" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoder (1,207 us., 0.03%)</title><rect x="1189.6" y="213" width="0.4" height="15.0" fill="rgb(224,228,33)" rx="2" ry="2" />
<text  x="1192.64" y="223.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (58,442 us., 1.46%)</title><rect x="1020.6" y="53" width="17.3" height="15.0" fill="rgb(213,58,46)" rx="2" ry="2" />
<text  x="1023.59" y="63.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (494 us., 0.01%)</title><rect x="837.7" y="149" width="0.1" height="15.0" fill="rgb(215,194,3)" rx="2" ry="2" />
<text  x="840.67" y="159.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (276,380 us., 6.92%)</title><rect x="937.9" y="69" width="81.7" height="15.0" fill="rgb(207,114,49)" rx="2" ry="2" />
<text  x="940.88" y="79.5" >torch/aut..</text>
</g>
<g >
<title>&lt;built-in_function_linear&gt; (2,494,037 us., 62.48%)</title><rect x="10.0" y="229" width="737.3" height="15.0" fill="rgb(230,89,50)" rx="2" ry="2" />
<text  x="13.00" y="239.5" >&lt;built-in_function_linear&gt;</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,694 us., 0.04%)</title><rect x="838.4" y="85" width="0.5" height="15.0" fill="rgb(220,161,17)" rx="2" ry="2" />
<text  x="841.36" y="95.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (165,874 us., 4.16%)</title><rect x="1038.1" y="181" width="49.1" height="15.0" fill="rgb(247,208,40)" rx="2" ry="2" />
<text  x="1041.14" y="191.5" >tran..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (1,846 us., 0.05%)</title><rect x="837.8" y="165" width="0.6" height="15.0" fill="rgb(210,69,36)" rx="2" ry="2" />
<text  x="840.81" y="175.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (1,497,746 us., 37.52%)</title><rect x="267.2" y="149" width="442.8" height="15.0" fill="rgb(231,32,18)" rx="2" ry="2" />
<text  x="270.23" y="159.5" >transformers/models/opt/modeling_opt.py(553):_forward</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (86,214 us., 2.16%)</title><rect x="912.4" y="165" width="25.5" height="15.0" fill="rgb(212,51,9)" rx="2" ry="2" />
<text  x="915.40" y="175.5" >t..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(160):_forward (248,399 us., 6.22%)</title><rect x="838.9" y="197" width="73.4" height="15.0" fill="rgb(225,79,46)" rx="2" ry="2" />
<text  x="841.86" y="207.5" >transfor..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (188,908 us., 4.73%)</title><rect x="1117.6" y="101" width="55.9" height="15.0" fill="rgb(223,39,31)" rx="2" ry="2" />
<text  x="1120.62" y="111.5" >profi..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(89):__expand_mask (1,305 us., 0.03%)</title><rect x="1020.2" y="213" width="0.4" height="15.0" fill="rgb(246,31,20)" rx="2" ry="2" />
<text  x="1023.21" y="223.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (494 us., 0.01%)</title><rect x="837.7" y="213" width="0.1" height="15.0" fill="rgb(220,14,11)" rx="2" ry="2" />
<text  x="840.67" y="223.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (126,119 us., 3.16%)</title><rect x="710.0" y="133" width="37.3" height="15.0" fill="rgb(233,123,40)" rx="2" ry="2" />
<text  x="712.97" y="143.5" >tor..</text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (598 us., 0.01%)</title><rect x="1117.4" y="213" width="0.2" height="15.0" fill="rgb(244,131,46)" rx="2" ry="2" />
<text  x="1120.45" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoder (494 us., 0.01%)</title><rect x="837.7" y="165" width="0.1" height="15.0" fill="rgb(246,144,20)" rx="2" ry="2" />
<text  x="840.67" y="175.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (305,868 us., 7.66%)</title><rect x="747.3" y="149" width="90.4" height="15.0" fill="rgb(222,125,14)" rx="2" ry="2" />
<text  x="750.25" y="159.5" >transforme..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (598 us., 0.01%)</title><rect x="1117.4" y="165" width="0.2" height="15.0" fill="rgb(253,211,40)" rx="2" ry="2" />
<text  x="1120.45" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_OPTAttention (276,380 us., 6.92%)</title><rect x="937.9" y="197" width="81.7" height="15.0" fill="rgb(241,220,10)" rx="2" ry="2" />
<text  x="940.88" y="207.5" >nn.Module..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (870,172 us., 21.80%)</title><rect x="10.0" y="37" width="257.2" height="15.0" fill="rgb(244,38,0)" rx="2" ry="2" />
<text  x="13.00" y="47.5" >torch/autograd/grad_mode.py(27):_d..</text>
</g>
<g >
<title>torch/nn/functional.py(2099):_embedding (3,540 us., 0.09%)</title><rect x="837.8" y="213" width="1.1" height="15.0" fill="rgb(251,141,50)" rx="2" ry="2" />
<text  x="840.81" y="223.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (276,380 us., 6.92%)</title><rect x="937.9" y="117" width="81.7" height="15.0" fill="rgb(223,145,17)" rx="2" ry="2" />
<text  x="940.88" y="127.5" >transform..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (870,172 us., 21.80%)</title><rect x="10.0" y="117" width="257.2" height="15.0" fill="rgb(232,70,51)" rx="2" ry="2" />
<text  x="13.00" y="127.5" >transformers/models/opt/modeling_o..</text>
</g>
<g >
<title>torch/nn/modules/normalization.py(188):_forward (59,345 us., 1.49%)</title><rect x="1020.6" y="197" width="17.5" height="15.0" fill="rgb(252,39,34)" rx="2" ry="2" />
<text  x="1023.59" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (86,214 us., 2.16%)</title><rect x="912.4" y="85" width="25.5" height="15.0" fill="rgb(222,176,4)" rx="2" ry="2" />
<text  x="915.40" y="95.5" >n..</text>
</g>
<g >
<title>nn.Module:_OPTAttention (165,874 us., 4.16%)</title><rect x="1038.1" y="197" width="49.1" height="15.0" fill="rgb(228,87,44)" rx="2" ry="2" />
<text  x="1041.14" y="207.5" >nn.M..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (54,431 us., 1.36%)</title><rect x="1173.5" y="197" width="16.1" height="15.0" fill="rgb(213,227,52)" rx="2" ry="2" />
<text  x="1176.46" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoder (2,109 us., 0.05%)</title><rect x="1019.6" y="181" width="0.6" height="15.0" fill="rgb(230,103,28)" rx="2" ry="2" />
<text  x="1022.58" y="191.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,846 us., 0.05%)</title><rect x="837.8" y="133" width="0.6" height="15.0" fill="rgb(225,200,52)" rx="2" ry="2" />
<text  x="840.81" y="143.5" ></text>
</g>
<g >
<title>&lt;built-in_method_max_of_type_object_at_0x7f2727f589c0&gt; (165,874 us., 4.16%)</title><rect x="1038.1" y="229" width="49.1" height="15.0" fill="rgb(226,0,19)" rx="2" ry="2" />
<text  x="1041.14" y="239.5" >&lt;bui..</text>
</g>
</g>
</svg>
