<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="294" onload="init(evt)" viewBox="0 0 1200 294" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="294.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >CUDA Time</text>
<text id="details" x="10.00" y="277" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="277" > </text>
<g id="frames">
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (486,882 us., 5.57%)</title><rect x="865.7" y="101" width="65.7" height="15.0" fill="rgb(253,77,34)" rx="2" ry="2" />
<text  x="868.69" y="111.5" >transfo..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (387,969 us., 4.44%)</title><rect x="1117.8" y="101" width="52.4" height="15.0" fill="rgb(243,136,43)" rx="2" ry="2" />
<text  x="1120.85" y="111.5" >profi..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (188,584 us., 2.16%)</title><rect x="931.5" y="53" width="25.4" height="15.0" fill="rgb(216,16,43)" rx="2" ry="2" />
<text  x="934.48" y="63.5" >t..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(160):_forward (188,584 us., 2.16%)</title><rect x="931.5" y="197" width="25.4" height="15.0" fill="rgb(242,185,29)" rx="2" ry="2" />
<text  x="934.48" y="207.5" >t..</text>
</g>
<g >
<title>&lt;built-in_function_linear&gt; (5,760,808 us., 65.91%)</title><rect x="10.0" y="229" width="777.7" height="15.0" fill="rgb(241,223,22)" rx="2" ry="2" />
<text  x="13.00" y="239.5" >&lt;built-in_function_linear&gt;</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (4,062 us., 0.05%)</title><rect x="1029.9" y="197" width="0.5" height="15.0" fill="rgb(216,203,0)" rx="2" ry="2" />
<text  x="1032.89" y="207.5" ></text>
</g>
<g >
<title>&lt;built-in_method_embedding_of_type_object_at_0x7fe6922239c0&gt; (6,444 us., 0.07%)</title><rect x="864.8" y="229" width="0.9" height="15.0" fill="rgb(225,183,38)" rx="2" ry="2" />
<text  x="867.82" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (387,969 us., 4.44%)</title><rect x="1117.8" y="181" width="52.4" height="15.0" fill="rgb(236,120,45)" rx="2" ry="2" />
<text  x="1120.85" y="191.5" >nn.Mo..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,904 us., 0.02%)</title><rect x="1046.9" y="133" width="0.3" height="15.0" fill="rgb(212,220,28)" rx="2" ry="2" />
<text  x="1049.91" y="143.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (323,325 us., 3.70%)</title><rect x="1047.2" y="69" width="43.6" height="15.0" fill="rgb(209,12,46)" rx="2" ry="2" />
<text  x="1050.17" y="79.5" >torc..</text>
</g>
<g >
<title>&lt;built-in_method_layer_norm_of_type_object_at_0x7fe6922239c0&gt; (122,160 us., 1.40%)</title><rect x="1030.7" y="229" width="16.5" height="15.0" fill="rgb(251,60,18)" rx="2" ry="2" />
<text  x="1033.68" y="239.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (1,946,786 us., 22.27%)</title><rect x="10.0" y="149" width="262.8" height="15.0" fill="rgb(253,229,27)" rx="2" ry="2" />
<text  x="13.00" y="159.5" >transformers/models/opt/modeling_op..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (1,793 us., 0.02%)</title><rect x="1030.4" y="165" width="0.3" height="15.0" fill="rgb(241,156,21)" rx="2" ry="2" />
<text  x="1033.44" y="175.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (143,504 us., 1.64%)</title><rect x="1170.2" y="165" width="19.4" height="15.0" fill="rgb(235,63,34)" rx="2" ry="2" />
<text  x="1173.23" y="175.5" ></text>
</g>
<g >
<title>torch/nn/functional.py(2488):_layer_norm (122,160 us., 1.40%)</title><rect x="1030.7" y="213" width="16.5" height="15.0" fill="rgb(207,208,24)" rx="2" ry="2" />
<text  x="1033.68" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_OPTAttention (486,882 us., 5.57%)</title><rect x="865.7" y="181" width="65.7" height="15.0" fill="rgb(209,60,6)" rx="2" ry="2" />
<text  x="868.69" y="191.5" >nn.Modu..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (188,584 us., 2.16%)</title><rect x="931.5" y="117" width="25.4" height="15.0" fill="rgb(245,17,3)" rx="2" ry="2" />
<text  x="934.48" y="127.5" >n..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (2,544 us., 0.03%)</title><rect x="1189.7" y="165" width="0.3" height="15.0" fill="rgb(208,191,49)" rx="2" ry="2" />
<text  x="1192.66" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_OPTAttention (569,015 us., 6.51%)</title><rect x="787.7" y="197" width="76.9" height="15.0" fill="rgb(207,13,38)" rx="2" ry="2" />
<text  x="790.75" y="207.5" >nn.Modul..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (120,256 us., 1.38%)</title><rect x="1030.7" y="53" width="16.2" height="15.0" fill="rgb(229,14,46)" rx="2" ry="2" />
<text  x="1033.68" y="63.5" ></text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (3,087 us., 0.04%)</title><rect x="865.3" y="101" width="0.4" height="15.0" fill="rgb(254,123,17)" rx="2" ry="2" />
<text  x="868.27" y="111.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (1,904 us., 0.02%)</title><rect x="1046.9" y="165" width="0.3" height="15.0" fill="rgb(212,44,3)" rx="2" ry="2" />
<text  x="1049.91" y="175.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (120,256 us., 1.38%)</title><rect x="1030.7" y="69" width="16.2" height="15.0" fill="rgb(249,110,5)" rx="2" ry="2" />
<text  x="1033.68" y="79.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (387,969 us., 4.44%)</title><rect x="1117.8" y="133" width="52.4" height="15.0" fill="rgb(219,138,7)" rx="2" ry="2" />
<text  x="1120.85" y="143.5" >trans..</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (143,504 us., 1.64%)</title><rect x="1170.2" y="149" width="19.4" height="15.0" fill="rgb(225,221,15)" rx="2" ry="2" />
<text  x="1173.23" y="159.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,946,786 us., 22.27%)</title><rect x="10.0" y="53" width="262.8" height="15.0" fill="rgb(218,176,45)" rx="2" ry="2" />
<text  x="13.00" y="63.5" >profiling/utils.py(18):_profile_model</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (387,969 us., 4.44%)</title><rect x="1117.8" y="85" width="52.4" height="15.0" fill="rgb(251,182,12)" rx="2" ry="2" />
<text  x="1120.85" y="95.5" >torch..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,882 us., 0.02%)</title><rect x="864.6" y="101" width="0.2" height="15.0" fill="rgb(226,148,11)" rx="2" ry="2" />
<text  x="867.57" y="111.5" ></text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (4,062 us., 0.05%)</title><rect x="1029.9" y="149" width="0.5" height="15.0" fill="rgb(212,194,20)" rx="2" ry="2" />
<text  x="1032.89" y="159.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (143,504 us., 1.64%)</title><rect x="1170.2" y="197" width="19.4" height="15.0" fill="rgb(248,213,3)" rx="2" ry="2" />
<text  x="1173.23" y="207.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (3,592,120 us., 41.10%)</title><rect x="272.8" y="69" width="485.0" height="15.0" fill="rgb(253,209,29)" rx="2" ry="2" />
<text  x="275.83" y="79.5" >torch/autograd/grad_mode.py(27):_decorate_context</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(160):_forward (387,969 us., 4.44%)</title><rect x="1117.8" y="229" width="52.4" height="15.0" fill="rgb(249,70,46)" rx="2" ry="2" />
<text  x="1120.85" y="239.5" >trans..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(160):_forward (569,015 us., 6.51%)</title><rect x="787.7" y="213" width="76.9" height="15.0" fill="rgb(232,41,30)" rx="2" ry="2" />
<text  x="790.75" y="223.5" >transfor..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,946,786 us., 22.27%)</title><rect x="10.0" y="37" width="262.8" height="15.0" fill="rgb(219,203,53)" rx="2" ry="2" />
<text  x="13.00" y="47.5" >torch/autograd/grad_mode.py(27):_de..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (323,325 us., 3.70%)</title><rect x="1047.2" y="181" width="43.6" height="15.0" fill="rgb(248,73,25)" rx="2" ry="2" />
<text  x="1050.17" y="191.5" >tran..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (569,015 us., 6.51%)</title><rect x="787.7" y="181" width="76.9" height="15.0" fill="rgb(248,20,50)" rx="2" ry="2" />
<text  x="790.75" y="191.5" >transfor..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (3,357 us., 0.04%)</title><rect x="864.8" y="133" width="0.5" height="15.0" fill="rgb(249,39,9)" rx="2" ry="2" />
<text  x="867.82" y="143.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (1,946,786 us., 22.27%)</title><rect x="10.0" y="133" width="262.8" height="15.0" fill="rgb(235,65,40)" rx="2" ry="2" />
<text  x="13.00" y="143.5" >nn.Module:_OPTDecoderLayer</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (569,015 us., 6.51%)</title><rect x="787.7" y="133" width="76.9" height="15.0" fill="rgb(235,13,54)" rx="2" ry="2" />
<text  x="790.75" y="143.5" >nn.Modul..</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (120,256 us., 1.38%)</title><rect x="1030.7" y="85" width="16.2" height="15.0" fill="rgb(222,185,27)" rx="2" ry="2" />
<text  x="1033.68" y="95.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoder (3,087 us., 0.04%)</title><rect x="865.3" y="133" width="0.4" height="15.0" fill="rgb(216,70,47)" rx="2" ry="2" />
<text  x="868.27" y="143.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,882 us., 0.02%)</title><rect x="864.6" y="149" width="0.2" height="15.0" fill="rgb(232,85,18)" rx="2" ry="2" />
<text  x="867.57" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (569,015 us., 6.51%)</title><rect x="787.7" y="101" width="76.9" height="15.0" fill="rgb(234,125,33)" rx="2" ry="2" />
<text  x="790.75" y="111.5" >nn.Modul..</text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (1,882 us., 0.02%)</title><rect x="864.6" y="197" width="0.2" height="15.0" fill="rgb(239,160,30)" rx="2" ry="2" />
<text  x="867.57" y="207.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (3,357 us., 0.04%)</title><rect x="864.8" y="165" width="0.5" height="15.0" fill="rgb(246,64,44)" rx="2" ry="2" />
<text  x="867.82" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (3,357 us., 0.04%)</title><rect x="864.8" y="117" width="0.5" height="15.0" fill="rgb(211,187,51)" rx="2" ry="2" />
<text  x="867.82" y="127.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (199,094 us., 2.28%)</title><rect x="1090.8" y="53" width="26.9" height="15.0" fill="rgb(244,18,21)" rx="2" ry="2" />
<text  x="1093.85" y="63.5" >t..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (486,882 us., 5.57%)</title><rect x="865.7" y="69" width="65.7" height="15.0" fill="rgb(240,77,32)" rx="2" ry="2" />
<text  x="868.69" y="79.5" >profili..</text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (323,325 us., 3.70%)</title><rect x="1047.2" y="165" width="43.6" height="15.0" fill="rgb(226,136,29)" rx="2" ry="2" />
<text  x="1050.17" y="175.5" >nn.M..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(157):__shape (188,584 us., 2.16%)</title><rect x="931.5" y="213" width="25.4" height="15.0" fill="rgb(232,77,2)" rx="2" ry="2" />
<text  x="934.48" y="223.5" >t..</text>
</g>
<g >
<title>&lt;built-in_method_encode_of_str_object_at_0x7fe59dd19450&gt; (1,222,070 us., 13.98%)</title><rect x="865.7" y="229" width="165.0" height="15.0" fill="rgb(224,227,34)" rx="2" ry="2" />
<text  x="868.69" y="239.5" >&lt;built-in_method_enco..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,904 us., 0.02%)</title><rect x="1046.9" y="101" width="0.3" height="15.0" fill="rgb(223,64,1)" rx="2" ry="2" />
<text  x="1049.91" y="111.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (2,544 us., 0.03%)</title><rect x="1189.7" y="149" width="0.3" height="15.0" fill="rgb(219,137,9)" rx="2" ry="2" />
<text  x="1192.66" y="159.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (323,325 us., 3.70%)</title><rect x="1047.2" y="149" width="43.6" height="15.0" fill="rgb(220,201,23)" rx="2" ry="2" />
<text  x="1050.17" y="159.5" >tran..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (569,015 us., 6.51%)</title><rect x="787.7" y="117" width="76.9" height="15.0" fill="rgb(205,25,18)" rx="2" ry="2" />
<text  x="790.75" y="127.5" >transfor..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (486,882 us., 5.57%)</title><rect x="865.7" y="53" width="65.7" height="15.0" fill="rgb(225,57,22)" rx="2" ry="2" />
<text  x="868.69" y="63.5" >torch/a..</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (387,969 us., 4.44%)</title><rect x="1117.8" y="117" width="52.4" height="15.0" fill="rgb(227,41,28)" rx="2" ry="2" />
<text  x="1120.85" y="127.5" >nn.Mo..</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (486,882 us., 5.57%)</title><rect x="865.7" y="85" width="65.7" height="15.0" fill="rgb(246,5,54)" rx="2" ry="2" />
<text  x="868.69" y="95.5" >nn.Modu..</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (1,882 us., 0.02%)</title><rect x="864.6" y="133" width="0.2" height="15.0" fill="rgb(253,123,42)" rx="2" ry="2" />
<text  x="867.57" y="143.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoder (199,094 us., 2.28%)</title><rect x="1090.8" y="117" width="26.9" height="15.0" fill="rgb(216,110,9)" rx="2" ry="2" />
<text  x="1093.85" y="127.5" >n..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (3,087 us., 0.04%)</title><rect x="865.3" y="69" width="0.4" height="15.0" fill="rgb(226,180,43)" rx="2" ry="2" />
<text  x="868.27" y="79.5" ></text>
</g>
<g >
<title>&lt;built-in_method_max_of_type_object_at_0x7fe6922239c0&gt; (323,325 us., 3.70%)</title><rect x="1047.2" y="229" width="43.6" height="15.0" fill="rgb(246,35,5)" rx="2" ry="2" />
<text  x="1050.17" y="239.5" >&lt;bui..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (120,256 us., 1.38%)</title><rect x="1030.7" y="133" width="16.2" height="15.0" fill="rgb(211,122,9)" rx="2" ry="2" />
<text  x="1033.68" y="143.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (387,969 us., 4.44%)</title><rect x="1117.8" y="165" width="52.4" height="15.0" fill="rgb(222,90,30)" rx="2" ry="2" />
<text  x="1120.85" y="175.5" >trans..</text>
</g>
<g >
<title>torch/nn/modules/sparse.py(157):_forward (6,444 us., 0.07%)</title><rect x="864.8" y="197" width="0.9" height="15.0" fill="rgb(254,68,17)" rx="2" ry="2" />
<text  x="867.82" y="207.5" ></text>
</g>
<g >
<title>torch/nn/functional.py(1446):_relu (199,094 us., 2.28%)</title><rect x="1090.8" y="213" width="26.9" height="15.0" fill="rgb(244,93,22)" rx="2" ry="2" />
<text  x="1093.85" y="223.5" >t..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (486,882 us., 5.57%)</title><rect x="865.7" y="117" width="65.7" height="15.0" fill="rgb(252,13,3)" rx="2" ry="2" />
<text  x="868.69" y="127.5" >nn.Modu..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (120,256 us., 1.38%)</title><rect x="1030.7" y="117" width="16.2" height="15.0" fill="rgb(229,132,18)" rx="2" ry="2" />
<text  x="1033.68" y="127.5" ></text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (1,946,786 us., 22.27%)</title><rect x="10.0" y="69" width="262.8" height="15.0" fill="rgb(232,63,12)" rx="2" ry="2" />
<text  x="13.00" y="79.5" >nn.Module:_OPTForCausalLM</text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (3,592,120 us., 41.10%)</title><rect x="272.8" y="165" width="485.0" height="15.0" fill="rgb(233,13,14)" rx="2" ry="2" />
<text  x="275.83" y="175.5" >nn.Module:_OPTDecoderLayer</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (120,256 us., 1.38%)</title><rect x="1030.7" y="101" width="16.2" height="15.0" fill="rgb(251,118,27)" rx="2" ry="2" />
<text  x="1033.68" y="111.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (1,882 us., 0.02%)</title><rect x="864.6" y="213" width="0.2" height="15.0" fill="rgb(222,26,1)" rx="2" ry="2" />
<text  x="867.57" y="223.5" ></text>
</g>
<g >
<title>torch/nn/functional.py(1804):_softmax (486,882 us., 5.57%)</title><rect x="865.7" y="213" width="65.7" height="15.0" fill="rgb(222,223,2)" rx="2" ry="2" />
<text  x="868.69" y="223.5" >torch/n..</text>
</g>
<g >
<title>nn.Module:_OPTAttention (387,969 us., 4.44%)</title><rect x="1117.8" y="213" width="52.4" height="15.0" fill="rgb(210,145,34)" rx="2" ry="2" />
<text  x="1120.85" y="223.5" >nn.Mo..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (1,882 us., 0.02%)</title><rect x="864.6" y="165" width="0.2" height="15.0" fill="rgb(219,78,53)" rx="2" ry="2" />
<text  x="867.57" y="175.5" ></text>
</g>
<g >
<title>&lt;built-in_method_bmm_of_type_object_at_0x7fe6922239c0&gt; (569,015 us., 6.51%)</title><rect x="787.7" y="229" width="76.9" height="15.0" fill="rgb(222,77,44)" rx="2" ry="2" />
<text  x="790.75" y="239.5" >&lt;built-i..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (188,584 us., 2.16%)</title><rect x="931.5" y="165" width="25.4" height="15.0" fill="rgb(221,141,16)" rx="2" ry="2" />
<text  x="934.48" y="175.5" >t..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,793 us., 0.02%)</title><rect x="1030.4" y="149" width="0.3" height="15.0" fill="rgb(231,60,40)" rx="2" ry="2" />
<text  x="1033.44" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (2,544 us., 0.03%)</title><rect x="1189.7" y="181" width="0.3" height="15.0" fill="rgb(247,88,20)" rx="2" ry="2" />
<text  x="1192.66" y="191.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (540,353 us., 6.18%)</title><rect x="956.9" y="149" width="73.0" height="15.0" fill="rgb(220,43,4)" rx="2" ry="2" />
<text  x="959.94" y="159.5" >transfor..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,946,786 us., 22.27%)</title><rect x="10.0" y="85" width="262.8" height="15.0" fill="rgb(225,197,18)" rx="2" ry="2" />
<text  x="13.00" y="95.5" >transformers/models/opt/modeling_op..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (540,353 us., 6.18%)</title><rect x="956.9" y="181" width="73.0" height="15.0" fill="rgb(238,37,32)" rx="2" ry="2" />
<text  x="959.94" y="191.5" >transfor..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (569,015 us., 6.51%)</title><rect x="787.7" y="69" width="76.9" height="15.0" fill="rgb(251,31,26)" rx="2" ry="2" />
<text  x="790.75" y="79.5" >torch/au..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (3,357 us., 0.04%)</title><rect x="864.8" y="85" width="0.5" height="15.0" fill="rgb(242,114,0)" rx="2" ry="2" />
<text  x="867.82" y="95.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (323,325 us., 3.70%)</title><rect x="1047.2" y="85" width="43.6" height="15.0" fill="rgb(227,53,24)" rx="2" ry="2" />
<text  x="1050.17" y="95.5" >prof..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (486,882 us., 5.57%)</title><rect x="865.7" y="133" width="65.7" height="15.0" fill="rgb(247,169,41)" rx="2" ry="2" />
<text  x="868.69" y="143.5" >transfo..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (3,592,120 us., 41.10%)</title><rect x="272.8" y="85" width="485.0" height="15.0" fill="rgb(225,121,47)" rx="2" ry="2" />
<text  x="275.83" y="95.5" >profiling/utils.py(18):_profile_model</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (1,904 us., 0.02%)</title><rect x="1046.9" y="149" width="0.3" height="15.0" fill="rgb(254,18,11)" rx="2" ry="2" />
<text  x="1049.91" y="159.5" ></text>
</g>
<g >
<title>all (8,740,325 us., 100%)</title><rect x="10.0" y="245" width="1180.0" height="15.0" fill="rgb(237,96,15)" rx="2" ry="2" />
<text  x="13.00" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (143,504 us., 1.64%)</title><rect x="1170.2" y="213" width="19.4" height="15.0" fill="rgb(207,91,6)" rx="2" ry="2" />
<text  x="1173.23" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_OPTAttention (188,584 us., 2.16%)</title><rect x="931.5" y="181" width="25.4" height="15.0" fill="rgb(213,207,15)" rx="2" ry="2" />
<text  x="934.48" y="191.5" >n..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (188,584 us., 2.16%)</title><rect x="931.5" y="101" width="25.4" height="15.0" fill="rgb(214,28,46)" rx="2" ry="2" />
<text  x="934.48" y="111.5" >t..</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (1,793 us., 0.02%)</title><rect x="1030.4" y="133" width="0.3" height="15.0" fill="rgb(247,150,26)" rx="2" ry="2" />
<text  x="1033.44" y="143.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (221,902 us., 2.54%)</title><rect x="757.8" y="149" width="29.9" height="15.0" fill="rgb(210,129,37)" rx="2" ry="2" />
<text  x="760.79" y="159.5" >pr..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (2,544 us., 0.03%)</title><rect x="1189.7" y="213" width="0.3" height="15.0" fill="rgb(246,47,22)" rx="2" ry="2" />
<text  x="1192.66" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (199,094 us., 2.28%)</title><rect x="1090.8" y="85" width="26.9" height="15.0" fill="rgb(243,125,7)" rx="2" ry="2" />
<text  x="1093.85" y="95.5" >n..</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (540,353 us., 6.18%)</title><rect x="956.9" y="101" width="73.0" height="15.0" fill="rgb(214,49,54)" rx="2" ry="2" />
<text  x="959.94" y="111.5" >nn.Modul..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (1,946,786 us., 22.27%)</title><rect x="10.0" y="117" width="262.8" height="15.0" fill="rgb(249,224,40)" rx="2" ry="2" />
<text  x="13.00" y="127.5" >transformers/models/opt/modeling_op..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (199,094 us., 2.28%)</title><rect x="1090.8" y="69" width="26.9" height="15.0" fill="rgb(219,34,49)" rx="2" ry="2" />
<text  x="1093.85" y="79.5" >p..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (3,087 us., 0.04%)</title><rect x="865.3" y="85" width="0.4" height="15.0" fill="rgb(235,117,36)" rx="2" ry="2" />
<text  x="868.27" y="95.5" ></text>
</g>
<g >
<title>nn.Module:_OPTAttention (1,946,786 us., 22.27%)</title><rect x="10.0" y="165" width="262.8" height="15.0" fill="rgb(227,75,52)" rx="2" ry="2" />
<text  x="13.00" y="175.5" >nn.Module:_OPTAttention</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (4,062 us., 0.05%)</title><rect x="1029.9" y="181" width="0.5" height="15.0" fill="rgb(210,28,12)" rx="2" ry="2" />
<text  x="1032.89" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoder (3,357 us., 0.04%)</title><rect x="864.8" y="149" width="0.5" height="15.0" fill="rgb(229,150,13)" rx="2" ry="2" />
<text  x="867.82" y="159.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (3,087 us., 0.04%)</title><rect x="865.3" y="181" width="0.4" height="15.0" fill="rgb(249,80,3)" rx="2" ry="2" />
<text  x="868.27" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (1,904 us., 0.02%)</title><rect x="1046.9" y="117" width="0.3" height="15.0" fill="rgb(213,30,18)" rx="2" ry="2" />
<text  x="1049.91" y="127.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (569,015 us., 6.51%)</title><rect x="787.7" y="149" width="76.9" height="15.0" fill="rgb(213,20,29)" rx="2" ry="2" />
<text  x="790.75" y="159.5" >transfor..</text>
</g>
<g >
<title>&lt;built-in_method_cumsum_of_type_object_at_0x7fe6922239c0&gt; (1,882 us., 0.02%)</title><rect x="864.6" y="229" width="0.2" height="15.0" fill="rgb(216,211,0)" rx="2" ry="2" />
<text  x="867.57" y="239.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (569,015 us., 6.51%)</title><rect x="787.7" y="85" width="76.9" height="15.0" fill="rgb(234,219,30)" rx="2" ry="2" />
<text  x="790.75" y="95.5" >profilin..</text>
</g>
<g >
<title>torch/nn/modules/normalization.py(188):_forward (122,160 us., 1.40%)</title><rect x="1030.7" y="197" width="16.5" height="15.0" fill="rgb(235,38,54)" rx="2" ry="2" />
<text  x="1033.68" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (323,325 us., 3.70%)</title><rect x="1047.2" y="101" width="43.6" height="15.0" fill="rgb(205,82,30)" rx="2" ry="2" />
<text  x="1050.17" y="111.5" >nn.M..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (188,584 us., 2.16%)</title><rect x="931.5" y="69" width="25.4" height="15.0" fill="rgb(241,164,54)" rx="2" ry="2" />
<text  x="934.48" y="79.5" >p..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (1,793 us., 0.02%)</title><rect x="1030.4" y="181" width="0.3" height="15.0" fill="rgb(234,21,30)" rx="2" ry="2" />
<text  x="1033.44" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_OPTAttention (323,325 us., 3.70%)</title><rect x="1047.2" y="197" width="43.6" height="15.0" fill="rgb(231,61,25)" rx="2" ry="2" />
<text  x="1050.17" y="207.5" >nn.M..</text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (3,087 us., 0.04%)</title><rect x="865.3" y="165" width="0.4" height="15.0" fill="rgb(214,194,52)" rx="2" ry="2" />
<text  x="868.27" y="175.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (3,592,120 us., 41.10%)</title><rect x="272.8" y="117" width="485.0" height="15.0" fill="rgb(233,47,37)" rx="2" ry="2" />
<text  x="275.83" y="127.5" >transformers/models/opt/modeling_opt.py(840):_forward</text>
</g>
<g >
<title>&lt;built-in_method_relu_of_type_object_at_0x7fe6922239c0&gt; (199,094 us., 2.28%)</title><rect x="1090.8" y="229" width="26.9" height="15.0" fill="rgb(228,146,43)" rx="2" ry="2" />
<text  x="1093.85" y="239.5" >&lt;..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (540,353 us., 6.18%)</title><rect x="956.9" y="69" width="73.0" height="15.0" fill="rgb(242,107,36)" rx="2" ry="2" />
<text  x="959.94" y="79.5" >torch/au..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (3,087 us., 0.04%)</title><rect x="865.3" y="117" width="0.4" height="15.0" fill="rgb(206,62,23)" rx="2" ry="2" />
<text  x="868.27" y="127.5" ></text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (3,592,120 us., 41.10%)</title><rect x="272.8" y="101" width="485.0" height="15.0" fill="rgb(207,205,35)" rx="2" ry="2" />
<text  x="275.83" y="111.5" >nn.Module:_OPTForCausalLM</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,904 us., 0.02%)</title><rect x="1046.9" y="85" width="0.3" height="15.0" fill="rgb(242,152,44)" rx="2" ry="2" />
<text  x="1049.91" y="95.5" ></text>
</g>
<g >
<title>torch/nn/functional.py(2099):_embedding (6,444 us., 0.07%)</title><rect x="864.8" y="213" width="0.9" height="15.0" fill="rgb(222,176,16)" rx="2" ry="2" />
<text  x="867.82" y="223.5" ></text>
</g>
<g >
<title>torch/nn/modules/linear.py(113):_forward (5,760,808 us., 65.91%)</title><rect x="10.0" y="213" width="777.7" height="15.0" fill="rgb(229,213,13)" rx="2" ry="2" />
<text  x="13.00" y="223.5" >torch/nn/modules/linear.py(113):_forward</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (199,094 us., 2.28%)</title><rect x="1090.8" y="101" width="26.9" height="15.0" fill="rgb(248,183,51)" rx="2" ry="2" />
<text  x="1093.85" y="111.5" >t..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(533):__prepare_decoder_attention_mask (1,793 us., 0.02%)</title><rect x="1030.4" y="197" width="0.3" height="15.0" fill="rgb(247,49,23)" rx="2" ry="2" />
<text  x="1033.44" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_OPTAttention (540,353 us., 6.18%)</title><rect x="956.9" y="197" width="73.0" height="15.0" fill="rgb(234,41,44)" rx="2" ry="2" />
<text  x="959.94" y="207.5" >nn.Modul..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (3,592,120 us., 41.10%)</title><rect x="272.8" y="149" width="485.0" height="15.0" fill="rgb(230,68,46)" rx="2" ry="2" />
<text  x="275.83" y="159.5" >transformers/models/opt/modeling_opt.py(553):_forward</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(160):_forward (323,325 us., 3.70%)</title><rect x="1047.2" y="213" width="43.6" height="15.0" fill="rgb(236,174,0)" rx="2" ry="2" />
<text  x="1050.17" y="223.5" >tran..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (221,902 us., 2.54%)</title><rect x="757.8" y="133" width="29.9" height="15.0" fill="rgb(248,171,10)" rx="2" ry="2" />
<text  x="760.79" y="143.5" >to..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (143,504 us., 1.64%)</title><rect x="1170.2" y="181" width="19.4" height="15.0" fill="rgb(244,60,20)" rx="2" ry="2" />
<text  x="1173.23" y="191.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (323,325 us., 3.70%)</title><rect x="1047.2" y="117" width="43.6" height="15.0" fill="rgb(233,153,37)" rx="2" ry="2" />
<text  x="1050.17" y="127.5" >tran..</text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (120,256 us., 1.38%)</title><rect x="1030.7" y="149" width="16.2" height="15.0" fill="rgb(231,22,38)" rx="2" ry="2" />
<text  x="1033.68" y="159.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(533):__prepare_decoder_attention_mask (4,062 us., 0.05%)</title><rect x="1029.9" y="213" width="0.5" height="15.0" fill="rgb(211,104,4)" rx="2" ry="2" />
<text  x="1032.89" y="223.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(160):_forward (486,882 us., 5.57%)</title><rect x="865.7" y="197" width="65.7" height="15.0" fill="rgb(211,131,44)" rx="2" ry="2" />
<text  x="868.69" y="207.5" >transfo..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,793 us., 0.02%)</title><rect x="1030.4" y="117" width="0.3" height="15.0" fill="rgb(209,120,5)" rx="2" ry="2" />
<text  x="1033.44" y="127.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (221,902 us., 2.54%)</title><rect x="757.8" y="181" width="29.9" height="15.0" fill="rgb(245,20,6)" rx="2" ry="2" />
<text  x="760.79" y="191.5" >tr..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(160):_forward (1,946,786 us., 22.27%)</title><rect x="10.0" y="181" width="262.8" height="15.0" fill="rgb(232,223,21)" rx="2" ry="2" />
<text  x="13.00" y="191.5" >transformers/models/opt/modeling_op..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(89):__expand_mask (1,793 us., 0.02%)</title><rect x="1030.4" y="213" width="0.3" height="15.0" fill="rgb(236,97,0)" rx="2" ry="2" />
<text  x="1033.44" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (199,094 us., 2.28%)</title><rect x="1090.8" y="149" width="26.9" height="15.0" fill="rgb(230,55,3)" rx="2" ry="2" />
<text  x="1093.85" y="159.5" >n..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,882 us., 0.02%)</title><rect x="864.6" y="117" width="0.2" height="15.0" fill="rgb(215,34,32)" rx="2" ry="2" />
<text  x="867.57" y="127.5" ></text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (221,902 us., 2.54%)</title><rect x="757.8" y="165" width="29.9" height="15.0" fill="rgb(205,27,2)" rx="2" ry="2" />
<text  x="760.79" y="175.5" >nn..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (188,584 us., 2.16%)</title><rect x="931.5" y="133" width="25.4" height="15.0" fill="rgb(221,2,34)" rx="2" ry="2" />
<text  x="934.48" y="143.5" >t..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (323,325 us., 3.70%)</title><rect x="1047.2" y="133" width="43.6" height="15.0" fill="rgb(215,160,13)" rx="2" ry="2" />
<text  x="1050.17" y="143.5" >nn.M..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (4,062 us., 0.05%)</title><rect x="1029.9" y="165" width="0.5" height="15.0" fill="rgb(238,16,24)" rx="2" ry="2" />
<text  x="1032.89" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_LayerNorm (122,160 us., 1.40%)</title><rect x="1030.7" y="181" width="16.5" height="15.0" fill="rgb(214,202,12)" rx="2" ry="2" />
<text  x="1033.68" y="191.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (199,094 us., 2.28%)</title><rect x="1090.8" y="133" width="26.9" height="15.0" fill="rgb(212,36,6)" rx="2" ry="2" />
<text  x="1093.85" y="143.5" >t..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (1,882 us., 0.02%)</title><rect x="864.6" y="181" width="0.2" height="15.0" fill="rgb(217,127,50)" rx="2" ry="2" />
<text  x="867.57" y="191.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (387,969 us., 4.44%)</title><rect x="1117.8" y="197" width="52.4" height="15.0" fill="rgb(218,31,35)" rx="2" ry="2" />
<text  x="1120.85" y="207.5" >trans..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (387,969 us., 4.44%)</title><rect x="1117.8" y="149" width="52.4" height="15.0" fill="rgb(220,196,43)" rx="2" ry="2" />
<text  x="1120.85" y="159.5" >nn.Mo..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(160):_forward (540,353 us., 6.18%)</title><rect x="956.9" y="213" width="73.0" height="15.0" fill="rgb(229,51,18)" rx="2" ry="2" />
<text  x="959.94" y="223.5" >transfor..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (3,592,120 us., 41.10%)</title><rect x="272.8" y="133" width="485.0" height="15.0" fill="rgb(232,66,27)" rx="2" ry="2" />
<text  x="275.83" y="143.5" >nn.Module:_OPTDecoder</text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (569,015 us., 6.51%)</title><rect x="787.7" y="165" width="76.9" height="15.0" fill="rgb(234,108,29)" rx="2" ry="2" />
<text  x="790.75" y="175.5" >nn.Modul..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (540,353 us., 6.18%)</title><rect x="956.9" y="85" width="73.0" height="15.0" fill="rgb(224,191,53)" rx="2" ry="2" />
<text  x="959.94" y="95.5" >profilin..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (540,353 us., 6.18%)</title><rect x="956.9" y="117" width="73.0" height="15.0" fill="rgb(217,16,17)" rx="2" ry="2" />
<text  x="959.94" y="127.5" >transfor..</text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (188,584 us., 2.16%)</title><rect x="931.5" y="149" width="25.4" height="15.0" fill="rgb(207,39,48)" rx="2" ry="2" />
<text  x="934.48" y="159.5" >n..</text>
</g>
<g >
<title>nn.Module:_Embedding (3,357 us., 0.04%)</title><rect x="864.8" y="181" width="0.5" height="15.0" fill="rgb(207,43,18)" rx="2" ry="2" />
<text  x="867.82" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (486,882 us., 5.57%)</title><rect x="865.7" y="149" width="65.7" height="15.0" fill="rgb(224,76,11)" rx="2" ry="2" />
<text  x="868.69" y="159.5" >nn.Modu..</text>
</g>
<g >
<title>nn.Module:_ReLU (199,094 us., 2.28%)</title><rect x="1090.8" y="181" width="26.9" height="15.0" fill="rgb(205,84,50)" rx="2" ry="2" />
<text  x="1093.85" y="191.5" >n..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (3,592,120 us., 41.10%)</title><rect x="272.8" y="181" width="485.0" height="15.0" fill="rgb(249,29,37)" rx="2" ry="2" />
<text  x="275.83" y="191.5" >transformers/models/opt/modeling_opt.py(298):_forward</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (3,087 us., 0.04%)</title><rect x="865.3" y="149" width="0.4" height="15.0" fill="rgb(227,84,54)" rx="2" ry="2" />
<text  x="868.27" y="159.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (199,094 us., 2.28%)</title><rect x="1090.8" y="165" width="26.9" height="15.0" fill="rgb(246,39,12)" rx="2" ry="2" />
<text  x="1093.85" y="175.5" >t..</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (188,584 us., 2.16%)</title><rect x="931.5" y="85" width="25.4" height="15.0" fill="rgb(205,90,23)" rx="2" ry="2" />
<text  x="934.48" y="95.5" >n..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,793 us., 0.02%)</title><rect x="1030.4" y="101" width="0.3" height="15.0" fill="rgb(226,193,52)" rx="2" ry="2" />
<text  x="1033.44" y="111.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (143,504 us., 1.64%)</title><rect x="1170.2" y="229" width="19.4" height="15.0" fill="rgb(205,70,22)" rx="2" ry="2" />
<text  x="1173.23" y="239.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (120,256 us., 1.38%)</title><rect x="1030.7" y="165" width="16.2" height="15.0" fill="rgb(208,42,25)" rx="2" ry="2" />
<text  x="1033.68" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_Linear (5,760,808 us., 65.91%)</title><rect x="10.0" y="197" width="777.7" height="15.0" fill="rgb(242,68,18)" rx="2" ry="2" />
<text  x="13.00" y="207.5" >nn.Module:_Linear</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (1,946,786 us., 22.27%)</title><rect x="10.0" y="101" width="262.8" height="15.0" fill="rgb(206,142,44)" rx="2" ry="2" />
<text  x="13.00" y="111.5" >nn.Module:_OPTDecoder</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (143,504 us., 1.64%)</title><rect x="1170.2" y="133" width="19.4" height="15.0" fill="rgb(254,137,38)" rx="2" ry="2" />
<text  x="1173.23" y="143.5" ></text>
</g>
<g >
<title>torch/nn/modules/activation.py(97):_forward (199,094 us., 2.28%)</title><rect x="1090.8" y="197" width="26.9" height="15.0" fill="rgb(234,134,27)" rx="2" ry="2" />
<text  x="1093.85" y="207.5" >t..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (2,544 us., 0.03%)</title><rect x="1189.7" y="197" width="0.3" height="15.0" fill="rgb(208,15,12)" rx="2" ry="2" />
<text  x="1192.66" y="207.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (4,062 us., 0.05%)</title><rect x="1029.9" y="117" width="0.5" height="15.0" fill="rgb(227,12,44)" rx="2" ry="2" />
<text  x="1032.89" y="127.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (143,504 us., 1.64%)</title><rect x="1170.2" y="117" width="19.4" height="15.0" fill="rgb(250,163,34)" rx="2" ry="2" />
<text  x="1173.23" y="127.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (540,353 us., 6.18%)</title><rect x="956.9" y="165" width="73.0" height="15.0" fill="rgb(208,87,31)" rx="2" ry="2" />
<text  x="959.94" y="175.5" >nn.Modul..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (3,357 us., 0.04%)</title><rect x="864.8" y="101" width="0.5" height="15.0" fill="rgb(211,19,8)" rx="2" ry="2" />
<text  x="867.82" y="111.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (4,062 us., 0.05%)</title><rect x="1029.9" y="133" width="0.5" height="15.0" fill="rgb(237,217,9)" rx="2" ry="2" />
<text  x="1032.89" y="143.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (2,544 us., 0.03%)</title><rect x="1189.7" y="229" width="0.3" height="15.0" fill="rgb(241,183,0)" rx="2" ry="2" />
<text  x="1192.66" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoder (540,353 us., 6.18%)</title><rect x="956.9" y="133" width="73.0" height="15.0" fill="rgb(236,119,50)" rx="2" ry="2" />
<text  x="959.94" y="143.5" >nn.Modul..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (486,882 us., 5.57%)</title><rect x="865.7" y="165" width="65.7" height="15.0" fill="rgb(254,163,14)" rx="2" ry="2" />
<text  x="868.69" y="175.5" >transfo..</text>
</g>
</g>
</svg>
