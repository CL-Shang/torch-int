<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="326" onload="init(evt)" viewBox="0 0 1200 326" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="326.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >CUDA Time</text>
<text id="details" x="10.00" y="309" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="309" > </text>
<g id="frames">
<g >
<title>nn.Module:_Int8OPTAttention (634,669 us., 9.37%)</title><rect x="741.2" y="213" width="110.6" height="15.0" fill="rgb(231,99,28)" rx="2" ry="2" />
<text  x="744.20" y="223.5" >nn.Module:_In..</text>
</g>
<g >
<title>torch/nn/functional.py(1804):_softmax (636,043 us., 9.39%)</title><rect x="132.3" y="245" width="110.8" height="15.0" fill="rgb(222,5,31)" rx="2" ry="2" />
<text  x="135.33" y="255.5" >torch/nn/func..</text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (92,602 us., 1.37%)</title><rect x="709.0" y="165" width="16.2" height="15.0" fill="rgb(205,127,20)" rx="2" ry="2" />
<text  x="712.03" y="175.5" ></text>
</g>
<g >
<title>&lt;built-in_method_add_of_type_object_at_0x7f8face4b9c0&gt; (3,101 us., 0.05%)</title><rect x="43.7" y="261" width="0.5" height="15.0" fill="rgb(250,111,38)" rx="2" ry="2" />
<text  x="46.65" y="271.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (634,669 us., 9.37%)</title><rect x="741.2" y="101" width="110.6" height="15.0" fill="rgb(232,139,52)" rx="2" ry="2" />
<text  x="744.20" y="111.5" >profiling/uti..</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (92,074 us., 1.36%)</title><rect x="725.2" y="165" width="16.0" height="15.0" fill="rgb(238,222,33)" rx="2" ry="2" />
<text  x="728.16" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (634,669 us., 9.37%)</title><rect x="741.2" y="181" width="110.6" height="15.0" fill="rgb(249,221,14)" rx="2" ry="2" />
<text  x="744.20" y="191.5" >nn.Module:_In..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,934,980 us., 28.57%)</title><rect x="852.8" y="117" width="337.1" height="15.0" fill="rgb(230,152,7)" rx="2" ry="2" />
<text  x="855.81" y="127.5" >profiling/utils.py(18):_profile_model</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (92,602 us., 1.37%)</title><rect x="709.0" y="37" width="16.2" height="15.0" fill="rgb(242,63,38)" rx="2" ry="2" />
<text  x="712.03" y="47.5" ></text>
</g>
<g >
<title>torch/nn/functional.py(2488):_layer_norm (1,812 us., 0.03%)</title><rect x="690.5" y="245" width="0.3" height="15.0" fill="rgb(216,23,7)" rx="2" ry="2" />
<text  x="693.45" y="255.5" ></text>
</g>
<g >
<title>&lt;built-in_method_linear_a8_w8_b32_o32_with_scaling_of_PyCapsule_object_at_0x7f8eb82deed0&gt; (104,840 us., 1.55%)</title><rect x="690.8" y="261" width="18.2" height="15.0" fill="rgb(228,101,48)" rx="2" ry="2" />
<text  x="693.77" y="271.5" ></text>
</g>
<g >
<title>torch_int/nn/linear.py(92):_forward (92,602 us., 1.37%)</title><rect x="709.0" y="245" width="16.2" height="15.0" fill="rgb(252,189,11)" rx="2" ry="2" />
<text  x="712.03" y="255.5" ></text>
</g>
<g >
<title>&lt;built-in_method_embedding_of_type_object_at_0x7f8face4b9c0&gt; (5,708 us., 0.08%)</title><rect x="131.3" y="261" width="1.0" height="15.0" fill="rgb(242,89,7)" rx="2" ry="2" />
<text  x="134.33" y="271.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,812 us., 0.03%)</title><rect x="690.5" y="117" width="0.3" height="15.0" fill="rgb(220,93,3)" rx="2" ry="2" />
<text  x="693.45" y="127.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (599 us., 0.01%)</title><rect x="1189.9" y="181" width="0.1" height="15.0" fill="rgb(206,54,36)" rx="2" ry="2" />
<text  x="1192.90" y="191.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (1,934,980 us., 28.57%)</title><rect x="852.8" y="181" width="337.1" height="15.0" fill="rgb(251,93,30)" rx="2" ry="2" />
<text  x="855.81" y="191.5" >torch_int/nn/opt.py(321):_forward</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (636,043 us., 9.39%)</title><rect x="132.3" y="165" width="110.8" height="15.0" fill="rgb(236,10,31)" rx="2" ry="2" />
<text  x="135.33" y="175.5" >nn.Module:_In..</text>
</g>
<g >
<title>torch_int/nn/linear.py(122):_forward (92,074 us., 1.36%)</title><rect x="725.2" y="245" width="16.0" height="15.0" fill="rgb(250,20,22)" rx="2" ry="2" />
<text  x="728.16" y="255.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,597 us., 0.02%)</title><rect x="44.2" y="181" width="0.3" height="15.0" fill="rgb(245,33,14)" rx="2" ry="2" />
<text  x="47.19" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (636,043 us., 9.39%)</title><rect x="132.3" y="197" width="110.8" height="15.0" fill="rgb(215,170,11)" rx="2" ry="2" />
<text  x="135.33" y="207.5" >nn.Module:_In..</text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (92,602 us., 1.37%)</title><rect x="709.0" y="149" width="16.2" height="15.0" fill="rgb(225,106,32)" rx="2" ry="2" />
<text  x="712.03" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (2,431,104 us., 35.89%)</title><rect x="266.6" y="181" width="423.6" height="15.0" fill="rgb(235,160,17)" rx="2" ry="2" />
<text  x="269.64" y="191.5" >nn.Module:_Int8OPTDecoderLayer</text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (125,233 us., 1.85%)</title><rect x="244.8" y="197" width="21.8" height="15.0" fill="rgb(224,95,34)" rx="2" ry="2" />
<text  x="247.83" y="207.5" >n..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (92,074 us., 1.36%)</title><rect x="725.2" y="101" width="16.0" height="15.0" fill="rgb(251,149,50)" rx="2" ry="2" />
<text  x="728.16" y="111.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(43):__shape (125,233 us., 1.85%)</title><rect x="244.8" y="245" width="21.8" height="15.0" fill="rgb(208,128,28)" rx="2" ry="2" />
<text  x="247.83" y="255.5" >t..</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (3,101 us., 0.05%)</title><rect x="43.7" y="245" width="0.5" height="15.0" fill="rgb(252,45,3)" rx="2" ry="2" />
<text  x="46.65" y="255.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (193,186 us., 2.85%)</title><rect x="10.0" y="165" width="33.7" height="15.0" fill="rgb(240,195,39)" rx="2" ry="2" />
<text  x="13.00" y="175.5" >to..</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (125,233 us., 1.85%)</title><rect x="244.8" y="149" width="21.8" height="15.0" fill="rgb(229,72,51)" rx="2" ry="2" />
<text  x="247.83" y="159.5" >t..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (52,307 us., 0.77%)</title><rect x="690.8" y="117" width="9.1" height="15.0" fill="rgb(252,45,2)" rx="2" ry="2" />
<text  x="693.77" y="127.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (2,698 us., 0.04%)</title><rect x="131.9" y="117" width="0.4" height="15.0" fill="rgb(243,101,30)" rx="2" ry="2" />
<text  x="134.86" y="127.5" ></text>
</g>
<g >
<title>&lt;built-in_method_dq_add_layernorm_q_of_PyCapsule_object_at_0x7f8eb82def30&gt; (498,620 us., 7.36%)</title><rect x="44.5" y="261" width="86.8" height="15.0" fill="rgb(218,147,6)" rx="2" ry="2" />
<text  x="47.47" y="271.5" >&lt;built-in_..</text>
</g>
<g >
<title>torch_int/nn/opt.py(300):__prepare_decoder_attention_mask (1,428 us., 0.02%)</title><rect x="690.2" y="229" width="0.3" height="15.0" fill="rgb(240,160,42)" rx="2" ry="2" />
<text  x="693.20" y="239.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (125,233 us., 1.85%)</title><rect x="244.8" y="181" width="21.8" height="15.0" fill="rgb(213,121,14)" rx="2" ry="2" />
<text  x="247.83" y="191.5" >t..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (2,698 us., 0.04%)</title><rect x="131.9" y="165" width="0.4" height="15.0" fill="rgb(226,137,15)" rx="2" ry="2" />
<text  x="134.86" y="175.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,428 us., 0.02%)</title><rect x="690.2" y="181" width="0.3" height="15.0" fill="rgb(232,13,2)" rx="2" ry="2" />
<text  x="693.20" y="191.5" ></text>
</g>
<g >
<title>torch_int/functional/fused.py(24):_dq_add_layernorm_q_cpp (498,620 us., 7.36%)</title><rect x="44.5" y="245" width="86.8" height="15.0" fill="rgb(213,223,53)" rx="2" ry="2" />
<text  x="47.47" y="255.5" >torch_int/..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,812 us., 0.03%)</title><rect x="690.5" y="133" width="0.3" height="15.0" fill="rgb(235,122,4)" rx="2" ry="2" />
<text  x="693.45" y="143.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (1,428 us., 0.02%)</title><rect x="690.2" y="213" width="0.3" height="15.0" fill="rgb(243,40,25)" rx="2" ry="2" />
<text  x="693.20" y="223.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (5,679 us., 0.08%)</title><rect x="243.8" y="165" width="1.0" height="15.0" fill="rgb(221,85,23)" rx="2" ry="2" />
<text  x="246.84" y="175.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (92,602 us., 1.37%)</title><rect x="709.0" y="85" width="16.2" height="15.0" fill="rgb(222,90,2)" rx="2" ry="2" />
<text  x="712.03" y="95.5" ></text>
</g>
<g >
<title>&lt;built-in_method_cumsum_of_type_object_at_0x7f8face4b9c0&gt; (1,597 us., 0.02%)</title><rect x="44.2" y="261" width="0.3" height="15.0" fill="rgb(249,193,33)" rx="2" ry="2" />
<text  x="47.19" y="271.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (125,233 us., 1.85%)</title><rect x="244.8" y="69" width="21.8" height="15.0" fill="rgb(213,87,15)" rx="2" ry="2" />
<text  x="247.83" y="79.5" >t..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (52,533 us., 0.78%)</title><rect x="699.9" y="181" width="9.1" height="15.0" fill="rgb(240,75,42)" rx="2" ry="2" />
<text  x="702.88" y="191.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (125,233 us., 1.85%)</title><rect x="244.8" y="229" width="21.8" height="15.0" fill="rgb(228,199,44)" rx="2" ry="2" />
<text  x="247.83" y="239.5" >t..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,428 us., 0.02%)</title><rect x="690.2" y="149" width="0.3" height="15.0" fill="rgb(249,163,4)" rx="2" ry="2" />
<text  x="693.20" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (125,233 us., 1.85%)</title><rect x="244.8" y="133" width="21.8" height="15.0" fill="rgb(252,199,8)" rx="2" ry="2" />
<text  x="247.83" y="143.5" >n..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (1,428 us., 0.02%)</title><rect x="690.2" y="165" width="0.3" height="15.0" fill="rgb(214,141,21)" rx="2" ry="2" />
<text  x="693.20" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (3,010 us., 0.04%)</title><rect x="131.3" y="181" width="0.6" height="15.0" fill="rgb(215,149,9)" rx="2" ry="2" />
<text  x="134.33" y="191.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (1,597 us., 0.02%)</title><rect x="44.2" y="245" width="0.3" height="15.0" fill="rgb(233,53,23)" rx="2" ry="2" />
<text  x="47.19" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (5,679 us., 0.08%)</title><rect x="243.8" y="229" width="1.0" height="15.0" fill="rgb(240,176,26)" rx="2" ry="2" />
<text  x="246.84" y="239.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (636,043 us., 9.39%)</title><rect x="132.3" y="181" width="110.8" height="15.0" fill="rgb(223,107,27)" rx="2" ry="2" />
<text  x="135.33" y="191.5" >torch_int/nn/..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (599 us., 0.01%)</title><rect x="1189.9" y="165" width="0.1" height="15.0" fill="rgb(220,4,14)" rx="2" ry="2" />
<text  x="1192.90" y="175.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (52,307 us., 0.77%)</title><rect x="690.8" y="165" width="9.1" height="15.0" fill="rgb(230,9,47)" rx="2" ry="2" />
<text  x="693.77" y="175.5" ></text>
</g>
<g >
<title>&lt;built-in_function_linear&gt; (193,186 us., 2.85%)</title><rect x="10.0" y="261" width="33.7" height="15.0" fill="rgb(220,161,18)" rx="2" ry="2" />
<text  x="13.00" y="271.5" >&lt;b..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (1,812 us., 0.03%)</title><rect x="690.5" y="149" width="0.3" height="15.0" fill="rgb(217,126,52)" rx="2" ry="2" />
<text  x="693.45" y="159.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (3,010 us., 0.04%)</title><rect x="131.3" y="117" width="0.6" height="15.0" fill="rgb(212,138,19)" rx="2" ry="2" />
<text  x="134.33" y="127.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (636,043 us., 9.39%)</title><rect x="132.3" y="117" width="110.8" height="15.0" fill="rgb(240,13,24)" rx="2" ry="2" />
<text  x="135.33" y="127.5" >transformers/..</text>
</g>
<g >
<title>nn.Module:_DQ_Add_LayerNorm_Q (498,620 us., 7.36%)</title><rect x="44.5" y="213" width="86.8" height="15.0" fill="rgb(241,79,30)" rx="2" ry="2" />
<text  x="47.47" y="223.5" >nn.Module:..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (636,043 us., 9.39%)</title><rect x="132.3" y="133" width="110.8" height="15.0" fill="rgb(226,112,13)" rx="2" ry="2" />
<text  x="135.33" y="143.5" >nn.Module:_In..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (92,602 us., 1.37%)</title><rect x="709.0" y="53" width="16.2" height="15.0" fill="rgb(253,178,3)" rx="2" ry="2" />
<text  x="712.03" y="63.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (3,101 us., 0.05%)</title><rect x="43.7" y="213" width="0.5" height="15.0" fill="rgb(223,63,21)" rx="2" ry="2" />
<text  x="46.65" y="223.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (2,431,104 us., 35.89%)</title><rect x="266.6" y="229" width="423.6" height="15.0" fill="rgb(248,195,10)" rx="2" ry="2" />
<text  x="269.64" y="239.5" >torch/autograd/grad_mode.py(24):_decorate_context</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (52,533 us., 0.78%)</title><rect x="699.9" y="117" width="9.1" height="15.0" fill="rgb(240,44,9)" rx="2" ry="2" />
<text  x="702.88" y="127.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (2,431,104 us., 35.89%)</title><rect x="266.6" y="85" width="423.6" height="15.0" fill="rgb(210,80,9)" rx="2" ry="2" />
<text  x="269.64" y="95.5" >torch/autograd/grad_mode.py(27):_decorate_context</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (92,602 us., 1.37%)</title><rect x="709.0" y="69" width="16.2" height="15.0" fill="rgb(251,132,19)" rx="2" ry="2" />
<text  x="712.03" y="79.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (92,074 us., 1.36%)</title><rect x="725.2" y="181" width="16.0" height="15.0" fill="rgb(237,32,40)" rx="2" ry="2" />
<text  x="728.16" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (125,233 us., 1.85%)</title><rect x="244.8" y="165" width="21.8" height="15.0" fill="rgb(226,205,3)" rx="2" ry="2" />
<text  x="247.83" y="175.5" >n..</text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (52,533 us., 0.78%)</title><rect x="699.9" y="149" width="9.1" height="15.0" fill="rgb(212,44,45)" rx="2" ry="2" />
<text  x="702.88" y="159.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (634,669 us., 9.37%)</title><rect x="741.2" y="165" width="110.6" height="15.0" fill="rgb(244,96,30)" rx="2" ry="2" />
<text  x="744.20" y="175.5" >torch_int/nn/..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (802 us., 0.01%)</title><rect x="851.9" y="181" width="0.1" height="15.0" fill="rgb(210,131,30)" rx="2" ry="2" />
<text  x="854.85" y="191.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (4,061 us., 0.06%)</title><rect x="243.1" y="229" width="0.7" height="15.0" fill="rgb(250,198,9)" rx="2" ry="2" />
<text  x="246.13" y="239.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,428 us., 0.02%)</title><rect x="690.2" y="133" width="0.3" height="15.0" fill="rgb(253,193,22)" rx="2" ry="2" />
<text  x="693.20" y="143.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (125,233 us., 1.85%)</title><rect x="244.8" y="85" width="21.8" height="15.0" fill="rgb(236,35,25)" rx="2" ry="2" />
<text  x="247.83" y="95.5" >p..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (92,602 us., 1.37%)</title><rect x="709.0" y="133" width="16.2" height="15.0" fill="rgb(230,5,46)" rx="2" ry="2" />
<text  x="712.03" y="143.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (52,307 us., 0.77%)</title><rect x="690.8" y="133" width="9.1" height="15.0" fill="rgb(212,177,25)" rx="2" ry="2" />
<text  x="693.77" y="143.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (2,431,104 us., 35.89%)</title><rect x="266.6" y="133" width="423.6" height="15.0" fill="rgb(235,4,23)" rx="2" ry="2" />
<text  x="269.64" y="143.5" >transformers/models/opt/modeling_opt.py(840):_forward</text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (1,934,980 us., 28.57%)</title><rect x="852.8" y="261" width="337.1" height="15.0" fill="rgb(232,206,14)" rx="2" ry="2" />
<text  x="855.81" y="271.5" >torch_int/nn/opt.py(46):_forward</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (498,620 us., 7.36%)</title><rect x="44.5" y="149" width="86.8" height="15.0" fill="rgb(233,3,37)" rx="2" ry="2" />
<text  x="47.47" y="159.5" >nn.Module:..</text>
</g>
<g >
<title>nn.Module:_Linear (193,186 us., 2.85%)</title><rect x="10.0" y="229" width="33.7" height="15.0" fill="rgb(226,1,24)" rx="2" ry="2" />
<text  x="13.00" y="239.5" >nn..</text>
</g>
<g >
<title>nn.Module:_LayerNorm (1,812 us., 0.03%)</title><rect x="690.5" y="213" width="0.3" height="15.0" fill="rgb(220,27,3)" rx="2" ry="2" />
<text  x="693.45" y="223.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (125,233 us., 1.85%)</title><rect x="244.8" y="213" width="21.8" height="15.0" fill="rgb(249,40,38)" rx="2" ry="2" />
<text  x="247.83" y="223.5" >t..</text>
</g>
<g >
<title>torch_int/nn/linear.py(62):_forward (104,840 us., 1.55%)</title><rect x="690.8" y="245" width="18.2" height="15.0" fill="rgb(238,83,39)" rx="2" ry="2" />
<text  x="693.77" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (2,698 us., 0.04%)</title><rect x="131.9" y="133" width="0.4" height="15.0" fill="rgb(240,116,47)" rx="2" ry="2" />
<text  x="134.86" y="143.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (498,620 us., 7.36%)</title><rect x="44.5" y="197" width="86.8" height="15.0" fill="rgb(241,181,31)" rx="2" ry="2" />
<text  x="47.47" y="207.5" >torch_int/..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (52,533 us., 0.78%)</title><rect x="699.9" y="37" width="9.1" height="15.0" fill="rgb(239,138,4)" rx="2" ry="2" />
<text  x="702.88" y="47.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (634,669 us., 9.37%)</title><rect x="741.2" y="133" width="110.6" height="15.0" fill="rgb(248,223,9)" rx="2" ry="2" />
<text  x="744.20" y="143.5" >transformers/..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (2,698 us., 0.04%)</title><rect x="131.9" y="213" width="0.4" height="15.0" fill="rgb(221,225,42)" rx="2" ry="2" />
<text  x="134.86" y="223.5" ></text>
</g>
<g >
<title>&lt;built-in_method_linear_relu_a8_w8_b8_o8_of_PyCapsule_object_at_0x7f8eb82dee70&gt; (92,074 us., 1.36%)</title><rect x="725.2" y="261" width="16.0" height="15.0" fill="rgb(235,110,52)" rx="2" ry="2" />
<text  x="728.16" y="271.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (52,533 us., 0.78%)</title><rect x="699.9" y="69" width="9.1" height="15.0" fill="rgb(247,170,7)" rx="2" ry="2" />
<text  x="702.88" y="79.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (193,186 us., 2.85%)</title><rect x="10.0" y="181" width="33.7" height="15.0" fill="rgb(237,139,32)" rx="2" ry="2" />
<text  x="13.00" y="191.5" >pr..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (1,428 us., 0.02%)</title><rect x="690.2" y="197" width="0.3" height="15.0" fill="rgb(207,167,11)" rx="2" ry="2" />
<text  x="693.20" y="207.5" ></text>
</g>
<g >
<title>torch/nn/functional.py(2099):_embedding (5,708 us., 0.08%)</title><rect x="131.3" y="245" width="1.0" height="15.0" fill="rgb(207,59,8)" rx="2" ry="2" />
<text  x="134.33" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (52,533 us., 0.78%)</title><rect x="699.9" y="165" width="9.1" height="15.0" fill="rgb(228,207,51)" rx="2" ry="2" />
<text  x="702.88" y="175.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (52,533 us., 0.78%)</title><rect x="699.9" y="53" width="9.1" height="15.0" fill="rgb(243,217,8)" rx="2" ry="2" />
<text  x="702.88" y="63.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (634,669 us., 9.37%)</title><rect x="741.2" y="197" width="110.6" height="15.0" fill="rgb(253,70,34)" rx="2" ry="2" />
<text  x="744.20" y="207.5" >torch_int/nn/..</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (498,620 us., 7.36%)</title><rect x="44.5" y="165" width="86.8" height="15.0" fill="rgb(231,95,53)" rx="2" ry="2" />
<text  x="47.47" y="175.5" >torch_int/..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (5,679 us., 0.08%)</title><rect x="243.8" y="181" width="1.0" height="15.0" fill="rgb(243,12,39)" rx="2" ry="2" />
<text  x="246.84" y="191.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (3,010 us., 0.04%)</title><rect x="131.3" y="165" width="0.6" height="15.0" fill="rgb(227,20,49)" rx="2" ry="2" />
<text  x="134.33" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (125,233 us., 1.85%)</title><rect x="244.8" y="101" width="21.8" height="15.0" fill="rgb(207,65,37)" rx="2" ry="2" />
<text  x="247.83" y="111.5" >n..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (636,043 us., 9.39%)</title><rect x="132.3" y="101" width="110.8" height="15.0" fill="rgb(253,222,28)" rx="2" ry="2" />
<text  x="135.33" y="111.5" >nn.Module:_In..</text>
</g>
<g >
<title>nn.Module:_Embedding (3,010 us., 0.04%)</title><rect x="131.3" y="213" width="0.6" height="15.0" fill="rgb(207,180,45)" rx="2" ry="2" />
<text  x="134.33" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_W8A8B8O8Linear (92,602 us., 1.37%)</title><rect x="709.0" y="213" width="16.2" height="15.0" fill="rgb(252,7,35)" rx="2" ry="2" />
<text  x="712.03" y="223.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (599 us., 0.01%)</title><rect x="1189.9" y="261" width="0.1" height="15.0" fill="rgb(221,160,5)" rx="2" ry="2" />
<text  x="1192.90" y="271.5" ></text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (1,597 us., 0.02%)</title><rect x="44.2" y="229" width="0.3" height="15.0" fill="rgb(232,43,52)" rx="2" ry="2" />
<text  x="47.19" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (1,812 us., 0.03%)</title><rect x="690.5" y="181" width="0.3" height="15.0" fill="rgb(243,29,31)" rx="2" ry="2" />
<text  x="693.45" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (193,186 us., 2.85%)</title><rect x="10.0" y="197" width="33.7" height="15.0" fill="rgb(212,74,18)" rx="2" ry="2" />
<text  x="13.00" y="207.5" >nn..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,597 us., 0.02%)</title><rect x="44.2" y="149" width="0.3" height="15.0" fill="rgb(223,214,28)" rx="2" ry="2" />
<text  x="47.19" y="159.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (802 us., 0.01%)</title><rect x="851.9" y="213" width="0.1" height="15.0" fill="rgb(227,15,43)" rx="2" ry="2" />
<text  x="854.85" y="223.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (1,934,980 us., 28.57%)</title><rect x="852.8" y="245" width="337.1" height="15.0" fill="rgb(250,41,26)" rx="2" ry="2" />
<text  x="855.81" y="255.5" >torch/autograd/grad_mode.py(24):_decorate_con..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (636,043 us., 9.39%)</title><rect x="132.3" y="69" width="110.8" height="15.0" fill="rgb(244,103,8)" rx="2" ry="2" />
<text  x="135.33" y="79.5" >torch/autogra..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (4,318 us., 0.06%)</title><rect x="852.1" y="213" width="0.7" height="15.0" fill="rgb(210,22,22)" rx="2" ry="2" />
<text  x="855.06" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (5,679 us., 0.08%)</title><rect x="243.8" y="197" width="1.0" height="15.0" fill="rgb(243,8,40)" rx="2" ry="2" />
<text  x="246.84" y="207.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (599 us., 0.01%)</title><rect x="1189.9" y="229" width="0.1" height="15.0" fill="rgb(230,180,33)" rx="2" ry="2" />
<text  x="1192.90" y="239.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (92,602 us., 1.37%)</title><rect x="709.0" y="181" width="16.2" height="15.0" fill="rgb(237,195,24)" rx="2" ry="2" />
<text  x="712.03" y="191.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (5,679 us., 0.08%)</title><rect x="243.8" y="245" width="1.0" height="15.0" fill="rgb(244,93,29)" rx="2" ry="2" />
<text  x="246.84" y="255.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (599 us., 0.01%)</title><rect x="1189.9" y="149" width="0.1" height="15.0" fill="rgb(215,196,35)" rx="2" ry="2" />
<text  x="1192.90" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (2,431,104 us., 35.89%)</title><rect x="266.6" y="213" width="423.6" height="15.0" fill="rgb(231,42,6)" rx="2" ry="2" />
<text  x="269.64" y="223.5" >nn.Module:_Int8OPTAttention</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (634,669 us., 9.37%)</title><rect x="741.2" y="85" width="110.6" height="15.0" fill="rgb(212,180,49)" rx="2" ry="2" />
<text  x="744.20" y="95.5" >torch/autogra..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (2,698 us., 0.04%)</title><rect x="131.9" y="101" width="0.4" height="15.0" fill="rgb(240,157,23)" rx="2" ry="2" />
<text  x="134.86" y="111.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (104,840 us., 1.55%)</title><rect x="690.8" y="229" width="18.2" height="15.0" fill="rgb(242,105,4)" rx="2" ry="2" />
<text  x="693.77" y="239.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (498,620 us., 7.36%)</title><rect x="44.5" y="133" width="86.8" height="15.0" fill="rgb(206,226,40)" rx="2" ry="2" />
<text  x="47.47" y="143.5" >transforme..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (52,533 us., 0.78%)</title><rect x="699.9" y="133" width="9.1" height="15.0" fill="rgb(208,197,22)" rx="2" ry="2" />
<text  x="702.88" y="143.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (3,010 us., 0.04%)</title><rect x="131.3" y="133" width="0.6" height="15.0" fill="rgb(243,98,28)" rx="2" ry="2" />
<text  x="134.33" y="143.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (4,318 us., 0.06%)</title><rect x="852.1" y="197" width="0.7" height="15.0" fill="rgb(234,104,52)" rx="2" ry="2" />
<text  x="855.06" y="207.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,812 us., 0.03%)</title><rect x="690.5" y="165" width="0.3" height="15.0" fill="rgb(213,24,3)" rx="2" ry="2" />
<text  x="693.45" y="175.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (52,307 us., 0.77%)</title><rect x="690.8" y="101" width="9.1" height="15.0" fill="rgb(208,126,53)" rx="2" ry="2" />
<text  x="693.77" y="111.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(300):__prepare_decoder_attention_mask (4,061 us., 0.06%)</title><rect x="243.1" y="245" width="0.7" height="15.0" fill="rgb(206,152,3)" rx="2" ry="2" />
<text  x="246.13" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (599 us., 0.01%)</title><rect x="1189.9" y="213" width="0.1" height="15.0" fill="rgb(221,26,22)" rx="2" ry="2" />
<text  x="1192.90" y="223.5" ></text>
</g>
<g >
<title>torch/nn/modules/sparse.py(157):_forward (5,708 us., 0.08%)</title><rect x="131.3" y="229" width="1.0" height="15.0" fill="rgb(231,81,35)" rx="2" ry="2" />
<text  x="134.33" y="239.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (125,233 us., 1.85%)</title><rect x="244.8" y="117" width="21.8" height="15.0" fill="rgb(220,179,0)" rx="2" ry="2" />
<text  x="247.83" y="127.5" >t..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (3,101 us., 0.05%)</title><rect x="43.7" y="165" width="0.5" height="15.0" fill="rgb(241,52,16)" rx="2" ry="2" />
<text  x="46.65" y="175.5" ></text>
</g>
<g >
<title>torch_int/nn/fused.py(13):_forward (498,620 us., 7.36%)</title><rect x="44.5" y="229" width="86.8" height="15.0" fill="rgb(214,13,44)" rx="2" ry="2" />
<text  x="47.47" y="239.5" >torch_int/..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (1,934,980 us., 28.57%)</title><rect x="852.8" y="197" width="337.1" height="15.0" fill="rgb(216,104,2)" rx="2" ry="2" />
<text  x="855.81" y="207.5" >nn.Module:_Int8OPTDecoderLayer</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (2,431,104 us., 35.89%)</title><rect x="266.6" y="117" width="423.6" height="15.0" fill="rgb(210,42,25)" rx="2" ry="2" />
<text  x="269.64" y="127.5" >nn.Module:_Int8OPTForCausalLM</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (92,074 us., 1.36%)</title><rect x="725.2" y="85" width="16.0" height="15.0" fill="rgb(244,79,15)" rx="2" ry="2" />
<text  x="728.16" y="95.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (498,620 us., 7.36%)</title><rect x="44.5" y="85" width="86.8" height="15.0" fill="rgb(218,183,34)" rx="2" ry="2" />
<text  x="47.47" y="95.5" >torch/auto..</text>
</g>
<g >
<title>nn.Module:_W8A8B8O8LinearReLU (92,074 us., 1.36%)</title><rect x="725.2" y="213" width="16.0" height="15.0" fill="rgb(224,57,43)" rx="2" ry="2" />
<text  x="728.16" y="223.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (52,307 us., 0.77%)</title><rect x="690.8" y="85" width="9.1" height="15.0" fill="rgb(254,103,28)" rx="2" ry="2" />
<text  x="693.77" y="95.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (1,812 us., 0.03%)</title><rect x="690.5" y="197" width="0.3" height="15.0" fill="rgb(234,162,13)" rx="2" ry="2" />
<text  x="693.45" y="207.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (4,318 us., 0.06%)</title><rect x="852.1" y="229" width="0.7" height="15.0" fill="rgb(243,213,40)" rx="2" ry="2" />
<text  x="855.06" y="239.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (92,602 us., 1.37%)</title><rect x="709.0" y="117" width="16.2" height="15.0" fill="rgb(229,117,47)" rx="2" ry="2" />
<text  x="712.03" y="127.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (4,061 us., 0.06%)</title><rect x="243.1" y="149" width="0.7" height="15.0" fill="rgb(223,61,22)" rx="2" ry="2" />
<text  x="246.13" y="159.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (802 us., 0.01%)</title><rect x="851.9" y="245" width="0.1" height="15.0" fill="rgb(224,181,3)" rx="2" ry="2" />
<text  x="854.85" y="255.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (636,043 us., 9.39%)</title><rect x="132.3" y="213" width="110.8" height="15.0" fill="rgb(238,180,8)" rx="2" ry="2" />
<text  x="135.33" y="223.5" >torch/autogra..</text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (2,698 us., 0.04%)</title><rect x="131.9" y="197" width="0.4" height="15.0" fill="rgb(205,7,6)" rx="2" ry="2" />
<text  x="134.86" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (92,074 us., 1.36%)</title><rect x="725.2" y="149" width="16.0" height="15.0" fill="rgb(235,108,29)" rx="2" ry="2" />
<text  x="728.16" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (52,533 us., 0.78%)</title><rect x="699.9" y="101" width="9.1" height="15.0" fill="rgb(246,147,23)" rx="2" ry="2" />
<text  x="702.88" y="111.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (92,074 us., 1.36%)</title><rect x="725.2" y="117" width="16.0" height="15.0" fill="rgb(207,205,27)" rx="2" ry="2" />
<text  x="728.16" y="127.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(89):__expand_mask (1,428 us., 0.02%)</title><rect x="690.2" y="245" width="0.3" height="15.0" fill="rgb(237,200,26)" rx="2" ry="2" />
<text  x="693.20" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (4,318 us., 0.06%)</title><rect x="852.1" y="245" width="0.7" height="15.0" fill="rgb(207,77,22)" rx="2" ry="2" />
<text  x="855.06" y="255.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (1,597 us., 0.02%)</title><rect x="44.2" y="213" width="0.3" height="15.0" fill="rgb(217,197,40)" rx="2" ry="2" />
<text  x="47.19" y="223.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (2,698 us., 0.04%)</title><rect x="131.9" y="149" width="0.4" height="15.0" fill="rgb(237,136,40)" rx="2" ry="2" />
<text  x="134.86" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (802 us., 0.01%)</title><rect x="851.9" y="229" width="0.1" height="15.0" fill="rgb(213,11,48)" rx="2" ry="2" />
<text  x="854.85" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (634,669 us., 9.37%)</title><rect x="741.2" y="149" width="110.6" height="15.0" fill="rgb(222,32,48)" rx="2" ry="2" />
<text  x="744.20" y="159.5" >nn.Module:_In..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (4,061 us., 0.06%)</title><rect x="243.1" y="213" width="0.7" height="15.0" fill="rgb(233,146,7)" rx="2" ry="2" />
<text  x="246.13" y="223.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (4,318 us., 0.06%)</title><rect x="852.1" y="181" width="0.7" height="15.0" fill="rgb(241,139,18)" rx="2" ry="2" />
<text  x="855.06" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (3,101 us., 0.05%)</title><rect x="43.7" y="229" width="0.5" height="15.0" fill="rgb(246,75,32)" rx="2" ry="2" />
<text  x="46.65" y="239.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (193,186 us., 2.85%)</title><rect x="10.0" y="213" width="33.7" height="15.0" fill="rgb(254,170,19)" rx="2" ry="2" />
<text  x="13.00" y="223.5" >tr..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (1,597 us., 0.02%)</title><rect x="44.2" y="165" width="0.3" height="15.0" fill="rgb(219,91,50)" rx="2" ry="2" />
<text  x="47.19" y="175.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (3,010 us., 0.04%)</title><rect x="131.3" y="197" width="0.6" height="15.0" fill="rgb(254,117,40)" rx="2" ry="2" />
<text  x="134.33" y="207.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (634,669 us., 9.37%)</title><rect x="741.2" y="229" width="110.6" height="15.0" fill="rgb(240,145,11)" rx="2" ry="2" />
<text  x="744.20" y="239.5" >torch/autogra..</text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (52,533 us., 0.78%)</title><rect x="699.9" y="197" width="9.1" height="15.0" fill="rgb(250,104,23)" rx="2" ry="2" />
<text  x="702.88" y="207.5" ></text>
</g>
<g >
<title>&lt;built-in_method_layer_norm_of_type_object_at_0x7f8face4b9c0&gt; (1,812 us., 0.03%)</title><rect x="690.5" y="261" width="0.3" height="15.0" fill="rgb(231,167,3)" rx="2" ry="2" />
<text  x="693.45" y="271.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (1,934,980 us., 28.57%)</title><rect x="852.8" y="165" width="337.1" height="15.0" fill="rgb(217,16,10)" rx="2" ry="2" />
<text  x="855.81" y="175.5" >nn.Module:_Int8OPTDecoder</text>
</g>
<g >
<title>&lt;built-in_method_encode_of_str_object_at_0x7f8eb8942450&gt; (3,203,851 us., 47.30%)</title><rect x="132.3" y="261" width="558.2" height="15.0" fill="rgb(254,100,1)" rx="2" ry="2" />
<text  x="135.33" y="271.5" >&lt;built-in_method_encode_of_str_object_at_0x7f8eb8942450&gt;</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,597 us., 0.02%)</title><rect x="44.2" y="133" width="0.3" height="15.0" fill="rgb(236,138,17)" rx="2" ry="2" />
<text  x="47.19" y="143.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (4,061 us., 0.06%)</title><rect x="243.1" y="197" width="0.7" height="15.0" fill="rgb(214,138,5)" rx="2" ry="2" />
<text  x="246.13" y="207.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (636,043 us., 9.39%)</title><rect x="132.3" y="229" width="110.8" height="15.0" fill="rgb(232,185,13)" rx="2" ry="2" />
<text  x="135.33" y="239.5" >torch_int/nn/..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (498,620 us., 7.36%)</title><rect x="44.5" y="181" width="86.8" height="15.0" fill="rgb(218,166,33)" rx="2" ry="2" />
<text  x="47.47" y="191.5" >nn.Module:..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (802 us., 0.01%)</title><rect x="851.9" y="197" width="0.1" height="15.0" fill="rgb(210,148,48)" rx="2" ry="2" />
<text  x="854.85" y="207.5" ></text>
</g>
<g >
<title>all (6,773,654 us., 100%)</title><rect x="10.0" y="277" width="1180.0" height="15.0" fill="rgb(210,210,42)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (92,074 us., 1.36%)</title><rect x="725.2" y="229" width="16.0" height="15.0" fill="rgb(244,31,11)" rx="2" ry="2" />
<text  x="728.16" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (634,669 us., 9.37%)</title><rect x="741.2" y="117" width="110.6" height="15.0" fill="rgb(250,187,16)" rx="2" ry="2" />
<text  x="744.20" y="127.5" >nn.Module:_In..</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (2,698 us., 0.04%)</title><rect x="131.9" y="181" width="0.4" height="15.0" fill="rgb(231,55,1)" rx="2" ry="2" />
<text  x="134.86" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (3,010 us., 0.04%)</title><rect x="131.3" y="149" width="0.6" height="15.0" fill="rgb(227,106,49)" rx="2" ry="2" />
<text  x="134.33" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (3,101 us., 0.05%)</title><rect x="43.7" y="197" width="0.5" height="15.0" fill="rgb(237,120,50)" rx="2" ry="2" />
<text  x="46.65" y="207.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (5,679 us., 0.08%)</title><rect x="243.8" y="213" width="1.0" height="15.0" fill="rgb(231,197,34)" rx="2" ry="2" />
<text  x="246.84" y="223.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,934,980 us., 28.57%)</title><rect x="852.8" y="101" width="337.1" height="15.0" fill="rgb(212,226,39)" rx="2" ry="2" />
<text  x="855.81" y="111.5" >torch/autograd/grad_mode.py(27):_decorate_con..</text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (52,307 us., 0.77%)</title><rect x="690.8" y="197" width="9.1" height="15.0" fill="rgb(233,211,30)" rx="2" ry="2" />
<text  x="693.77" y="207.5" ></text>
</g>
<g >
<title>torch/nn/modules/linear.py(113):_forward (193,186 us., 2.85%)</title><rect x="10.0" y="245" width="33.7" height="15.0" fill="rgb(225,138,37)" rx="2" ry="2" />
<text  x="13.00" y="255.5" >to..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (1,597 us., 0.02%)</title><rect x="44.2" y="197" width="0.3" height="15.0" fill="rgb(213,100,44)" rx="2" ry="2" />
<text  x="47.19" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (52,307 us., 0.77%)</title><rect x="690.8" y="181" width="9.1" height="15.0" fill="rgb(237,67,42)" rx="2" ry="2" />
<text  x="693.77" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (2,431,104 us., 35.89%)</title><rect x="266.6" y="149" width="423.6" height="15.0" fill="rgb(251,137,6)" rx="2" ry="2" />
<text  x="269.64" y="159.5" >nn.Module:_Int8OPTDecoder</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (4,061 us., 0.06%)</title><rect x="243.1" y="165" width="0.7" height="15.0" fill="rgb(211,228,18)" rx="2" ry="2" />
<text  x="246.13" y="175.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (636,043 us., 9.39%)</title><rect x="132.3" y="85" width="110.8" height="15.0" fill="rgb(230,49,4)" rx="2" ry="2" />
<text  x="135.33" y="95.5" >profiling/uti..</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (2,431,104 us., 35.89%)</title><rect x="266.6" y="165" width="423.6" height="15.0" fill="rgb(233,185,27)" rx="2" ry="2" />
<text  x="269.64" y="175.5" >torch_int/nn/opt.py(321):_forward</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (3,101 us., 0.05%)</title><rect x="43.7" y="181" width="0.5" height="15.0" fill="rgb(249,189,26)" rx="2" ry="2" />
<text  x="46.65" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_W8A8B32O32LinearWithScaling (104,840 us., 1.55%)</title><rect x="690.8" y="213" width="18.2" height="15.0" fill="rgb(220,98,35)" rx="2" ry="2" />
<text  x="693.77" y="223.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (2,431,104 us., 35.89%)</title><rect x="266.6" y="101" width="423.6" height="15.0" fill="rgb(243,90,47)" rx="2" ry="2" />
<text  x="269.64" y="111.5" >profiling/utils.py(18):_profile_model</text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (92,602 us., 1.37%)</title><rect x="709.0" y="197" width="16.2" height="15.0" fill="rgb(221,17,51)" rx="2" ry="2" />
<text  x="712.03" y="207.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (92,074 us., 1.36%)</title><rect x="725.2" y="197" width="16.0" height="15.0" fill="rgb(243,85,0)" rx="2" ry="2" />
<text  x="728.16" y="207.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (498,620 us., 7.36%)</title><rect x="44.5" y="101" width="86.8" height="15.0" fill="rgb(236,192,10)" rx="2" ry="2" />
<text  x="47.47" y="111.5" >profiling/..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (802 us., 0.01%)</title><rect x="851.9" y="165" width="0.1" height="15.0" fill="rgb(224,151,18)" rx="2" ry="2" />
<text  x="854.85" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (4,061 us., 0.06%)</title><rect x="243.1" y="181" width="0.7" height="15.0" fill="rgb(229,34,9)" rx="2" ry="2" />
<text  x="246.13" y="191.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,934,980 us., 28.57%)</title><rect x="852.8" y="149" width="337.1" height="15.0" fill="rgb(250,39,31)" rx="2" ry="2" />
<text  x="855.81" y="159.5" >transformers/models/opt/modeling_opt.py(840):..</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (636,043 us., 9.39%)</title><rect x="132.3" y="149" width="110.8" height="15.0" fill="rgb(239,43,29)" rx="2" ry="2" />
<text  x="135.33" y="159.5" >torch_int/nn/..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (92,602 us., 1.37%)</title><rect x="709.0" y="101" width="16.2" height="15.0" fill="rgb(225,51,40)" rx="2" ry="2" />
<text  x="712.03" y="111.5" ></text>
</g>
<g >
<title>&lt;built-in_method_zeros_like_of_type_object_at_0x7f8face4b9c0&gt; (802 us., 0.01%)</title><rect x="851.9" y="261" width="0.1" height="15.0" fill="rgb(231,10,54)" rx="2" ry="2" />
<text  x="854.85" y="271.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (4,318 us., 0.06%)</title><rect x="852.1" y="261" width="0.7" height="15.0" fill="rgb(217,151,54)" rx="2" ry="2" />
<text  x="855.06" y="271.5" ></text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (599 us., 0.01%)</title><rect x="1189.9" y="245" width="0.1" height="15.0" fill="rgb(230,63,17)" rx="2" ry="2" />
<text  x="1192.90" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (1,934,980 us., 28.57%)</title><rect x="852.8" y="229" width="337.1" height="15.0" fill="rgb(242,105,5)" rx="2" ry="2" />
<text  x="855.81" y="239.5" >nn.Module:_Int8OPTAttention</text>
</g>
<g >
<title>&lt;built-in_method_linear_a8_w8_b8_o8_of_PyCapsule_object_at_0x7f8eb82def00&gt; (92,602 us., 1.37%)</title><rect x="709.0" y="261" width="16.2" height="15.0" fill="rgb(229,159,54)" rx="2" ry="2" />
<text  x="712.03" y="271.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (2,431,104 us., 35.89%)</title><rect x="266.6" y="197" width="423.6" height="15.0" fill="rgb(208,109,10)" rx="2" ry="2" />
<text  x="269.64" y="207.5" >torch_int/nn/opt.py(183):_forward</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (498,620 us., 7.36%)</title><rect x="44.5" y="117" width="86.8" height="15.0" fill="rgb(218,116,37)" rx="2" ry="2" />
<text  x="47.47" y="127.5" >nn.Module:..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (92,074 us., 1.36%)</title><rect x="725.2" y="133" width="16.0" height="15.0" fill="rgb(219,135,32)" rx="2" ry="2" />
<text  x="728.16" y="143.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (92,602 us., 1.37%)</title><rect x="709.0" y="229" width="16.2" height="15.0" fill="rgb(231,111,34)" rx="2" ry="2" />
<text  x="712.03" y="239.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (634,669 us., 9.37%)</title><rect x="741.2" y="245" width="110.6" height="15.0" fill="rgb(235,29,6)" rx="2" ry="2" />
<text  x="744.20" y="255.5" >torch_int/nn/..</text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (2,431,104 us., 35.89%)</title><rect x="266.6" y="245" width="423.6" height="15.0" fill="rgb(232,160,51)" rx="2" ry="2" />
<text  x="269.64" y="255.5" >torch_int/nn/opt.py(46):_forward</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (52,533 us., 0.78%)</title><rect x="699.9" y="85" width="9.1" height="15.0" fill="rgb(215,186,49)" rx="2" ry="2" />
<text  x="702.88" y="95.5" ></text>
</g>
<g >
<title>torch/nn/modules/normalization.py(188):_forward (1,812 us., 0.03%)</title><rect x="690.5" y="229" width="0.3" height="15.0" fill="rgb(213,125,19)" rx="2" ry="2" />
<text  x="693.45" y="239.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (599 us., 0.01%)</title><rect x="1189.9" y="197" width="0.1" height="15.0" fill="rgb(250,194,15)" rx="2" ry="2" />
<text  x="1192.90" y="207.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (1,934,980 us., 28.57%)</title><rect x="852.8" y="213" width="337.1" height="15.0" fill="rgb(205,91,28)" rx="2" ry="2" />
<text  x="855.81" y="223.5" >torch_int/nn/opt.py(183):_forward</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (52,307 us., 0.77%)</title><rect x="690.8" y="149" width="9.1" height="15.0" fill="rgb(226,35,26)" rx="2" ry="2" />
<text  x="693.77" y="159.5" ></text>
</g>
<g >
<title>&lt;built-in_method_max_of_type_object_at_0x7f8face4b9c0&gt; (634,669 us., 9.37%)</title><rect x="741.2" y="261" width="110.6" height="15.0" fill="rgb(251,30,29)" rx="2" ry="2" />
<text  x="744.20" y="271.5" >&lt;built-in_met..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (1,934,980 us., 28.57%)</title><rect x="852.8" y="133" width="337.1" height="15.0" fill="rgb(240,68,27)" rx="2" ry="2" />
<text  x="855.81" y="143.5" >nn.Module:_Int8OPTForCausalLM</text>
</g>
</g>
</svg>
