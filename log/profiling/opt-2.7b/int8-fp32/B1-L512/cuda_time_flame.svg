<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="326" onload="init(evt)" viewBox="0 0 1200 326" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="326.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >CUDA Time</text>
<text id="details" x="10.00" y="309" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="309" > </text>
<g id="frames">
<g >
<title>nn.Module:_Int8OPTDecoder (401 us., 0.01%)</title><rect x="898.9" y="229" width="0.1" height="15.0" fill="rgb(231,114,53)" rx="2" ry="2" />
<text  x="901.92" y="239.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (813 us., 0.02%)</title><rect x="898.7" y="245" width="0.2" height="15.0" fill="rgb(220,63,37)" rx="2" ry="2" />
<text  x="901.68" y="255.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,241,721 us., 30.46%)</title><rect x="397.3" y="133" width="359.4" height="15.0" fill="rgb(243,97,3)" rx="2" ry="2" />
<text  x="400.33" y="143.5" >transformers/models/opt/modeling_opt.py(840):_fo..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,241,721 us., 30.46%)</title><rect x="397.3" y="85" width="359.4" height="15.0" fill="rgb(205,134,16)" rx="2" ry="2" />
<text  x="400.33" y="95.5" >torch/autograd/grad_mode.py(27):_decorate_context</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (70,257 us., 1.72%)</title><rect x="377.0" y="149" width="20.3" height="15.0" fill="rgb(220,58,23)" rx="2" ry="2" />
<text  x="380.00" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (1,241,721 us., 30.46%)</title><rect x="397.3" y="181" width="359.4" height="15.0" fill="rgb(234,63,29)" rx="2" ry="2" />
<text  x="400.33" y="191.5" >nn.Module:_Int8OPTDecoderLayer</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (320,581 us., 7.86%)</title><rect x="805.8" y="149" width="92.8" height="15.0" fill="rgb(232,110,8)" rx="2" ry="2" />
<text  x="808.78" y="159.5" >nn.Module:_..</text>
</g>
<g >
<title>&lt;built-in_method_linear_relu_a8_w8_b8_o8_of_PyCapsule_object_at_0x7f7c9a3e0e70&gt; (50,889 us., 1.25%)</title><rect x="791.1" y="261" width="14.7" height="15.0" fill="rgb(222,207,54)" rx="2" ry="2" />
<text  x="794.05" y="271.5" ></text>
</g>
<g >
<title>torch_int/nn/fused.py(13):_forward (378,813 us., 9.29%)</title><rect x="170.5" y="229" width="109.7" height="15.0" fill="rgb(222,47,40)" rx="2" ry="2" />
<text  x="173.54" y="239.5" >torch_int/nn/..</text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (1,000,498 us., 24.54%)</title><rect x="900.2" y="229" width="289.6" height="15.0" fill="rgb(254,74,25)" rx="2" ry="2" />
<text  x="903.25" y="239.5" >nn.Module:_Int8OPTAttention</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (320,581 us., 7.86%)</title><rect x="805.8" y="181" width="92.8" height="15.0" fill="rgb(252,160,6)" rx="2" ry="2" />
<text  x="808.78" y="191.5" >nn.Module:_..</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (1,211 us., 0.03%)</title><rect x="756.8" y="213" width="0.4" height="15.0" fill="rgb(239,74,41)" rx="2" ry="2" />
<text  x="759.82" y="223.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (599 us., 0.01%)</title><rect x="1189.8" y="149" width="0.2" height="15.0" fill="rgb(245,76,41)" rx="2" ry="2" />
<text  x="1192.83" y="159.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (27,351 us., 0.67%)</title><rect x="757.6" y="165" width="7.9" height="15.0" fill="rgb(250,89,18)" rx="2" ry="2" />
<text  x="760.60" y="175.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (378,813 us., 9.29%)</title><rect x="170.5" y="101" width="109.7" height="15.0" fill="rgb(237,211,1)" rx="2" ry="2" />
<text  x="173.54" y="111.5" >profiling/uti..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (552,057 us., 13.54%)</title><rect x="10.0" y="197" width="159.8" height="15.0" fill="rgb(248,197,44)" rx="2" ry="2" />
<text  x="13.00" y="207.5" >nn.Module:_Int8OPTFo..</text>
</g>
<g >
<title>torch_int/nn/linear.py(62):_forward (54,436 us., 1.34%)</title><rect x="757.6" y="245" width="15.8" height="15.0" fill="rgb(244,174,39)" rx="2" ry="2" />
<text  x="760.60" y="255.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (4,188 us., 0.10%)</title><rect x="899.0" y="229" width="1.2" height="15.0" fill="rgb(244,195,36)" rx="2" ry="2" />
<text  x="902.03" y="239.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(300):__prepare_decoder_attention_mask (1,211 us., 0.03%)</title><rect x="756.8" y="229" width="0.4" height="15.0" fill="rgb(247,59,36)" rx="2" ry="2" />
<text  x="759.82" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (27,351 us., 0.67%)</title><rect x="757.6" y="117" width="7.9" height="15.0" fill="rgb(219,223,28)" rx="2" ry="2" />
<text  x="760.60" y="127.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (61,122 us., 1.50%)</title><rect x="773.4" y="53" width="17.7" height="15.0" fill="rgb(206,24,19)" rx="2" ry="2" />
<text  x="776.36" y="63.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (50,889 us., 1.25%)</title><rect x="791.1" y="149" width="14.7" height="15.0" fill="rgb(239,42,54)" rx="2" ry="2" />
<text  x="794.05" y="159.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (401 us., 0.01%)</title><rect x="898.9" y="213" width="0.1" height="15.0" fill="rgb(225,173,29)" rx="2" ry="2" />
<text  x="901.92" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (4,188 us., 0.10%)</title><rect x="899.0" y="213" width="1.2" height="15.0" fill="rgb(236,121,8)" rx="2" ry="2" />
<text  x="902.03" y="223.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (401 us., 0.01%)</title><rect x="898.9" y="181" width="0.1" height="15.0" fill="rgb(213,60,42)" rx="2" ry="2" />
<text  x="901.92" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (27,085 us., 0.66%)</title><rect x="765.5" y="69" width="7.9" height="15.0" fill="rgb(229,175,43)" rx="2" ry="2" />
<text  x="768.52" y="79.5" ></text>
</g>
<g >
<title>torch/nn/functional.py(2099):_embedding (3,849 us., 0.09%)</title><rect x="280.2" y="245" width="1.1" height="15.0" fill="rgb(228,173,32)" rx="2" ry="2" />
<text  x="283.18" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (1,956 us., 0.05%)</title><rect x="280.2" y="149" width="0.5" height="15.0" fill="rgb(252,73,16)" rx="2" ry="2" />
<text  x="283.18" y="159.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (322,170 us., 7.90%)</title><rect x="281.3" y="229" width="93.2" height="15.0" fill="rgb(220,60,44)" rx="2" ry="2" />
<text  x="284.29" y="239.5" >torch_int/n..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (61,122 us., 1.50%)</title><rect x="773.4" y="85" width="17.7" height="15.0" fill="rgb(245,124,36)" rx="2" ry="2" />
<text  x="776.36" y="95.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (61,122 us., 1.50%)</title><rect x="773.4" y="37" width="17.7" height="15.0" fill="rgb(252,155,2)" rx="2" ry="2" />
<text  x="776.36" y="47.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (322,170 us., 7.90%)</title><rect x="281.3" y="117" width="93.2" height="15.0" fill="rgb(254,48,18)" rx="2" ry="2" />
<text  x="284.29" y="127.5" >transformer..</text>
</g>
<g >
<title>nn.Module:_Linear (552,057 us., 13.54%)</title><rect x="10.0" y="229" width="159.8" height="15.0" fill="rgb(211,103,34)" rx="2" ry="2" />
<text  x="13.00" y="239.5" >nn.Module:_Linear</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (322,170 us., 7.90%)</title><rect x="281.3" y="149" width="93.2" height="15.0" fill="rgb(238,172,5)" rx="2" ry="2" />
<text  x="284.29" y="159.5" >torch_int/n..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (1,211 us., 0.03%)</title><rect x="756.8" y="197" width="0.4" height="15.0" fill="rgb(224,132,35)" rx="2" ry="2" />
<text  x="759.82" y="207.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (27,351 us., 0.67%)</title><rect x="757.6" y="85" width="7.9" height="15.0" fill="rgb(233,92,34)" rx="2" ry="2" />
<text  x="760.60" y="95.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (813 us., 0.02%)</title><rect x="898.7" y="229" width="0.2" height="15.0" fill="rgb(246,152,39)" rx="2" ry="2" />
<text  x="901.68" y="239.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,241,721 us., 30.46%)</title><rect x="397.3" y="101" width="359.4" height="15.0" fill="rgb(223,130,20)" rx="2" ry="2" />
<text  x="400.33" y="111.5" >profiling/utils.py(18):_profile_model</text>
</g>
<g >
<title>torch/nn/modules/linear.py(113):_forward (552,057 us., 13.54%)</title><rect x="10.0" y="245" width="159.8" height="15.0" fill="rgb(250,207,52)" rx="2" ry="2" />
<text  x="13.00" y="255.5" >torch/nn/modules/lin..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (70,257 us., 1.72%)</title><rect x="377.0" y="85" width="20.3" height="15.0" fill="rgb(236,38,1)" rx="2" ry="2" />
<text  x="380.00" y="95.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (813 us., 0.02%)</title><rect x="898.7" y="165" width="0.2" height="15.0" fill="rgb(215,62,21)" rx="2" ry="2" />
<text  x="901.68" y="175.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (1,000,498 us., 24.54%)</title><rect x="900.2" y="181" width="289.6" height="15.0" fill="rgb(227,3,52)" rx="2" ry="2" />
<text  x="903.25" y="191.5" >torch_int/nn/opt.py(321):_forward</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,956 us., 0.05%)</title><rect x="280.2" y="133" width="0.5" height="15.0" fill="rgb(216,50,18)" rx="2" ry="2" />
<text  x="283.18" y="143.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (1,893 us., 0.05%)</title><rect x="280.7" y="133" width="0.6" height="15.0" fill="rgb(235,53,19)" rx="2" ry="2" />
<text  x="283.75" y="143.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (2,294 us., 0.06%)</title><rect x="169.8" y="213" width="0.6" height="15.0" fill="rgb(228,126,1)" rx="2" ry="2" />
<text  x="172.78" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (61,122 us., 1.50%)</title><rect x="773.4" y="69" width="17.7" height="15.0" fill="rgb(220,121,39)" rx="2" ry="2" />
<text  x="776.36" y="79.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (599 us., 0.01%)</title><rect x="1189.8" y="197" width="0.2" height="15.0" fill="rgb(222,40,15)" rx="2" ry="2" />
<text  x="1192.83" y="207.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (50,889 us., 1.25%)</title><rect x="791.1" y="165" width="14.7" height="15.0" fill="rgb(222,33,24)" rx="2" ry="2" />
<text  x="794.05" y="175.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,956 us., 0.05%)</title><rect x="280.2" y="165" width="0.5" height="15.0" fill="rgb(214,46,13)" rx="2" ry="2" />
<text  x="283.18" y="175.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (27,085 us., 0.66%)</title><rect x="765.5" y="197" width="7.9" height="15.0" fill="rgb(221,128,47)" rx="2" ry="2" />
<text  x="768.52" y="207.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,000,498 us., 24.54%)</title><rect x="900.2" y="101" width="289.6" height="15.0" fill="rgb(243,91,10)" rx="2" ry="2" />
<text  x="903.25" y="111.5" >torch/autograd/grad_mode.py(27):_decor..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (4,400 us., 0.11%)</title><rect x="375.7" y="197" width="1.3" height="15.0" fill="rgb(238,126,26)" rx="2" ry="2" />
<text  x="378.72" y="207.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (27,351 us., 0.67%)</title><rect x="757.6" y="197" width="7.9" height="15.0" fill="rgb(227,4,6)" rx="2" ry="2" />
<text  x="760.60" y="207.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (401 us., 0.01%)</title><rect x="898.9" y="245" width="0.1" height="15.0" fill="rgb(214,72,14)" rx="2" ry="2" />
<text  x="901.92" y="255.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (50,889 us., 1.25%)</title><rect x="791.1" y="229" width="14.7" height="15.0" fill="rgb(252,92,44)" rx="2" ry="2" />
<text  x="794.05" y="239.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (27,085 us., 0.66%)</title><rect x="765.5" y="53" width="7.9" height="15.0" fill="rgb(226,172,1)" rx="2" ry="2" />
<text  x="768.52" y="63.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,510 us., 0.04%)</title><rect x="757.2" y="165" width="0.4" height="15.0" fill="rgb(227,184,25)" rx="2" ry="2" />
<text  x="760.17" y="175.5" ></text>
</g>
<g >
<title>torch/nn/functional.py(1804):_softmax (322,170 us., 7.90%)</title><rect x="281.3" y="245" width="93.2" height="15.0" fill="rgb(224,163,41)" rx="2" ry="2" />
<text  x="284.29" y="255.5" >torch/nn/fu..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (378,813 us., 9.29%)</title><rect x="170.5" y="181" width="109.7" height="15.0" fill="rgb(221,32,13)" rx="2" ry="2" />
<text  x="173.54" y="191.5" >nn.Module:_In..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (27,351 us., 0.67%)</title><rect x="757.6" y="149" width="7.9" height="15.0" fill="rgb(224,39,8)" rx="2" ry="2" />
<text  x="760.60" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (322,170 us., 7.90%)</title><rect x="281.3" y="165" width="93.2" height="15.0" fill="rgb(210,80,8)" rx="2" ry="2" />
<text  x="284.29" y="175.5" >nn.Module:_..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (552,057 us., 13.54%)</title><rect x="10.0" y="181" width="159.8" height="15.0" fill="rgb(208,34,33)" rx="2" ry="2" />
<text  x="13.00" y="191.5" >profiling/utils.py(1..</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (599 us., 0.01%)</title><rect x="1189.8" y="229" width="0.2" height="15.0" fill="rgb(238,140,42)" rx="2" ry="2" />
<text  x="1192.83" y="239.5" ></text>
</g>
<g >
<title>&lt;built-in_function_linear&gt; (552,057 us., 13.54%)</title><rect x="10.0" y="261" width="159.8" height="15.0" fill="rgb(211,158,42)" rx="2" ry="2" />
<text  x="13.00" y="271.5" >&lt;built-in_function_l..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (50,889 us., 1.25%)</title><rect x="791.1" y="181" width="14.7" height="15.0" fill="rgb(209,25,47)" rx="2" ry="2" />
<text  x="794.05" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (1,893 us., 0.05%)</title><rect x="280.7" y="197" width="0.6" height="15.0" fill="rgb(223,175,40)" rx="2" ry="2" />
<text  x="283.75" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (27,085 us., 0.66%)</title><rect x="765.5" y="165" width="7.9" height="15.0" fill="rgb(245,107,7)" rx="2" ry="2" />
<text  x="768.52" y="175.5" ></text>
</g>
<g >
<title>&lt;built-in_method_max_of_type_object_at_0x7f7d8ef4d9c0&gt; (320,581 us., 7.86%)</title><rect x="805.8" y="261" width="92.8" height="15.0" fill="rgb(235,109,24)" rx="2" ry="2" />
<text  x="808.78" y="271.5" >&lt;built-in_m..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (61,122 us., 1.50%)</title><rect x="773.4" y="101" width="17.7" height="15.0" fill="rgb(223,10,3)" rx="2" ry="2" />
<text  x="776.36" y="111.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (320,581 us., 7.86%)</title><rect x="805.8" y="117" width="92.8" height="15.0" fill="rgb(252,195,13)" rx="2" ry="2" />
<text  x="808.78" y="127.5" >nn.Module:_..</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (320,581 us., 7.86%)</title><rect x="805.8" y="165" width="92.8" height="15.0" fill="rgb(217,216,2)" rx="2" ry="2" />
<text  x="808.78" y="175.5" >torch_int/n..</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (4,079 us., 0.10%)</title><rect x="374.5" y="229" width="1.2" height="15.0" fill="rgb(224,91,47)" rx="2" ry="2" />
<text  x="377.54" y="239.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(89):__expand_mask (1,211 us., 0.03%)</title><rect x="756.8" y="245" width="0.4" height="15.0" fill="rgb(242,41,1)" rx="2" ry="2" />
<text  x="759.82" y="255.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (4,188 us., 0.10%)</title><rect x="899.0" y="181" width="1.2" height="15.0" fill="rgb(247,40,50)" rx="2" ry="2" />
<text  x="902.03" y="191.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (1,241,721 us., 30.46%)</title><rect x="397.3" y="165" width="359.4" height="15.0" fill="rgb(207,30,7)" rx="2" ry="2" />
<text  x="400.33" y="175.5" >torch_int/nn/opt.py(321):_forward</text>
</g>
<g >
<title>torch_int/nn/linear.py(122):_forward (50,889 us., 1.25%)</title><rect x="791.1" y="245" width="14.7" height="15.0" fill="rgb(238,171,41)" rx="2" ry="2" />
<text  x="794.05" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (1,000,498 us., 24.54%)</title><rect x="900.2" y="197" width="289.6" height="15.0" fill="rgb(214,98,35)" rx="2" ry="2" />
<text  x="903.25" y="207.5" >nn.Module:_Int8OPTDecoderLayer</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (27,351 us., 0.67%)</title><rect x="757.6" y="133" width="7.9" height="15.0" fill="rgb(219,15,9)" rx="2" ry="2" />
<text  x="760.60" y="143.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (4,079 us., 0.10%)</title><rect x="374.5" y="197" width="1.2" height="15.0" fill="rgb(223,48,30)" rx="2" ry="2" />
<text  x="377.54" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (322,170 us., 7.90%)</title><rect x="281.3" y="133" width="93.2" height="15.0" fill="rgb(244,69,47)" rx="2" ry="2" />
<text  x="284.29" y="143.5" >nn.Module:_..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (320,581 us., 7.86%)</title><rect x="805.8" y="85" width="92.8" height="15.0" fill="rgb(207,132,11)" rx="2" ry="2" />
<text  x="808.78" y="95.5" >torch/autog..</text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (320,581 us., 7.86%)</title><rect x="805.8" y="213" width="92.8" height="15.0" fill="rgb(243,66,35)" rx="2" ry="2" />
<text  x="808.78" y="223.5" >nn.Module:_..</text>
</g>
<g >
<title>all (4,076,900 us., 100%)</title><rect x="10.0" y="277" width="1180.0" height="15.0" fill="rgb(229,56,31)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (1,241,721 us., 30.46%)</title><rect x="397.3" y="149" width="359.4" height="15.0" fill="rgb(247,206,36)" rx="2" ry="2" />
<text  x="400.33" y="159.5" >nn.Module:_Int8OPTDecoder</text>
</g>
<g >
<title>&lt;built-in_method_zeros_like_of_type_object_at_0x7f7d8ef4d9c0&gt; (813 us., 0.02%)</title><rect x="898.7" y="261" width="0.2" height="15.0" fill="rgb(252,99,49)" rx="2" ry="2" />
<text  x="901.68" y="271.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (320,581 us., 7.86%)</title><rect x="805.8" y="101" width="92.8" height="15.0" fill="rgb(236,168,41)" rx="2" ry="2" />
<text  x="808.78" y="111.5" >profiling/u..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (378,813 us., 9.29%)</title><rect x="170.5" y="133" width="109.7" height="15.0" fill="rgb(222,174,49)" rx="2" ry="2" />
<text  x="173.54" y="143.5" >transformers/..</text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (320,581 us., 7.86%)</title><rect x="805.8" y="245" width="92.8" height="15.0" fill="rgb(209,38,42)" rx="2" ry="2" />
<text  x="808.78" y="255.5" >torch_int/n..</text>
</g>
<g >
<title>torch_int/nn/opt.py(300):__prepare_decoder_attention_mask (401 us., 0.01%)</title><rect x="898.9" y="261" width="0.1" height="15.0" fill="rgb(248,210,53)" rx="2" ry="2" />
<text  x="901.92" y="271.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (61,122 us., 1.50%)</title><rect x="773.4" y="117" width="17.7" height="15.0" fill="rgb(221,46,14)" rx="2" ry="2" />
<text  x="776.36" y="127.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (1,241,721 us., 30.46%)</title><rect x="397.3" y="245" width="359.4" height="15.0" fill="rgb(213,83,38)" rx="2" ry="2" />
<text  x="400.33" y="255.5" >torch_int/nn/opt.py(46):_forward</text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (322,170 us., 7.90%)</title><rect x="281.3" y="197" width="93.2" height="15.0" fill="rgb(241,178,40)" rx="2" ry="2" />
<text  x="284.29" y="207.5" >nn.Module:_..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (4,400 us., 0.11%)</title><rect x="375.7" y="229" width="1.3" height="15.0" fill="rgb(217,128,16)" rx="2" ry="2" />
<text  x="378.72" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (1,510 us., 0.04%)</title><rect x="757.2" y="181" width="0.4" height="15.0" fill="rgb(254,7,25)" rx="2" ry="2" />
<text  x="760.17" y="191.5" ></text>
</g>
<g >
<title>torch/nn/functional.py(2488):_layer_norm (1,510 us., 0.04%)</title><rect x="757.2" y="245" width="0.4" height="15.0" fill="rgb(243,219,29)" rx="2" ry="2" />
<text  x="760.17" y="255.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (50,889 us., 1.25%)</title><rect x="791.1" y="197" width="14.7" height="15.0" fill="rgb(223,135,45)" rx="2" ry="2" />
<text  x="794.05" y="207.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(43):__shape (70,257 us., 1.72%)</title><rect x="377.0" y="245" width="20.3" height="15.0" fill="rgb(217,71,18)" rx="2" ry="2" />
<text  x="380.00" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (2,294 us., 0.06%)</title><rect x="169.8" y="197" width="0.6" height="15.0" fill="rgb(226,34,11)" rx="2" ry="2" />
<text  x="172.78" y="207.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (1,893 us., 0.05%)</title><rect x="280.7" y="213" width="0.6" height="15.0" fill="rgb(238,198,37)" rx="2" ry="2" />
<text  x="283.75" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (599 us., 0.01%)</title><rect x="1189.8" y="245" width="0.2" height="15.0" fill="rgb(228,191,39)" rx="2" ry="2" />
<text  x="1192.83" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (1,956 us., 0.05%)</title><rect x="280.2" y="181" width="0.5" height="15.0" fill="rgb(253,48,36)" rx="2" ry="2" />
<text  x="283.18" y="191.5" ></text>
</g>
<g >
<title>&lt;built-in_method_embedding_of_type_object_at_0x7f7d8ef4d9c0&gt; (3,849 us., 0.09%)</title><rect x="280.2" y="261" width="1.1" height="15.0" fill="rgb(245,114,37)" rx="2" ry="2" />
<text  x="283.18" y="271.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (813 us., 0.02%)</title><rect x="898.7" y="181" width="0.2" height="15.0" fill="rgb(240,173,34)" rx="2" ry="2" />
<text  x="901.68" y="191.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,211 us., 0.03%)</title><rect x="756.8" y="181" width="0.4" height="15.0" fill="rgb(223,63,18)" rx="2" ry="2" />
<text  x="759.82" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_LayerNorm (1,510 us., 0.04%)</title><rect x="757.2" y="213" width="0.4" height="15.0" fill="rgb(229,105,33)" rx="2" ry="2" />
<text  x="760.17" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (70,257 us., 1.72%)</title><rect x="377.0" y="165" width="20.3" height="15.0" fill="rgb(243,133,54)" rx="2" ry="2" />
<text  x="380.00" y="175.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,893 us., 0.05%)</title><rect x="280.7" y="149" width="0.6" height="15.0" fill="rgb(254,62,13)" rx="2" ry="2" />
<text  x="283.75" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (70,257 us., 1.72%)</title><rect x="377.0" y="197" width="20.3" height="15.0" fill="rgb(247,72,40)" rx="2" ry="2" />
<text  x="380.00" y="207.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (378,813 us., 9.29%)</title><rect x="170.5" y="85" width="109.7" height="15.0" fill="rgb(248,119,47)" rx="2" ry="2" />
<text  x="173.54" y="95.5" >torch/autogra..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (1,241,721 us., 30.46%)</title><rect x="397.3" y="117" width="359.4" height="15.0" fill="rgb(238,215,8)" rx="2" ry="2" />
<text  x="400.33" y="127.5" >nn.Module:_Int8OPTForCausalLM</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (1,510 us., 0.04%)</title><rect x="757.2" y="149" width="0.4" height="15.0" fill="rgb(205,117,5)" rx="2" ry="2" />
<text  x="760.17" y="159.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (378,813 us., 9.29%)</title><rect x="170.5" y="197" width="109.7" height="15.0" fill="rgb(239,55,49)" rx="2" ry="2" />
<text  x="173.54" y="207.5" >torch_int/nn/..</text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (1,000,498 us., 24.54%)</title><rect x="900.2" y="213" width="289.6" height="15.0" fill="rgb(226,41,50)" rx="2" ry="2" />
<text  x="903.25" y="223.5" >torch_int/nn/opt.py(183):_forward</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (1,000,498 us., 24.54%)</title><rect x="900.2" y="133" width="289.6" height="15.0" fill="rgb(228,16,27)" rx="2" ry="2" />
<text  x="903.25" y="143.5" >nn.Module:_Int8OPTForCausalLM</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (322,170 us., 7.90%)</title><rect x="281.3" y="213" width="93.2" height="15.0" fill="rgb(222,55,1)" rx="2" ry="2" />
<text  x="284.29" y="223.5" >torch/autog..</text>
</g>
<g >
<title>torch_int/functional/fused.py(24):_dq_add_layernorm_q_cpp (378,813 us., 9.29%)</title><rect x="170.5" y="245" width="109.7" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="173.54" y="255.5" >torch_int/fun..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,211 us., 0.03%)</title><rect x="756.8" y="149" width="0.4" height="15.0" fill="rgb(251,52,15)" rx="2" ry="2" />
<text  x="759.82" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (61,122 us., 1.50%)</title><rect x="773.4" y="133" width="17.7" height="15.0" fill="rgb(226,83,17)" rx="2" ry="2" />
<text  x="776.36" y="143.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (2,294 us., 0.06%)</title><rect x="169.8" y="181" width="0.6" height="15.0" fill="rgb(241,228,26)" rx="2" ry="2" />
<text  x="172.78" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (4,079 us., 0.10%)</title><rect x="374.5" y="181" width="1.2" height="15.0" fill="rgb(250,84,36)" rx="2" ry="2" />
<text  x="377.54" y="191.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (27,085 us., 0.66%)</title><rect x="765.5" y="117" width="7.9" height="15.0" fill="rgb(251,145,26)" rx="2" ry="2" />
<text  x="768.52" y="127.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,211 us., 0.03%)</title><rect x="756.8" y="133" width="0.4" height="15.0" fill="rgb(220,57,10)" rx="2" ry="2" />
<text  x="759.82" y="143.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (4,400 us., 0.11%)</title><rect x="375.7" y="213" width="1.3" height="15.0" fill="rgb(217,166,10)" rx="2" ry="2" />
<text  x="378.72" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (378,813 us., 9.29%)</title><rect x="170.5" y="117" width="109.7" height="15.0" fill="rgb(221,206,1)" rx="2" ry="2" />
<text  x="173.54" y="127.5" >nn.Module:_In..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (401 us., 0.01%)</title><rect x="898.9" y="197" width="0.1" height="15.0" fill="rgb(215,175,0)" rx="2" ry="2" />
<text  x="901.92" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (1,211 us., 0.03%)</title><rect x="756.8" y="165" width="0.4" height="15.0" fill="rgb(239,115,44)" rx="2" ry="2" />
<text  x="759.82" y="175.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (27,085 us., 0.66%)</title><rect x="765.5" y="149" width="7.9" height="15.0" fill="rgb(244,108,12)" rx="2" ry="2" />
<text  x="768.52" y="159.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,000,498 us., 24.54%)</title><rect x="900.2" y="117" width="289.6" height="15.0" fill="rgb(214,174,43)" rx="2" ry="2" />
<text  x="903.25" y="127.5" >profiling/utils.py(18):_profile_model</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,893 us., 0.05%)</title><rect x="280.7" y="101" width="0.6" height="15.0" fill="rgb(242,198,49)" rx="2" ry="2" />
<text  x="283.75" y="111.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (4,188 us., 0.10%)</title><rect x="899.0" y="245" width="1.2" height="15.0" fill="rgb(237,220,24)" rx="2" ry="2" />
<text  x="902.03" y="255.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (1,000,498 us., 24.54%)</title><rect x="900.2" y="261" width="289.6" height="15.0" fill="rgb(235,193,48)" rx="2" ry="2" />
<text  x="903.25" y="271.5" >torch_int/nn/opt.py(46):_forward</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (50,889 us., 1.25%)</title><rect x="791.1" y="117" width="14.7" height="15.0" fill="rgb(219,61,17)" rx="2" ry="2" />
<text  x="794.05" y="127.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (4,400 us., 0.11%)</title><rect x="375.7" y="165" width="1.3" height="15.0" fill="rgb(212,81,12)" rx="2" ry="2" />
<text  x="378.72" y="175.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,510 us., 0.04%)</title><rect x="757.2" y="117" width="0.4" height="15.0" fill="rgb(244,221,7)" rx="2" ry="2" />
<text  x="760.17" y="127.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (1,510 us., 0.04%)</title><rect x="757.2" y="197" width="0.4" height="15.0" fill="rgb(207,69,41)" rx="2" ry="2" />
<text  x="760.17" y="207.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (61,122 us., 1.50%)</title><rect x="773.4" y="197" width="17.7" height="15.0" fill="rgb(239,109,5)" rx="2" ry="2" />
<text  x="776.36" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (70,257 us., 1.72%)</title><rect x="377.0" y="133" width="20.3" height="15.0" fill="rgb(246,63,29)" rx="2" ry="2" />
<text  x="380.00" y="143.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (378,813 us., 9.29%)</title><rect x="170.5" y="165" width="109.7" height="15.0" fill="rgb(239,42,7)" rx="2" ry="2" />
<text  x="173.54" y="175.5" >torch_int/nn/..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (50,889 us., 1.25%)</title><rect x="791.1" y="101" width="14.7" height="15.0" fill="rgb(223,174,30)" rx="2" ry="2" />
<text  x="794.05" y="111.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (61,122 us., 1.50%)</title><rect x="773.4" y="149" width="17.7" height="15.0" fill="rgb(207,80,36)" rx="2" ry="2" />
<text  x="776.36" y="159.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,893 us., 0.05%)</title><rect x="280.7" y="117" width="0.6" height="15.0" fill="rgb(219,31,5)" rx="2" ry="2" />
<text  x="283.75" y="127.5" ></text>
</g>
<g >
<title>torch_int/nn/linear.py(92):_forward (61,122 us., 1.50%)</title><rect x="773.4" y="245" width="17.7" height="15.0" fill="rgb(211,199,30)" rx="2" ry="2" />
<text  x="776.36" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (813 us., 0.02%)</title><rect x="898.7" y="197" width="0.2" height="15.0" fill="rgb(229,79,39)" rx="2" ry="2" />
<text  x="901.68" y="207.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (61,122 us., 1.50%)</title><rect x="773.4" y="229" width="17.7" height="15.0" fill="rgb(224,202,15)" rx="2" ry="2" />
<text  x="776.36" y="239.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (320,581 us., 7.86%)</title><rect x="805.8" y="229" width="92.8" height="15.0" fill="rgb(233,99,17)" rx="2" ry="2" />
<text  x="808.78" y="239.5" >torch/autog..</text>
</g>
<g >
<title>nn.Module:_W8A8B8O8Linear (61,122 us., 1.50%)</title><rect x="773.4" y="213" width="17.7" height="15.0" fill="rgb(235,117,27)" rx="2" ry="2" />
<text  x="776.36" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_W8A8B32O32LinearWithScaling (54,436 us., 1.34%)</title><rect x="757.6" y="213" width="15.8" height="15.0" fill="rgb(250,171,44)" rx="2" ry="2" />
<text  x="760.60" y="223.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (1,241,721 us., 30.46%)</title><rect x="397.3" y="197" width="359.4" height="15.0" fill="rgb(254,64,14)" rx="2" ry="2" />
<text  x="400.33" y="207.5" >torch_int/nn/opt.py(183):_forward</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (27,351 us., 0.67%)</title><rect x="757.6" y="101" width="7.9" height="15.0" fill="rgb(230,87,14)" rx="2" ry="2" />
<text  x="760.60" y="111.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (1,000,498 us., 24.54%)</title><rect x="900.2" y="165" width="289.6" height="15.0" fill="rgb(254,85,33)" rx="2" ry="2" />
<text  x="903.25" y="175.5" >nn.Module:_Int8OPTDecoder</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (1,893 us., 0.05%)</title><rect x="280.7" y="165" width="0.6" height="15.0" fill="rgb(206,14,50)" rx="2" ry="2" />
<text  x="283.75" y="175.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (27,085 us., 0.66%)</title><rect x="765.5" y="181" width="7.9" height="15.0" fill="rgb(205,143,8)" rx="2" ry="2" />
<text  x="768.52" y="191.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (2,294 us., 0.06%)</title><rect x="169.8" y="165" width="0.6" height="15.0" fill="rgb(213,212,30)" rx="2" ry="2" />
<text  x="172.78" y="175.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (2,294 us., 0.06%)</title><rect x="169.8" y="245" width="0.6" height="15.0" fill="rgb(212,78,9)" rx="2" ry="2" />
<text  x="172.78" y="255.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,956 us., 0.05%)</title><rect x="280.2" y="117" width="0.5" height="15.0" fill="rgb(240,64,19)" rx="2" ry="2" />
<text  x="283.18" y="127.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (27,085 us., 0.66%)</title><rect x="765.5" y="85" width="7.9" height="15.0" fill="rgb(213,153,44)" rx="2" ry="2" />
<text  x="768.52" y="95.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (61,122 us., 1.50%)</title><rect x="773.4" y="165" width="17.7" height="15.0" fill="rgb(223,69,16)" rx="2" ry="2" />
<text  x="776.36" y="175.5" ></text>
</g>
<g >
<title>&lt;built-in_method_linear_a8_w8_b32_o32_with_scaling_of_PyCapsule_object_at_0x7f7c9a3e0ed0&gt; (54,436 us., 1.34%)</title><rect x="757.6" y="261" width="15.8" height="15.0" fill="rgb(243,97,19)" rx="2" ry="2" />
<text  x="760.60" y="271.5" ></text>
</g>
<g >
<title>&lt;built-in_method_dq_add_layernorm_q_of_PyCapsule_object_at_0x7f7c9a3e0f30&gt; (378,813 us., 9.29%)</title><rect x="170.5" y="261" width="109.7" height="15.0" fill="rgb(238,216,52)" rx="2" ry="2" />
<text  x="173.54" y="271.5" >&lt;built-in_met..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (4,079 us., 0.10%)</title><rect x="374.5" y="149" width="1.2" height="15.0" fill="rgb(226,154,28)" rx="2" ry="2" />
<text  x="377.54" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (27,085 us., 0.66%)</title><rect x="765.5" y="101" width="7.9" height="15.0" fill="rgb(210,92,51)" rx="2" ry="2" />
<text  x="768.52" y="111.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (70,257 us., 1.72%)</title><rect x="377.0" y="117" width="20.3" height="15.0" fill="rgb(247,103,28)" rx="2" ry="2" />
<text  x="380.00" y="127.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (27,085 us., 0.66%)</title><rect x="765.5" y="133" width="7.9" height="15.0" fill="rgb(213,16,22)" rx="2" ry="2" />
<text  x="768.52" y="143.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (4,188 us., 0.10%)</title><rect x="899.0" y="197" width="1.2" height="15.0" fill="rgb(225,52,27)" rx="2" ry="2" />
<text  x="902.03" y="207.5" ></text>
</g>
<g >
<title>torch/nn/modules/sparse.py(157):_forward (3,849 us., 0.09%)</title><rect x="280.2" y="229" width="1.1" height="15.0" fill="rgb(239,206,2)" rx="2" ry="2" />
<text  x="283.18" y="239.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (4,188 us., 0.10%)</title><rect x="899.0" y="261" width="1.2" height="15.0" fill="rgb(241,213,41)" rx="2" ry="2" />
<text  x="902.03" y="271.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (320,581 us., 7.86%)</title><rect x="805.8" y="133" width="92.8" height="15.0" fill="rgb(241,93,54)" rx="2" ry="2" />
<text  x="808.78" y="143.5" >transformer..</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (1,956 us., 0.05%)</title><rect x="280.2" y="197" width="0.5" height="15.0" fill="rgb(254,62,9)" rx="2" ry="2" />
<text  x="283.18" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (599 us., 0.01%)</title><rect x="1189.8" y="213" width="0.2" height="15.0" fill="rgb(220,132,31)" rx="2" ry="2" />
<text  x="1192.83" y="223.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (552,057 us., 13.54%)</title><rect x="10.0" y="165" width="159.8" height="15.0" fill="rgb(206,75,6)" rx="2" ry="2" />
<text  x="13.00" y="175.5" >torch/autograd/grad_..</text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (322,170 us., 7.90%)</title><rect x="281.3" y="181" width="93.2" height="15.0" fill="rgb(239,50,0)" rx="2" ry="2" />
<text  x="284.29" y="191.5" >torch_int/n..</text>
</g>
<g >
<title>nn.Module:_DQ_Add_LayerNorm_Q (378,813 us., 9.29%)</title><rect x="170.5" y="213" width="109.7" height="15.0" fill="rgb(252,153,35)" rx="2" ry="2" />
<text  x="173.54" y="223.5" >nn.Module:_DQ..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (599 us., 0.01%)</title><rect x="1189.8" y="165" width="0.2" height="15.0" fill="rgb(250,152,17)" rx="2" ry="2" />
<text  x="1192.83" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_W8A8B8O8LinearReLU (50,889 us., 1.25%)</title><rect x="791.1" y="213" width="14.7" height="15.0" fill="rgb(237,135,1)" rx="2" ry="2" />
<text  x="794.05" y="223.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (61,122 us., 1.50%)</title><rect x="773.4" y="181" width="17.7" height="15.0" fill="rgb(210,5,13)" rx="2" ry="2" />
<text  x="776.36" y="191.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (70,257 us., 1.72%)</title><rect x="377.0" y="69" width="20.3" height="15.0" fill="rgb(208,162,1)" rx="2" ry="2" />
<text  x="380.00" y="79.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,000,498 us., 24.54%)</title><rect x="900.2" y="149" width="289.6" height="15.0" fill="rgb(244,180,30)" rx="2" ry="2" />
<text  x="903.25" y="159.5" >transformers/models/opt/modeling_opt.p..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (322,170 us., 7.90%)</title><rect x="281.3" y="101" width="93.2" height="15.0" fill="rgb(247,10,36)" rx="2" ry="2" />
<text  x="284.29" y="111.5" >nn.Module:_..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (813 us., 0.02%)</title><rect x="898.7" y="213" width="0.2" height="15.0" fill="rgb(222,204,34)" rx="2" ry="2" />
<text  x="901.68" y="223.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,510 us., 0.04%)</title><rect x="757.2" y="133" width="0.4" height="15.0" fill="rgb(213,84,41)" rx="2" ry="2" />
<text  x="760.17" y="143.5" ></text>
</g>
<g >
<title>&lt;built-in_method_encode_of_str_object_at_0x7f7c9aa43450&gt; (1,644,139 us., 40.33%)</title><rect x="281.3" y="261" width="475.9" height="15.0" fill="rgb(241,140,42)" rx="2" ry="2" />
<text  x="284.29" y="271.5" >&lt;built-in_method_encode_of_str_object_at_0x7f7c9aa43450&gt;</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (322,170 us., 7.90%)</title><rect x="281.3" y="69" width="93.2" height="15.0" fill="rgb(232,161,30)" rx="2" ry="2" />
<text  x="284.29" y="79.5" >torch/autog..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (70,257 us., 1.72%)</title><rect x="377.0" y="213" width="20.3" height="15.0" fill="rgb(220,86,30)" rx="2" ry="2" />
<text  x="380.00" y="223.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (27,085 us., 0.66%)</title><rect x="765.5" y="37" width="7.9" height="15.0" fill="rgb(234,18,38)" rx="2" ry="2" />
<text  x="768.52" y="47.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (1,000,498 us., 24.54%)</title><rect x="900.2" y="245" width="289.6" height="15.0" fill="rgb(249,194,23)" rx="2" ry="2" />
<text  x="903.25" y="255.5" >torch/autograd/grad_mode.py(24):_decor..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (4,400 us., 0.11%)</title><rect x="375.7" y="181" width="1.3" height="15.0" fill="rgb(214,134,26)" rx="2" ry="2" />
<text  x="378.72" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (4,079 us., 0.10%)</title><rect x="374.5" y="213" width="1.2" height="15.0" fill="rgb(213,18,35)" rx="2" ry="2" />
<text  x="377.54" y="223.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (320,581 us., 7.86%)</title><rect x="805.8" y="197" width="92.8" height="15.0" fill="rgb(211,112,43)" rx="2" ry="2" />
<text  x="808.78" y="207.5" >torch_int/n..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (378,813 us., 9.29%)</title><rect x="170.5" y="149" width="109.7" height="15.0" fill="rgb(239,227,28)" rx="2" ry="2" />
<text  x="173.54" y="159.5" >nn.Module:_In..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (322,170 us., 7.90%)</title><rect x="281.3" y="85" width="93.2" height="15.0" fill="rgb(215,107,48)" rx="2" ry="2" />
<text  x="284.29" y="95.5" >profiling/u..</text>
</g>
<g >
<title>&lt;built-in_method_linear_a8_w8_b8_o8_of_PyCapsule_object_at_0x7f7c9a3e0f00&gt; (61,122 us., 1.50%)</title><rect x="773.4" y="261" width="17.7" height="15.0" fill="rgb(209,99,30)" rx="2" ry="2" />
<text  x="776.36" y="271.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (70,257 us., 1.72%)</title><rect x="377.0" y="181" width="20.3" height="15.0" fill="rgb(253,186,21)" rx="2" ry="2" />
<text  x="380.00" y="191.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (1,893 us., 0.05%)</title><rect x="280.7" y="181" width="0.6" height="15.0" fill="rgb(248,53,31)" rx="2" ry="2" />
<text  x="283.75" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (2,294 us., 0.06%)</title><rect x="169.8" y="229" width="0.6" height="15.0" fill="rgb(220,229,15)" rx="2" ry="2" />
<text  x="172.78" y="239.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (54,436 us., 1.34%)</title><rect x="757.6" y="229" width="15.8" height="15.0" fill="rgb(213,33,37)" rx="2" ry="2" />
<text  x="760.60" y="239.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (401 us., 0.01%)</title><rect x="898.9" y="165" width="0.1" height="15.0" fill="rgb(233,126,23)" rx="2" ry="2" />
<text  x="901.92" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_Embedding (1,956 us., 0.05%)</title><rect x="280.2" y="213" width="0.5" height="15.0" fill="rgb(228,190,10)" rx="2" ry="2" />
<text  x="283.18" y="223.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (552,057 us., 13.54%)</title><rect x="10.0" y="213" width="159.8" height="15.0" fill="rgb(219,137,10)" rx="2" ry="2" />
<text  x="13.00" y="223.5" >transformers/models/..</text>
</g>
<g >
<title>&lt;built-in_method_add_of_type_object_at_0x7f7d8ef4d9c0&gt; (2,294 us., 0.06%)</title><rect x="169.8" y="261" width="0.6" height="15.0" fill="rgb(212,196,21)" rx="2" ry="2" />
<text  x="172.78" y="271.5" ></text>
</g>
<g >
<title>&lt;built-in_method_layer_norm_of_type_object_at_0x7f7d8ef4d9c0&gt; (1,510 us., 0.04%)</title><rect x="757.2" y="261" width="0.4" height="15.0" fill="rgb(251,151,51)" rx="2" ry="2" />
<text  x="760.17" y="271.5" ></text>
</g>
<g >
<title>torch/nn/modules/normalization.py(188):_forward (1,510 us., 0.04%)</title><rect x="757.2" y="229" width="0.4" height="15.0" fill="rgb(240,19,49)" rx="2" ry="2" />
<text  x="760.17" y="239.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (1,241,721 us., 30.46%)</title><rect x="397.3" y="229" width="359.4" height="15.0" fill="rgb(253,50,46)" rx="2" ry="2" />
<text  x="400.33" y="239.5" >torch/autograd/grad_mode.py(24):_decorate_context</text>
</g>
<g >
<title>torch_int/nn/opt.py(300):__prepare_decoder_attention_mask (4,079 us., 0.10%)</title><rect x="374.5" y="245" width="1.2" height="15.0" fill="rgb(219,212,46)" rx="2" ry="2" />
<text  x="377.54" y="255.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (70,257 us., 1.72%)</title><rect x="377.0" y="229" width="20.3" height="15.0" fill="rgb(209,42,45)" rx="2" ry="2" />
<text  x="380.00" y="239.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (4,400 us., 0.11%)</title><rect x="375.7" y="245" width="1.3" height="15.0" fill="rgb(217,19,14)" rx="2" ry="2" />
<text  x="378.72" y="255.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (50,889 us., 1.25%)</title><rect x="791.1" y="85" width="14.7" height="15.0" fill="rgb(211,110,17)" rx="2" ry="2" />
<text  x="794.05" y="95.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (599 us., 0.01%)</title><rect x="1189.8" y="181" width="0.2" height="15.0" fill="rgb(222,9,25)" rx="2" ry="2" />
<text  x="1192.83" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (1,241,721 us., 30.46%)</title><rect x="397.3" y="213" width="359.4" height="15.0" fill="rgb(227,69,0)" rx="2" ry="2" />
<text  x="400.33" y="223.5" >nn.Module:_Int8OPTAttention</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (4,079 us., 0.10%)</title><rect x="374.5" y="165" width="1.2" height="15.0" fill="rgb(208,79,54)" rx="2" ry="2" />
<text  x="377.54" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (70,257 us., 1.72%)</title><rect x="377.0" y="101" width="20.3" height="15.0" fill="rgb(253,191,38)" rx="2" ry="2" />
<text  x="380.00" y="111.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (599 us., 0.01%)</title><rect x="1189.8" y="261" width="0.2" height="15.0" fill="rgb(206,64,46)" rx="2" ry="2" />
<text  x="1192.83" y="271.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (27,351 us., 0.67%)</title><rect x="757.6" y="181" width="7.9" height="15.0" fill="rgb(234,39,44)" rx="2" ry="2" />
<text  x="760.60" y="191.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (50,889 us., 1.25%)</title><rect x="791.1" y="133" width="14.7" height="15.0" fill="rgb(229,48,16)" rx="2" ry="2" />
<text  x="794.05" y="143.5" ></text>
</g>
</g>
</svg>
