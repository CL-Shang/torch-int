<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="326" onload="init(evt)" viewBox="0 0 1200 326" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="326.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >CUDA Time</text>
<text id="details" x="10.00" y="309" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="309" > </text>
<g id="frames">
<g >
<title>profiling/utils.py(18):_profile_model (45,882 us., 6.66%)</title><rect x="294.9" y="101" width="78.6" height="15.0" fill="rgb(220,37,51)" rx="2" ry="2" />
<text  x="297.94" y="111.5" >profiling..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (182,998 us., 26.55%)</title><rect x="484.8" y="149" width="313.4" height="15.0" fill="rgb(246,141,54)" rx="2" ry="2" />
<text  x="487.82" y="159.5" >nn.Module:_Int8OPTDecoder</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (182,998 us., 26.55%)</title><rect x="484.8" y="229" width="313.4" height="15.0" fill="rgb(245,222,30)" rx="2" ry="2" />
<text  x="487.82" y="239.5" >torch/autograd/grad_mode.py(24):_decorate_..</text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (600 us., 0.09%)</title><rect x="1189.0" y="245" width="1.0" height="15.0" fill="rgb(212,129,12)" rx="2" ry="2" />
<text  x="1191.97" y="255.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (4,069 us., 0.59%)</title><rect x="458.0" y="165" width="7.0" height="15.0" fill="rgb(251,46,1)" rx="2" ry="2" />
<text  x="461.03" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (1,110 us., 0.16%)</title><rect x="798.7" y="197" width="1.9" height="15.0" fill="rgb(211,5,1)" rx="2" ry="2" />
<text  x="801.68" y="207.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (45,882 us., 6.66%)</title><rect x="294.9" y="197" width="78.6" height="15.0" fill="rgb(236,69,50)" rx="2" ry="2" />
<text  x="297.94" y="207.5" >torch_int..</text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (47,732 us., 6.93%)</title><rect x="376.3" y="181" width="81.7" height="15.0" fill="rgb(208,133,51)" rx="2" ry="2" />
<text  x="379.29" y="191.5" >torch_int..</text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (728 us., 0.11%)</title><rect x="375.0" y="197" width="1.3" height="15.0" fill="rgb(221,103,14)" rx="2" ry="2" />
<text  x="378.05" y="207.5" ></text>
</g>
<g >
<title>torch/nn/modules/sparse.py(157):_forward (1,628 us., 0.24%)</title><rect x="373.5" y="229" width="2.8" height="15.0" fill="rgb(249,228,48)" rx="2" ry="2" />
<text  x="376.51" y="239.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (8,418 us., 1.22%)</title><rect x="837.6" y="101" width="14.4" height="15.0" fill="rgb(207,18,24)" rx="2" ry="2" />
<text  x="840.63" y="111.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (9,564 us., 1.39%)</title><rect x="801.6" y="229" width="16.4" height="15.0" fill="rgb(252,59,23)" rx="2" ry="2" />
<text  x="804.61" y="239.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (182,998 us., 26.55%)</title><rect x="484.8" y="85" width="313.4" height="15.0" fill="rgb(217,165,54)" rx="2" ry="2" />
<text  x="487.82" y="95.5" >torch/autograd/grad_mode.py(27):_decorate_..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (10,829 us., 1.57%)</title><rect x="466.3" y="85" width="18.5" height="15.0" fill="rgb(242,73,21)" rx="2" ry="2" />
<text  x="469.28" y="95.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (165,601 us., 24.03%)</title><rect x="10.0" y="181" width="283.6" height="15.0" fill="rgb(220,166,12)" rx="2" ry="2" />
<text  x="13.00" y="191.5" >profiling/utils.py(18):_profile_model</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (500 us., 0.07%)</title><rect x="293.6" y="165" width="0.8" height="15.0" fill="rgb(254,111,1)" rx="2" ry="2" />
<text  x="296.56" y="175.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (11,470 us., 1.66%)</title><rect x="818.0" y="37" width="19.6" height="15.0" fill="rgb(227,163,37)" rx="2" ry="2" />
<text  x="820.99" y="47.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (500 us., 0.07%)</title><rect x="293.6" y="181" width="0.8" height="15.0" fill="rgb(248,74,14)" rx="2" ry="2" />
<text  x="296.56" y="191.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (46,859 us., 6.80%)</title><rect x="852.0" y="101" width="80.3" height="15.0" fill="rgb(229,46,43)" rx="2" ry="2" />
<text  x="855.04" y="111.5" >profiling..</text>
</g>
<g >
<title>&lt;built-in_method_layer_norm_of_type_object_at_0x7f939de609c0&gt; (600 us., 0.09%)</title><rect x="800.6" y="261" width="1.0" height="15.0" fill="rgb(233,29,46)" rx="2" ry="2" />
<text  x="803.58" y="271.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (1,100 us., 0.16%)</title><rect x="934.1" y="261" width="1.8" height="15.0" fill="rgb(215,112,43)" rx="2" ry="2" />
<text  x="937.06" y="271.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (4,770 us., 0.69%)</title><rect x="801.6" y="117" width="8.2" height="15.0" fill="rgb(213,69,50)" rx="2" ry="2" />
<text  x="804.61" y="127.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (200 us., 0.03%)</title><rect x="932.3" y="245" width="0.3" height="15.0" fill="rgb(217,127,7)" rx="2" ry="2" />
<text  x="935.28" y="255.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,110 us., 0.16%)</title><rect x="798.7" y="133" width="1.9" height="15.0" fill="rgb(239,90,9)" rx="2" ry="2" />
<text  x="801.68" y="143.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (308 us., 0.04%)</title><rect x="294.4" y="245" width="0.5" height="15.0" fill="rgb(215,155,52)" rx="2" ry="2" />
<text  x="297.41" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (182,998 us., 26.55%)</title><rect x="484.8" y="213" width="313.4" height="15.0" fill="rgb(235,42,45)" rx="2" ry="2" />
<text  x="487.82" y="223.5" >nn.Module:_Int8OPTAttention</text>
</g>
<g >
<title>torch_int/functional/fused.py(24):_dq_add_layernorm_q_cpp (45,882 us., 6.66%)</title><rect x="294.9" y="245" width="78.6" height="15.0" fill="rgb(224,124,2)" rx="2" ry="2" />
<text  x="297.94" y="255.5" >torch_int..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (182,998 us., 26.55%)</title><rect x="484.8" y="133" width="313.4" height="15.0" fill="rgb(254,120,44)" rx="2" ry="2" />
<text  x="487.82" y="143.5" >transformers/models/opt/modeling_opt.py(84..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (45,882 us., 6.66%)</title><rect x="294.9" y="149" width="78.6" height="15.0" fill="rgb(251,3,26)" rx="2" ry="2" />
<text  x="297.94" y="159.5" >nn.Module..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (600 us., 0.09%)</title><rect x="1189.0" y="197" width="1.0" height="15.0" fill="rgb(233,94,23)" rx="2" ry="2" />
<text  x="1191.97" y="207.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (46,859 us., 6.80%)</title><rect x="852.0" y="197" width="80.3" height="15.0" fill="rgb(224,90,39)" rx="2" ry="2" />
<text  x="855.04" y="207.5" >torch_int..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (241 us., 0.03%)</title><rect x="933.0" y="213" width="0.4" height="15.0" fill="rgb(206,125,7)" rx="2" ry="2" />
<text  x="935.96" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (1,110 us., 0.16%)</title><rect x="798.7" y="165" width="1.9" height="15.0" fill="rgb(229,32,52)" rx="2" ry="2" />
<text  x="801.68" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (11,470 us., 1.66%)</title><rect x="818.0" y="165" width="19.6" height="15.0" fill="rgb(231,228,21)" rx="2" ry="2" />
<text  x="820.99" y="175.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (8,418 us., 1.22%)</title><rect x="837.6" y="229" width="14.4" height="15.0" fill="rgb(211,84,33)" rx="2" ry="2" />
<text  x="840.63" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (201 us., 0.03%)</title><rect x="932.6" y="165" width="0.4" height="15.0" fill="rgb(210,9,48)" rx="2" ry="2" />
<text  x="935.62" y="175.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (397 us., 0.06%)</title><rect x="933.4" y="213" width="0.7" height="15.0" fill="rgb(247,59,0)" rx="2" ry="2" />
<text  x="936.38" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (45,882 us., 6.66%)</title><rect x="294.9" y="117" width="78.6" height="15.0" fill="rgb(240,0,53)" rx="2" ry="2" />
<text  x="297.94" y="127.5" >nn.Module..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (4,770 us., 0.69%)</title><rect x="801.6" y="133" width="8.2" height="15.0" fill="rgb(219,201,20)" rx="2" ry="2" />
<text  x="804.61" y="143.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (47,732 us., 6.93%)</title><rect x="376.3" y="197" width="81.7" height="15.0" fill="rgb(220,216,27)" rx="2" ry="2" />
<text  x="379.29" y="207.5" >nn.Module..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (46,859 us., 6.80%)</title><rect x="852.0" y="85" width="80.3" height="15.0" fill="rgb(231,45,36)" rx="2" ry="2" />
<text  x="855.04" y="95.5" >torch/aut..</text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (46,859 us., 6.80%)</title><rect x="852.0" y="213" width="80.3" height="15.0" fill="rgb(206,148,16)" rx="2" ry="2" />
<text  x="855.04" y="223.5" >nn.Module..</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (600 us., 0.09%)</title><rect x="1189.0" y="229" width="1.0" height="15.0" fill="rgb(232,38,41)" rx="2" ry="2" />
<text  x="1191.97" y="239.5" ></text>
</g>
<g >
<title>torch/_tensor.py(637):___rsub__ (201 us., 0.03%)</title><rect x="932.6" y="245" width="0.4" height="15.0" fill="rgb(251,5,48)" rx="2" ry="2" />
<text  x="935.62" y="255.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (47,732 us., 6.93%)</title><rect x="376.3" y="213" width="81.7" height="15.0" fill="rgb(237,75,25)" rx="2" ry="2" />
<text  x="379.29" y="223.5" >torch/aut..</text>
</g>
<g >
<title>torch_int/nn/fused.py(13):_forward (45,882 us., 6.66%)</title><rect x="294.9" y="229" width="78.6" height="15.0" fill="rgb(246,119,43)" rx="2" ry="2" />
<text  x="297.94" y="239.5" >torch_int..</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (300 us., 0.04%)</title><rect x="798.2" y="213" width="0.5" height="15.0" fill="rgb(233,71,40)" rx="2" ry="2" />
<text  x="801.17" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (4,069 us., 0.59%)</title><rect x="458.0" y="181" width="7.0" height="15.0" fill="rgb(218,10,2)" rx="2" ry="2" />
<text  x="461.03" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (4,794 us., 0.70%)</title><rect x="809.8" y="69" width="8.2" height="15.0" fill="rgb(249,193,16)" rx="2" ry="2" />
<text  x="812.78" y="79.5" ></text>
</g>
<g >
<title>&lt;built-in_method_linear_a8_w8_b8_o8_of_PyCapsule_object_at_0x7f92a92f3f00&gt; (11,470 us., 1.66%)</title><rect x="818.0" y="261" width="19.6" height="15.0" fill="rgb(239,99,34)" rx="2" ry="2" />
<text  x="820.99" y="271.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (4,794 us., 0.70%)</title><rect x="809.8" y="165" width="8.2" height="15.0" fill="rgb(238,64,33)" rx="2" ry="2" />
<text  x="812.78" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (201 us., 0.03%)</title><rect x="932.6" y="133" width="0.4" height="15.0" fill="rgb(245,214,39)" rx="2" ry="2" />
<text  x="935.62" y="143.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (600 us., 0.09%)</title><rect x="1189.0" y="213" width="1.0" height="15.0" fill="rgb(240,43,51)" rx="2" ry="2" />
<text  x="1191.97" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (4,794 us., 0.70%)</title><rect x="809.8" y="133" width="8.2" height="15.0" fill="rgb(213,223,24)" rx="2" ry="2" />
<text  x="812.78" y="143.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (397 us., 0.06%)</title><rect x="933.4" y="181" width="0.7" height="15.0" fill="rgb(243,170,49)" rx="2" ry="2" />
<text  x="936.38" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (46,859 us., 6.80%)</title><rect x="852.0" y="117" width="80.3" height="15.0" fill="rgb(207,24,34)" rx="2" ry="2" />
<text  x="855.04" y="127.5" >nn.Module..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (201 us., 0.03%)</title><rect x="932.6" y="101" width="0.4" height="15.0" fill="rgb(237,160,15)" rx="2" ry="2" />
<text  x="935.62" y="111.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (182,998 us., 26.55%)</title><rect x="484.8" y="101" width="313.4" height="15.0" fill="rgb(249,216,1)" rx="2" ry="2" />
<text  x="487.82" y="111.5" >profiling/utils.py(18):_profile_model</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (4,069 us., 0.59%)</title><rect x="458.0" y="229" width="7.0" height="15.0" fill="rgb(229,69,10)" rx="2" ry="2" />
<text  x="461.03" y="239.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (46,859 us., 6.80%)</title><rect x="852.0" y="133" width="80.3" height="15.0" fill="rgb(211,222,20)" rx="2" ry="2" />
<text  x="855.04" y="143.5" >transform..</text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (4,770 us., 0.69%)</title><rect x="801.6" y="197" width="8.2" height="15.0" fill="rgb(221,214,16)" rx="2" ry="2" />
<text  x="804.61" y="207.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (600 us., 0.09%)</title><rect x="800.6" y="117" width="1.0" height="15.0" fill="rgb(229,88,28)" rx="2" ry="2" />
<text  x="803.58" y="127.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (11,470 us., 1.66%)</title><rect x="818.0" y="53" width="19.6" height="15.0" fill="rgb(214,17,8)" rx="2" ry="2" />
<text  x="820.99" y="63.5" ></text>
</g>
<g >
<title>&lt;built-in_method_add_of_type_object_at_0x7f939de609c0&gt; (500 us., 0.07%)</title><rect x="293.6" y="261" width="0.8" height="15.0" fill="rgb(231,29,4)" rx="2" ry="2" />
<text  x="296.56" y="271.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (308 us., 0.04%)</title><rect x="294.4" y="165" width="0.5" height="15.0" fill="rgb(250,46,30)" rx="2" ry="2" />
<text  x="297.41" y="175.5" ></text>
</g>
<g >
<title>torch/nn/functional.py(1804):_softmax (47,732 us., 6.93%)</title><rect x="376.3" y="245" width="81.7" height="15.0" fill="rgb(233,189,5)" rx="2" ry="2" />
<text  x="379.29" y="255.5" >torch/nn/..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (397 us., 0.06%)</title><rect x="933.4" y="229" width="0.7" height="15.0" fill="rgb(251,179,37)" rx="2" ry="2" />
<text  x="936.38" y="239.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (4,069 us., 0.59%)</title><rect x="458.0" y="149" width="7.0" height="15.0" fill="rgb(243,153,23)" rx="2" ry="2" />
<text  x="461.03" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (900 us., 0.13%)</title><rect x="373.5" y="181" width="1.5" height="15.0" fill="rgb(234,133,18)" rx="2" ry="2" />
<text  x="376.51" y="191.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (600 us., 0.09%)</title><rect x="1189.0" y="149" width="1.0" height="15.0" fill="rgb(235,135,49)" rx="2" ry="2" />
<text  x="1191.97" y="159.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (308 us., 0.04%)</title><rect x="294.4" y="213" width="0.5" height="15.0" fill="rgb(218,221,35)" rx="2" ry="2" />
<text  x="297.41" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_DQ_Add_LayerNorm_Q (45,882 us., 6.66%)</title><rect x="294.9" y="213" width="78.6" height="15.0" fill="rgb(243,205,34)" rx="2" ry="2" />
<text  x="297.94" y="223.5" >nn.Module..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (900 us., 0.13%)</title><rect x="373.5" y="133" width="1.5" height="15.0" fill="rgb(241,179,21)" rx="2" ry="2" />
<text  x="376.51" y="143.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (900 us., 0.13%)</title><rect x="373.5" y="117" width="1.5" height="15.0" fill="rgb(221,206,16)" rx="2" ry="2" />
<text  x="376.51" y="127.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (500 us., 0.07%)</title><rect x="293.6" y="197" width="0.8" height="15.0" fill="rgb(222,176,33)" rx="2" ry="2" />
<text  x="296.56" y="207.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (300 us., 0.04%)</title><rect x="798.2" y="149" width="0.5" height="15.0" fill="rgb(232,9,36)" rx="2" ry="2" />
<text  x="801.17" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (47,732 us., 6.93%)</title><rect x="376.3" y="133" width="81.7" height="15.0" fill="rgb(245,34,46)" rx="2" ry="2" />
<text  x="379.29" y="143.5" >nn.Module..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (600 us., 0.09%)</title><rect x="1189.0" y="165" width="1.0" height="15.0" fill="rgb(221,165,16)" rx="2" ry="2" />
<text  x="1191.97" y="175.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (8,418 us., 1.22%)</title><rect x="837.6" y="133" width="14.4" height="15.0" fill="rgb(235,14,12)" rx="2" ry="2" />
<text  x="840.63" y="143.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (241 us., 0.03%)</title><rect x="933.0" y="229" width="0.4" height="15.0" fill="rgb(231,102,8)" rx="2" ry="2" />
<text  x="935.96" y="239.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (4,770 us., 0.69%)</title><rect x="801.6" y="101" width="8.2" height="15.0" fill="rgb(233,156,35)" rx="2" ry="2" />
<text  x="804.61" y="111.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (600 us., 0.09%)</title><rect x="800.6" y="133" width="1.0" height="15.0" fill="rgb(217,109,15)" rx="2" ry="2" />
<text  x="803.58" y="143.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (4,770 us., 0.69%)</title><rect x="801.6" y="165" width="8.2" height="15.0" fill="rgb(230,225,48)" rx="2" ry="2" />
<text  x="804.61" y="175.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(89):__expand_mask (1,110 us., 0.16%)</title><rect x="798.7" y="245" width="1.9" height="15.0" fill="rgb(232,203,19)" rx="2" ry="2" />
<text  x="801.68" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (4,794 us., 0.70%)</title><rect x="809.8" y="101" width="8.2" height="15.0" fill="rgb(236,149,32)" rx="2" ry="2" />
<text  x="812.78" y="111.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (200 us., 0.03%)</title><rect x="932.3" y="213" width="0.3" height="15.0" fill="rgb(235,149,13)" rx="2" ry="2" />
<text  x="935.28" y="223.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (4,794 us., 0.70%)</title><rect x="809.8" y="149" width="8.2" height="15.0" fill="rgb(209,63,15)" rx="2" ry="2" />
<text  x="812.78" y="159.5" ></text>
</g>
<g >
<title>torch/nn/functional.py(2099):_embedding (1,628 us., 0.24%)</title><rect x="373.5" y="245" width="2.8" height="15.0" fill="rgb(208,90,24)" rx="2" ry="2" />
<text  x="376.51" y="255.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (900 us., 0.13%)</title><rect x="373.5" y="165" width="1.5" height="15.0" fill="rgb(210,143,21)" rx="2" ry="2" />
<text  x="376.51" y="175.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (46,859 us., 6.80%)</title><rect x="852.0" y="165" width="80.3" height="15.0" fill="rgb(205,147,17)" rx="2" ry="2" />
<text  x="855.04" y="175.5" >torch_int..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (147,773 us., 21.44%)</title><rect x="935.9" y="197" width="253.1" height="15.0" fill="rgb(209,35,12)" rx="2" ry="2" />
<text  x="938.94" y="207.5" >nn.Module:_Int8OPTDecoderLayer</text>
</g>
<g >
<title>torch_int/nn/opt.py(300):__prepare_decoder_attention_mask (201 us., 0.03%)</title><rect x="932.6" y="197" width="0.4" height="15.0" fill="rgb(215,87,42)" rx="2" ry="2" />
<text  x="935.62" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (10,829 us., 1.57%)</title><rect x="466.3" y="101" width="18.5" height="15.0" fill="rgb(232,8,7)" rx="2" ry="2" />
<text  x="469.28" y="111.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (4,794 us., 0.70%)</title><rect x="809.8" y="37" width="8.2" height="15.0" fill="rgb(237,169,8)" rx="2" ry="2" />
<text  x="812.78" y="47.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (182,998 us., 26.55%)</title><rect x="484.8" y="117" width="313.4" height="15.0" fill="rgb(238,94,34)" rx="2" ry="2" />
<text  x="487.82" y="127.5" >nn.Module:_Int8OPTForCausalLM</text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (147,773 us., 21.44%)</title><rect x="935.9" y="213" width="253.1" height="15.0" fill="rgb(218,15,36)" rx="2" ry="2" />
<text  x="938.94" y="223.5" >torch_int/nn/opt.py(183):_forward</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (241 us., 0.03%)</title><rect x="933.0" y="245" width="0.4" height="15.0" fill="rgb(239,20,48)" rx="2" ry="2" />
<text  x="935.96" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (200 us., 0.03%)</title><rect x="932.3" y="197" width="0.3" height="15.0" fill="rgb(220,171,46)" rx="2" ry="2" />
<text  x="935.28" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (11,470 us., 1.66%)</title><rect x="818.0" y="133" width="19.6" height="15.0" fill="rgb(242,111,25)" rx="2" ry="2" />
<text  x="820.99" y="143.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (47,732 us., 6.93%)</title><rect x="376.3" y="117" width="81.7" height="15.0" fill="rgb(242,198,7)" rx="2" ry="2" />
<text  x="379.29" y="127.5" >transform..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (308 us., 0.04%)</title><rect x="294.4" y="197" width="0.5" height="15.0" fill="rgb(208,64,42)" rx="2" ry="2" />
<text  x="297.41" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_W8A8B32O32LinearWithScaling (9,564 us., 1.39%)</title><rect x="801.6" y="213" width="16.4" height="15.0" fill="rgb(212,96,35)" rx="2" ry="2" />
<text  x="804.61" y="223.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (11,470 us., 1.66%)</title><rect x="818.0" y="149" width="19.6" height="15.0" fill="rgb(240,157,11)" rx="2" ry="2" />
<text  x="820.99" y="159.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(300):__prepare_decoder_attention_mask (4,069 us., 0.59%)</title><rect x="458.0" y="245" width="7.0" height="15.0" fill="rgb(243,64,48)" rx="2" ry="2" />
<text  x="461.03" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (11,470 us., 1.66%)</title><rect x="818.0" y="69" width="19.6" height="15.0" fill="rgb(230,2,4)" rx="2" ry="2" />
<text  x="820.99" y="79.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(89):__expand_mask (201 us., 0.03%)</title><rect x="932.6" y="213" width="0.4" height="15.0" fill="rgb(241,85,41)" rx="2" ry="2" />
<text  x="935.62" y="223.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (147,773 us., 21.44%)</title><rect x="935.9" y="181" width="253.1" height="15.0" fill="rgb(241,168,3)" rx="2" ry="2" />
<text  x="938.94" y="191.5" >torch_int/nn/opt.py(321):_forward</text>
</g>
<g >
<title>nn.Module:_LayerNorm (600 us., 0.09%)</title><rect x="800.6" y="213" width="1.0" height="15.0" fill="rgb(236,189,10)" rx="2" ry="2" />
<text  x="803.58" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Embedding (900 us., 0.13%)</title><rect x="373.5" y="213" width="1.5" height="15.0" fill="rgb(225,143,19)" rx="2" ry="2" />
<text  x="376.51" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (147,773 us., 21.44%)</title><rect x="935.9" y="229" width="253.1" height="15.0" fill="rgb(205,93,4)" rx="2" ry="2" />
<text  x="938.94" y="239.5" >nn.Module:_Int8OPTAttention</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (4,770 us., 0.69%)</title><rect x="801.6" y="149" width="8.2" height="15.0" fill="rgb(246,39,18)" rx="2" ry="2" />
<text  x="804.61" y="159.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,110 us., 0.16%)</title><rect x="798.7" y="181" width="1.9" height="15.0" fill="rgb(234,159,19)" rx="2" ry="2" />
<text  x="801.68" y="191.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (1,110 us., 0.16%)</title><rect x="798.7" y="213" width="1.9" height="15.0" fill="rgb(245,153,20)" rx="2" ry="2" />
<text  x="801.68" y="223.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (8,418 us., 1.22%)</title><rect x="837.6" y="85" width="14.4" height="15.0" fill="rgb(234,203,31)" rx="2" ry="2" />
<text  x="840.63" y="95.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,100 us., 0.16%)</title><rect x="934.1" y="197" width="1.8" height="15.0" fill="rgb(223,170,23)" rx="2" ry="2" />
<text  x="937.06" y="207.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (4,794 us., 0.70%)</title><rect x="809.8" y="197" width="8.2" height="15.0" fill="rgb(222,147,28)" rx="2" ry="2" />
<text  x="812.78" y="207.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,100 us., 0.16%)</title><rect x="934.1" y="181" width="1.8" height="15.0" fill="rgb(241,176,11)" rx="2" ry="2" />
<text  x="937.06" y="191.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (47,732 us., 6.93%)</title><rect x="376.3" y="149" width="81.7" height="15.0" fill="rgb(230,142,37)" rx="2" ry="2" />
<text  x="379.29" y="159.5" >torch_int..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (47,732 us., 6.93%)</title><rect x="376.3" y="85" width="81.7" height="15.0" fill="rgb(254,56,43)" rx="2" ry="2" />
<text  x="379.29" y="95.5" >profiling..</text>
</g>
<g >
<title>&lt;built-in_method_embedding_of_type_object_at_0x7f939de609c0&gt; (1,628 us., 0.24%)</title><rect x="373.5" y="261" width="2.8" height="15.0" fill="rgb(236,77,4)" rx="2" ry="2" />
<text  x="376.51" y="271.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (182,998 us., 26.55%)</title><rect x="484.8" y="165" width="313.4" height="15.0" fill="rgb(208,227,53)" rx="2" ry="2" />
<text  x="487.82" y="175.5" >torch_int/nn/opt.py(321):_forward</text>
</g>
<g >
<title>&lt;built-in_method_rsub_of_type_object_at_0x7f939de609c0&gt; (201 us., 0.03%)</title><rect x="932.6" y="261" width="0.4" height="15.0" fill="rgb(236,172,27)" rx="2" ry="2" />
<text  x="935.62" y="271.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (751 us., 0.11%)</title><rect x="465.0" y="229" width="1.3" height="15.0" fill="rgb(228,205,43)" rx="2" ry="2" />
<text  x="467.99" y="239.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (4,794 us., 0.70%)</title><rect x="809.8" y="117" width="8.2" height="15.0" fill="rgb(206,98,32)" rx="2" ry="2" />
<text  x="812.78" y="127.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (300 us., 0.04%)</title><rect x="798.2" y="197" width="0.5" height="15.0" fill="rgb(223,190,1)" rx="2" ry="2" />
<text  x="801.17" y="207.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (11,470 us., 1.66%)</title><rect x="818.0" y="85" width="19.6" height="15.0" fill="rgb(254,99,40)" rx="2" ry="2" />
<text  x="820.99" y="95.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (397 us., 0.06%)</title><rect x="933.4" y="197" width="0.7" height="15.0" fill="rgb(216,190,0)" rx="2" ry="2" />
<text  x="936.38" y="207.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (45,882 us., 6.66%)</title><rect x="294.9" y="85" width="78.6" height="15.0" fill="rgb(212,146,45)" rx="2" ry="2" />
<text  x="297.94" y="95.5" >torch/aut..</text>
</g>
<g >
<title>torch_int/nn/opt.py(300):__prepare_decoder_attention_mask (1,110 us., 0.16%)</title><rect x="798.7" y="229" width="1.9" height="15.0" fill="rgb(216,225,54)" rx="2" ry="2" />
<text  x="801.68" y="239.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (308 us., 0.04%)</title><rect x="294.4" y="149" width="0.5" height="15.0" fill="rgb(237,182,5)" rx="2" ry="2" />
<text  x="297.41" y="159.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (45,882 us., 6.66%)</title><rect x="294.9" y="165" width="78.6" height="15.0" fill="rgb(231,8,9)" rx="2" ry="2" />
<text  x="297.94" y="175.5" >torch_int..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (600 us., 0.09%)</title><rect x="800.6" y="165" width="1.0" height="15.0" fill="rgb(243,115,15)" rx="2" ry="2" />
<text  x="803.58" y="175.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (241 us., 0.03%)</title><rect x="933.0" y="181" width="0.4" height="15.0" fill="rgb(231,61,14)" rx="2" ry="2" />
<text  x="935.96" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (600 us., 0.09%)</title><rect x="800.6" y="149" width="1.0" height="15.0" fill="rgb(233,90,24)" rx="2" ry="2" />
<text  x="803.58" y="159.5" ></text>
</g>
<g >
<title>&lt;built-in_method_cumsum_of_type_object_at_0x7f939de609c0&gt; (308 us., 0.04%)</title><rect x="294.4" y="261" width="0.5" height="15.0" fill="rgb(243,205,36)" rx="2" ry="2" />
<text  x="297.41" y="271.5" ></text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (308 us., 0.04%)</title><rect x="294.4" y="229" width="0.5" height="15.0" fill="rgb(210,145,27)" rx="2" ry="2" />
<text  x="297.41" y="239.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (45,882 us., 6.66%)</title><rect x="294.9" y="133" width="78.6" height="15.0" fill="rgb(215,179,26)" rx="2" ry="2" />
<text  x="297.94" y="143.5" >transform..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (600 us., 0.09%)</title><rect x="800.6" y="181" width="1.0" height="15.0" fill="rgb(237,12,12)" rx="2" ry="2" />
<text  x="803.58" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (728 us., 0.11%)</title><rect x="375.0" y="165" width="1.3" height="15.0" fill="rgb(216,31,25)" rx="2" ry="2" />
<text  x="378.05" y="175.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (10,829 us., 1.57%)</title><rect x="466.3" y="229" width="18.5" height="15.0" fill="rgb(212,121,19)" rx="2" ry="2" />
<text  x="469.28" y="239.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (10,829 us., 1.57%)</title><rect x="466.3" y="149" width="18.5" height="15.0" fill="rgb(207,96,1)" rx="2" ry="2" />
<text  x="469.28" y="159.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (728 us., 0.11%)</title><rect x="375.0" y="149" width="1.3" height="15.0" fill="rgb(215,14,7)" rx="2" ry="2" />
<text  x="378.05" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (8,418 us., 1.22%)</title><rect x="837.6" y="181" width="14.4" height="15.0" fill="rgb(254,122,24)" rx="2" ry="2" />
<text  x="840.63" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (600 us., 0.09%)</title><rect x="1189.0" y="181" width="1.0" height="15.0" fill="rgb(219,109,27)" rx="2" ry="2" />
<text  x="1191.97" y="191.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (147,773 us., 21.44%)</title><rect x="935.9" y="101" width="253.1" height="15.0" fill="rgb(208,183,24)" rx="2" ry="2" />
<text  x="938.94" y="111.5" >torch/autograd/grad_mode.py(27):_..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (11,470 us., 1.66%)</title><rect x="818.0" y="181" width="19.6" height="15.0" fill="rgb(222,195,44)" rx="2" ry="2" />
<text  x="820.99" y="191.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (728 us., 0.11%)</title><rect x="375.0" y="117" width="1.3" height="15.0" fill="rgb(224,196,13)" rx="2" ry="2" />
<text  x="378.05" y="127.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (200 us., 0.03%)</title><rect x="932.3" y="165" width="0.3" height="15.0" fill="rgb(247,54,53)" rx="2" ry="2" />
<text  x="935.28" y="175.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (397 us., 0.06%)</title><rect x="933.4" y="245" width="0.7" height="15.0" fill="rgb(223,219,19)" rx="2" ry="2" />
<text  x="936.38" y="255.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (10,829 us., 1.57%)</title><rect x="466.3" y="181" width="18.5" height="15.0" fill="rgb(232,135,25)" rx="2" ry="2" />
<text  x="469.28" y="191.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (500 us., 0.07%)</title><rect x="293.6" y="213" width="0.8" height="15.0" fill="rgb(234,111,0)" rx="2" ry="2" />
<text  x="296.56" y="223.5" ></text>
</g>
<g >
<title>&lt;built-in_method_linear_a8_w8_b32_o32_with_scaling_of_PyCapsule_object_at_0x7f92a92f3ed0&gt; (9,564 us., 1.39%)</title><rect x="801.6" y="261" width="16.4" height="15.0" fill="rgb(237,93,4)" rx="2" ry="2" />
<text  x="804.61" y="271.5" ></text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (300 us., 0.04%)</title><rect x="798.2" y="229" width="0.5" height="15.0" fill="rgb(254,161,44)" rx="2" ry="2" />
<text  x="801.17" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (10,829 us., 1.57%)</title><rect x="466.3" y="133" width="18.5" height="15.0" fill="rgb(250,86,30)" rx="2" ry="2" />
<text  x="469.28" y="143.5" ></text>
</g>
<g >
<title>&lt;built-in_function_linear&gt; (165,601 us., 24.03%)</title><rect x="10.0" y="261" width="283.6" height="15.0" fill="rgb(210,229,5)" rx="2" ry="2" />
<text  x="13.00" y="271.5" >&lt;built-in_function_linear&gt;</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (600 us., 0.09%)</title><rect x="1189.0" y="261" width="1.0" height="15.0" fill="rgb(215,194,4)" rx="2" ry="2" />
<text  x="1191.97" y="271.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (165,601 us., 24.03%)</title><rect x="10.0" y="213" width="283.6" height="15.0" fill="rgb(225,160,53)" rx="2" ry="2" />
<text  x="13.00" y="223.5" >transformers/models/opt/modeling_opt.p..</text>
</g>
<g >
<title>torch_int/nn/opt.py(43):__shape (10,829 us., 1.57%)</title><rect x="466.3" y="245" width="18.5" height="15.0" fill="rgb(236,42,18)" rx="2" ry="2" />
<text  x="469.28" y="255.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (46,859 us., 6.80%)</title><rect x="852.0" y="229" width="80.3" height="15.0" fill="rgb(208,164,31)" rx="2" ry="2" />
<text  x="855.04" y="239.5" >torch/aut..</text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (46,859 us., 6.80%)</title><rect x="852.0" y="245" width="80.3" height="15.0" fill="rgb(237,98,0)" rx="2" ry="2" />
<text  x="855.04" y="255.5" >torch_int..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (182,998 us., 26.55%)</title><rect x="484.8" y="181" width="313.4" height="15.0" fill="rgb(215,72,8)" rx="2" ry="2" />
<text  x="487.82" y="191.5" >nn.Module:_Int8OPTDecoderLayer</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (600 us., 0.09%)</title><rect x="800.6" y="197" width="1.0" height="15.0" fill="rgb(211,94,48)" rx="2" ry="2" />
<text  x="803.58" y="207.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (201 us., 0.03%)</title><rect x="932.6" y="181" width="0.4" height="15.0" fill="rgb(231,117,20)" rx="2" ry="2" />
<text  x="935.62" y="191.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (728 us., 0.11%)</title><rect x="375.0" y="213" width="1.3" height="15.0" fill="rgb(244,182,16)" rx="2" ry="2" />
<text  x="378.05" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Linear (165,601 us., 24.03%)</title><rect x="10.0" y="229" width="283.6" height="15.0" fill="rgb(233,32,50)" rx="2" ry="2" />
<text  x="13.00" y="239.5" >nn.Module:_Linear</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,100 us., 0.16%)</title><rect x="934.1" y="229" width="1.8" height="15.0" fill="rgb(251,191,36)" rx="2" ry="2" />
<text  x="937.06" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_W8A8B8O8Linear (11,470 us., 1.66%)</title><rect x="818.0" y="213" width="19.6" height="15.0" fill="rgb(246,56,16)" rx="2" ry="2" />
<text  x="820.99" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (900 us., 0.13%)</title><rect x="373.5" y="149" width="1.5" height="15.0" fill="rgb(222,173,5)" rx="2" ry="2" />
<text  x="376.51" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (45,882 us., 6.66%)</title><rect x="294.9" y="181" width="78.6" height="15.0" fill="rgb(220,43,22)" rx="2" ry="2" />
<text  x="297.94" y="191.5" >nn.Module..</text>
</g>
<g >
<title>torch/_tensor.py(26):_wrapped (201 us., 0.03%)</title><rect x="932.6" y="229" width="0.4" height="15.0" fill="rgb(217,119,32)" rx="2" ry="2" />
<text  x="935.62" y="239.5" ></text>
</g>
<g >
<title>torch/nn/modules/linear.py(113):_forward (165,601 us., 24.03%)</title><rect x="10.0" y="245" width="283.6" height="15.0" fill="rgb(249,111,23)" rx="2" ry="2" />
<text  x="13.00" y="255.5" >torch/nn/modules/linear.py(113):_forward</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (308 us., 0.04%)</title><rect x="294.4" y="133" width="0.5" height="15.0" fill="rgb(205,94,42)" rx="2" ry="2" />
<text  x="297.41" y="143.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (500 us., 0.07%)</title><rect x="293.6" y="229" width="0.8" height="15.0" fill="rgb(250,154,8)" rx="2" ry="2" />
<text  x="296.56" y="239.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (182,998 us., 26.55%)</title><rect x="484.8" y="197" width="313.4" height="15.0" fill="rgb(216,81,37)" rx="2" ry="2" />
<text  x="487.82" y="207.5" >torch_int/nn/opt.py(183):_forward</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (10,829 us., 1.57%)</title><rect x="466.3" y="117" width="18.5" height="15.0" fill="rgb(224,5,5)" rx="2" ry="2" />
<text  x="469.28" y="127.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (4,069 us., 0.59%)</title><rect x="458.0" y="213" width="7.0" height="15.0" fill="rgb(231,171,35)" rx="2" ry="2" />
<text  x="461.03" y="223.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (165,601 us., 24.03%)</title><rect x="10.0" y="165" width="283.6" height="15.0" fill="rgb(246,124,41)" rx="2" ry="2" />
<text  x="13.00" y="175.5" >torch/autograd/grad_mode.py(27):_decor..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (200 us., 0.03%)</title><rect x="932.3" y="229" width="0.3" height="15.0" fill="rgb(218,132,35)" rx="2" ry="2" />
<text  x="935.28" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (8,418 us., 1.22%)</title><rect x="837.6" y="149" width="14.4" height="15.0" fill="rgb(240,76,2)" rx="2" ry="2" />
<text  x="840.63" y="159.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (182,998 us., 26.55%)</title><rect x="484.8" y="245" width="313.4" height="15.0" fill="rgb(205,49,26)" rx="2" ry="2" />
<text  x="487.82" y="255.5" >torch_int/nn/opt.py(46):_forward</text>
</g>
<g >
<title>torch_int/nn/linear.py(122):_forward (8,418 us., 1.22%)</title><rect x="837.6" y="245" width="14.4" height="15.0" fill="rgb(244,190,10)" rx="2" ry="2" />
<text  x="840.63" y="255.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (751 us., 0.11%)</title><rect x="465.0" y="245" width="1.3" height="15.0" fill="rgb(207,54,49)" rx="2" ry="2" />
<text  x="467.99" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (46,859 us., 6.80%)</title><rect x="852.0" y="149" width="80.3" height="15.0" fill="rgb(232,45,27)" rx="2" ry="2" />
<text  x="855.04" y="159.5" >nn.Module..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (4,794 us., 0.70%)</title><rect x="809.8" y="85" width="8.2" height="15.0" fill="rgb(222,146,50)" rx="2" ry="2" />
<text  x="812.78" y="95.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (728 us., 0.11%)</title><rect x="375.0" y="101" width="1.3" height="15.0" fill="rgb(209,45,0)" rx="2" ry="2" />
<text  x="378.05" y="111.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (751 us., 0.11%)</title><rect x="465.0" y="213" width="1.3" height="15.0" fill="rgb(215,103,29)" rx="2" ry="2" />
<text  x="467.99" y="223.5" ></text>
</g>
<g >
<title>&lt;built-in_method_linear_relu_a8_w8_b8_o8_of_PyCapsule_object_at_0x7f92a92f3e70&gt; (8,418 us., 1.22%)</title><rect x="837.6" y="261" width="14.4" height="15.0" fill="rgb(229,198,20)" rx="2" ry="2" />
<text  x="840.63" y="271.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (8,418 us., 1.22%)</title><rect x="837.6" y="165" width="14.4" height="15.0" fill="rgb(230,71,24)" rx="2" ry="2" />
<text  x="840.63" y="175.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (200 us., 0.03%)</title><rect x="932.3" y="181" width="0.3" height="15.0" fill="rgb(247,217,54)" rx="2" ry="2" />
<text  x="935.28" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (11,470 us., 1.66%)</title><rect x="818.0" y="101" width="19.6" height="15.0" fill="rgb(237,158,31)" rx="2" ry="2" />
<text  x="820.99" y="111.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (300 us., 0.04%)</title><rect x="798.2" y="245" width="0.5" height="15.0" fill="rgb(231,153,26)" rx="2" ry="2" />
<text  x="801.17" y="255.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (147,773 us., 21.44%)</title><rect x="935.9" y="261" width="253.1" height="15.0" fill="rgb(225,168,5)" rx="2" ry="2" />
<text  x="938.94" y="271.5" >torch_int/nn/opt.py(46):_forward</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (11,470 us., 1.66%)</title><rect x="818.0" y="229" width="19.6" height="15.0" fill="rgb(220,144,1)" rx="2" ry="2" />
<text  x="820.99" y="239.5" ></text>
</g>
<g >
<title>&lt;built-in_method_encode_of_str_object_at_0x7f92a9956450&gt; (247,789 us., 35.96%)</title><rect x="376.3" y="261" width="424.3" height="15.0" fill="rgb(230,75,26)" rx="2" ry="2" />
<text  x="379.29" y="271.5" >&lt;built-in_method_encode_of_str_object_at_0x7f92a9956450&gt;</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (47,732 us., 6.93%)</title><rect x="376.3" y="69" width="81.7" height="15.0" fill="rgb(246,192,31)" rx="2" ry="2" />
<text  x="379.29" y="79.5" >torch/aut..</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (900 us., 0.13%)</title><rect x="373.5" y="197" width="1.5" height="15.0" fill="rgb(227,5,33)" rx="2" ry="2" />
<text  x="376.51" y="207.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (10,829 us., 1.57%)</title><rect x="466.3" y="213" width="18.5" height="15.0" fill="rgb(239,111,25)" rx="2" ry="2" />
<text  x="469.28" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (8,418 us., 1.22%)</title><rect x="837.6" y="117" width="14.4" height="15.0" fill="rgb(240,176,30)" rx="2" ry="2" />
<text  x="840.63" y="127.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (1,100 us., 0.16%)</title><rect x="934.1" y="245" width="1.8" height="15.0" fill="rgb(234,70,1)" rx="2" ry="2" />
<text  x="937.06" y="255.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (4,794 us., 0.70%)</title><rect x="809.8" y="53" width="8.2" height="15.0" fill="rgb(218,201,30)" rx="2" ry="2" />
<text  x="812.78" y="63.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (4,770 us., 0.69%)</title><rect x="801.6" y="181" width="8.2" height="15.0" fill="rgb(226,129,43)" rx="2" ry="2" />
<text  x="804.61" y="191.5" ></text>
</g>
<g >
<title>&lt;built-in_method_max_of_type_object_at_0x7f939de609c0&gt; (46,859 us., 6.80%)</title><rect x="852.0" y="261" width="80.3" height="15.0" fill="rgb(206,86,13)" rx="2" ry="2" />
<text  x="855.04" y="271.5" >&lt;built-in..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (241 us., 0.03%)</title><rect x="933.0" y="197" width="0.4" height="15.0" fill="rgb(213,202,2)" rx="2" ry="2" />
<text  x="935.96" y="207.5" ></text>
</g>
<g >
<title>all (689,131 us., 100%)</title><rect x="10.0" y="277" width="1180.0" height="15.0" fill="rgb(215,119,0)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (147,773 us., 21.44%)</title><rect x="935.9" y="149" width="253.1" height="15.0" fill="rgb(212,138,28)" rx="2" ry="2" />
<text  x="938.94" y="159.5" >transformers/models/opt/modeling_..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (201 us., 0.03%)</title><rect x="932.6" y="149" width="0.4" height="15.0" fill="rgb(254,177,25)" rx="2" ry="2" />
<text  x="935.62" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (147,773 us., 21.44%)</title><rect x="935.9" y="165" width="253.1" height="15.0" fill="rgb(249,148,5)" rx="2" ry="2" />
<text  x="938.94" y="175.5" >nn.Module:_Int8OPTDecoder</text>
</g>
<g >
<title>torch_int/nn/linear.py(62):_forward (9,564 us., 1.39%)</title><rect x="801.6" y="245" width="16.4" height="15.0" fill="rgb(250,51,33)" rx="2" ry="2" />
<text  x="804.61" y="255.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (8,418 us., 1.22%)</title><rect x="837.6" y="197" width="14.4" height="15.0" fill="rgb(211,108,2)" rx="2" ry="2" />
<text  x="840.63" y="207.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (751 us., 0.11%)</title><rect x="465.0" y="181" width="1.3" height="15.0" fill="rgb(252,39,53)" rx="2" ry="2" />
<text  x="467.99" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_W8A8B8O8LinearReLU (8,418 us., 1.22%)</title><rect x="837.6" y="213" width="14.4" height="15.0" fill="rgb(210,134,17)" rx="2" ry="2" />
<text  x="840.63" y="223.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (500 us., 0.07%)</title><rect x="293.6" y="245" width="0.8" height="15.0" fill="rgb(248,83,9)" rx="2" ry="2" />
<text  x="296.56" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (300 us., 0.04%)</title><rect x="798.2" y="165" width="0.5" height="15.0" fill="rgb(207,229,6)" rx="2" ry="2" />
<text  x="801.17" y="175.5" ></text>
</g>
<g >
<title>&lt;built-in_method_ones_of_type_object_at_0x7f939de609c0&gt; (200 us., 0.03%)</title><rect x="932.3" y="261" width="0.3" height="15.0" fill="rgb(239,128,17)" rx="2" ry="2" />
<text  x="935.28" y="271.5" ></text>
</g>
<g >
<title>&lt;built-in_method_zeros_like_of_type_object_at_0x7f939de609c0&gt; (241 us., 0.03%)</title><rect x="933.0" y="261" width="0.4" height="15.0" fill="rgb(206,92,49)" rx="2" ry="2" />
<text  x="935.96" y="271.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (1,100 us., 0.16%)</title><rect x="934.1" y="213" width="1.8" height="15.0" fill="rgb(218,22,46)" rx="2" ry="2" />
<text  x="937.06" y="223.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (300 us., 0.04%)</title><rect x="798.2" y="133" width="0.5" height="15.0" fill="rgb(222,35,9)" rx="2" ry="2" />
<text  x="801.17" y="143.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (201 us., 0.03%)</title><rect x="932.6" y="117" width="0.4" height="15.0" fill="rgb(220,196,3)" rx="2" ry="2" />
<text  x="935.62" y="127.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (46,859 us., 6.80%)</title><rect x="852.0" y="181" width="80.3" height="15.0" fill="rgb(247,176,15)" rx="2" ry="2" />
<text  x="855.04" y="191.5" >nn.Module..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (397 us., 0.06%)</title><rect x="933.4" y="165" width="0.7" height="15.0" fill="rgb(216,73,3)" rx="2" ry="2" />
<text  x="936.38" y="175.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(300):__prepare_decoder_attention_mask (397 us., 0.06%)</title><rect x="933.4" y="261" width="0.7" height="15.0" fill="rgb(220,184,42)" rx="2" ry="2" />
<text  x="936.38" y="271.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (241 us., 0.03%)</title><rect x="933.0" y="165" width="0.4" height="15.0" fill="rgb(212,7,12)" rx="2" ry="2" />
<text  x="935.96" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (728 us., 0.11%)</title><rect x="375.0" y="133" width="1.3" height="15.0" fill="rgb(252,97,35)" rx="2" ry="2" />
<text  x="378.05" y="143.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (165,601 us., 24.03%)</title><rect x="10.0" y="197" width="283.6" height="15.0" fill="rgb(219,126,25)" rx="2" ry="2" />
<text  x="13.00" y="207.5" >nn.Module:_Int8OPTForCausalLM</text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (11,470 us., 1.66%)</title><rect x="818.0" y="197" width="19.6" height="15.0" fill="rgb(212,203,53)" rx="2" ry="2" />
<text  x="820.99" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (47,732 us., 6.93%)</title><rect x="376.3" y="101" width="81.7" height="15.0" fill="rgb(247,190,16)" rx="2" ry="2" />
<text  x="379.29" y="111.5" >nn.Module..</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (728 us., 0.11%)</title><rect x="375.0" y="181" width="1.3" height="15.0" fill="rgb(249,170,17)" rx="2" ry="2" />
<text  x="378.05" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (751 us., 0.11%)</title><rect x="465.0" y="197" width="1.3" height="15.0" fill="rgb(247,149,5)" rx="2" ry="2" />
<text  x="467.99" y="207.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (147,773 us., 21.44%)</title><rect x="935.9" y="117" width="253.1" height="15.0" fill="rgb(213,18,23)" rx="2" ry="2" />
<text  x="938.94" y="127.5" >profiling/utils.py(18):_profile_m..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (751 us., 0.11%)</title><rect x="465.0" y="165" width="1.3" height="15.0" fill="rgb(208,169,4)" rx="2" ry="2" />
<text  x="467.99" y="175.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (10,829 us., 1.57%)</title><rect x="466.3" y="69" width="18.5" height="15.0" fill="rgb(245,36,44)" rx="2" ry="2" />
<text  x="469.28" y="79.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (4,794 us., 0.70%)</title><rect x="809.8" y="181" width="8.2" height="15.0" fill="rgb(253,188,38)" rx="2" ry="2" />
<text  x="812.78" y="191.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (4,069 us., 0.59%)</title><rect x="458.0" y="197" width="7.0" height="15.0" fill="rgb(225,185,14)" rx="2" ry="2" />
<text  x="461.03" y="207.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (11,470 us., 1.66%)</title><rect x="818.0" y="117" width="19.6" height="15.0" fill="rgb(246,114,30)" rx="2" ry="2" />
<text  x="820.99" y="127.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (300 us., 0.04%)</title><rect x="798.2" y="181" width="0.5" height="15.0" fill="rgb(239,144,0)" rx="2" ry="2" />
<text  x="801.17" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (47,732 us., 6.93%)</title><rect x="376.3" y="165" width="81.7" height="15.0" fill="rgb(250,23,36)" rx="2" ry="2" />
<text  x="379.29" y="175.5" >nn.Module..</text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (47,732 us., 6.93%)</title><rect x="376.3" y="229" width="81.7" height="15.0" fill="rgb(226,197,43)" rx="2" ry="2" />
<text  x="379.29" y="239.5" >torch_int..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (10,829 us., 1.57%)</title><rect x="466.3" y="165" width="18.5" height="15.0" fill="rgb(232,45,44)" rx="2" ry="2" />
<text  x="469.28" y="175.5" ></text>
</g>
<g >
<title>torch_int/nn/linear.py(92):_forward (11,470 us., 1.66%)</title><rect x="818.0" y="245" width="19.6" height="15.0" fill="rgb(232,15,18)" rx="2" ry="2" />
<text  x="820.99" y="255.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,110 us., 0.16%)</title><rect x="798.7" y="149" width="1.9" height="15.0" fill="rgb(223,79,13)" rx="2" ry="2" />
<text  x="801.68" y="159.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (147,773 us., 21.44%)</title><rect x="935.9" y="245" width="253.1" height="15.0" fill="rgb(250,33,0)" rx="2" ry="2" />
<text  x="938.94" y="255.5" >torch/autograd/grad_mode.py(24):_..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (147,773 us., 21.44%)</title><rect x="935.9" y="133" width="253.1" height="15.0" fill="rgb(251,154,39)" rx="2" ry="2" />
<text  x="938.94" y="143.5" >nn.Module:_Int8OPTForCausalLM</text>
</g>
<g >
<title>torch/nn/modules/normalization.py(188):_forward (600 us., 0.09%)</title><rect x="800.6" y="229" width="1.0" height="15.0" fill="rgb(228,108,44)" rx="2" ry="2" />
<text  x="803.58" y="239.5" ></text>
</g>
<g >
<title>&lt;built-in_method_dq_add_layernorm_q_of_PyCapsule_object_at_0x7f92a92f3f30&gt; (45,882 us., 6.66%)</title><rect x="294.9" y="261" width="78.6" height="15.0" fill="rgb(246,118,8)" rx="2" ry="2" />
<text  x="297.94" y="271.5" >&lt;built-in..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (308 us., 0.04%)</title><rect x="294.4" y="181" width="0.5" height="15.0" fill="rgb(237,137,5)" rx="2" ry="2" />
<text  x="297.41" y="191.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (4,770 us., 0.69%)</title><rect x="801.6" y="85" width="8.2" height="15.0" fill="rgb(234,121,46)" rx="2" ry="2" />
<text  x="804.61" y="95.5" ></text>
</g>
<g >
<title>torch/nn/functional.py(2488):_layer_norm (600 us., 0.09%)</title><rect x="800.6" y="245" width="1.0" height="15.0" fill="rgb(211,141,11)" rx="2" ry="2" />
<text  x="803.58" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (10,829 us., 1.57%)</title><rect x="466.3" y="197" width="18.5" height="15.0" fill="rgb(247,33,22)" rx="2" ry="2" />
<text  x="469.28" y="207.5" ></text>
</g>
</g>
</svg>
