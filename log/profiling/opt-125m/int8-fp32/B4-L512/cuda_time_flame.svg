<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="326" onload="init(evt)" viewBox="0 0 1200 326" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="326.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >CUDA Time</text>
<text id="details" x="10.00" y="309" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="309" > </text>
<g id="frames">
<g >
<title>profiling/utils.py(18):_profile_model (1,558 us., 0.06%)</title><rect x="938.9" y="181" width="0.6" height="15.0" fill="rgb(244,32,18)" rx="2" ry="2" />
<text  x="941.85" y="191.5" ></text>
</g>
<g >
<title>torch_int/functional/fused.py(24):_dq_add_layernorm_q_cpp (215,456 us., 8.07%)</title><rect x="318.2" y="245" width="95.1" height="15.0" fill="rgb(207,222,46)" rx="2" ry="2" />
<text  x="321.16" y="255.5" >torch_int/f..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (4,933 us., 0.18%)</title><rect x="939.5" y="213" width="2.2" height="15.0" fill="rgb(239,12,17)" rx="2" ry="2" />
<text  x="942.54" y="223.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(300):__prepare_decoder_attention_mask (25,825 us., 0.97%)</title><rect x="495.0" y="245" width="11.4" height="15.0" fill="rgb(252,134,13)" rx="2" ry="2" />
<text  x="497.97" y="255.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (2,816 us., 0.11%)</title><rect x="316.2" y="165" width="1.2" height="15.0" fill="rgb(246,139,10)" rx="2" ry="2" />
<text  x="319.16" y="175.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (25,825 us., 0.97%)</title><rect x="495.0" y="149" width="11.4" height="15.0" fill="rgb(217,121,51)" rx="2" ry="2" />
<text  x="497.97" y="159.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (6,030 us., 0.23%)</title><rect x="506.4" y="245" width="2.6" height="15.0" fill="rgb(218,114,45)" rx="2" ry="2" />
<text  x="509.38" y="255.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (993 us., 0.04%)</title><rect x="938.4" y="213" width="0.5" height="15.0" fill="rgb(223,49,12)" rx="2" ry="2" />
<text  x="941.41" y="223.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (11,017 us., 0.41%)</title><rect x="833.6" y="85" width="4.8" height="15.0" fill="rgb(237,163,43)" rx="2" ry="2" />
<text  x="836.56" y="95.5" ></text>
</g>
<g >
<title>torch_int/nn/fused.py(13):_forward (215,456 us., 8.07%)</title><rect x="318.2" y="229" width="95.1" height="15.0" fill="rgb(253,214,31)" rx="2" ry="2" />
<text  x="321.16" y="239.5" >torch_int/n..</text>
</g>
<g >
<title>all (2,671,306 us., 100%)</title><rect x="10.0" y="277" width="1180.0" height="15.0" fill="rgb(209,115,10)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (1,803 us., 0.07%)</title><rect x="414.4" y="181" width="0.8" height="15.0" fill="rgb(212,91,21)" rx="2" ry="2" />
<text  x="417.44" y="191.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (22,858 us., 0.86%)</title><rect x="848.7" y="101" width="10.1" height="15.0" fill="rgb(211,107,35)" rx="2" ry="2" />
<text  x="851.70" y="111.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (3,514 us., 0.13%)</title><rect x="824.8" y="213" width="1.5" height="15.0" fill="rgb(247,120,0)" rx="2" ry="2" />
<text  x="827.76" y="223.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (2,212 us., 0.08%)</title><rect x="826.3" y="197" width="1.0" height="15.0" fill="rgb(236,227,32)" rx="2" ry="2" />
<text  x="829.31" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (179,223 us., 6.71%)</title><rect x="858.8" y="149" width="79.2" height="15.0" fill="rgb(205,191,50)" rx="2" ry="2" />
<text  x="861.80" y="159.5" >nn.Module..</text>
</g>
<g >
<title>torch_int/nn/opt.py(300):__prepare_decoder_attention_mask (1,558 us., 0.06%)</title><rect x="938.9" y="261" width="0.6" height="15.0" fill="rgb(231,103,45)" rx="2" ry="2" />
<text  x="941.85" y="271.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (683,183 us., 25.57%)</title><rect x="522.8" y="165" width="301.8" height="15.0" fill="rgb(217,19,43)" rx="2" ry="2" />
<text  x="525.84" y="175.5" >torch_int/nn/opt.py(321):_forward</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (179,223 us., 6.71%)</title><rect x="858.8" y="229" width="79.2" height="15.0" fill="rgb(223,162,29)" rx="2" ry="2" />
<text  x="861.80" y="239.5" >torch/aut..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (3,514 us., 0.13%)</title><rect x="824.8" y="165" width="1.5" height="15.0" fill="rgb(208,202,5)" rx="2" ry="2" />
<text  x="827.76" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (1,558 us., 0.06%)</title><rect x="938.9" y="197" width="0.6" height="15.0" fill="rgb(212,172,7)" rx="2" ry="2" />
<text  x="941.85" y="207.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (14,181 us., 0.53%)</title><rect x="827.3" y="197" width="6.3" height="15.0" fill="rgb(236,160,19)" rx="2" ry="2" />
<text  x="830.29" y="207.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,558 us., 0.06%)</title><rect x="938.9" y="165" width="0.6" height="15.0" fill="rgb(242,117,51)" rx="2" ry="2" />
<text  x="941.85" y="175.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (809 us., 0.03%)</title><rect x="938.1" y="149" width="0.3" height="15.0" fill="rgb(226,204,0)" rx="2" ry="2" />
<text  x="941.06" y="159.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (561,462 us., 21.02%)</title><rect x="941.7" y="261" width="248.0" height="15.0" fill="rgb(254,165,1)" rx="2" ry="2" />
<text  x="944.72" y="271.5" >torch_int/nn/opt.py(46):_forward</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (2,212 us., 0.08%)</title><rect x="826.3" y="181" width="1.0" height="15.0" fill="rgb(238,110,20)" rx="2" ry="2" />
<text  x="829.31" y="191.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (22,858 us., 0.86%)</title><rect x="848.7" y="133" width="10.1" height="15.0" fill="rgb(212,208,31)" rx="2" ry="2" />
<text  x="851.70" y="143.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (31,242 us., 1.17%)</title><rect x="509.0" y="101" width="13.8" height="15.0" fill="rgb(212,119,52)" rx="2" ry="2" />
<text  x="512.04" y="111.5" ></text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (304 us., 0.01%)</title><rect x="824.6" y="229" width="0.2" height="15.0" fill="rgb(236,65,46)" rx="2" ry="2" />
<text  x="827.63" y="239.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (23,275 us., 0.87%)</title><rect x="838.4" y="197" width="10.3" height="15.0" fill="rgb(250,27,39)" rx="2" ry="2" />
<text  x="841.42" y="207.5" ></text>
</g>
<g >
<title>&lt;built-in_method_cumsum_of_type_object_at_0x7f904d58e9c0&gt; (1,699 us., 0.06%)</title><rect x="317.4" y="261" width="0.8" height="15.0" fill="rgb(243,195,8)" rx="2" ry="2" />
<text  x="320.41" y="271.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (180,518 us., 6.76%)</title><rect x="415.2" y="85" width="79.8" height="15.0" fill="rgb(242,170,9)" rx="2" ry="2" />
<text  x="418.23" y="95.5" >profiling..</text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (179,223 us., 6.71%)</title><rect x="858.8" y="213" width="79.2" height="15.0" fill="rgb(247,121,15)" rx="2" ry="2" />
<text  x="861.80" y="223.5" >nn.Module..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (22,858 us., 0.86%)</title><rect x="848.7" y="229" width="10.1" height="15.0" fill="rgb(229,57,54)" rx="2" ry="2" />
<text  x="851.70" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (598 us., 0.02%)</title><rect x="1189.7" y="245" width="0.3" height="15.0" fill="rgb(207,94,18)" rx="2" ry="2" />
<text  x="1192.74" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (2,212 us., 0.08%)</title><rect x="826.3" y="149" width="1.0" height="15.0" fill="rgb(218,103,48)" rx="2" ry="2" />
<text  x="829.31" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (1,699 us., 0.06%)</title><rect x="317.4" y="229" width="0.8" height="15.0" fill="rgb(246,73,0)" rx="2" ry="2" />
<text  x="320.41" y="239.5" ></text>
</g>
<g >
<title>&lt;built-in_method_encode_of_str_object_at_0x7f8f59085450&gt; (930,616 us., 34.84%)</title><rect x="415.2" y="261" width="411.1" height="15.0" fill="rgb(220,200,9)" rx="2" ry="2" />
<text  x="418.23" y="271.5" >&lt;built-in_method_encode_of_str_object_at_0x7f8f59085450&gt;</text>
</g>
<g >
<title>&lt;built-in_method_linear_a8_w8_b32_o32_with_scaling_of_PyCapsule_object_at_0x7f8f58a21ed0&gt; (25,198 us., 0.94%)</title><rect x="827.3" y="261" width="11.1" height="15.0" fill="rgb(238,48,30)" rx="2" ry="2" />
<text  x="830.29" y="271.5" ></text>
</g>
<g >
<title>&lt;built-in_method_max_of_type_object_at_0x7f904d58e9c0&gt; (179,223 us., 6.71%)</title><rect x="858.8" y="261" width="79.2" height="15.0" fill="rgb(246,180,25)" rx="2" ry="2" />
<text  x="861.80" y="271.5" >&lt;built-in..</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (2,816 us., 0.11%)</title><rect x="316.2" y="245" width="1.2" height="15.0" fill="rgb(245,113,23)" rx="2" ry="2" />
<text  x="319.16" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (1,699 us., 0.06%)</title><rect x="317.4" y="165" width="0.8" height="15.0" fill="rgb(225,224,19)" rx="2" ry="2" />
<text  x="320.41" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (25,825 us., 0.97%)</title><rect x="495.0" y="181" width="11.4" height="15.0" fill="rgb(241,111,15)" rx="2" ry="2" />
<text  x="497.97" y="191.5" ></text>
</g>
<g >
<title>torch/_tensor.py(637):___rsub__ (809 us., 0.03%)</title><rect x="938.1" y="245" width="0.3" height="15.0" fill="rgb(232,163,50)" rx="2" ry="2" />
<text  x="941.06" y="255.5" ></text>
</g>
<g >
<title>torch/_tensor.py(26):_wrapped (809 us., 0.03%)</title><rect x="938.1" y="229" width="0.3" height="15.0" fill="rgb(221,214,38)" rx="2" ry="2" />
<text  x="941.06" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (809 us., 0.03%)</title><rect x="938.1" y="133" width="0.3" height="15.0" fill="rgb(223,224,42)" rx="2" ry="2" />
<text  x="941.06" y="143.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (993 us., 0.04%)</title><rect x="938.4" y="165" width="0.5" height="15.0" fill="rgb(229,137,12)" rx="2" ry="2" />
<text  x="941.41" y="175.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (561,462 us., 21.02%)</title><rect x="941.7" y="101" width="248.0" height="15.0" fill="rgb(211,212,21)" rx="2" ry="2" />
<text  x="944.72" y="111.5" >torch/autograd/grad_mode.py(27):_..</text>
</g>
<g >
<title>&lt;built-in_method_zeros_like_of_type_object_at_0x7f904d58e9c0&gt; (993 us., 0.04%)</title><rect x="938.4" y="261" width="0.5" height="15.0" fill="rgb(224,50,14)" rx="2" ry="2" />
<text  x="941.41" y="271.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (304 us., 0.01%)</title><rect x="824.6" y="165" width="0.2" height="15.0" fill="rgb(238,81,0)" rx="2" ry="2" />
<text  x="827.63" y="175.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (4,933 us., 0.18%)</title><rect x="939.5" y="197" width="2.2" height="15.0" fill="rgb(220,177,6)" rx="2" ry="2" />
<text  x="942.54" y="207.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (31,242 us., 1.17%)</title><rect x="509.0" y="229" width="13.8" height="15.0" fill="rgb(234,88,46)" rx="2" ry="2" />
<text  x="512.04" y="239.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (598 us., 0.02%)</title><rect x="1189.7" y="197" width="0.3" height="15.0" fill="rgb(212,115,30)" rx="2" ry="2" />
<text  x="1192.74" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (6,030 us., 0.23%)</title><rect x="506.4" y="197" width="2.6" height="15.0" fill="rgb(239,144,26)" rx="2" ry="2" />
<text  x="509.38" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (3,514 us., 0.13%)</title><rect x="824.8" y="197" width="1.5" height="15.0" fill="rgb(243,147,49)" rx="2" ry="2" />
<text  x="827.76" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (1,699 us., 0.06%)</title><rect x="317.4" y="197" width="0.8" height="15.0" fill="rgb(221,149,27)" rx="2" ry="2" />
<text  x="320.41" y="207.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (4,933 us., 0.18%)</title><rect x="939.5" y="261" width="2.2" height="15.0" fill="rgb(239,170,10)" rx="2" ry="2" />
<text  x="942.54" y="271.5" ></text>
</g>
<g >
<title>nn.Module:_Embedding (2,496 us., 0.09%)</title><rect x="413.3" y="213" width="1.1" height="15.0" fill="rgb(218,199,6)" rx="2" ry="2" />
<text  x="416.33" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (23,275 us., 0.87%)</title><rect x="838.4" y="101" width="10.3" height="15.0" fill="rgb(205,96,28)" rx="2" ry="2" />
<text  x="841.42" y="111.5" ></text>
</g>
<g >
<title>&lt;built-in_method_add_of_type_object_at_0x7f904d58e9c0&gt; (2,816 us., 0.11%)</title><rect x="316.2" y="261" width="1.2" height="15.0" fill="rgb(233,219,50)" rx="2" ry="2" />
<text  x="319.16" y="271.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (179,223 us., 6.71%)</title><rect x="858.8" y="197" width="79.2" height="15.0" fill="rgb(240,169,16)" rx="2" ry="2" />
<text  x="861.80" y="207.5" >torch_int..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (25,825 us., 0.97%)</title><rect x="495.0" y="165" width="11.4" height="15.0" fill="rgb(222,87,34)" rx="2" ry="2" />
<text  x="497.97" y="175.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,699 us., 0.06%)</title><rect x="317.4" y="149" width="0.8" height="15.0" fill="rgb(222,106,27)" rx="2" ry="2" />
<text  x="320.41" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (14,181 us., 0.53%)</title><rect x="827.3" y="149" width="6.3" height="15.0" fill="rgb(227,166,6)" rx="2" ry="2" />
<text  x="830.29" y="159.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (22,858 us., 0.86%)</title><rect x="848.7" y="85" width="10.1" height="15.0" fill="rgb(242,113,15)" rx="2" ry="2" />
<text  x="851.70" y="95.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (180,518 us., 6.76%)</title><rect x="415.2" y="197" width="79.8" height="15.0" fill="rgb(237,63,22)" rx="2" ry="2" />
<text  x="418.23" y="207.5" >nn.Module..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (561,462 us., 21.02%)</title><rect x="941.7" y="149" width="248.0" height="15.0" fill="rgb(243,123,11)" rx="2" ry="2" />
<text  x="944.72" y="159.5" >transformers/models/opt/modeling_..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (215,456 us., 8.07%)</title><rect x="318.2" y="85" width="95.1" height="15.0" fill="rgb(243,149,3)" rx="2" ry="2" />
<text  x="321.16" y="95.5" >torch/autog..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (180,518 us., 6.76%)</title><rect x="415.2" y="101" width="79.8" height="15.0" fill="rgb(231,48,32)" rx="2" ry="2" />
<text  x="418.23" y="111.5" >nn.Module..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (2,816 us., 0.11%)</title><rect x="316.2" y="229" width="1.2" height="15.0" fill="rgb(217,161,45)" rx="2" ry="2" />
<text  x="319.16" y="239.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (31,242 us., 1.17%)</title><rect x="509.0" y="213" width="13.8" height="15.0" fill="rgb(225,71,26)" rx="2" ry="2" />
<text  x="512.04" y="223.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (809 us., 0.03%)</title><rect x="938.1" y="117" width="0.3" height="15.0" fill="rgb(208,227,23)" rx="2" ry="2" />
<text  x="941.06" y="127.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (23,275 us., 0.87%)</title><rect x="838.4" y="69" width="10.3" height="15.0" fill="rgb(214,48,48)" rx="2" ry="2" />
<text  x="841.42" y="79.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(300):__prepare_decoder_attention_mask (809 us., 0.03%)</title><rect x="938.1" y="197" width="0.3" height="15.0" fill="rgb(222,114,51)" rx="2" ry="2" />
<text  x="941.06" y="207.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,699 us., 0.06%)</title><rect x="317.4" y="181" width="0.8" height="15.0" fill="rgb(230,116,43)" rx="2" ry="2" />
<text  x="320.41" y="191.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (683,183 us., 25.57%)</title><rect x="522.8" y="101" width="301.8" height="15.0" fill="rgb(235,79,22)" rx="2" ry="2" />
<text  x="525.84" y="111.5" >profiling/utils.py(18):_profile_model</text>
</g>
<g >
<title>nn.Module:_LayerNorm (2,212 us., 0.08%)</title><rect x="826.3" y="213" width="1.0" height="15.0" fill="rgb(219,43,48)" rx="2" ry="2" />
<text  x="829.31" y="223.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (809 us., 0.03%)</title><rect x="938.1" y="181" width="0.3" height="15.0" fill="rgb(233,50,25)" rx="2" ry="2" />
<text  x="941.06" y="191.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(89):__expand_mask (3,514 us., 0.13%)</title><rect x="824.8" y="245" width="1.5" height="15.0" fill="rgb(212,132,31)" rx="2" ry="2" />
<text  x="827.76" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (23,275 us., 0.87%)</title><rect x="838.4" y="133" width="10.3" height="15.0" fill="rgb(233,135,33)" rx="2" ry="2" />
<text  x="841.42" y="143.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (693,102 us., 25.95%)</title><rect x="10.0" y="181" width="306.2" height="15.0" fill="rgb(224,121,28)" rx="2" ry="2" />
<text  x="13.00" y="191.5" >profiling/utils.py(18):_profile_model</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (11,017 us., 0.41%)</title><rect x="833.6" y="117" width="4.8" height="15.0" fill="rgb(241,151,10)" rx="2" ry="2" />
<text  x="836.56" y="127.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (22,858 us., 0.86%)</title><rect x="848.7" y="181" width="10.1" height="15.0" fill="rgb(250,199,36)" rx="2" ry="2" />
<text  x="851.70" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (683,183 us., 25.57%)</title><rect x="522.8" y="213" width="301.8" height="15.0" fill="rgb(239,137,3)" rx="2" ry="2" />
<text  x="525.84" y="223.5" >nn.Module:_Int8OPTAttention</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (4,933 us., 0.18%)</title><rect x="939.5" y="181" width="2.2" height="15.0" fill="rgb(246,90,8)" rx="2" ry="2" />
<text  x="942.54" y="191.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (2,212 us., 0.08%)</title><rect x="826.3" y="165" width="1.0" height="15.0" fill="rgb(244,202,9)" rx="2" ry="2" />
<text  x="829.31" y="175.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (25,825 us., 0.97%)</title><rect x="495.0" y="197" width="11.4" height="15.0" fill="rgb(245,176,9)" rx="2" ry="2" />
<text  x="497.97" y="207.5" ></text>
</g>
<g >
<title>torch/nn/functional.py(1804):_softmax (180,518 us., 6.76%)</title><rect x="415.2" y="245" width="79.8" height="15.0" fill="rgb(236,5,35)" rx="2" ry="2" />
<text  x="418.23" y="255.5" >torch/nn/..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (809 us., 0.03%)</title><rect x="938.1" y="101" width="0.3" height="15.0" fill="rgb(211,81,25)" rx="2" ry="2" />
<text  x="941.06" y="111.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (304 us., 0.01%)</title><rect x="824.6" y="133" width="0.2" height="15.0" fill="rgb(244,31,7)" rx="2" ry="2" />
<text  x="827.63" y="143.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (683,183 us., 25.57%)</title><rect x="522.8" y="181" width="301.8" height="15.0" fill="rgb(236,101,8)" rx="2" ry="2" />
<text  x="525.84" y="191.5" >nn.Module:_Int8OPTDecoderLayer</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (2,816 us., 0.11%)</title><rect x="316.2" y="213" width="1.2" height="15.0" fill="rgb(242,9,33)" rx="2" ry="2" />
<text  x="319.16" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (180,518 us., 6.76%)</title><rect x="415.2" y="133" width="79.8" height="15.0" fill="rgb(220,152,25)" rx="2" ry="2" />
<text  x="418.23" y="143.5" >nn.Module..</text>
</g>
<g >
<title>nn.Module:_Linear (693,102 us., 25.95%)</title><rect x="10.0" y="229" width="306.2" height="15.0" fill="rgb(239,113,51)" rx="2" ry="2" />
<text  x="13.00" y="239.5" >nn.Module:_Linear</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (693,102 us., 25.95%)</title><rect x="10.0" y="197" width="306.2" height="15.0" fill="rgb(213,219,8)" rx="2" ry="2" />
<text  x="13.00" y="207.5" >nn.Module:_Int8OPTForCausalLM</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (11,017 us., 0.41%)</title><rect x="833.6" y="53" width="4.8" height="15.0" fill="rgb(213,9,40)" rx="2" ry="2" />
<text  x="836.56" y="63.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (6,030 us., 0.23%)</title><rect x="506.4" y="165" width="2.6" height="15.0" fill="rgb(238,220,12)" rx="2" ry="2" />
<text  x="509.38" y="175.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (215,456 us., 8.07%)</title><rect x="318.2" y="197" width="95.1" height="15.0" fill="rgb(223,183,39)" rx="2" ry="2" />
<text  x="321.16" y="207.5" >torch_int/n..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (11,017 us., 0.41%)</title><rect x="833.6" y="181" width="4.8" height="15.0" fill="rgb(209,119,25)" rx="2" ry="2" />
<text  x="836.56" y="191.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (2,212 us., 0.08%)</title><rect x="826.3" y="117" width="1.0" height="15.0" fill="rgb(244,196,37)" rx="2" ry="2" />
<text  x="829.31" y="127.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (3,514 us., 0.13%)</title><rect x="824.8" y="181" width="1.5" height="15.0" fill="rgb(212,184,36)" rx="2" ry="2" />
<text  x="827.76" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (4,933 us., 0.18%)</title><rect x="939.5" y="245" width="2.2" height="15.0" fill="rgb(208,6,50)" rx="2" ry="2" />
<text  x="942.54" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (11,017 us., 0.41%)</title><rect x="833.6" y="69" width="4.8" height="15.0" fill="rgb(231,223,11)" rx="2" ry="2" />
<text  x="836.56" y="79.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (683,183 us., 25.57%)</title><rect x="522.8" y="229" width="301.8" height="15.0" fill="rgb(219,39,25)" rx="2" ry="2" />
<text  x="525.84" y="239.5" >torch/autograd/grad_mode.py(24):_decorat..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (14,181 us., 0.53%)</title><rect x="827.3" y="101" width="6.3" height="15.0" fill="rgb(248,81,54)" rx="2" ry="2" />
<text  x="830.29" y="111.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (180,518 us., 6.76%)</title><rect x="415.2" y="213" width="79.8" height="15.0" fill="rgb(237,169,34)" rx="2" ry="2" />
<text  x="418.23" y="223.5" >torch/aut..</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (1,558 us., 0.06%)</title><rect x="938.9" y="245" width="0.6" height="15.0" fill="rgb(252,164,6)" rx="2" ry="2" />
<text  x="941.85" y="255.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (1,699 us., 0.06%)</title><rect x="317.4" y="245" width="0.8" height="15.0" fill="rgb(216,124,17)" rx="2" ry="2" />
<text  x="320.41" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_W8A8B8O8Linear (23,275 us., 0.87%)</title><rect x="838.4" y="213" width="10.3" height="15.0" fill="rgb(232,138,48)" rx="2" ry="2" />
<text  x="841.42" y="223.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (180,518 us., 6.76%)</title><rect x="415.2" y="149" width="79.8" height="15.0" fill="rgb(226,136,47)" rx="2" ry="2" />
<text  x="418.23" y="159.5" >torch_int..</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (215,456 us., 8.07%)</title><rect x="318.2" y="165" width="95.1" height="15.0" fill="rgb(228,151,48)" rx="2" ry="2" />
<text  x="321.16" y="175.5" >torch_int/n..</text>
</g>
<g >
<title>torch_int/nn/linear.py(62):_forward (25,198 us., 0.94%)</title><rect x="827.3" y="245" width="11.1" height="15.0" fill="rgb(230,190,47)" rx="2" ry="2" />
<text  x="830.29" y="255.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (23,275 us., 0.87%)</title><rect x="838.4" y="229" width="10.3" height="15.0" fill="rgb(249,226,0)" rx="2" ry="2" />
<text  x="841.42" y="239.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (561,462 us., 21.02%)</title><rect x="941.7" y="117" width="248.0" height="15.0" fill="rgb(251,123,30)" rx="2" ry="2" />
<text  x="944.72" y="127.5" >profiling/utils.py(18):_profile_m..</text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (23,275 us., 0.87%)</title><rect x="838.4" y="165" width="10.3" height="15.0" fill="rgb(215,53,47)" rx="2" ry="2" />
<text  x="841.42" y="175.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (23,275 us., 0.87%)</title><rect x="838.4" y="117" width="10.3" height="15.0" fill="rgb(232,95,3)" rx="2" ry="2" />
<text  x="841.42" y="127.5" ></text>
</g>
<g >
<title>&lt;built-in_method_linear_a8_w8_b8_o8_of_PyCapsule_object_at_0x7f8f58a21f00&gt; (23,275 us., 0.87%)</title><rect x="838.4" y="261" width="10.3" height="15.0" fill="rgb(220,167,19)" rx="2" ry="2" />
<text  x="841.42" y="271.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (180,518 us., 6.76%)</title><rect x="415.2" y="181" width="79.8" height="15.0" fill="rgb(243,22,53)" rx="2" ry="2" />
<text  x="418.23" y="191.5" >torch_int..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (3,514 us., 0.13%)</title><rect x="824.8" y="133" width="1.5" height="15.0" fill="rgb(234,8,22)" rx="2" ry="2" />
<text  x="827.76" y="143.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (561,462 us., 21.02%)</title><rect x="941.7" y="245" width="248.0" height="15.0" fill="rgb(207,134,38)" rx="2" ry="2" />
<text  x="944.72" y="255.5" >torch/autograd/grad_mode.py(24):_..</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (993 us., 0.04%)</title><rect x="938.4" y="245" width="0.5" height="15.0" fill="rgb(220,177,44)" rx="2" ry="2" />
<text  x="941.41" y="255.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (180,518 us., 6.76%)</title><rect x="415.2" y="229" width="79.8" height="15.0" fill="rgb(248,82,37)" rx="2" ry="2" />
<text  x="418.23" y="239.5" >torch_int..</text>
</g>
<g >
<title>torch_int/nn/linear.py(92):_forward (23,275 us., 0.87%)</title><rect x="838.4" y="245" width="10.3" height="15.0" fill="rgb(225,16,25)" rx="2" ry="2" />
<text  x="841.42" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (561,462 us., 21.02%)</title><rect x="941.7" y="229" width="248.0" height="15.0" fill="rgb(234,41,37)" rx="2" ry="2" />
<text  x="944.72" y="239.5" >nn.Module:_Int8OPTAttention</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (23,275 us., 0.87%)</title><rect x="838.4" y="85" width="10.3" height="15.0" fill="rgb(254,110,49)" rx="2" ry="2" />
<text  x="841.42" y="95.5" ></text>
</g>
<g >
<title>torch/nn/modules/linear.py(113):_forward (693,102 us., 25.95%)</title><rect x="10.0" y="245" width="306.2" height="15.0" fill="rgb(209,62,42)" rx="2" ry="2" />
<text  x="13.00" y="255.5" >torch/nn/modules/linear.py(113):_forward</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (598 us., 0.02%)</title><rect x="1189.7" y="213" width="0.3" height="15.0" fill="rgb(252,69,35)" rx="2" ry="2" />
<text  x="1192.74" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (215,456 us., 8.07%)</title><rect x="318.2" y="117" width="95.1" height="15.0" fill="rgb(213,218,16)" rx="2" ry="2" />
<text  x="321.16" y="127.5" >nn.Module:_..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (2,496 us., 0.09%)</title><rect x="413.3" y="165" width="1.1" height="15.0" fill="rgb(209,61,50)" rx="2" ry="2" />
<text  x="416.33" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (598 us., 0.02%)</title><rect x="1189.7" y="181" width="0.3" height="15.0" fill="rgb(207,220,16)" rx="2" ry="2" />
<text  x="1192.74" y="191.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (25,198 us., 0.94%)</title><rect x="827.3" y="229" width="11.1" height="15.0" fill="rgb(237,162,11)" rx="2" ry="2" />
<text  x="830.29" y="239.5" ></text>
</g>
<g >
<title>&lt;built-in_method_linear_relu_a8_w8_b8_o8_of_PyCapsule_object_at_0x7f8f58a21e70&gt; (22,858 us., 0.86%)</title><rect x="848.7" y="261" width="10.1" height="15.0" fill="rgb(233,36,26)" rx="2" ry="2" />
<text  x="851.70" y="271.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,699 us., 0.06%)</title><rect x="317.4" y="133" width="0.8" height="15.0" fill="rgb(218,101,8)" rx="2" ry="2" />
<text  x="320.41" y="143.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(43):__shape (31,242 us., 1.17%)</title><rect x="509.0" y="245" width="13.8" height="15.0" fill="rgb(244,22,47)" rx="2" ry="2" />
<text  x="512.04" y="255.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (31,242 us., 1.17%)</title><rect x="509.0" y="69" width="13.8" height="15.0" fill="rgb(210,20,24)" rx="2" ry="2" />
<text  x="512.04" y="79.5" ></text>
</g>
<g >
<title>torch/nn/modules/sparse.py(157):_forward (4,299 us., 0.16%)</title><rect x="413.3" y="229" width="1.9" height="15.0" fill="rgb(211,77,33)" rx="2" ry="2" />
<text  x="416.33" y="239.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (683,183 us., 25.57%)</title><rect x="522.8" y="133" width="301.8" height="15.0" fill="rgb(242,110,42)" rx="2" ry="2" />
<text  x="525.84" y="143.5" >transformers/models/opt/modeling_opt.py(..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (180,518 us., 6.76%)</title><rect x="415.2" y="117" width="79.8" height="15.0" fill="rgb(245,66,24)" rx="2" ry="2" />
<text  x="418.23" y="127.5" >transform..</text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (23,275 us., 0.87%)</title><rect x="838.4" y="149" width="10.3" height="15.0" fill="rgb(242,110,53)" rx="2" ry="2" />
<text  x="841.42" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (215,456 us., 8.07%)</title><rect x="318.2" y="149" width="95.1" height="15.0" fill="rgb(230,45,33)" rx="2" ry="2" />
<text  x="321.16" y="159.5" >nn.Module:_..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (4,933 us., 0.18%)</title><rect x="939.5" y="229" width="2.2" height="15.0" fill="rgb(227,173,13)" rx="2" ry="2" />
<text  x="942.54" y="239.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (179,223 us., 6.71%)</title><rect x="858.8" y="165" width="79.2" height="15.0" fill="rgb(234,102,38)" rx="2" ry="2" />
<text  x="861.80" y="175.5" >torch_int..</text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (561,462 us., 21.02%)</title><rect x="941.7" y="213" width="248.0" height="15.0" fill="rgb(236,66,7)" rx="2" ry="2" />
<text  x="944.72" y="223.5" >torch_int/nn/opt.py(183):_forward</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (304 us., 0.01%)</title><rect x="824.6" y="181" width="0.2" height="15.0" fill="rgb(211,69,17)" rx="2" ry="2" />
<text  x="827.63" y="191.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (561,462 us., 21.02%)</title><rect x="941.7" y="181" width="248.0" height="15.0" fill="rgb(224,177,23)" rx="2" ry="2" />
<text  x="944.72" y="191.5" >torch_int/nn/opt.py(321):_forward</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (598 us., 0.02%)</title><rect x="1189.7" y="261" width="0.3" height="15.0" fill="rgb(224,65,19)" rx="2" ry="2" />
<text  x="1192.74" y="271.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,803 us., 0.07%)</title><rect x="414.4" y="149" width="0.8" height="15.0" fill="rgb(254,219,32)" rx="2" ry="2" />
<text  x="417.44" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (25,825 us., 0.97%)</title><rect x="495.0" y="213" width="11.4" height="15.0" fill="rgb(226,22,7)" rx="2" ry="2" />
<text  x="497.97" y="223.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (22,858 us., 0.86%)</title><rect x="848.7" y="197" width="10.1" height="15.0" fill="rgb(213,81,38)" rx="2" ry="2" />
<text  x="851.70" y="207.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (1,803 us., 0.07%)</title><rect x="414.4" y="213" width="0.8" height="15.0" fill="rgb(254,81,38)" rx="2" ry="2" />
<text  x="417.44" y="223.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (23,275 us., 0.87%)</title><rect x="838.4" y="53" width="10.3" height="15.0" fill="rgb(210,71,13)" rx="2" ry="2" />
<text  x="841.42" y="63.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (180,518 us., 6.76%)</title><rect x="415.2" y="165" width="79.8" height="15.0" fill="rgb(225,65,1)" rx="2" ry="2" />
<text  x="418.23" y="175.5" >nn.Module..</text>
</g>
<g >
<title>nn.Module:_W8A8B32O32LinearWithScaling (25,198 us., 0.94%)</title><rect x="827.3" y="213" width="11.1" height="15.0" fill="rgb(219,131,11)" rx="2" ry="2" />
<text  x="830.29" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (993 us., 0.04%)</title><rect x="938.4" y="229" width="0.5" height="15.0" fill="rgb(236,58,6)" rx="2" ry="2" />
<text  x="941.41" y="239.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (215,456 us., 8.07%)</title><rect x="318.2" y="101" width="95.1" height="15.0" fill="rgb(206,18,1)" rx="2" ry="2" />
<text  x="321.16" y="111.5" >profiling/u..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (1,803 us., 0.07%)</title><rect x="414.4" y="133" width="0.8" height="15.0" fill="rgb(244,193,22)" rx="2" ry="2" />
<text  x="417.44" y="143.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (993 us., 0.04%)</title><rect x="938.4" y="197" width="0.5" height="15.0" fill="rgb(212,119,2)" rx="2" ry="2" />
<text  x="941.41" y="207.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (14,181 us., 0.53%)</title><rect x="827.3" y="165" width="6.3" height="15.0" fill="rgb(247,67,46)" rx="2" ry="2" />
<text  x="830.29" y="175.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (179,223 us., 6.71%)</title><rect x="858.8" y="101" width="79.2" height="15.0" fill="rgb(224,99,45)" rx="2" ry="2" />
<text  x="861.80" y="111.5" >profiling..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (31,242 us., 1.17%)</title><rect x="509.0" y="165" width="13.8" height="15.0" fill="rgb(218,7,29)" rx="2" ry="2" />
<text  x="512.04" y="175.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (598 us., 0.02%)</title><rect x="1189.7" y="165" width="0.3" height="15.0" fill="rgb(240,8,19)" rx="2" ry="2" />
<text  x="1192.74" y="175.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (304 us., 0.01%)</title><rect x="824.6" y="149" width="0.2" height="15.0" fill="rgb(241,71,7)" rx="2" ry="2" />
<text  x="827.63" y="159.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (2,496 us., 0.09%)</title><rect x="413.3" y="197" width="1.1" height="15.0" fill="rgb(222,221,48)" rx="2" ry="2" />
<text  x="416.33" y="207.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (2,496 us., 0.09%)</title><rect x="413.3" y="117" width="1.1" height="15.0" fill="rgb(240,4,27)" rx="2" ry="2" />
<text  x="416.33" y="127.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (2,496 us., 0.09%)</title><rect x="413.3" y="149" width="1.1" height="15.0" fill="rgb(241,32,10)" rx="2" ry="2" />
<text  x="416.33" y="159.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (23,275 us., 0.87%)</title><rect x="838.4" y="181" width="10.3" height="15.0" fill="rgb(212,137,8)" rx="2" ry="2" />
<text  x="841.42" y="191.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (2,496 us., 0.09%)</title><rect x="413.3" y="133" width="1.1" height="15.0" fill="rgb(229,85,31)" rx="2" ry="2" />
<text  x="416.33" y="143.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,558 us., 0.06%)</title><rect x="938.9" y="213" width="0.6" height="15.0" fill="rgb(205,178,14)" rx="2" ry="2" />
<text  x="941.85" y="223.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (1,699 us., 0.06%)</title><rect x="317.4" y="213" width="0.8" height="15.0" fill="rgb(249,85,15)" rx="2" ry="2" />
<text  x="320.41" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (304 us., 0.01%)</title><rect x="824.6" y="197" width="0.2" height="15.0" fill="rgb(249,76,33)" rx="2" ry="2" />
<text  x="827.63" y="207.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (3,514 us., 0.13%)</title><rect x="824.8" y="149" width="1.5" height="15.0" fill="rgb(210,138,18)" rx="2" ry="2" />
<text  x="827.76" y="159.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (11,017 us., 0.41%)</title><rect x="833.6" y="197" width="4.8" height="15.0" fill="rgb(226,68,50)" rx="2" ry="2" />
<text  x="836.56" y="207.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,803 us., 0.07%)</title><rect x="414.4" y="117" width="0.8" height="15.0" fill="rgb(253,163,40)" rx="2" ry="2" />
<text  x="417.44" y="127.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (683,183 us., 25.57%)</title><rect x="522.8" y="197" width="301.8" height="15.0" fill="rgb(231,68,45)" rx="2" ry="2" />
<text  x="525.84" y="207.5" >torch_int/nn/opt.py(183):_forward</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (179,223 us., 6.71%)</title><rect x="858.8" y="85" width="79.2" height="15.0" fill="rgb(221,205,28)" rx="2" ry="2" />
<text  x="861.80" y="95.5" >torch/aut..</text>
</g>
<g >
<title>&lt;built-in_method_dq_add_layernorm_q_of_PyCapsule_object_at_0x7f8f58a21f30&gt; (215,456 us., 8.07%)</title><rect x="318.2" y="261" width="95.1" height="15.0" fill="rgb(241,218,17)" rx="2" ry="2" />
<text  x="321.16" y="271.5" >&lt;built-in_m..</text>
</g>
<g >
<title>&lt;built-in_method_rsub_of_type_object_at_0x7f904d58e9c0&gt; (809 us., 0.03%)</title><rect x="938.1" y="261" width="0.3" height="15.0" fill="rgb(226,119,20)" rx="2" ry="2" />
<text  x="941.06" y="271.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (6,030 us., 0.23%)</title><rect x="506.4" y="229" width="2.6" height="15.0" fill="rgb(222,50,10)" rx="2" ry="2" />
<text  x="509.38" y="239.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (2,212 us., 0.08%)</title><rect x="826.3" y="133" width="1.0" height="15.0" fill="rgb(209,193,20)" rx="2" ry="2" />
<text  x="829.31" y="143.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(89):__expand_mask (809 us., 0.03%)</title><rect x="938.1" y="213" width="0.3" height="15.0" fill="rgb(248,100,35)" rx="2" ry="2" />
<text  x="941.06" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (2,496 us., 0.09%)</title><rect x="413.3" y="181" width="1.1" height="15.0" fill="rgb(206,68,17)" rx="2" ry="2" />
<text  x="416.33" y="191.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (25,825 us., 0.97%)</title><rect x="495.0" y="229" width="11.4" height="15.0" fill="rgb(230,156,49)" rx="2" ry="2" />
<text  x="497.97" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (561,462 us., 21.02%)</title><rect x="941.7" y="165" width="248.0" height="15.0" fill="rgb(253,196,21)" rx="2" ry="2" />
<text  x="944.72" y="175.5" >nn.Module:_Int8OPTDecoder</text>
</g>
<g >
<title>torch/nn/modules/normalization.py(188):_forward (2,212 us., 0.08%)</title><rect x="826.3" y="229" width="1.0" height="15.0" fill="rgb(243,148,47)" rx="2" ry="2" />
<text  x="829.31" y="239.5" ></text>
</g>
<g >
<title>torch/nn/functional.py(2099):_embedding (4,299 us., 0.16%)</title><rect x="413.3" y="245" width="1.9" height="15.0" fill="rgb(244,196,2)" rx="2" ry="2" />
<text  x="416.33" y="255.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (31,242 us., 1.17%)</title><rect x="509.0" y="149" width="13.8" height="15.0" fill="rgb(226,84,52)" rx="2" ry="2" />
<text  x="512.04" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (22,858 us., 0.86%)</title><rect x="848.7" y="117" width="10.1" height="15.0" fill="rgb(210,38,23)" rx="2" ry="2" />
<text  x="851.70" y="127.5" ></text>
</g>
<g >
<title>nn.Module:_W8A8B8O8LinearReLU (22,858 us., 0.86%)</title><rect x="848.7" y="213" width="10.1" height="15.0" fill="rgb(216,100,4)" rx="2" ry="2" />
<text  x="851.70" y="223.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (683,183 us., 25.57%)</title><rect x="522.8" y="85" width="301.8" height="15.0" fill="rgb(243,226,23)" rx="2" ry="2" />
<text  x="525.84" y="95.5" >torch/autograd/grad_mode.py(27):_decorat..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (179,223 us., 6.71%)</title><rect x="858.8" y="133" width="79.2" height="15.0" fill="rgb(224,25,24)" rx="2" ry="2" />
<text  x="861.80" y="143.5" >transform..</text>
</g>
<g >
<title>&lt;built-in_function_linear&gt; (693,102 us., 25.95%)</title><rect x="10.0" y="261" width="306.2" height="15.0" fill="rgb(216,115,25)" rx="2" ry="2" />
<text  x="13.00" y="271.5" >&lt;built-in_function_linear&gt;</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (31,242 us., 1.17%)</title><rect x="509.0" y="85" width="13.8" height="15.0" fill="rgb(228,127,33)" rx="2" ry="2" />
<text  x="512.04" y="95.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (11,017 us., 0.41%)</title><rect x="833.6" y="165" width="4.8" height="15.0" fill="rgb(216,222,50)" rx="2" ry="2" />
<text  x="836.56" y="175.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (683,183 us., 25.57%)</title><rect x="522.8" y="245" width="301.8" height="15.0" fill="rgb(236,159,21)" rx="2" ry="2" />
<text  x="525.84" y="255.5" >torch_int/nn/opt.py(46):_forward</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (693,102 us., 25.95%)</title><rect x="10.0" y="213" width="306.2" height="15.0" fill="rgb(250,5,44)" rx="2" ry="2" />
<text  x="13.00" y="223.5" >transformers/models/opt/modeling_opt.py(8..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (11,017 us., 0.41%)</title><rect x="833.6" y="133" width="4.8" height="15.0" fill="rgb(228,218,37)" rx="2" ry="2" />
<text  x="836.56" y="143.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (1,803 us., 0.07%)</title><rect x="414.4" y="165" width="0.8" height="15.0" fill="rgb(222,209,24)" rx="2" ry="2" />
<text  x="417.44" y="175.5" ></text>
</g>
<g >
<title>torch_int/nn/linear.py(122):_forward (22,858 us., 0.86%)</title><rect x="848.7" y="245" width="10.1" height="15.0" fill="rgb(225,210,15)" rx="2" ry="2" />
<text  x="851.70" y="255.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (22,858 us., 0.86%)</title><rect x="848.7" y="165" width="10.1" height="15.0" fill="rgb(216,97,35)" rx="2" ry="2" />
<text  x="851.70" y="175.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(300):__prepare_decoder_attention_mask (3,514 us., 0.13%)</title><rect x="824.8" y="229" width="1.5" height="15.0" fill="rgb(232,47,5)" rx="2" ry="2" />
<text  x="827.76" y="239.5" ></text>
</g>
<g >
<title>torch/nn/functional.py(2488):_layer_norm (2,212 us., 0.08%)</title><rect x="826.3" y="245" width="1.0" height="15.0" fill="rgb(226,3,36)" rx="2" ry="2" />
<text  x="829.31" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (215,456 us., 8.07%)</title><rect x="318.2" y="181" width="95.1" height="15.0" fill="rgb(225,19,54)" rx="2" ry="2" />
<text  x="321.16" y="191.5" >nn.Module:_..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (11,017 us., 0.41%)</title><rect x="833.6" y="37" width="4.8" height="15.0" fill="rgb(237,112,35)" rx="2" ry="2" />
<text  x="836.56" y="47.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (6,030 us., 0.23%)</title><rect x="506.4" y="181" width="2.6" height="15.0" fill="rgb(212,144,47)" rx="2" ry="2" />
<text  x="509.38" y="191.5" ></text>
</g>
<g >
<title>&lt;built-in_method_embedding_of_type_object_at_0x7f904d58e9c0&gt; (4,299 us., 0.16%)</title><rect x="413.3" y="261" width="1.9" height="15.0" fill="rgb(210,140,32)" rx="2" ry="2" />
<text  x="416.33" y="271.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (304 us., 0.01%)</title><rect x="824.6" y="245" width="0.2" height="15.0" fill="rgb(225,114,38)" rx="2" ry="2" />
<text  x="827.63" y="255.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (180,518 us., 6.76%)</title><rect x="415.2" y="69" width="79.8" height="15.0" fill="rgb(248,3,21)" rx="2" ry="2" />
<text  x="418.23" y="79.5" >torch/aut..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (6,030 us., 0.23%)</title><rect x="506.4" y="213" width="2.6" height="15.0" fill="rgb(216,112,54)" rx="2" ry="2" />
<text  x="509.38" y="223.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (31,242 us., 1.17%)</title><rect x="509.0" y="117" width="13.8" height="15.0" fill="rgb(209,223,19)" rx="2" ry="2" />
<text  x="512.04" y="127.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (683,183 us., 25.57%)</title><rect x="522.8" y="117" width="301.8" height="15.0" fill="rgb(249,129,46)" rx="2" ry="2" />
<text  x="525.84" y="127.5" >nn.Module:_Int8OPTForCausalLM</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (598 us., 0.02%)</title><rect x="1189.7" y="149" width="0.3" height="15.0" fill="rgb(252,24,31)" rx="2" ry="2" />
<text  x="1192.74" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (31,242 us., 1.17%)</title><rect x="509.0" y="197" width="13.8" height="15.0" fill="rgb(232,100,11)" rx="2" ry="2" />
<text  x="512.04" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (561,462 us., 21.02%)</title><rect x="941.7" y="197" width="248.0" height="15.0" fill="rgb(214,138,35)" rx="2" ry="2" />
<text  x="944.72" y="207.5" >nn.Module:_Int8OPTDecoderLayer</text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (11,017 us., 0.41%)</title><rect x="833.6" y="149" width="4.8" height="15.0" fill="rgb(243,98,2)" rx="2" ry="2" />
<text  x="836.56" y="159.5" ></text>
</g>
<g >
<title>&lt;built-in_method_layer_norm_of_type_object_at_0x7f904d58e9c0&gt; (2,212 us., 0.08%)</title><rect x="826.3" y="261" width="1.0" height="15.0" fill="rgb(218,168,31)" rx="2" ry="2" />
<text  x="829.31" y="271.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (14,181 us., 0.53%)</title><rect x="827.3" y="117" width="6.3" height="15.0" fill="rgb(230,49,14)" rx="2" ry="2" />
<text  x="830.29" y="127.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (598 us., 0.02%)</title><rect x="1189.7" y="229" width="0.3" height="15.0" fill="rgb(222,225,7)" rx="2" ry="2" />
<text  x="1192.74" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_DQ_Add_LayerNorm_Q (215,456 us., 8.07%)</title><rect x="318.2" y="213" width="95.1" height="15.0" fill="rgb(205,43,10)" rx="2" ry="2" />
<text  x="321.16" y="223.5" >nn.Module:_..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (561,462 us., 21.02%)</title><rect x="941.7" y="133" width="248.0" height="15.0" fill="rgb(210,207,37)" rx="2" ry="2" />
<text  x="944.72" y="143.5" >nn.Module:_Int8OPTForCausalLM</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (304 us., 0.01%)</title><rect x="824.6" y="213" width="0.2" height="15.0" fill="rgb(222,45,4)" rx="2" ry="2" />
<text  x="827.63" y="223.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (14,181 us., 0.53%)</title><rect x="827.3" y="85" width="6.3" height="15.0" fill="rgb(219,8,13)" rx="2" ry="2" />
<text  x="830.29" y="95.5" ></text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (1,803 us., 0.07%)</title><rect x="414.4" y="197" width="0.8" height="15.0" fill="rgb(253,155,2)" rx="2" ry="2" />
<text  x="417.44" y="207.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (23,275 us., 0.87%)</title><rect x="838.4" y="37" width="10.3" height="15.0" fill="rgb(217,180,3)" rx="2" ry="2" />
<text  x="841.42" y="47.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (2,816 us., 0.11%)</title><rect x="316.2" y="181" width="1.2" height="15.0" fill="rgb(205,117,12)" rx="2" ry="2" />
<text  x="319.16" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (14,181 us., 0.53%)</title><rect x="827.3" y="181" width="6.3" height="15.0" fill="rgb(223,44,40)" rx="2" ry="2" />
<text  x="830.29" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (179,223 us., 6.71%)</title><rect x="858.8" y="181" width="79.2" height="15.0" fill="rgb(219,115,23)" rx="2" ry="2" />
<text  x="861.80" y="191.5" >nn.Module..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,803 us., 0.07%)</title><rect x="414.4" y="101" width="0.8" height="15.0" fill="rgb(231,94,21)" rx="2" ry="2" />
<text  x="417.44" y="111.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (31,242 us., 1.17%)</title><rect x="509.0" y="133" width="13.8" height="15.0" fill="rgb(232,148,25)" rx="2" ry="2" />
<text  x="512.04" y="143.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (2,816 us., 0.11%)</title><rect x="316.2" y="197" width="1.2" height="15.0" fill="rgb(240,218,26)" rx="2" ry="2" />
<text  x="319.16" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (683,183 us., 25.57%)</title><rect x="522.8" y="149" width="301.8" height="15.0" fill="rgb(226,218,18)" rx="2" ry="2" />
<text  x="525.84" y="159.5" >nn.Module:_Int8OPTDecoder</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (11,017 us., 0.41%)</title><rect x="833.6" y="101" width="4.8" height="15.0" fill="rgb(208,89,39)" rx="2" ry="2" />
<text  x="836.56" y="111.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (1,558 us., 0.06%)</title><rect x="938.9" y="229" width="0.6" height="15.0" fill="rgb(242,215,42)" rx="2" ry="2" />
<text  x="941.85" y="239.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (993 us., 0.04%)</title><rect x="938.4" y="181" width="0.5" height="15.0" fill="rgb(242,226,43)" rx="2" ry="2" />
<text  x="941.41" y="191.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (215,456 us., 8.07%)</title><rect x="318.2" y="133" width="95.1" height="15.0" fill="rgb(215,8,21)" rx="2" ry="2" />
<text  x="321.16" y="143.5" >transformer..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (14,181 us., 0.53%)</title><rect x="827.3" y="133" width="6.3" height="15.0" fill="rgb(215,169,52)" rx="2" ry="2" />
<text  x="830.29" y="143.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (31,242 us., 1.17%)</title><rect x="509.0" y="181" width="13.8" height="15.0" fill="rgb(250,40,6)" rx="2" ry="2" />
<text  x="512.04" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (22,858 us., 0.86%)</title><rect x="848.7" y="149" width="10.1" height="15.0" fill="rgb(220,4,0)" rx="2" ry="2" />
<text  x="851.70" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (179,223 us., 6.71%)</title><rect x="858.8" y="117" width="79.2" height="15.0" fill="rgb(232,182,15)" rx="2" ry="2" />
<text  x="861.80" y="127.5" >nn.Module..</text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (179,223 us., 6.71%)</title><rect x="858.8" y="245" width="79.2" height="15.0" fill="rgb(242,202,17)" rx="2" ry="2" />
<text  x="861.80" y="255.5" >torch_int..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (809 us., 0.03%)</title><rect x="938.1" y="165" width="0.3" height="15.0" fill="rgb(252,73,26)" rx="2" ry="2" />
<text  x="941.06" y="175.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (693,102 us., 25.95%)</title><rect x="10.0" y="165" width="306.2" height="15.0" fill="rgb(222,199,42)" rx="2" ry="2" />
<text  x="13.00" y="175.5" >torch/autograd/grad_mode.py(27):_decorate..</text>
</g>
</g>
</svg>
