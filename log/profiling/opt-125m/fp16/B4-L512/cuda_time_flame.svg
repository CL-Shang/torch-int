<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="294" onload="init(evt)" viewBox="0 0 1200 294" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="294.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >CUDA Time</text>
<text id="details" x="10.00" y="277" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="277" > </text>
<g id="frames">
<g >
<title>profiling/utils.py(18):_profile_model (26,195 us., 1.90%)</title><rect x="930.9" y="69" width="22.4" height="15.0" fill="rgb(221,222,41)" rx="2" ry="2" />
<text  x="933.91" y="79.5" >p..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (199 us., 0.01%)</title><rect x="1032.3" y="133" width="0.1" height="15.0" fill="rgb(250,43,53)" rx="2" ry="2" />
<text  x="1035.28" y="143.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (183,620 us., 13.30%)</title><rect x="10.0" y="149" width="156.9" height="15.0" fill="rgb(236,189,27)" rx="2" ry="2" />
<text  x="13.00" y="159.5" >transformers/models/..</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (149,882 us., 10.85%)</title><rect x="793.8" y="101" width="128.1" height="15.0" fill="rgb(244,202,38)" rx="2" ry="2" />
<text  x="796.79" y="111.5" >nn.Module:_OPTFo..</text>
</g>
<g >
<title>&lt;built-in_method_encode_of_str_object_at_0x7f9983860450&gt; (338,440 us., 24.51%)</title><rect x="641.7" y="229" width="289.2" height="15.0" fill="rgb(211,103,47)" rx="2" ry="2" />
<text  x="644.71" y="239.5" >&lt;built-in_method_encode_of_str_object_..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (2,043 us., 0.15%)</title><rect x="929.2" y="117" width="1.7" height="15.0" fill="rgb(248,93,28)" rx="2" ry="2" />
<text  x="932.16" y="127.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (598 us., 0.04%)</title><rect x="1071.6" y="197" width="0.5" height="15.0" fill="rgb(234,138,10)" rx="2" ry="2" />
<text  x="1074.64" y="207.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (278,463 us., 20.17%)</title><rect x="166.9" y="69" width="238.0" height="15.0" fill="rgb(220,216,34)" rx="2" ry="2" />
<text  x="169.91" y="79.5" >torch/autograd/grad_mode.py(27)..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (199 us., 0.01%)</title><rect x="1032.3" y="213" width="0.1" height="15.0" fill="rgb(228,225,0)" rx="2" ry="2" />
<text  x="1035.28" y="223.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (39,910 us., 2.89%)</title><rect x="759.7" y="53" width="34.1" height="15.0" fill="rgb(229,27,50)" rx="2" ry="2" />
<text  x="762.69" y="63.5" >to..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,701 us., 0.12%)</title><rect x="637.0" y="117" width="1.4" height="15.0" fill="rgb(242,16,39)" rx="2" ry="2" />
<text  x="639.99" y="127.5" ></text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (598 us., 0.04%)</title><rect x="1071.6" y="213" width="0.5" height="15.0" fill="rgb(227,195,42)" rx="2" ry="2" />
<text  x="1074.64" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (106,888 us., 7.74%)</title><rect x="1072.1" y="117" width="91.4" height="15.0" fill="rgb(221,56,53)" rx="2" ry="2" />
<text  x="1075.15" y="127.5" >nn.Module:..</text>
</g>
<g >
<title>torch/_tensor.py(637):___rsub__ (304 us., 0.02%)</title><rect x="1071.4" y="213" width="0.2" height="15.0" fill="rgb(242,33,35)" rx="2" ry="2" />
<text  x="1074.38" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_OPTAttention (39,910 us., 2.89%)</title><rect x="759.7" y="181" width="34.1" height="15.0" fill="rgb(206,182,52)" rx="2" ry="2" />
<text  x="762.69" y="191.5" >nn..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (1,708 us., 0.12%)</title><rect x="640.2" y="149" width="1.5" height="15.0" fill="rgb(214,222,53)" rx="2" ry="2" />
<text  x="643.25" y="159.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(533):__prepare_decoder_attention_mask (666 us., 0.05%)</title><rect x="1188.1" y="229" width="0.5" height="15.0" fill="rgb(251,88,5)" rx="2" ry="2" />
<text  x="1191.06" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (1,708 us., 0.12%)</title><rect x="640.2" y="101" width="1.5" height="15.0" fill="rgb(247,208,38)" rx="2" ry="2" />
<text  x="643.25" y="111.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (91,333 us., 6.61%)</title><rect x="954.2" y="117" width="78.1" height="15.0" fill="rgb(211,143,0)" rx="2" ry="2" />
<text  x="957.23" y="127.5" >transform..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (278,463 us., 20.17%)</title><rect x="166.9" y="117" width="238.0" height="15.0" fill="rgb(237,127,9)" rx="2" ry="2" />
<text  x="169.91" y="127.5" >transformers/models/opt/modelin..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (91,333 us., 6.61%)</title><rect x="954.2" y="181" width="78.1" height="15.0" fill="rgb(240,27,33)" rx="2" ry="2" />
<text  x="957.23" y="191.5" >transform..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (666 us., 0.05%)</title><rect x="1188.1" y="133" width="0.5" height="15.0" fill="rgb(238,117,11)" rx="2" ry="2" />
<text  x="1191.06" y="143.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoder (39,910 us., 2.89%)</title><rect x="759.7" y="117" width="34.1" height="15.0" fill="rgb(233,68,33)" rx="2" ry="2" />
<text  x="762.69" y="127.5" >nn..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,095 us., 0.08%)</title><rect x="953.3" y="101" width="0.9" height="15.0" fill="rgb(243,5,43)" rx="2" ry="2" />
<text  x="956.29" y="111.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (598 us., 0.04%)</title><rect x="1071.6" y="117" width="0.5" height="15.0" fill="rgb(227,74,40)" rx="2" ry="2" />
<text  x="1074.64" y="127.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (26,195 us., 1.90%)</title><rect x="930.9" y="101" width="22.4" height="15.0" fill="rgb(206,170,25)" rx="2" ry="2" />
<text  x="933.91" y="111.5" >t..</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (137,608 us., 9.97%)</title><rect x="519.4" y="101" width="117.6" height="15.0" fill="rgb(242,199,41)" rx="2" ry="2" />
<text  x="522.40" y="111.5" >nn.Module:_OPT..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (137,759 us., 9.98%)</title><rect x="641.7" y="165" width="117.7" height="15.0" fill="rgb(209,23,48)" rx="2" ry="2" />
<text  x="644.71" y="175.5" >transformers/m..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (199 us., 0.01%)</title><rect x="1032.3" y="149" width="0.1" height="15.0" fill="rgb(215,33,17)" rx="2" ry="2" />
<text  x="1035.28" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (137,759 us., 9.98%)</title><rect x="641.7" y="85" width="117.7" height="15.0" fill="rgb(206,228,7)" rx="2" ry="2" />
<text  x="644.71" y="95.5" >nn.Module:_OPT..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (106,888 us., 7.74%)</title><rect x="1072.1" y="85" width="91.4" height="15.0" fill="rgb(247,26,19)" rx="2" ry="2" />
<text  x="1075.15" y="95.5" >torch/auto..</text>
</g>
<g >
<title>&lt;built-in_method_embedding_of_type_object_at_0x7f9a77d6a9c0&gt; (3,821 us., 0.28%)</title><rect x="638.4" y="229" width="3.3" height="15.0" fill="rgb(241,83,27)" rx="2" ry="2" />
<text  x="641.44" y="239.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (137,759 us., 9.98%)</title><rect x="641.7" y="101" width="117.7" height="15.0" fill="rgb(211,215,10)" rx="2" ry="2" />
<text  x="644.71" y="111.5" >transformers/m..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (2,043 us., 0.15%)</title><rect x="929.2" y="165" width="1.7" height="15.0" fill="rgb(247,108,31)" rx="2" ry="2" />
<text  x="932.16" y="175.5" ></text>
</g>
<g >
<title>&lt;built-in_method_max_of_type_object_at_0x7f9a77d6a9c0&gt; (91,333 us., 6.61%)</title><rect x="954.2" y="229" width="78.1" height="15.0" fill="rgb(213,95,11)" rx="2" ry="2" />
<text  x="957.23" y="239.5" >&lt;built-in..</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (45,558 us., 3.30%)</title><rect x="1032.4" y="85" width="39.0" height="15.0" fill="rgb(211,171,16)" rx="2" ry="2" />
<text  x="1035.45" y="95.5" >nn...</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (2,043 us., 0.15%)</title><rect x="929.2" y="133" width="1.7" height="15.0" fill="rgb(206,32,24)" rx="2" ry="2" />
<text  x="932.16" y="143.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoder (2,113 us., 0.15%)</title><rect x="638.4" y="149" width="1.8" height="15.0" fill="rgb(239,221,48)" rx="2" ry="2" />
<text  x="641.44" y="159.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (28,759 us., 2.08%)</title><rect x="1163.5" y="165" width="24.6" height="15.0" fill="rgb(246,194,26)" rx="2" ry="2" />
<text  x="1166.49" y="175.5" >t..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (8,540 us., 0.62%)</title><rect x="921.9" y="117" width="7.3" height="15.0" fill="rgb(220,172,14)" rx="2" ry="2" />
<text  x="924.87" y="127.5" ></text>
</g>
<g >
<title>torch/nn/modules/normalization.py(188):_forward (27,290 us., 1.98%)</title><rect x="930.9" y="197" width="23.3" height="15.0" fill="rgb(235,21,30)" rx="2" ry="2" />
<text  x="933.91" y="207.5" >t..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (183,620 us., 13.30%)</title><rect x="10.0" y="85" width="156.9" height="15.0" fill="rgb(254,138,19)" rx="2" ry="2" />
<text  x="13.00" y="95.5" >transformers/models/..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (91,333 us., 6.61%)</title><rect x="954.2" y="85" width="78.1" height="15.0" fill="rgb(218,92,13)" rx="2" ry="2" />
<text  x="957.23" y="95.5" >profiling..</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (91,333 us., 6.61%)</title><rect x="954.2" y="101" width="78.1" height="15.0" fill="rgb(254,151,9)" rx="2" ry="2" />
<text  x="957.23" y="111.5" >nn.Module..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (598 us., 0.04%)</title><rect x="1071.6" y="133" width="0.5" height="15.0" fill="rgb(226,120,47)" rx="2" ry="2" />
<text  x="1074.64" y="143.5" ></text>
</g>
<g >
<title>nn.Module:_Embedding (2,113 us., 0.15%)</title><rect x="638.4" y="181" width="1.8" height="15.0" fill="rgb(236,83,30)" rx="2" ry="2" />
<text  x="641.44" y="191.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (26,195 us., 1.90%)</title><rect x="930.9" y="165" width="22.4" height="15.0" fill="rgb(216,17,14)" rx="2" ry="2" />
<text  x="933.91" y="175.5" >t..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,603 us., 0.12%)</title><rect x="1188.6" y="197" width="1.4" height="15.0" fill="rgb(244,115,7)" rx="2" ry="2" />
<text  x="1191.63" y="207.5" ></text>
</g>
<g >
<title>&lt;built-in_function_linear&gt; (596,121 us., 43.17%)</title><rect x="10.0" y="229" width="509.4" height="15.0" fill="rgb(237,196,42)" rx="2" ry="2" />
<text  x="13.00" y="239.5" >&lt;built-in_function_linear&gt;</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (149,882 us., 10.85%)</title><rect x="793.8" y="149" width="128.1" height="15.0" fill="rgb(227,201,0)" rx="2" ry="2" />
<text  x="796.79" y="159.5" >transformers/mod..</text>
</g>
<g >
<title>&lt;built-in_method_layer_norm_of_type_object_at_0x7f9a77d6a9c0&gt; (27,290 us., 1.98%)</title><rect x="930.9" y="229" width="23.3" height="15.0" fill="rgb(224,106,16)" rx="2" ry="2" />
<text  x="933.91" y="239.5" >&lt;..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (8,540 us., 0.62%)</title><rect x="921.9" y="165" width="7.3" height="15.0" fill="rgb(235,166,41)" rx="2" ry="2" />
<text  x="924.87" y="175.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,701 us., 0.12%)</title><rect x="637.0" y="101" width="1.4" height="15.0" fill="rgb(223,100,34)" rx="2" ry="2" />
<text  x="639.99" y="111.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (2,113 us., 0.15%)</title><rect x="638.4" y="165" width="1.8" height="15.0" fill="rgb(241,220,16)" rx="2" ry="2" />
<text  x="641.44" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_Linear (596,121 us., 43.17%)</title><rect x="10.0" y="197" width="509.4" height="15.0" fill="rgb(233,104,16)" rx="2" ry="2" />
<text  x="13.00" y="207.5" >nn.Module:_Linear</text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (306 us., 0.02%)</title><rect x="759.4" y="197" width="0.3" height="15.0" fill="rgb(247,98,36)" rx="2" ry="2" />
<text  x="762.42" y="207.5" ></text>
</g>
<g >
<title>&lt;built-in_method_ones_of_type_object_at_0x7f9a77d6a9c0&gt; (199 us., 0.01%)</title><rect x="1032.3" y="229" width="0.1" height="15.0" fill="rgb(252,47,24)" rx="2" ry="2" />
<text  x="1035.28" y="239.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (45,558 us., 3.30%)</title><rect x="1032.4" y="165" width="39.0" height="15.0" fill="rgb(218,19,26)" rx="2" ry="2" />
<text  x="1035.45" y="175.5" >tra..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (137,608 us., 9.97%)</title><rect x="519.4" y="85" width="117.6" height="15.0" fill="rgb(210,178,42)" rx="2" ry="2" />
<text  x="522.40" y="95.5" >profiling/util..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (91,333 us., 6.61%)</title><rect x="954.2" y="149" width="78.1" height="15.0" fill="rgb(238,204,16)" rx="2" ry="2" />
<text  x="957.23" y="159.5" >transform..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (278,463 us., 20.17%)</title><rect x="166.9" y="149" width="238.0" height="15.0" fill="rgb(253,169,52)" rx="2" ry="2" />
<text  x="169.91" y="159.5" >transformers/models/opt/modelin..</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (134,038 us., 9.71%)</title><rect x="404.9" y="165" width="114.5" height="15.0" fill="rgb(245,188,27)" rx="2" ry="2" />
<text  x="407.86" y="175.5" >nn.Module:_OPT..</text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (26,195 us., 1.90%)</title><rect x="930.9" y="149" width="22.4" height="15.0" fill="rgb(225,8,33)" rx="2" ry="2" />
<text  x="933.91" y="159.5" >n..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (28,759 us., 2.08%)</title><rect x="1163.5" y="133" width="24.6" height="15.0" fill="rgb(237,132,1)" rx="2" ry="2" />
<text  x="1166.49" y="143.5" >p..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(533):__prepare_decoder_attention_mask (8,540 us., 0.62%)</title><rect x="921.9" y="213" width="7.3" height="15.0" fill="rgb(240,133,24)" rx="2" ry="2" />
<text  x="924.87" y="223.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (137,608 us., 9.97%)</title><rect x="519.4" y="181" width="117.6" height="15.0" fill="rgb(212,219,46)" rx="2" ry="2" />
<text  x="522.40" y="191.5" >transformers/m..</text>
</g>
<g >
<title>torch/_tensor.py(26):_wrapped (304 us., 0.02%)</title><rect x="1071.4" y="197" width="0.2" height="15.0" fill="rgb(211,139,41)" rx="2" ry="2" />
<text  x="1074.38" y="207.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (45,558 us., 3.30%)</title><rect x="1032.4" y="101" width="39.0" height="15.0" fill="rgb(214,160,12)" rx="2" ry="2" />
<text  x="1035.45" y="111.5" >tra..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (304 us., 0.02%)</title><rect x="1071.4" y="149" width="0.2" height="15.0" fill="rgb(213,157,31)" rx="2" ry="2" />
<text  x="1074.38" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (666 us., 0.05%)</title><rect x="1188.1" y="165" width="0.5" height="15.0" fill="rgb(249,88,52)" rx="2" ry="2" />
<text  x="1191.06" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoder (137,759 us., 9.98%)</title><rect x="641.7" y="117" width="117.7" height="15.0" fill="rgb(226,154,54)" rx="2" ry="2" />
<text  x="644.71" y="127.5" >nn.Module:_OPT..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (199 us., 0.01%)</title><rect x="1032.3" y="197" width="0.1" height="15.0" fill="rgb(223,89,40)" rx="2" ry="2" />
<text  x="1035.28" y="207.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (183,620 us., 13.30%)</title><rect x="10.0" y="53" width="156.9" height="15.0" fill="rgb(246,132,5)" rx="2" ry="2" />
<text  x="13.00" y="63.5" >profiling/utils.py(1..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (106,888 us., 7.74%)</title><rect x="1072.1" y="197" width="91.4" height="15.0" fill="rgb(210,156,41)" rx="2" ry="2" />
<text  x="1075.15" y="207.5" >transforme..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (8,540 us., 0.62%)</title><rect x="921.9" y="197" width="7.3" height="15.0" fill="rgb(209,228,54)" rx="2" ry="2" />
<text  x="924.87" y="207.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (199 us., 0.01%)</title><rect x="1032.3" y="181" width="0.1" height="15.0" fill="rgb(208,156,47)" rx="2" ry="2" />
<text  x="1035.28" y="191.5" ></text>
</g>
<g >
<title>&lt;built-in_method_cumsum_of_type_object_at_0x7f9a77d6a9c0&gt; (1,701 us., 0.12%)</title><rect x="637.0" y="229" width="1.4" height="15.0" fill="rgb(244,49,28)" rx="2" ry="2" />
<text  x="639.99" y="239.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,708 us., 0.12%)</title><rect x="640.2" y="117" width="1.5" height="15.0" fill="rgb(252,105,24)" rx="2" ry="2" />
<text  x="643.25" y="127.5" ></text>
</g>
<g >
<title>nn.Module:_OPTAttention (106,888 us., 7.74%)</title><rect x="1072.1" y="213" width="91.4" height="15.0" fill="rgb(221,229,41)" rx="2" ry="2" />
<text  x="1075.15" y="223.5" >nn.Module:..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(160):_forward (91,333 us., 6.61%)</title><rect x="954.2" y="213" width="78.1" height="15.0" fill="rgb(254,116,31)" rx="2" ry="2" />
<text  x="957.23" y="223.5" >transform..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,701 us., 0.12%)</title><rect x="637.0" y="149" width="1.4" height="15.0" fill="rgb(244,136,10)" rx="2" ry="2" />
<text  x="639.99" y="159.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (134,038 us., 9.71%)</title><rect x="404.9" y="181" width="114.5" height="15.0" fill="rgb(237,202,25)" rx="2" ry="2" />
<text  x="407.86" y="191.5" >transformers/m..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (666 us., 0.05%)</title><rect x="1188.1" y="197" width="0.5" height="15.0" fill="rgb(211,59,53)" rx="2" ry="2" />
<text  x="1191.06" y="207.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (306 us., 0.02%)</title><rect x="759.4" y="181" width="0.3" height="15.0" fill="rgb(242,19,45)" rx="2" ry="2" />
<text  x="762.42" y="191.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,603 us., 0.12%)</title><rect x="1188.6" y="165" width="1.4" height="15.0" fill="rgb(209,84,47)" rx="2" ry="2" />
<text  x="1191.63" y="175.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (278,463 us., 20.17%)</title><rect x="166.9" y="85" width="238.0" height="15.0" fill="rgb(227,104,51)" rx="2" ry="2" />
<text  x="169.91" y="95.5" >profiling/utils.py(18):_profile..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (106,888 us., 7.74%)</title><rect x="1072.1" y="149" width="91.4" height="15.0" fill="rgb(216,156,36)" rx="2" ry="2" />
<text  x="1075.15" y="159.5" >nn.Module:..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (666 us., 0.05%)</title><rect x="1188.1" y="149" width="0.5" height="15.0" fill="rgb(235,152,34)" rx="2" ry="2" />
<text  x="1191.06" y="159.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (45,558 us., 3.30%)</title><rect x="1032.4" y="69" width="39.0" height="15.0" fill="rgb(217,122,34)" rx="2" ry="2" />
<text  x="1035.45" y="79.5" >pro..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (91,333 us., 6.61%)</title><rect x="954.2" y="69" width="78.1" height="15.0" fill="rgb(205,179,4)" rx="2" ry="2" />
<text  x="957.23" y="79.5" >torch/aut..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(160):_forward (183,620 us., 13.30%)</title><rect x="10.0" y="181" width="156.9" height="15.0" fill="rgb(215,229,36)" rx="2" ry="2" />
<text  x="13.00" y="191.5" >transformers/models/..</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (2,113 us., 0.15%)</title><rect x="638.4" y="117" width="1.8" height="15.0" fill="rgb(205,48,6)" rx="2" ry="2" />
<text  x="641.44" y="127.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (134,038 us., 9.71%)</title><rect x="404.9" y="133" width="114.5" height="15.0" fill="rgb(219,205,33)" rx="2" ry="2" />
<text  x="407.86" y="143.5" >torch/autograd..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (306 us., 0.02%)</title><rect x="759.4" y="213" width="0.3" height="15.0" fill="rgb(245,32,18)" rx="2" ry="2" />
<text  x="762.42" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (306 us., 0.02%)</title><rect x="759.4" y="133" width="0.3" height="15.0" fill="rgb(244,75,17)" rx="2" ry="2" />
<text  x="762.42" y="143.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,095 us., 0.08%)</title><rect x="953.3" y="85" width="0.9" height="15.0" fill="rgb(219,153,3)" rx="2" ry="2" />
<text  x="956.29" y="95.5" ></text>
</g>
<g >
<title>torch/nn/modules/linear.py(113):_forward (596,121 us., 43.17%)</title><rect x="10.0" y="213" width="509.4" height="15.0" fill="rgb(225,94,27)" rx="2" ry="2" />
<text  x="13.00" y="223.5" >torch/nn/modules/linear.py(113):_forward</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (2,043 us., 0.15%)</title><rect x="929.2" y="181" width="1.7" height="15.0" fill="rgb(222,195,27)" rx="2" ry="2" />
<text  x="932.16" y="191.5" ></text>
</g>
<g >
<title>torch/nn/modules/activation.py(97):_forward (45,558 us., 3.30%)</title><rect x="1032.4" y="197" width="39.0" height="15.0" fill="rgb(213,86,10)" rx="2" ry="2" />
<text  x="1035.45" y="207.5" >tor..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (2,043 us., 0.15%)</title><rect x="929.2" y="101" width="1.7" height="15.0" fill="rgb(219,30,42)" rx="2" ry="2" />
<text  x="932.16" y="111.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoder (149,882 us., 10.85%)</title><rect x="793.8" y="133" width="128.1" height="15.0" fill="rgb(235,65,2)" rx="2" ry="2" />
<text  x="796.79" y="143.5" >nn.Module:_OPTDe..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (45,558 us., 3.30%)</title><rect x="1032.4" y="133" width="39.0" height="15.0" fill="rgb(224,118,29)" rx="2" ry="2" />
<text  x="1035.45" y="143.5" >tra..</text>
</g>
<g >
<title>all (1,380,889 us., 100%)</title><rect x="10.0" y="245" width="1180.0" height="15.0" fill="rgb(218,103,22)" rx="2" ry="2" />
<text  x="13.00" y="255.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (149,882 us., 10.85%)</title><rect x="793.8" y="181" width="128.1" height="15.0" fill="rgb(220,58,40)" rx="2" ry="2" />
<text  x="796.79" y="191.5" >transformers/mod..</text>
</g>
<g >
<title>torch/nn/modules/sparse.py(157):_forward (3,821 us., 0.28%)</title><rect x="638.4" y="197" width="3.3" height="15.0" fill="rgb(235,133,4)" rx="2" ry="2" />
<text  x="641.44" y="207.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(160):_forward (39,910 us., 2.89%)</title><rect x="759.7" y="197" width="34.1" height="15.0" fill="rgb(215,43,44)" rx="2" ry="2" />
<text  x="762.69" y="207.5" >tr..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (306 us., 0.02%)</title><rect x="759.4" y="101" width="0.3" height="15.0" fill="rgb(241,80,16)" rx="2" ry="2" />
<text  x="762.42" y="111.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (183,620 us., 13.30%)</title><rect x="10.0" y="133" width="156.9" height="15.0" fill="rgb(217,210,25)" rx="2" ry="2" />
<text  x="13.00" y="143.5" >nn.Module:_OPTDecode..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (91,333 us., 6.61%)</title><rect x="954.2" y="133" width="78.1" height="15.0" fill="rgb(243,46,2)" rx="2" ry="2" />
<text  x="957.23" y="143.5" >nn.Module..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (304 us., 0.02%)</title><rect x="1071.4" y="85" width="0.2" height="15.0" fill="rgb(212,120,53)" rx="2" ry="2" />
<text  x="1074.38" y="95.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(157):__shape (39,910 us., 2.89%)</title><rect x="759.7" y="213" width="34.1" height="15.0" fill="rgb(220,156,48)" rx="2" ry="2" />
<text  x="762.69" y="223.5" >tr..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (1,701 us., 0.12%)</title><rect x="637.0" y="165" width="1.4" height="15.0" fill="rgb(254,182,19)" rx="2" ry="2" />
<text  x="639.99" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (278,463 us., 20.17%)</title><rect x="166.9" y="101" width="238.0" height="15.0" fill="rgb(246,103,19)" rx="2" ry="2" />
<text  x="169.91" y="111.5" >nn.Module:_OPTForCausalLM</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,708 us., 0.12%)</title><rect x="640.2" y="69" width="1.5" height="15.0" fill="rgb(241,158,26)" rx="2" ry="2" />
<text  x="643.25" y="79.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (45,558 us., 3.30%)</title><rect x="1032.4" y="149" width="39.0" height="15.0" fill="rgb(229,128,31)" rx="2" ry="2" />
<text  x="1035.45" y="159.5" >nn...</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (137,608 us., 9.97%)</title><rect x="519.4" y="69" width="117.6" height="15.0" fill="rgb(205,182,2)" rx="2" ry="2" />
<text  x="522.40" y="79.5" >torch/autograd..</text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (278,463 us., 20.17%)</title><rect x="166.9" y="165" width="238.0" height="15.0" fill="rgb(216,12,50)" rx="2" ry="2" />
<text  x="169.91" y="175.5" >nn.Module:_OPTDecoderLayer</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (137,608 us., 9.97%)</title><rect x="519.4" y="133" width="117.6" height="15.0" fill="rgb(206,177,8)" rx="2" ry="2" />
<text  x="522.40" y="143.5" >nn.Module:_OPT..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(160):_forward (137,608 us., 9.97%)</title><rect x="519.4" y="213" width="117.6" height="15.0" fill="rgb(215,47,10)" rx="2" ry="2" />
<text  x="522.40" y="223.5" >transformers/m..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (2,113 us., 0.15%)</title><rect x="638.4" y="133" width="1.8" height="15.0" fill="rgb(240,89,41)" rx="2" ry="2" />
<text  x="641.44" y="143.5" ></text>
</g>
<g >
<title>&lt;built-in_method_relu_of_type_object_at_0x7f9a77d6a9c0&gt; (45,558 us., 3.30%)</title><rect x="1032.4" y="229" width="39.0" height="15.0" fill="rgb(240,191,17)" rx="2" ry="2" />
<text  x="1035.45" y="239.5" >&lt;bu..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (1,603 us., 0.12%)</title><rect x="1188.6" y="213" width="1.4" height="15.0" fill="rgb(226,65,4)" rx="2" ry="2" />
<text  x="1191.63" y="223.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(89):__expand_mask (2,043 us., 0.15%)</title><rect x="929.2" y="213" width="1.7" height="15.0" fill="rgb(211,89,37)" rx="2" ry="2" />
<text  x="932.16" y="223.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(160):_forward (106,888 us., 7.74%)</title><rect x="1072.1" y="229" width="91.4" height="15.0" fill="rgb(227,174,2)" rx="2" ry="2" />
<text  x="1075.15" y="239.5" >transforme..</text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (28,759 us., 2.08%)</title><rect x="1163.5" y="213" width="24.6" height="15.0" fill="rgb(253,163,17)" rx="2" ry="2" />
<text  x="1166.49" y="223.5" >n..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(533):__prepare_decoder_attention_mask (304 us., 0.02%)</title><rect x="1071.4" y="165" width="0.2" height="15.0" fill="rgb(213,182,16)" rx="2" ry="2" />
<text  x="1074.38" y="175.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (149,882 us., 10.85%)</title><rect x="793.8" y="85" width="128.1" height="15.0" fill="rgb(207,58,52)" rx="2" ry="2" />
<text  x="796.79" y="95.5" >profiling/utils...</text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (91,333 us., 6.61%)</title><rect x="954.2" y="165" width="78.1" height="15.0" fill="rgb(217,172,4)" rx="2" ry="2" />
<text  x="957.23" y="175.5" >nn.Module..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (45,558 us., 3.30%)</title><rect x="1032.4" y="117" width="39.0" height="15.0" fill="rgb(243,153,12)" rx="2" ry="2" />
<text  x="1035.45" y="127.5" >nn...</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (149,882 us., 10.85%)</title><rect x="793.8" y="69" width="128.1" height="15.0" fill="rgb(236,76,17)" rx="2" ry="2" />
<text  x="796.79" y="79.5" >torch/autograd/g..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (8,540 us., 0.62%)</title><rect x="921.9" y="181" width="7.3" height="15.0" fill="rgb(237,182,41)" rx="2" ry="2" />
<text  x="924.87" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoder (306 us., 0.02%)</title><rect x="759.4" y="165" width="0.3" height="15.0" fill="rgb(217,219,54)" rx="2" ry="2" />
<text  x="762.42" y="175.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (666 us., 0.05%)</title><rect x="1188.1" y="181" width="0.5" height="15.0" fill="rgb(237,66,1)" rx="2" ry="2" />
<text  x="1191.06" y="191.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (8,540 us., 0.62%)</title><rect x="921.9" y="133" width="7.3" height="15.0" fill="rgb(213,5,8)" rx="2" ry="2" />
<text  x="924.87" y="143.5" ></text>
</g>
<g >
<title>nn.Module:_OPTAttention (91,333 us., 6.61%)</title><rect x="954.2" y="197" width="78.1" height="15.0" fill="rgb(231,17,1)" rx="2" ry="2" />
<text  x="957.23" y="207.5" >nn.Module..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (26,195 us., 1.90%)</title><rect x="930.9" y="133" width="22.4" height="15.0" fill="rgb(205,109,28)" rx="2" ry="2" />
<text  x="933.91" y="143.5" >t..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (134,038 us., 9.71%)</title><rect x="404.9" y="149" width="114.5" height="15.0" fill="rgb(211,148,7)" rx="2" ry="2" />
<text  x="407.86" y="159.5" >profiling/util..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (28,759 us., 2.08%)</title><rect x="1163.5" y="117" width="24.6" height="15.0" fill="rgb(218,205,14)" rx="2" ry="2" />
<text  x="1166.49" y="127.5" >t..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (149,882 us., 10.85%)</title><rect x="793.8" y="117" width="128.1" height="15.0" fill="rgb(216,1,21)" rx="2" ry="2" />
<text  x="796.79" y="127.5" >transformers/mod..</text>
</g>
<g >
<title>nn.Module:_ReLU (45,558 us., 3.30%)</title><rect x="1032.4" y="181" width="39.0" height="15.0" fill="rgb(245,14,49)" rx="2" ry="2" />
<text  x="1035.45" y="191.5" >nn...</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (39,910 us., 2.89%)</title><rect x="759.7" y="85" width="34.1" height="15.0" fill="rgb(222,205,23)" rx="2" ry="2" />
<text  x="762.69" y="95.5" >nn..</text>
</g>
<g >
<title>&lt;built-in_method_rsub_of_type_object_at_0x7f9a77d6a9c0&gt; (304 us., 0.02%)</title><rect x="1071.4" y="229" width="0.2" height="15.0" fill="rgb(219,45,1)" rx="2" ry="2" />
<text  x="1074.38" y="239.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (306 us., 0.02%)</title><rect x="759.4" y="117" width="0.3" height="15.0" fill="rgb(243,177,19)" rx="2" ry="2" />
<text  x="762.42" y="127.5" ></text>
</g>
<g >
<title>nn.Module:_OPTAttention (137,608 us., 9.97%)</title><rect x="519.4" y="197" width="117.6" height="15.0" fill="rgb(233,210,17)" rx="2" ry="2" />
<text  x="522.40" y="207.5" >nn.Module:_OPT..</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (598 us., 0.04%)</title><rect x="1071.6" y="149" width="0.5" height="15.0" fill="rgb(216,35,34)" rx="2" ry="2" />
<text  x="1074.64" y="159.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (39,910 us., 2.89%)</title><rect x="759.7" y="69" width="34.1" height="15.0" fill="rgb(235,97,48)" rx="2" ry="2" />
<text  x="762.69" y="79.5" >pr..</text>
</g>
<g >
<title>torch/nn/functional.py(2099):_embedding (3,821 us., 0.28%)</title><rect x="638.4" y="213" width="3.3" height="15.0" fill="rgb(241,129,18)" rx="2" ry="2" />
<text  x="641.44" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoder (304 us., 0.02%)</title><rect x="1071.4" y="133" width="0.2" height="15.0" fill="rgb(206,104,48)" rx="2" ry="2" />
<text  x="1074.38" y="143.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (28,759 us., 2.08%)</title><rect x="1163.5" y="197" width="24.6" height="15.0" fill="rgb(232,116,30)" rx="2" ry="2" />
<text  x="1166.49" y="207.5" >t..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (1,095 us., 0.08%)</title><rect x="953.3" y="149" width="0.9" height="15.0" fill="rgb(225,154,29)" rx="2" ry="2" />
<text  x="956.29" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (28,759 us., 2.08%)</title><rect x="1163.5" y="149" width="24.6" height="15.0" fill="rgb(246,188,52)" rx="2" ry="2" />
<text  x="1166.49" y="159.5" >n..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (1,708 us., 0.12%)</title><rect x="640.2" y="181" width="1.5" height="15.0" fill="rgb(227,162,51)" rx="2" ry="2" />
<text  x="643.25" y="191.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (106,888 us., 7.74%)</title><rect x="1072.1" y="101" width="91.4" height="15.0" fill="rgb(231,72,39)" rx="2" ry="2" />
<text  x="1075.15" y="111.5" >profiling/..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (183,620 us., 13.30%)</title><rect x="10.0" y="37" width="156.9" height="15.0" fill="rgb(215,61,40)" rx="2" ry="2" />
<text  x="13.00" y="47.5" >torch/autograd/grad_..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (26,195 us., 1.90%)</title><rect x="930.9" y="53" width="22.4" height="15.0" fill="rgb(233,68,8)" rx="2" ry="2" />
<text  x="933.91" y="63.5" >t..</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (26,195 us., 1.90%)</title><rect x="930.9" y="85" width="22.4" height="15.0" fill="rgb(240,78,15)" rx="2" ry="2" />
<text  x="933.91" y="95.5" >n..</text>
</g>
<g >
<title>torch/nn/functional.py(2488):_layer_norm (27,290 us., 1.98%)</title><rect x="930.9" y="213" width="23.3" height="15.0" fill="rgb(229,112,0)" rx="2" ry="2" />
<text  x="933.91" y="223.5" >t..</text>
</g>
<g >
<title>torch/nn/functional.py(1804):_softmax (137,759 us., 9.98%)</title><rect x="641.7" y="213" width="117.7" height="15.0" fill="rgb(216,214,53)" rx="2" ry="2" />
<text  x="644.71" y="223.5" >torch/nn/funct..</text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (1,708 us., 0.12%)</title><rect x="640.2" y="165" width="1.5" height="15.0" fill="rgb(226,198,49)" rx="2" ry="2" />
<text  x="643.25" y="175.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (137,608 us., 9.97%)</title><rect x="519.4" y="117" width="117.6" height="15.0" fill="rgb(214,72,46)" rx="2" ry="2" />
<text  x="522.40" y="127.5" >transformers/m..</text>
</g>
<g >
<title>torch/nn/functional.py(1446):_relu (45,558 us., 3.30%)</title><rect x="1032.4" y="213" width="39.0" height="15.0" fill="rgb(220,38,46)" rx="2" ry="2" />
<text  x="1035.45" y="223.5" >tor..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (278,463 us., 20.17%)</title><rect x="166.9" y="133" width="238.0" height="15.0" fill="rgb(248,125,52)" rx="2" ry="2" />
<text  x="169.91" y="143.5" >nn.Module:_OPTDecoder</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (183,620 us., 13.30%)</title><rect x="10.0" y="117" width="156.9" height="15.0" fill="rgb(234,56,30)" rx="2" ry="2" />
<text  x="13.00" y="127.5" >transformers/models/..</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (304 us., 0.02%)</title><rect x="1071.4" y="101" width="0.2" height="15.0" fill="rgb(247,108,0)" rx="2" ry="2" />
<text  x="1074.38" y="111.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (306 us., 0.02%)</title><rect x="759.4" y="149" width="0.3" height="15.0" fill="rgb(238,4,47)" rx="2" ry="2" />
<text  x="762.42" y="159.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,603 us., 0.12%)</title><rect x="1188.6" y="149" width="1.4" height="15.0" fill="rgb(206,130,40)" rx="2" ry="2" />
<text  x="1191.63" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (1,701 us., 0.12%)</title><rect x="637.0" y="197" width="1.4" height="15.0" fill="rgb(250,16,25)" rx="2" ry="2" />
<text  x="639.99" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoder (598 us., 0.04%)</title><rect x="1071.6" y="181" width="0.5" height="15.0" fill="rgb(237,120,27)" rx="2" ry="2" />
<text  x="1074.64" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (149,882 us., 10.85%)</title><rect x="793.8" y="165" width="128.1" height="15.0" fill="rgb(227,191,0)" rx="2" ry="2" />
<text  x="796.79" y="175.5" >nn.Module:_OPTDe..</text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (137,759 us., 9.98%)</title><rect x="641.7" y="149" width="117.7" height="15.0" fill="rgb(206,163,21)" rx="2" ry="2" />
<text  x="644.71" y="159.5" >nn.Module:_OPT..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (2,113 us., 0.15%)</title><rect x="638.4" y="101" width="1.8" height="15.0" fill="rgb(228,173,17)" rx="2" ry="2" />
<text  x="641.44" y="111.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (106,888 us., 7.74%)</title><rect x="1072.1" y="181" width="91.4" height="15.0" fill="rgb(233,228,32)" rx="2" ry="2" />
<text  x="1075.15" y="191.5" >nn.Module:..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (304 us., 0.02%)</title><rect x="1071.4" y="117" width="0.2" height="15.0" fill="rgb(205,114,53)" rx="2" ry="2" />
<text  x="1074.38" y="127.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoder (183,620 us., 13.30%)</title><rect x="10.0" y="101" width="156.9" height="15.0" fill="rgb(227,201,0)" rx="2" ry="2" />
<text  x="13.00" y="111.5" >nn.Module:_OPTDecoder</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (1,095 us., 0.08%)</title><rect x="953.3" y="165" width="0.9" height="15.0" fill="rgb(213,166,39)" rx="2" ry="2" />
<text  x="956.29" y="175.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (1,701 us., 0.12%)</title><rect x="637.0" y="181" width="1.4" height="15.0" fill="rgb(213,173,13)" rx="2" ry="2" />
<text  x="639.99" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_OPTAttention (137,759 us., 9.98%)</title><rect x="641.7" y="181" width="117.7" height="15.0" fill="rgb(219,48,16)" rx="2" ry="2" />
<text  x="644.71" y="191.5" >nn.Module:_OPT..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (1,708 us., 0.12%)</title><rect x="640.2" y="133" width="1.5" height="15.0" fill="rgb(224,174,6)" rx="2" ry="2" />
<text  x="643.25" y="143.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (304 us., 0.02%)</title><rect x="1071.4" y="69" width="0.2" height="15.0" fill="rgb(222,5,42)" rx="2" ry="2" />
<text  x="1074.38" y="79.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (598 us., 0.04%)</title><rect x="1071.6" y="165" width="0.5" height="15.0" fill="rgb(218,53,38)" rx="2" ry="2" />
<text  x="1074.64" y="175.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (1,603 us., 0.12%)</title><rect x="1188.6" y="229" width="1.4" height="15.0" fill="rgb(231,50,11)" rx="2" ry="2" />
<text  x="1191.63" y="239.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (666 us., 0.05%)</title><rect x="1188.1" y="213" width="0.5" height="15.0" fill="rgb(213,102,40)" rx="2" ry="2" />
<text  x="1191.06" y="223.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (137,759 us., 9.98%)</title><rect x="641.7" y="69" width="117.7" height="15.0" fill="rgb(216,113,32)" rx="2" ry="2" />
<text  x="644.71" y="79.5" >profiling/util..</text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (137,608 us., 9.97%)</title><rect x="519.4" y="165" width="117.6" height="15.0" fill="rgb(250,80,46)" rx="2" ry="2" />
<text  x="522.40" y="175.5" >nn.Module:_OPT..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (106,888 us., 7.74%)</title><rect x="1072.1" y="133" width="91.4" height="15.0" fill="rgb(223,7,21)" rx="2" ry="2" />
<text  x="1075.15" y="143.5" >transforme..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (137,759 us., 9.98%)</title><rect x="641.7" y="133" width="117.7" height="15.0" fill="rgb(223,181,39)" rx="2" ry="2" />
<text  x="644.71" y="143.5" >transformers/m..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (39,910 us., 2.89%)</title><rect x="759.7" y="133" width="34.1" height="15.0" fill="rgb(226,184,2)" rx="2" ry="2" />
<text  x="762.69" y="143.5" >tr..</text>
</g>
<g >
<title>nn.Module:_OPTAttention (149,882 us., 10.85%)</title><rect x="793.8" y="197" width="128.1" height="15.0" fill="rgb(215,180,41)" rx="2" ry="2" />
<text  x="796.79" y="207.5" >nn.Module:_OPTAt..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (1,701 us., 0.12%)</title><rect x="637.0" y="213" width="1.4" height="15.0" fill="rgb(240,171,40)" rx="2" ry="2" />
<text  x="639.99" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (183,620 us., 13.30%)</title><rect x="10.0" y="69" width="156.9" height="15.0" fill="rgb(226,59,41)" rx="2" ry="2" />
<text  x="13.00" y="79.5" >nn.Module:_OPTForCau..</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (1,095 us., 0.08%)</title><rect x="953.3" y="117" width="0.9" height="15.0" fill="rgb(236,53,4)" rx="2" ry="2" />
<text  x="956.29" y="127.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(533):__prepare_decoder_attention_mask (2,043 us., 0.15%)</title><rect x="929.2" y="197" width="1.7" height="15.0" fill="rgb(235,140,22)" rx="2" ry="2" />
<text  x="932.16" y="207.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (28,759 us., 2.08%)</title><rect x="1163.5" y="229" width="24.6" height="15.0" fill="rgb(226,34,1)" rx="2" ry="2" />
<text  x="1166.49" y="239.5" >t..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,708 us., 0.12%)</title><rect x="640.2" y="85" width="1.5" height="15.0" fill="rgb(214,110,33)" rx="2" ry="2" />
<text  x="643.25" y="95.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (2,113 us., 0.15%)</title><rect x="638.4" y="85" width="1.8" height="15.0" fill="rgb(210,187,9)" rx="2" ry="2" />
<text  x="641.44" y="95.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (39,910 us., 2.89%)</title><rect x="759.7" y="165" width="34.1" height="15.0" fill="rgb(205,28,34)" rx="2" ry="2" />
<text  x="762.69" y="175.5" >tr..</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (8,540 us., 0.62%)</title><rect x="921.9" y="149" width="7.3" height="15.0" fill="rgb(244,25,33)" rx="2" ry="2" />
<text  x="924.87" y="159.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (39,910 us., 2.89%)</title><rect x="759.7" y="101" width="34.1" height="15.0" fill="rgb(219,15,28)" rx="2" ry="2" />
<text  x="762.69" y="111.5" >tr..</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (199 us., 0.01%)</title><rect x="1032.3" y="165" width="0.1" height="15.0" fill="rgb(245,156,25)" rx="2" ry="2" />
<text  x="1035.28" y="175.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (2,043 us., 0.15%)</title><rect x="929.2" y="149" width="1.7" height="15.0" fill="rgb(214,81,6)" rx="2" ry="2" />
<text  x="932.16" y="159.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (137,759 us., 9.98%)</title><rect x="641.7" y="53" width="117.7" height="15.0" fill="rgb(233,168,35)" rx="2" ry="2" />
<text  x="644.71" y="63.5" >torch/autograd..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(89):__expand_mask (304 us., 0.02%)</title><rect x="1071.4" y="181" width="0.2" height="15.0" fill="rgb(236,35,20)" rx="2" ry="2" />
<text  x="1074.38" y="191.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(160):_forward (137,759 us., 9.98%)</title><rect x="641.7" y="197" width="117.7" height="15.0" fill="rgb(254,179,8)" rx="2" ry="2" />
<text  x="644.71" y="207.5" >transformers/m..</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (1,603 us., 0.12%)</title><rect x="1188.6" y="181" width="1.4" height="15.0" fill="rgb(253,99,42)" rx="2" ry="2" />
<text  x="1191.63" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoder (26,195 us., 1.90%)</title><rect x="930.9" y="117" width="22.4" height="15.0" fill="rgb(254,138,27)" rx="2" ry="2" />
<text  x="933.91" y="127.5" >n..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (45,558 us., 3.30%)</title><rect x="1032.4" y="53" width="39.0" height="15.0" fill="rgb(224,74,9)" rx="2" ry="2" />
<text  x="1035.45" y="63.5" >tor..</text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (39,910 us., 2.89%)</title><rect x="759.7" y="149" width="34.1" height="15.0" fill="rgb(249,209,12)" rx="2" ry="2" />
<text  x="762.69" y="159.5" >nn..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (137,608 us., 9.97%)</title><rect x="519.4" y="149" width="117.6" height="15.0" fill="rgb(227,7,27)" rx="2" ry="2" />
<text  x="522.40" y="159.5" >transformers/m..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(160):_forward (149,882 us., 10.85%)</title><rect x="793.8" y="213" width="128.1" height="15.0" fill="rgb(236,124,37)" rx="2" ry="2" />
<text  x="796.79" y="223.5" >transformers/mod..</text>
</g>
<g >
<title>nn.Module:_LayerNorm (27,290 us., 1.98%)</title><rect x="930.9" y="181" width="23.3" height="15.0" fill="rgb(208,198,7)" rx="2" ry="2" />
<text  x="933.91" y="191.5" >n..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,095 us., 0.08%)</title><rect x="953.3" y="133" width="0.9" height="15.0" fill="rgb(247,204,42)" rx="2" ry="2" />
<text  x="956.29" y="143.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (106,888 us., 7.74%)</title><rect x="1072.1" y="165" width="91.4" height="15.0" fill="rgb(249,139,49)" rx="2" ry="2" />
<text  x="1075.15" y="175.5" >transforme..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (278,463 us., 20.17%)</title><rect x="166.9" y="181" width="238.0" height="15.0" fill="rgb(215,2,36)" rx="2" ry="2" />
<text  x="169.91" y="191.5" >transformers/models/opt/modelin..</text>
</g>
<g >
<title>nn.Module:_OPTAttention (183,620 us., 13.30%)</title><rect x="10.0" y="165" width="156.9" height="15.0" fill="rgb(224,61,32)" rx="2" ry="2" />
<text  x="13.00" y="175.5" >nn.Module:_OPTAttent..</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (1,701 us., 0.12%)</title><rect x="637.0" y="133" width="1.4" height="15.0" fill="rgb(225,191,20)" rx="2" ry="2" />
<text  x="639.99" y="143.5" ></text>
</g>
<g >
<title>&lt;built-in_method_bmm_of_type_object_at_0x7f9a77d6a9c0&gt; (137,608 us., 9.97%)</title><rect x="519.4" y="229" width="117.6" height="15.0" fill="rgb(211,32,42)" rx="2" ry="2" />
<text  x="522.40" y="239.5" >&lt;built-in_meth..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (28,759 us., 2.08%)</title><rect x="1163.5" y="181" width="24.6" height="15.0" fill="rgb(233,137,25)" rx="2" ry="2" />
<text  x="1166.49" y="191.5" >n..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (598 us., 0.04%)</title><rect x="1071.6" y="229" width="0.5" height="15.0" fill="rgb(220,95,30)" rx="2" ry="2" />
<text  x="1074.64" y="239.5" ></text>
</g>
</g>
</svg>
