<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="294" onload="init(evt)" viewBox="0 0 1200 294" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="294.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >CUDA Time</text>
<text id="details" x="10.00" y="277" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="277" > </text>
<g id="frames">
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (34,689 us., 8.15%)</title><rect x="708.5" y="53" width="96.1" height="15.0" fill="rgb(245,84,38)" rx="2" ry="2" />
<text  x="711.46" y="63.5" >torch/autog..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (242 us., 0.06%)</title><rect x="1189.3" y="165" width="0.7" height="15.0" fill="rgb(252,95,22)" rx="2" ry="2" />
<text  x="1192.33" y="175.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (5,320 us., 1.25%)</title><rect x="1067.0" y="101" width="14.7" height="15.0" fill="rgb(206,219,46)" rx="2" ry="2" />
<text  x="1069.97" y="111.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (12,077 us., 2.84%)</title><rect x="805.4" y="69" width="33.5" height="15.0" fill="rgb(237,34,45)" rx="2" ry="2" />
<text  x="808.43" y="79.5" >pr..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (7,972 us., 1.87%)</title><rect x="1166.4" y="165" width="22.1" height="15.0" fill="rgb(242,99,17)" rx="2" ry="2" />
<text  x="1169.41" y="175.5" >t..</text>
</g>
<g >
<title>nn.Module:_Embedding (797 us., 0.19%)</title><rect x="704.5" y="181" width="2.2" height="15.0" fill="rgb(205,5,31)" rx="2" ry="2" />
<text  x="707.54" y="191.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (38,831 us., 9.12%)</title><rect x="595.9" y="69" width="107.6" height="15.0" fill="rgb(230,69,42)" rx="2" ry="2" />
<text  x="598.90" y="79.5" >torch/autogra..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (29,760 us., 6.99%)</title><rect x="1083.9" y="101" width="82.5" height="15.0" fill="rgb(240,60,42)" rx="2" ry="2" />
<text  x="1086.93" y="111.5" >profiling..</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (1,293 us., 0.30%)</title><rect x="959.4" y="133" width="3.6" height="15.0" fill="rgb(215,96,47)" rx="2" ry="2" />
<text  x="962.45" y="143.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (301 us., 0.07%)</title><rect x="804.6" y="117" width="0.8" height="15.0" fill="rgb(205,19,51)" rx="2" ry="2" />
<text  x="807.60" y="127.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (369 us., 0.09%)</title><rect x="703.5" y="101" width="1.0" height="15.0" fill="rgb(243,89,32)" rx="2" ry="2" />
<text  x="706.52" y="111.5" ></text>
</g>
<g >
<title>&lt;built-in_method_ones_of_type_object_at_0x7f09597c99c0&gt; (200 us., 0.05%)</title><rect x="1066.4" y="229" width="0.6" height="15.0" fill="rgb(220,88,18)" rx="2" ry="2" />
<text  x="1069.41" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoder (29,760 us., 6.99%)</title><rect x="1083.9" y="149" width="82.5" height="15.0" fill="rgb(224,90,38)" rx="2" ry="2" />
<text  x="1086.93" y="159.5" >nn.Module..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (2,108 us., 0.50%)</title><rect x="953.6" y="117" width="5.8" height="15.0" fill="rgb(242,45,19)" rx="2" ry="2" />
<text  x="956.60" y="127.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (12,077 us., 2.84%)</title><rect x="805.4" y="101" width="33.5" height="15.0" fill="rgb(228,64,49)" rx="2" ry="2" />
<text  x="808.43" y="111.5" >tr..</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (7,972 us., 1.87%)</title><rect x="1166.4" y="149" width="22.1" height="15.0" fill="rgb(227,54,15)" rx="2" ry="2" />
<text  x="1169.41" y="159.5" >n..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(533):__prepare_decoder_attention_mask (200 us., 0.05%)</title><rect x="1081.7" y="165" width="0.6" height="15.0" fill="rgb(254,167,36)" rx="2" ry="2" />
<text  x="1084.71" y="175.5" ></text>
</g>
<g >
<title>&lt;built-in_method_cumsum_of_type_object_at_0x7f09597c99c0&gt; (369 us., 0.09%)</title><rect x="703.5" y="229" width="1.0" height="15.0" fill="rgb(227,22,8)" rx="2" ry="2" />
<text  x="706.52" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoder (200 us., 0.05%)</title><rect x="1081.7" y="133" width="0.6" height="15.0" fill="rgb(221,25,26)" rx="2" ry="2" />
<text  x="1084.71" y="143.5" ></text>
</g>
<g >
<title>torch/nn/modules/activation.py(97):_forward (5,320 us., 1.25%)</title><rect x="1067.0" y="197" width="14.7" height="15.0" fill="rgb(230,198,50)" rx="2" ry="2" />
<text  x="1069.97" y="207.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (92,854 us., 21.81%)</title><rect x="226.0" y="117" width="257.4" height="15.0" fill="rgb(225,223,14)" rx="2" ry="2" />
<text  x="229.02" y="127.5" >transformers/models/opt/modeling_o..</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (29,760 us., 6.99%)</title><rect x="1083.9" y="117" width="82.5" height="15.0" fill="rgb(206,152,16)" rx="2" ry="2" />
<text  x="1086.93" y="127.5" >nn.Module..</text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (7,972 us., 1.87%)</title><rect x="1166.4" y="213" width="22.1" height="15.0" fill="rgb(231,221,4)" rx="2" ry="2" />
<text  x="1169.41" y="223.5" >n..</text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (29,760 us., 6.99%)</title><rect x="1083.9" y="181" width="82.5" height="15.0" fill="rgb(248,206,28)" rx="2" ry="2" />
<text  x="1086.93" y="191.5" >nn.Module..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (599 us., 0.14%)</title><rect x="1082.3" y="197" width="1.6" height="15.0" fill="rgb(217,137,33)" rx="2" ry="2" />
<text  x="1085.27" y="207.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (797 us., 0.19%)</title><rect x="704.5" y="101" width="2.2" height="15.0" fill="rgb(210,26,24)" rx="2" ry="2" />
<text  x="707.54" y="111.5" ></text>
</g>
<g >
<title>&lt;built-in_method_encode_of_str_object_at_0x7f08652bf450&gt; (91,854 us., 21.57%)</title><rect x="708.5" y="229" width="254.5" height="15.0" fill="rgb(248,127,38)" rx="2" ry="2" />
<text  x="711.46" y="239.5" >&lt;built-in_method_encode_of_str_ob..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (92,854 us., 21.81%)</title><rect x="226.0" y="133" width="257.4" height="15.0" fill="rgb(214,145,3)" rx="2" ry="2" />
<text  x="229.02" y="143.5" >nn.Module:_OPTDecoder</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (369 us., 0.09%)</title><rect x="703.5" y="213" width="1.0" height="15.0" fill="rgb(242,72,11)" rx="2" ry="2" />
<text  x="706.52" y="223.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (617 us., 0.14%)</title><rect x="706.7" y="69" width="1.8" height="15.0" fill="rgb(214,74,34)" rx="2" ry="2" />
<text  x="709.75" y="79.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (797 us., 0.19%)</title><rect x="704.5" y="165" width="2.2" height="15.0" fill="rgb(219,161,50)" rx="2" ry="2" />
<text  x="707.54" y="175.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (38,831 us., 9.12%)</title><rect x="595.9" y="85" width="107.6" height="15.0" fill="rgb(237,130,42)" rx="2" ry="2" />
<text  x="598.90" y="95.5" >profiling/uti..</text>
</g>
<g >
<title>&lt;built-in_method_bmm_of_type_object_at_0x7f09597c99c0&gt; (38,831 us., 9.12%)</title><rect x="595.9" y="229" width="107.6" height="15.0" fill="rgb(228,186,53)" rx="2" ry="2" />
<text  x="598.90" y="239.5" >&lt;built-in_met..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (12,171 us., 2.86%)</title><rect x="963.0" y="165" width="33.8" height="15.0" fill="rgb(252,66,27)" rx="2" ry="2" />
<text  x="966.03" y="175.5" >tr..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,293 us., 0.30%)</title><rect x="959.4" y="117" width="3.6" height="15.0" fill="rgb(229,68,25)" rx="2" ry="2" />
<text  x="962.45" y="127.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (599 us., 0.14%)</title><rect x="1082.3" y="229" width="1.6" height="15.0" fill="rgb(246,93,38)" rx="2" ry="2" />
<text  x="1085.27" y="239.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (40,605 us., 9.54%)</title><rect x="483.4" y="149" width="112.5" height="15.0" fill="rgb(209,117,9)" rx="2" ry="2" />
<text  x="486.36" y="159.5" >profiling/uti..</text>
</g>
<g >
<title>torch/_tensor.py(26):_wrapped (200 us., 0.05%)</title><rect x="1081.7" y="197" width="0.6" height="15.0" fill="rgb(231,218,51)" rx="2" ry="2" />
<text  x="1084.71" y="207.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (617 us., 0.14%)</title><rect x="706.7" y="181" width="1.8" height="15.0" fill="rgb(245,119,42)" rx="2" ry="2" />
<text  x="709.75" y="191.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (38,831 us., 9.12%)</title><rect x="595.9" y="149" width="107.6" height="15.0" fill="rgb(240,127,49)" rx="2" ry="2" />
<text  x="598.90" y="159.5" >transformers/..</text>
</g>
<g >
<title>nn.Module:_OPTAttention (41,386 us., 9.72%)</title><rect x="838.9" y="197" width="114.7" height="15.0" fill="rgb(220,229,13)" rx="2" ry="2" />
<text  x="841.90" y="207.5" >nn.Module:_OPT..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (5,320 us., 1.25%)</title><rect x="1067.0" y="133" width="14.7" height="15.0" fill="rgb(205,120,38)" rx="2" ry="2" />
<text  x="1069.97" y="143.5" ></text>
</g>
<g >
<title>torch/nn/functional.py(1446):_relu (5,320 us., 1.25%)</title><rect x="1067.0" y="213" width="14.7" height="15.0" fill="rgb(239,74,29)" rx="2" ry="2" />
<text  x="1069.97" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (617 us., 0.14%)</title><rect x="706.7" y="101" width="1.8" height="15.0" fill="rgb(208,160,23)" rx="2" ry="2" />
<text  x="709.75" y="111.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (501 us., 0.12%)</title><rect x="996.8" y="133" width="1.3" height="15.0" fill="rgb(249,91,45)" rx="2" ry="2" />
<text  x="999.76" y="143.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (200 us., 0.05%)</title><rect x="1066.4" y="133" width="0.6" height="15.0" fill="rgb(241,227,19)" rx="2" ry="2" />
<text  x="1069.41" y="143.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (77,942 us., 18.31%)</title><rect x="10.0" y="53" width="216.0" height="15.0" fill="rgb(219,200,14)" rx="2" ry="2" />
<text  x="13.00" y="63.5" >profiling/utils.py(18):_prof..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (77,942 us., 18.31%)</title><rect x="10.0" y="101" width="216.0" height="15.0" fill="rgb(252,118,0)" rx="2" ry="2" />
<text  x="13.00" y="111.5" >nn.Module:_OPTDecoder</text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (369 us., 0.09%)</title><rect x="703.5" y="197" width="1.0" height="15.0" fill="rgb(206,83,53)" rx="2" ry="2" />
<text  x="706.52" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoder (24,631 us., 5.79%)</title><rect x="998.1" y="133" width="68.3" height="15.0" fill="rgb(220,5,31)" rx="2" ry="2" />
<text  x="1001.15" y="143.5" >nn.Modu..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (200 us., 0.05%)</title><rect x="1081.7" y="85" width="0.6" height="15.0" fill="rgb(210,185,51)" rx="2" ry="2" />
<text  x="1084.71" y="95.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (599 us., 0.14%)</title><rect x="1082.3" y="165" width="1.6" height="15.0" fill="rgb(243,192,23)" rx="2" ry="2" />
<text  x="1085.27" y="175.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (12,171 us., 2.86%)</title><rect x="963.0" y="133" width="33.8" height="15.0" fill="rgb(209,90,26)" rx="2" ry="2" />
<text  x="966.03" y="143.5" >tr..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (301 us., 0.07%)</title><rect x="804.6" y="149" width="0.8" height="15.0" fill="rgb(207,156,38)" rx="2" ry="2" />
<text  x="807.60" y="159.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (12,077 us., 2.84%)</title><rect x="805.4" y="133" width="33.5" height="15.0" fill="rgb(246,194,8)" rx="2" ry="2" />
<text  x="808.43" y="143.5" >tr..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (40,605 us., 9.54%)</title><rect x="483.4" y="133" width="112.5" height="15.0" fill="rgb(241,92,12)" rx="2" ry="2" />
<text  x="486.36" y="143.5" >torch/autogra..</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (12,171 us., 2.86%)</title><rect x="963.0" y="85" width="33.8" height="15.0" fill="rgb(237,119,20)" rx="2" ry="2" />
<text  x="966.03" y="95.5" >nn..</text>
</g>
<g >
<title>nn.Module:_OPTAttention (77,942 us., 18.31%)</title><rect x="10.0" y="165" width="216.0" height="15.0" fill="rgb(253,188,36)" rx="2" ry="2" />
<text  x="13.00" y="175.5" >nn.Module:_OPTAttention</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (77,942 us., 18.31%)</title><rect x="10.0" y="85" width="216.0" height="15.0" fill="rgb(236,140,25)" rx="2" ry="2" />
<text  x="13.00" y="95.5" >transformers/models/opt/mode..</text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (92,854 us., 21.81%)</title><rect x="226.0" y="165" width="257.4" height="15.0" fill="rgb(212,44,34)" rx="2" ry="2" />
<text  x="229.02" y="175.5" >nn.Module:_OPTDecoderLayer</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (29,760 us., 6.99%)</title><rect x="1083.9" y="85" width="82.5" height="15.0" fill="rgb(220,208,28)" rx="2" ry="2" />
<text  x="1086.93" y="95.5" >torch/aut..</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (34,689 us., 8.15%)</title><rect x="708.5" y="85" width="96.1" height="15.0" fill="rgb(224,25,21)" rx="2" ry="2" />
<text  x="711.46" y="95.5" >nn.Module:_..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(160):_forward (41,386 us., 9.72%)</title><rect x="838.9" y="213" width="114.7" height="15.0" fill="rgb(235,89,33)" rx="2" ry="2" />
<text  x="841.90" y="223.5" >transformers/m..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (617 us., 0.14%)</title><rect x="706.7" y="133" width="1.8" height="15.0" fill="rgb(244,1,52)" rx="2" ry="2" />
<text  x="709.75" y="143.5" ></text>
</g>
<g >
<title>torch/nn/functional.py(2488):_layer_norm (12,672 us., 2.98%)</title><rect x="963.0" y="213" width="35.1" height="15.0" fill="rgb(230,188,11)" rx="2" ry="2" />
<text  x="966.03" y="223.5" >to..</text>
</g>
<g >
<title>nn.Module:_OPTAttention (38,831 us., 9.12%)</title><rect x="595.9" y="197" width="107.6" height="15.0" fill="rgb(240,35,3)" rx="2" ry="2" />
<text  x="598.90" y="207.5" >nn.Module:_OP..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (29,760 us., 6.99%)</title><rect x="1083.9" y="197" width="82.5" height="15.0" fill="rgb(220,33,42)" rx="2" ry="2" />
<text  x="1086.93" y="207.5" >transform..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (41,386 us., 9.72%)</title><rect x="838.9" y="133" width="114.7" height="15.0" fill="rgb(205,92,12)" rx="2" ry="2" />
<text  x="841.90" y="143.5" >nn.Module:_OPT..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (369 us., 0.09%)</title><rect x="703.5" y="149" width="1.0" height="15.0" fill="rgb(252,59,1)" rx="2" ry="2" />
<text  x="706.52" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (34,689 us., 8.15%)</title><rect x="708.5" y="149" width="96.1" height="15.0" fill="rgb(236,146,41)" rx="2" ry="2" />
<text  x="711.46" y="159.5" >nn.Module:_..</text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (12,171 us., 2.86%)</title><rect x="963.0" y="149" width="33.8" height="15.0" fill="rgb(218,78,32)" rx="2" ry="2" />
<text  x="966.03" y="159.5" >nn..</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (41,386 us., 9.72%)</title><rect x="838.9" y="101" width="114.7" height="15.0" fill="rgb(231,156,14)" rx="2" ry="2" />
<text  x="841.90" y="111.5" >nn.Module:_OPT..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(533):__prepare_decoder_attention_mask (299 us., 0.07%)</title><rect x="1188.5" y="229" width="0.8" height="15.0" fill="rgb(231,148,16)" rx="2" ry="2" />
<text  x="1191.50" y="239.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (617 us., 0.14%)</title><rect x="706.7" y="117" width="1.8" height="15.0" fill="rgb(229,48,27)" rx="2" ry="2" />
<text  x="709.75" y="127.5" ></text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (2,108 us., 0.50%)</title><rect x="953.6" y="149" width="5.8" height="15.0" fill="rgb(207,1,53)" rx="2" ry="2" />
<text  x="956.60" y="159.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (92,854 us., 21.81%)</title><rect x="226.0" y="149" width="257.4" height="15.0" fill="rgb(239,33,36)" rx="2" ry="2" />
<text  x="229.02" y="159.5" >transformers/models/opt/modeling_o..</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (200 us., 0.05%)</title><rect x="1081.7" y="101" width="0.6" height="15.0" fill="rgb(237,197,35)" rx="2" ry="2" />
<text  x="1084.71" y="111.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (24,631 us., 5.79%)</title><rect x="998.1" y="85" width="68.3" height="15.0" fill="rgb(253,3,45)" rx="2" ry="2" />
<text  x="1001.15" y="95.5" >profili..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (1,293 us., 0.30%)</title><rect x="959.4" y="165" width="3.6" height="15.0" fill="rgb(209,185,18)" rx="2" ry="2" />
<text  x="962.45" y="175.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (200 us., 0.05%)</title><rect x="1066.4" y="213" width="0.6" height="15.0" fill="rgb(250,87,18)" rx="2" ry="2" />
<text  x="1069.41" y="223.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(533):__prepare_decoder_attention_mask (2,108 us., 0.50%)</title><rect x="953.6" y="213" width="5.8" height="15.0" fill="rgb(234,87,14)" rx="2" ry="2" />
<text  x="956.60" y="223.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (301 us., 0.07%)</title><rect x="804.6" y="101" width="0.8" height="15.0" fill="rgb(206,17,39)" rx="2" ry="2" />
<text  x="807.60" y="111.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoder (38,831 us., 9.12%)</title><rect x="595.9" y="133" width="107.6" height="15.0" fill="rgb(241,64,24)" rx="2" ry="2" />
<text  x="598.90" y="143.5" >nn.Module:_OP..</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (299 us., 0.07%)</title><rect x="1188.5" y="165" width="0.8" height="15.0" fill="rgb(210,11,39)" rx="2" ry="2" />
<text  x="1191.50" y="175.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (24,631 us., 5.79%)</title><rect x="998.1" y="69" width="68.3" height="15.0" fill="rgb(238,81,8)" rx="2" ry="2" />
<text  x="1001.15" y="79.5" >torch/a..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (242 us., 0.06%)</title><rect x="1189.3" y="149" width="0.7" height="15.0" fill="rgb(247,103,16)" rx="2" ry="2" />
<text  x="1192.33" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (501 us., 0.12%)</title><rect x="996.8" y="117" width="1.3" height="15.0" fill="rgb(218,118,38)" rx="2" ry="2" />
<text  x="999.76" y="127.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (299 us., 0.07%)</title><rect x="1188.5" y="213" width="0.8" height="15.0" fill="rgb(205,148,46)" rx="2" ry="2" />
<text  x="1191.50" y="223.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (301 us., 0.07%)</title><rect x="804.6" y="213" width="0.8" height="15.0" fill="rgb(235,33,54)" rx="2" ry="2" />
<text  x="807.60" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (5,320 us., 1.25%)</title><rect x="1067.0" y="149" width="14.7" height="15.0" fill="rgb(232,146,1)" rx="2" ry="2" />
<text  x="1069.97" y="159.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(160):_forward (34,689 us., 8.15%)</title><rect x="708.5" y="197" width="96.1" height="15.0" fill="rgb(243,7,49)" rx="2" ry="2" />
<text  x="711.46" y="207.5" >transformer..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (299 us., 0.07%)</title><rect x="1188.5" y="133" width="0.8" height="15.0" fill="rgb(226,221,22)" rx="2" ry="2" />
<text  x="1191.50" y="143.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoder (7,972 us., 1.87%)</title><rect x="1166.4" y="181" width="22.1" height="15.0" fill="rgb(223,157,43)" rx="2" ry="2" />
<text  x="1169.41" y="191.5" >n..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (200 us., 0.05%)</title><rect x="1081.7" y="69" width="0.6" height="15.0" fill="rgb(239,222,46)" rx="2" ry="2" />
<text  x="1084.71" y="79.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (41,386 us., 9.72%)</title><rect x="838.9" y="165" width="114.7" height="15.0" fill="rgb(242,143,44)" rx="2" ry="2" />
<text  x="841.90" y="175.5" >nn.Module:_OPT..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (24,631 us., 5.79%)</title><rect x="998.1" y="181" width="68.3" height="15.0" fill="rgb(242,80,31)" rx="2" ry="2" />
<text  x="1001.15" y="191.5" >transfo..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (299 us., 0.07%)</title><rect x="1188.5" y="149" width="0.8" height="15.0" fill="rgb(254,62,2)" rx="2" ry="2" />
<text  x="1191.50" y="159.5" ></text>
</g>
<g >
<title>&lt;built-in_method_rsub_of_type_object_at_0x7f09597c99c0&gt; (200 us., 0.05%)</title><rect x="1081.7" y="229" width="0.6" height="15.0" fill="rgb(240,157,5)" rx="2" ry="2" />
<text  x="1084.71" y="239.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (7,972 us., 1.87%)</title><rect x="1166.4" y="133" width="22.1" height="15.0" fill="rgb(224,196,5)" rx="2" ry="2" />
<text  x="1169.41" y="143.5" >p..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (200 us., 0.05%)</title><rect x="1081.7" y="117" width="0.6" height="15.0" fill="rgb(210,69,49)" rx="2" ry="2" />
<text  x="1084.71" y="127.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (12,077 us., 2.84%)</title><rect x="805.4" y="149" width="33.5" height="15.0" fill="rgb(234,64,51)" rx="2" ry="2" />
<text  x="808.43" y="159.5" >nn..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (12,077 us., 2.84%)</title><rect x="805.4" y="117" width="33.5" height="15.0" fill="rgb(234,149,26)" rx="2" ry="2" />
<text  x="808.43" y="127.5" >nn..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (617 us., 0.14%)</title><rect x="706.7" y="149" width="1.8" height="15.0" fill="rgb(243,77,14)" rx="2" ry="2" />
<text  x="709.75" y="159.5" ></text>
</g>
<g >
<title>&lt;built-in_method_relu_of_type_object_at_0x7f09597c99c0&gt; (5,320 us., 1.25%)</title><rect x="1067.0" y="229" width="14.7" height="15.0" fill="rgb(237,20,50)" rx="2" ry="2" />
<text  x="1069.97" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (38,831 us., 9.12%)</title><rect x="595.9" y="101" width="107.6" height="15.0" fill="rgb(209,14,47)" rx="2" ry="2" />
<text  x="598.90" y="111.5" >nn.Module:_OP..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (369 us., 0.09%)</title><rect x="703.5" y="181" width="1.0" height="15.0" fill="rgb(215,125,10)" rx="2" ry="2" />
<text  x="706.52" y="191.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(160):_forward (12,077 us., 2.84%)</title><rect x="805.4" y="197" width="33.5" height="15.0" fill="rgb(222,23,18)" rx="2" ry="2" />
<text  x="808.43" y="207.5" >tr..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (7,972 us., 1.87%)</title><rect x="1166.4" y="197" width="22.1" height="15.0" fill="rgb(206,163,18)" rx="2" ry="2" />
<text  x="1169.41" y="207.5" >t..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(157):__shape (12,077 us., 2.84%)</title><rect x="805.4" y="213" width="33.5" height="15.0" fill="rgb(228,109,28)" rx="2" ry="2" />
<text  x="808.43" y="223.5" >tr..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (77,942 us., 18.31%)</title><rect x="10.0" y="117" width="216.0" height="15.0" fill="rgb(252,98,15)" rx="2" ry="2" />
<text  x="13.00" y="127.5" >transformers/models/opt/mode..</text>
</g>
<g >
<title>torch/_tensor.py(637):___rsub__ (200 us., 0.05%)</title><rect x="1081.7" y="213" width="0.6" height="15.0" fill="rgb(246,105,3)" rx="2" ry="2" />
<text  x="1084.71" y="223.5" ></text>
</g>
<g >
<title>&lt;built-in_method_embedding_of_type_object_at_0x7f09597c99c0&gt; (1,414 us., 0.33%)</title><rect x="704.5" y="229" width="4.0" height="15.0" fill="rgb(207,42,31)" rx="2" ry="2" />
<text  x="707.54" y="239.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (242 us., 0.06%)</title><rect x="1189.3" y="229" width="0.7" height="15.0" fill="rgb(223,194,8)" rx="2" ry="2" />
<text  x="1192.33" y="239.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (12,077 us., 2.84%)</title><rect x="805.4" y="165" width="33.5" height="15.0" fill="rgb(218,49,35)" rx="2" ry="2" />
<text  x="808.43" y="175.5" >tr..</text>
</g>
<g >
<title>torch/nn/functional.py(2099):_embedding (1,414 us., 0.33%)</title><rect x="704.5" y="213" width="4.0" height="15.0" fill="rgb(227,124,2)" rx="2" ry="2" />
<text  x="707.54" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (24,631 us., 5.79%)</title><rect x="998.1" y="165" width="68.3" height="15.0" fill="rgb(248,88,11)" rx="2" ry="2" />
<text  x="1001.15" y="175.5" >nn.Modu..</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (301 us., 0.07%)</title><rect x="804.6" y="133" width="0.8" height="15.0" fill="rgb(244,172,31)" rx="2" ry="2" />
<text  x="807.60" y="143.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (29,760 us., 6.99%)</title><rect x="1083.9" y="165" width="82.5" height="15.0" fill="rgb(254,153,31)" rx="2" ry="2" />
<text  x="1086.93" y="175.5" >transform..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (599 us., 0.14%)</title><rect x="1082.3" y="117" width="1.6" height="15.0" fill="rgb(248,1,20)" rx="2" ry="2" />
<text  x="1085.27" y="127.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (24,631 us., 5.79%)</title><rect x="998.1" y="149" width="68.3" height="15.0" fill="rgb(219,189,49)" rx="2" ry="2" />
<text  x="1001.15" y="159.5" >transfo..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (617 us., 0.14%)</title><rect x="706.7" y="85" width="1.8" height="15.0" fill="rgb(246,91,49)" rx="2" ry="2" />
<text  x="709.75" y="95.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (299 us., 0.07%)</title><rect x="1188.5" y="181" width="0.8" height="15.0" fill="rgb(246,70,47)" rx="2" ry="2" />
<text  x="1191.50" y="191.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (34,689 us., 8.15%)</title><rect x="708.5" y="133" width="96.1" height="15.0" fill="rgb(215,212,28)" rx="2" ry="2" />
<text  x="711.46" y="143.5" >transformer..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(160):_forward (77,942 us., 18.31%)</title><rect x="10.0" y="181" width="216.0" height="15.0" fill="rgb(221,135,23)" rx="2" ry="2" />
<text  x="13.00" y="191.5" >transformers/models/opt/mode..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (599 us., 0.14%)</title><rect x="1082.3" y="181" width="1.6" height="15.0" fill="rgb(219,206,39)" rx="2" ry="2" />
<text  x="1085.27" y="191.5" ></text>
</g>
<g >
<title>torch/nn/modules/linear.py(113):_forward (211,401 us., 49.65%)</title><rect x="10.0" y="213" width="585.9" height="15.0" fill="rgb(215,5,15)" rx="2" ry="2" />
<text  x="13.00" y="223.5" >torch/nn/modules/linear.py(113):_forward</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (34,689 us., 8.15%)</title><rect x="708.5" y="69" width="96.1" height="15.0" fill="rgb(208,122,12)" rx="2" ry="2" />
<text  x="711.46" y="79.5" >profiling/u..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (797 us., 0.19%)</title><rect x="704.5" y="133" width="2.2" height="15.0" fill="rgb(245,164,19)" rx="2" ry="2" />
<text  x="707.54" y="143.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (41,386 us., 9.72%)</title><rect x="838.9" y="69" width="114.7" height="15.0" fill="rgb(219,109,54)" rx="2" ry="2" />
<text  x="841.90" y="79.5" >torch/autograd..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (24,631 us., 5.79%)</title><rect x="998.1" y="117" width="68.3" height="15.0" fill="rgb(252,221,16)" rx="2" ry="2" />
<text  x="1001.15" y="127.5" >transfo..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (5,320 us., 1.25%)</title><rect x="1067.0" y="53" width="14.7" height="15.0" fill="rgb(210,10,22)" rx="2" ry="2" />
<text  x="1069.97" y="63.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoder (369 us., 0.09%)</title><rect x="703.5" y="165" width="1.0" height="15.0" fill="rgb(211,160,9)" rx="2" ry="2" />
<text  x="706.52" y="175.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,293 us., 0.30%)</title><rect x="959.4" y="101" width="3.6" height="15.0" fill="rgb(234,2,12)" rx="2" ry="2" />
<text  x="962.45" y="111.5" ></text>
</g>
<g >
<title>&lt;built-in_method_max_of_type_object_at_0x7f09597c99c0&gt; (24,631 us., 5.79%)</title><rect x="998.1" y="229" width="68.3" height="15.0" fill="rgb(238,182,54)" rx="2" ry="2" />
<text  x="1001.15" y="239.5" >&lt;built-..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(160):_forward (24,631 us., 5.79%)</title><rect x="998.1" y="213" width="68.3" height="15.0" fill="rgb(216,183,48)" rx="2" ry="2" />
<text  x="1001.15" y="223.5" >transfo..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (200 us., 0.05%)</title><rect x="1081.7" y="149" width="0.6" height="15.0" fill="rgb(205,209,40)" rx="2" ry="2" />
<text  x="1084.71" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (617 us., 0.14%)</title><rect x="706.7" y="165" width="1.8" height="15.0" fill="rgb(208,3,52)" rx="2" ry="2" />
<text  x="709.75" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoder (200 us., 0.05%)</title><rect x="1066.4" y="197" width="0.6" height="15.0" fill="rgb(229,72,20)" rx="2" ry="2" />
<text  x="1069.41" y="207.5" ></text>
</g>
<g >
<title>all (425,764 us., 100%)</title><rect x="10.0" y="245" width="1180.0" height="15.0" fill="rgb(215,117,24)" rx="2" ry="2" />
<text  x="13.00" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (242 us., 0.06%)</title><rect x="1189.3" y="181" width="0.7" height="15.0" fill="rgb(210,5,20)" rx="2" ry="2" />
<text  x="1192.33" y="191.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (12,171 us., 2.86%)</title><rect x="963.0" y="101" width="33.8" height="15.0" fill="rgb(254,38,30)" rx="2" ry="2" />
<text  x="966.03" y="111.5" >tr..</text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (77,942 us., 18.31%)</title><rect x="10.0" y="133" width="216.0" height="15.0" fill="rgb(243,85,5)" rx="2" ry="2" />
<text  x="13.00" y="143.5" >nn.Module:_OPTDecoderLayer</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(160):_forward (29,760 us., 6.99%)</title><rect x="1083.9" y="229" width="82.5" height="15.0" fill="rgb(243,213,4)" rx="2" ry="2" />
<text  x="1086.93" y="239.5" >transform..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (34,689 us., 8.15%)</title><rect x="708.5" y="117" width="96.1" height="15.0" fill="rgb(211,222,48)" rx="2" ry="2" />
<text  x="711.46" y="127.5" >nn.Module:_..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (5,320 us., 1.25%)</title><rect x="1067.0" y="69" width="14.7" height="15.0" fill="rgb(220,92,34)" rx="2" ry="2" />
<text  x="1069.97" y="79.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (41,386 us., 9.72%)</title><rect x="838.9" y="181" width="114.7" height="15.0" fill="rgb(216,38,24)" rx="2" ry="2" />
<text  x="841.90" y="191.5" >transformers/m..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (797 us., 0.19%)</title><rect x="704.5" y="85" width="2.2" height="15.0" fill="rgb(219,104,49)" rx="2" ry="2" />
<text  x="707.54" y="95.5" ></text>
</g>
<g >
<title>&lt;built-in_method_layer_norm_of_type_object_at_0x7f09597c99c0&gt; (12,672 us., 2.98%)</title><rect x="963.0" y="229" width="35.1" height="15.0" fill="rgb(229,23,19)" rx="2" ry="2" />
<text  x="966.03" y="239.5" >&lt;b..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (501 us., 0.12%)</title><rect x="996.8" y="85" width="1.3" height="15.0" fill="rgb(232,3,7)" rx="2" ry="2" />
<text  x="999.76" y="95.5" ></text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (12,077 us., 2.84%)</title><rect x="805.4" y="85" width="33.5" height="15.0" fill="rgb(233,104,18)" rx="2" ry="2" />
<text  x="808.43" y="95.5" >nn..</text>
</g>
<g >
<title>torch/nn/modules/sparse.py(157):_forward (1,414 us., 0.33%)</title><rect x="704.5" y="197" width="4.0" height="15.0" fill="rgb(205,20,37)" rx="2" ry="2" />
<text  x="707.54" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoder (299 us., 0.07%)</title><rect x="1188.5" y="197" width="0.8" height="15.0" fill="rgb(213,116,0)" rx="2" ry="2" />
<text  x="1191.50" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (40,605 us., 9.54%)</title><rect x="483.4" y="165" width="112.5" height="15.0" fill="rgb(254,130,33)" rx="2" ry="2" />
<text  x="486.36" y="175.5" >nn.Module:_OP..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (12,077 us., 2.84%)</title><rect x="805.4" y="53" width="33.5" height="15.0" fill="rgb(221,53,36)" rx="2" ry="2" />
<text  x="808.43" y="63.5" >to..</text>
</g>
<g >
<title>nn.Module:_OPTAttention (34,689 us., 8.15%)</title><rect x="708.5" y="181" width="96.1" height="15.0" fill="rgb(208,20,27)" rx="2" ry="2" />
<text  x="711.46" y="191.5" >nn.Module:_..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (1,293 us., 0.30%)</title><rect x="959.4" y="181" width="3.6" height="15.0" fill="rgb(207,177,22)" rx="2" ry="2" />
<text  x="962.45" y="191.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (2,108 us., 0.50%)</title><rect x="953.6" y="197" width="5.8" height="15.0" fill="rgb(217,162,48)" rx="2" ry="2" />
<text  x="956.60" y="207.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,293 us., 0.30%)</title><rect x="959.4" y="149" width="3.6" height="15.0" fill="rgb(219,35,37)" rx="2" ry="2" />
<text  x="962.45" y="159.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (12,171 us., 2.86%)</title><rect x="963.0" y="53" width="33.8" height="15.0" fill="rgb(244,44,50)" rx="2" ry="2" />
<text  x="966.03" y="63.5" >to..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (92,854 us., 21.81%)</title><rect x="226.0" y="69" width="257.4" height="15.0" fill="rgb(247,126,31)" rx="2" ry="2" />
<text  x="229.02" y="79.5" >torch/autograd/grad_mode.py(27):_d..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(89):__expand_mask (1,293 us., 0.30%)</title><rect x="959.4" y="213" width="3.6" height="15.0" fill="rgb(254,0,44)" rx="2" ry="2" />
<text  x="962.45" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoder (5,320 us., 1.25%)</title><rect x="1067.0" y="117" width="14.7" height="15.0" fill="rgb(209,106,53)" rx="2" ry="2" />
<text  x="1069.97" y="127.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (501 us., 0.12%)</title><rect x="996.8" y="101" width="1.3" height="15.0" fill="rgb(207,198,47)" rx="2" ry="2" />
<text  x="999.76" y="111.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoder (242 us., 0.06%)</title><rect x="1189.3" y="213" width="0.7" height="15.0" fill="rgb(220,122,36)" rx="2" ry="2" />
<text  x="1192.33" y="223.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(533):__prepare_decoder_attention_mask (1,293 us., 0.30%)</title><rect x="959.4" y="197" width="3.6" height="15.0" fill="rgb(246,125,20)" rx="2" ry="2" />
<text  x="962.45" y="207.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (77,942 us., 18.31%)</title><rect x="10.0" y="37" width="216.0" height="15.0" fill="rgb(247,70,14)" rx="2" ry="2" />
<text  x="13.00" y="47.5" >torch/autograd/grad_mode.py(..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (5,320 us., 1.25%)</title><rect x="1067.0" y="165" width="14.7" height="15.0" fill="rgb(244,190,17)" rx="2" ry="2" />
<text  x="1069.97" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoder (501 us., 0.12%)</title><rect x="996.8" y="149" width="1.3" height="15.0" fill="rgb(221,128,48)" rx="2" ry="2" />
<text  x="999.76" y="159.5" ></text>
</g>
<g >
<title>torch/nn/modules/normalization.py(188):_forward (12,672 us., 2.98%)</title><rect x="963.0" y="197" width="35.1" height="15.0" fill="rgb(237,113,33)" rx="2" ry="2" />
<text  x="966.03" y="207.5" >to..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (34,689 us., 8.15%)</title><rect x="708.5" y="101" width="96.1" height="15.0" fill="rgb(219,200,49)" rx="2" ry="2" />
<text  x="711.46" y="111.5" >transformer..</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (200 us., 0.05%)</title><rect x="1066.4" y="165" width="0.6" height="15.0" fill="rgb(246,128,15)" rx="2" ry="2" />
<text  x="1069.41" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (38,831 us., 9.12%)</title><rect x="595.9" y="165" width="107.6" height="15.0" fill="rgb(247,189,15)" rx="2" ry="2" />
<text  x="598.90" y="175.5" >nn.Module:_OP..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (2,108 us., 0.50%)</title><rect x="953.6" y="181" width="5.8" height="15.0" fill="rgb(226,77,8)" rx="2" ry="2" />
<text  x="956.60" y="191.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (242 us., 0.06%)</title><rect x="1189.3" y="197" width="0.7" height="15.0" fill="rgb(225,40,49)" rx="2" ry="2" />
<text  x="1192.33" y="207.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (38,831 us., 9.12%)</title><rect x="595.9" y="117" width="107.6" height="15.0" fill="rgb(239,64,13)" rx="2" ry="2" />
<text  x="598.90" y="127.5" >transformers/..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (599 us., 0.14%)</title><rect x="1082.3" y="133" width="1.6" height="15.0" fill="rgb(252,7,35)" rx="2" ry="2" />
<text  x="1085.27" y="143.5" ></text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (92,854 us., 21.81%)</title><rect x="226.0" y="101" width="257.4" height="15.0" fill="rgb(221,32,26)" rx="2" ry="2" />
<text  x="229.02" y="111.5" >nn.Module:_OPTForCausalLM</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (369 us., 0.09%)</title><rect x="703.5" y="133" width="1.0" height="15.0" fill="rgb(218,156,29)" rx="2" ry="2" />
<text  x="706.52" y="143.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (12,171 us., 2.86%)</title><rect x="963.0" y="69" width="33.8" height="15.0" fill="rgb(219,136,46)" rx="2" ry="2" />
<text  x="966.03" y="79.5" >pr..</text>
</g>
<g >
<title>nn.Module:_ReLU (5,320 us., 1.25%)</title><rect x="1067.0" y="181" width="14.7" height="15.0" fill="rgb(239,223,37)" rx="2" ry="2" />
<text  x="1069.97" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (77,942 us., 18.31%)</title><rect x="10.0" y="69" width="216.0" height="15.0" fill="rgb(209,175,47)" rx="2" ry="2" />
<text  x="13.00" y="79.5" >nn.Module:_OPTForCausalLM</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (7,972 us., 1.87%)</title><rect x="1166.4" y="117" width="22.1" height="15.0" fill="rgb(226,209,3)" rx="2" ry="2" />
<text  x="1169.41" y="127.5" >t..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (92,854 us., 21.81%)</title><rect x="226.0" y="85" width="257.4" height="15.0" fill="rgb(234,213,16)" rx="2" ry="2" />
<text  x="229.02" y="95.5" >profiling/utils.py(18):_profile_mo..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(89):__expand_mask (200 us., 0.05%)</title><rect x="1081.7" y="181" width="0.6" height="15.0" fill="rgb(229,190,39)" rx="2" ry="2" />
<text  x="1084.71" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoder (797 us., 0.19%)</title><rect x="704.5" y="149" width="2.2" height="15.0" fill="rgb(227,105,51)" rx="2" ry="2" />
<text  x="707.54" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (5,320 us., 1.25%)</title><rect x="1067.0" y="85" width="14.7" height="15.0" fill="rgb(244,146,54)" rx="2" ry="2" />
<text  x="1069.97" y="95.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (40,605 us., 9.54%)</title><rect x="483.4" y="181" width="112.5" height="15.0" fill="rgb(226,57,52)" rx="2" ry="2" />
<text  x="486.36" y="191.5" >transformers/..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(160):_forward (38,831 us., 9.12%)</title><rect x="595.9" y="213" width="107.6" height="15.0" fill="rgb(247,40,53)" rx="2" ry="2" />
<text  x="598.90" y="223.5" >transformers/..</text>
</g>
<g >
<title>nn.Module:_Linear (211,401 us., 49.65%)</title><rect x="10.0" y="197" width="585.9" height="15.0" fill="rgb(254,37,49)" rx="2" ry="2" />
<text  x="13.00" y="207.5" >nn.Module:_Linear</text>
</g>
<g >
<title>nn.Module:_OPTAttention (24,631 us., 5.79%)</title><rect x="998.1" y="197" width="68.3" height="15.0" fill="rgb(219,50,27)" rx="2" ry="2" />
<text  x="1001.15" y="207.5" >nn.Modu..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (34,689 us., 8.15%)</title><rect x="708.5" y="165" width="96.1" height="15.0" fill="rgb(219,207,44)" rx="2" ry="2" />
<text  x="711.46" y="175.5" >transformer..</text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (301 us., 0.07%)</title><rect x="804.6" y="197" width="0.8" height="15.0" fill="rgb(252,228,51)" rx="2" ry="2" />
<text  x="807.60" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoder (12,171 us., 2.86%)</title><rect x="963.0" y="117" width="33.8" height="15.0" fill="rgb(241,120,34)" rx="2" ry="2" />
<text  x="966.03" y="127.5" >nn..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (41,386 us., 9.72%)</title><rect x="838.9" y="149" width="114.7" height="15.0" fill="rgb(252,221,34)" rx="2" ry="2" />
<text  x="841.90" y="159.5" >transformers/m..</text>
</g>
<g >
<title>nn.Module:_LayerNorm (12,672 us., 2.98%)</title><rect x="963.0" y="181" width="35.1" height="15.0" fill="rgb(240,72,35)" rx="2" ry="2" />
<text  x="966.03" y="191.5" >nn..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (369 us., 0.09%)</title><rect x="703.5" y="117" width="1.0" height="15.0" fill="rgb(235,186,0)" rx="2" ry="2" />
<text  x="706.52" y="127.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (29,760 us., 6.99%)</title><rect x="1083.9" y="133" width="82.5" height="15.0" fill="rgb(213,224,24)" rx="2" ry="2" />
<text  x="1086.93" y="143.5" >transform..</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (797 us., 0.19%)</title><rect x="704.5" y="117" width="2.2" height="15.0" fill="rgb(236,29,12)" rx="2" ry="2" />
<text  x="707.54" y="127.5" ></text>
</g>
<g >
<title>torch/nn/functional.py(1804):_softmax (34,689 us., 8.15%)</title><rect x="708.5" y="213" width="96.1" height="15.0" fill="rgb(250,101,54)" rx="2" ry="2" />
<text  x="711.46" y="223.5" >torch/nn/fu..</text>
</g>
<g >
<title>&lt;built-in_function_linear&gt; (211,401 us., 49.65%)</title><rect x="10.0" y="229" width="585.9" height="15.0" fill="rgb(233,197,42)" rx="2" ry="2" />
<text  x="13.00" y="239.5" >&lt;built-in_function_linear&gt;</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (501 us., 0.12%)</title><rect x="996.8" y="165" width="1.3" height="15.0" fill="rgb(210,161,53)" rx="2" ry="2" />
<text  x="999.76" y="175.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (38,831 us., 9.12%)</title><rect x="595.9" y="181" width="107.6" height="15.0" fill="rgb(253,143,10)" rx="2" ry="2" />
<text  x="598.90" y="191.5" >transformers/..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (7,972 us., 1.87%)</title><rect x="1166.4" y="229" width="22.1" height="15.0" fill="rgb(244,38,20)" rx="2" ry="2" />
<text  x="1169.41" y="239.5" >t..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (200 us., 0.05%)</title><rect x="1066.4" y="149" width="0.6" height="15.0" fill="rgb(220,146,30)" rx="2" ry="2" />
<text  x="1069.41" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (24,631 us., 5.79%)</title><rect x="998.1" y="101" width="68.3" height="15.0" fill="rgb(209,105,11)" rx="2" ry="2" />
<text  x="1001.15" y="111.5" >nn.Modu..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (2,108 us., 0.50%)</title><rect x="953.6" y="133" width="5.8" height="15.0" fill="rgb(232,228,45)" rx="2" ry="2" />
<text  x="956.60" y="143.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (92,854 us., 21.81%)</title><rect x="226.0" y="181" width="257.4" height="15.0" fill="rgb(253,166,35)" rx="2" ry="2" />
<text  x="229.02" y="191.5" >transformers/models/opt/modeling_o..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (41,386 us., 9.72%)</title><rect x="838.9" y="117" width="114.7" height="15.0" fill="rgb(205,105,0)" rx="2" ry="2" />
<text  x="841.90" y="127.5" >transformers/m..</text>
</g>
<g >
<title>nn.Module:_OPTAttention (12,077 us., 2.84%)</title><rect x="805.4" y="181" width="33.5" height="15.0" fill="rgb(250,62,25)" rx="2" ry="2" />
<text  x="808.43" y="191.5" >nn..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (77,942 us., 18.31%)</title><rect x="10.0" y="149" width="216.0" height="15.0" fill="rgb(234,94,30)" rx="2" ry="2" />
<text  x="13.00" y="159.5" >transformers/models/opt/mode..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (301 us., 0.07%)</title><rect x="804.6" y="181" width="0.8" height="15.0" fill="rgb(208,219,30)" rx="2" ry="2" />
<text  x="807.60" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_OPTAttention (29,760 us., 6.99%)</title><rect x="1083.9" y="213" width="82.5" height="15.0" fill="rgb(221,1,50)" rx="2" ry="2" />
<text  x="1086.93" y="223.5" >nn.Module..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (2,108 us., 0.50%)</title><rect x="953.6" y="165" width="5.8" height="15.0" fill="rgb(217,141,1)" rx="2" ry="2" />
<text  x="956.60" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (599 us., 0.14%)</title><rect x="1082.3" y="149" width="1.6" height="15.0" fill="rgb(240,99,12)" rx="2" ry="2" />
<text  x="1085.27" y="159.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (41,386 us., 9.72%)</title><rect x="838.9" y="85" width="114.7" height="15.0" fill="rgb(209,110,47)" rx="2" ry="2" />
<text  x="841.90" y="95.5" >profiling/util..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (200 us., 0.05%)</title><rect x="1066.4" y="181" width="0.6" height="15.0" fill="rgb(229,220,17)" rx="2" ry="2" />
<text  x="1069.41" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoder (301 us., 0.07%)</title><rect x="804.6" y="165" width="0.8" height="15.0" fill="rgb(227,35,12)" rx="2" ry="2" />
<text  x="807.60" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (599 us., 0.14%)</title><rect x="1082.3" y="213" width="1.6" height="15.0" fill="rgb(218,160,51)" rx="2" ry="2" />
<text  x="1085.27" y="223.5" ></text>
</g>
</g>
</svg>
