<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="294" onload="init(evt)" viewBox="0 0 1200 294" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="294.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >CUDA Time</text>
<text id="details" x="10.00" y="277" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="277" > </text>
<g id="frames">
<g >
<title>&lt;built-in_method_encode_of_str_object_at_0x7f3d6f499450&gt; (173,214 us., 22.88%)</title><rect x="677.5" y="229" width="269.9" height="15.0" fill="rgb(254,77,28)" rx="2" ry="2" />
<text  x="680.49" y="239.5" >&lt;built-in_method_encode_of_str_objec..</text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (301 us., 0.04%)</title><rect x="786.8" y="197" width="0.4" height="15.0" fill="rgb(221,164,19)" rx="2" ry="2" />
<text  x="789.75" y="207.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (22,326 us., 2.95%)</title><rect x="1048.5" y="101" width="34.8" height="15.0" fill="rgb(251,226,49)" rx="2" ry="2" />
<text  x="1051.49" y="111.5" >tr..</text>
</g>
<g >
<title>torch/nn/functional.py(1446):_relu (22,326 us., 2.95%)</title><rect x="1048.5" y="213" width="34.8" height="15.0" fill="rgb(241,96,25)" rx="2" ry="2" />
<text  x="1051.49" y="223.5" >to..</text>
</g>
<g >
<title>&lt;built-in_method_layer_norm_of_type_object_at_0x7f3e639a39c0&gt; (17,857 us., 2.36%)</title><rect x="947.4" y="229" width="27.8" height="15.0" fill="rgb(223,138,2)" rx="2" ry="2" />
<text  x="950.41" y="239.5" >&lt;..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (46,808 us., 6.18%)</title><rect x="975.2" y="181" width="73.0" height="15.0" fill="rgb(242,25,12)" rx="2" ry="2" />
<text  x="978.24" y="191.5" >transfor..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,258 us., 0.17%)</title><rect x="674.0" y="85" width="1.9" height="15.0" fill="rgb(224,102,51)" rx="2" ry="2" />
<text  x="676.98" y="95.5" ></text>
</g>
<g >
<title>&lt;built-in_method_relu_of_type_object_at_0x7f3e639a39c0&gt; (22,326 us., 2.95%)</title><rect x="1048.5" y="229" width="34.8" height="15.0" fill="rgb(249,67,29)" rx="2" ry="2" />
<text  x="1051.49" y="239.5" >&lt;b..</text>
</g>
<g >
<title>nn.Module:_OPTAttention (98,639 us., 13.03%)</title><rect x="10.0" y="165" width="153.7" height="15.0" fill="rgb(217,60,5)" rx="2" ry="2" />
<text  x="13.00" y="175.5" >nn.Module:_OPTAtten..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (98,639 us., 13.03%)</title><rect x="10.0" y="117" width="153.7" height="15.0" fill="rgb(242,164,24)" rx="2" ry="2" />
<text  x="13.00" y="127.5" >transformers/models..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (301 us., 0.04%)</title><rect x="786.8" y="149" width="0.4" height="15.0" fill="rgb(228,34,2)" rx="2" ry="2" />
<text  x="789.75" y="159.5" ></text>
</g>
<g >
<title>torch/nn/modules/linear.py(113):_forward (347,124 us., 45.84%)</title><rect x="10.0" y="213" width="540.9" height="15.0" fill="rgb(223,212,51)" rx="2" ry="2" />
<text  x="13.00" y="223.5" >torch/nn/modules/linear.py(113):_forward</text>
</g>
<g >
<title>nn.Module:_Embedding (1,258 us., 0.17%)</title><rect x="674.0" y="181" width="1.9" height="15.0" fill="rgb(225,11,22)" rx="2" ry="2" />
<text  x="676.98" y="191.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (301 us., 0.04%)</title><rect x="786.8" y="213" width="0.4" height="15.0" fill="rgb(210,31,52)" rx="2" ry="2" />
<text  x="789.75" y="223.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (301 us., 0.04%)</title><rect x="786.8" y="181" width="0.4" height="15.0" fill="rgb(209,212,11)" rx="2" ry="2" />
<text  x="789.75" y="191.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (1,258 us., 0.17%)</title><rect x="674.0" y="165" width="1.9" height="15.0" fill="rgb(228,96,31)" rx="2" ry="2" />
<text  x="676.98" y="175.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (77,456 us., 10.23%)</title><rect x="818.2" y="117" width="120.7" height="15.0" fill="rgb(230,35,42)" rx="2" ry="2" />
<text  x="821.17" y="127.5" >transformers/mo..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (77,255 us., 10.20%)</title><rect x="550.9" y="149" width="120.4" height="15.0" fill="rgb(241,122,19)" rx="2" ry="2" />
<text  x="553.94" y="159.5" >transformers/mo..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (98,639 us., 13.03%)</title><rect x="10.0" y="149" width="153.7" height="15.0" fill="rgb(224,129,36)" rx="2" ry="2" />
<text  x="13.00" y="159.5" >transformers/models..</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (4,080 us., 0.54%)</title><rect x="938.9" y="149" width="6.3" height="15.0" fill="rgb(205,221,35)" rx="2" ry="2" />
<text  x="941.88" y="159.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (98,639 us., 13.03%)</title><rect x="10.0" y="37" width="153.7" height="15.0" fill="rgb(216,43,14)" rx="2" ry="2" />
<text  x="13.00" y="47.5" >torch/autograd/grad..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (207 us., 0.03%)</title><rect x="1083.3" y="85" width="0.3" height="15.0" fill="rgb(223,29,53)" rx="2" ry="2" />
<text  x="1086.28" y="95.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (898 us., 0.12%)</title><rect x="1188.6" y="229" width="1.4" height="15.0" fill="rgb(248,192,32)" rx="2" ry="2" />
<text  x="1191.60" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (54,878 us., 7.25%)</title><rect x="1084.5" y="117" width="85.6" height="15.0" fill="rgb(214,122,24)" rx="2" ry="2" />
<text  x="1087.54" y="127.5" >nn.Module:..</text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (11,501 us., 1.52%)</title><rect x="1170.1" y="213" width="17.9" height="15.0" fill="rgb(232,219,16)" rx="2" ry="2" />
<text  x="1173.05" y="223.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(160):_forward (77,456 us., 10.23%)</title><rect x="818.2" y="213" width="120.7" height="15.0" fill="rgb(251,52,4)" rx="2" ry="2" />
<text  x="821.17" y="223.5" >transformers/mo..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (70,117 us., 9.26%)</title><rect x="677.5" y="101" width="109.3" height="15.0" fill="rgb(213,110,32)" rx="2" ry="2" />
<text  x="680.49" y="111.5" >transformers/..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (597 us., 0.08%)</title><rect x="1083.6" y="165" width="0.9" height="15.0" fill="rgb(250,68,5)" rx="2" ry="2" />
<text  x="1086.61" y="175.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (70,117 us., 9.26%)</title><rect x="677.5" y="133" width="109.3" height="15.0" fill="rgb(254,143,11)" rx="2" ry="2" />
<text  x="680.49" y="143.5" >transformers/..</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (77,255 us., 10.20%)</title><rect x="550.9" y="101" width="120.4" height="15.0" fill="rgb(247,62,3)" rx="2" ry="2" />
<text  x="553.94" y="111.5" >nn.Module:_OPTF..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (4,080 us., 0.54%)</title><rect x="938.9" y="181" width="6.3" height="15.0" fill="rgb(235,49,54)" rx="2" ry="2" />
<text  x="941.88" y="191.5" ></text>
</g>
<g >
<title>&lt;built-in_method_max_of_type_object_at_0x7f3e639a39c0&gt; (46,808 us., 6.18%)</title><rect x="975.2" y="229" width="73.0" height="15.0" fill="rgb(248,224,36)" rx="2" ry="2" />
<text  x="978.24" y="239.5" >&lt;built-i..</text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (54,878 us., 7.25%)</title><rect x="1084.5" y="181" width="85.6" height="15.0" fill="rgb(248,112,32)" rx="2" ry="2" />
<text  x="1087.54" y="191.5" >nn.Module:..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (19,864 us., 2.62%)</title><rect x="787.2" y="101" width="31.0" height="15.0" fill="rgb(230,136,38)" rx="2" ry="2" />
<text  x="790.22" y="111.5" >tr..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (717 us., 0.09%)</title><rect x="974.1" y="133" width="1.1" height="15.0" fill="rgb(205,162,38)" rx="2" ry="2" />
<text  x="977.12" y="143.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(89):__expand_mask (207 us., 0.03%)</title><rect x="1083.3" y="181" width="0.3" height="15.0" fill="rgb(231,177,0)" rx="2" ry="2" />
<text  x="1086.28" y="191.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (17,140 us., 2.26%)</title><rect x="947.4" y="165" width="26.7" height="15.0" fill="rgb(209,222,23)" rx="2" ry="2" />
<text  x="950.41" y="175.5" >t..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (46,808 us., 6.18%)</title><rect x="975.2" y="117" width="73.0" height="15.0" fill="rgb(244,162,8)" rx="2" ry="2" />
<text  x="978.24" y="127.5" >transfor..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (200 us., 0.03%)</title><rect x="1048.2" y="181" width="0.3" height="15.0" fill="rgb(223,64,25)" rx="2" ry="2" />
<text  x="1051.18" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoder (77,255 us., 10.20%)</title><rect x="550.9" y="133" width="120.4" height="15.0" fill="rgb(216,124,18)" rx="2" ry="2" />
<text  x="553.94" y="143.5" >nn.Module:_OPTD..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (200 us., 0.03%)</title><rect x="1048.2" y="133" width="0.3" height="15.0" fill="rgb(209,123,39)" rx="2" ry="2" />
<text  x="1051.18" y="143.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (11,501 us., 1.52%)</title><rect x="1170.1" y="117" width="17.9" height="15.0" fill="rgb(206,219,54)" rx="2" ry="2" />
<text  x="1173.05" y="127.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(160):_forward (46,808 us., 6.18%)</title><rect x="975.2" y="213" width="73.0" height="15.0" fill="rgb(231,120,11)" rx="2" ry="2" />
<text  x="978.24" y="223.5" >transfor..</text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (1,706 us., 0.23%)</title><rect x="671.3" y="197" width="2.7" height="15.0" fill="rgb(210,93,18)" rx="2" ry="2" />
<text  x="674.33" y="207.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (46,808 us., 6.18%)</title><rect x="975.2" y="149" width="73.0" height="15.0" fill="rgb(225,38,33)" rx="2" ry="2" />
<text  x="978.24" y="159.5" >transfor..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (301 us., 0.04%)</title><rect x="786.8" y="165" width="0.4" height="15.0" fill="rgb(213,149,7)" rx="2" ry="2" />
<text  x="789.75" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (77,456 us., 10.23%)</title><rect x="818.2" y="101" width="120.7" height="15.0" fill="rgb(207,150,20)" rx="2" ry="2" />
<text  x="821.17" y="111.5" >nn.Module:_OPTF..</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (400 us., 0.05%)</title><rect x="1188.0" y="165" width="0.6" height="15.0" fill="rgb(228,119,25)" rx="2" ry="2" />
<text  x="1190.98" y="175.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (17,140 us., 2.26%)</title><rect x="947.4" y="69" width="26.7" height="15.0" fill="rgb(212,198,33)" rx="2" ry="2" />
<text  x="950.41" y="79.5" >p..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (182,075 us., 24.05%)</title><rect x="163.7" y="181" width="283.7" height="15.0" fill="rgb(219,191,13)" rx="2" ry="2" />
<text  x="166.71" y="191.5" >transformers/models/opt/modeling_opt.p..</text>
</g>
<g >
<title>torch/_tensor.py(637):___rsub__ (207 us., 0.03%)</title><rect x="1083.3" y="213" width="0.3" height="15.0" fill="rgb(223,136,36)" rx="2" ry="2" />
<text  x="1086.28" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_OPTAttention (77,456 us., 10.23%)</title><rect x="818.2" y="197" width="120.7" height="15.0" fill="rgb(222,195,42)" rx="2" ry="2" />
<text  x="821.17" y="207.5" >nn.Module:_OPTA..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (46,808 us., 6.18%)</title><rect x="975.2" y="69" width="73.0" height="15.0" fill="rgb(225,77,11)" rx="2" ry="2" />
<text  x="978.24" y="79.5" >torch/au..</text>
</g>
<g >
<title>&lt;built-in_method_ones_of_type_object_at_0x7f3e639a39c0&gt; (200 us., 0.03%)</title><rect x="1048.2" y="229" width="0.3" height="15.0" fill="rgb(245,79,20)" rx="2" ry="2" />
<text  x="1051.18" y="239.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (207 us., 0.03%)</title><rect x="1083.3" y="69" width="0.3" height="15.0" fill="rgb(245,93,16)" rx="2" ry="2" />
<text  x="1086.28" y="79.5" ></text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (66,410 us., 8.77%)</title><rect x="447.4" y="165" width="103.5" height="15.0" fill="rgb(209,196,49)" rx="2" ry="2" />
<text  x="450.45" y="175.5" >nn.Module:_O..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(160):_forward (98,639 us., 13.03%)</title><rect x="10.0" y="181" width="153.7" height="15.0" fill="rgb(247,185,7)" rx="2" ry="2" />
<text  x="13.00" y="191.5" >transformers/models..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (400 us., 0.05%)</title><rect x="1188.0" y="213" width="0.6" height="15.0" fill="rgb(224,8,13)" rx="2" ry="2" />
<text  x="1190.98" y="223.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(533):__prepare_decoder_attention_mask (4,080 us., 0.54%)</title><rect x="938.9" y="213" width="6.3" height="15.0" fill="rgb(228,27,20)" rx="2" ry="2" />
<text  x="941.88" y="223.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,396 us., 0.18%)</title><rect x="945.2" y="117" width="2.2" height="15.0" fill="rgb(237,132,30)" rx="2" ry="2" />
<text  x="948.24" y="127.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (66,410 us., 8.77%)</title><rect x="447.4" y="181" width="103.5" height="15.0" fill="rgb(241,164,4)" rx="2" ry="2" />
<text  x="450.45" y="191.5" >transformers..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (54,878 us., 7.25%)</title><rect x="1084.5" y="85" width="85.6" height="15.0" fill="rgb(254,100,17)" rx="2" ry="2" />
<text  x="1087.54" y="95.5" >torch/auto..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (19,864 us., 2.62%)</title><rect x="787.2" y="117" width="31.0" height="15.0" fill="rgb(210,163,52)" rx="2" ry="2" />
<text  x="790.22" y="127.5" >nn..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (207 us., 0.03%)</title><rect x="1083.3" y="117" width="0.3" height="15.0" fill="rgb(239,96,10)" rx="2" ry="2" />
<text  x="1086.28" y="127.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoder (1,706 us., 0.23%)</title><rect x="671.3" y="165" width="2.7" height="15.0" fill="rgb(222,201,1)" rx="2" ry="2" />
<text  x="674.33" y="175.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (17,140 us., 2.26%)</title><rect x="947.4" y="53" width="26.7" height="15.0" fill="rgb(219,27,12)" rx="2" ry="2" />
<text  x="950.41" y="63.5" >t..</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (717 us., 0.09%)</title><rect x="974.1" y="117" width="1.1" height="15.0" fill="rgb(245,188,43)" rx="2" ry="2" />
<text  x="977.12" y="127.5" ></text>
</g>
<g >
<title>torch/nn/functional.py(2488):_layer_norm (17,857 us., 2.36%)</title><rect x="947.4" y="213" width="27.8" height="15.0" fill="rgb(247,126,34)" rx="2" ry="2" />
<text  x="950.41" y="223.5" >t..</text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (19,864 us., 2.62%)</title><rect x="787.2" y="149" width="31.0" height="15.0" fill="rgb(243,125,43)" rx="2" ry="2" />
<text  x="790.22" y="159.5" >nn..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (22,326 us., 2.95%)</title><rect x="1048.5" y="117" width="34.8" height="15.0" fill="rgb(236,58,5)" rx="2" ry="2" />
<text  x="1051.49" y="127.5" >nn..</text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (98,639 us., 13.03%)</title><rect x="10.0" y="133" width="153.7" height="15.0" fill="rgb(240,166,31)" rx="2" ry="2" />
<text  x="13.00" y="143.5" >nn.Module:_OPTDecod..</text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (77,456 us., 10.23%)</title><rect x="818.2" y="165" width="120.7" height="15.0" fill="rgb(228,205,5)" rx="2" ry="2" />
<text  x="821.17" y="175.5" >nn.Module:_OPTD..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (46,808 us., 6.18%)</title><rect x="975.2" y="133" width="73.0" height="15.0" fill="rgb(244,186,39)" rx="2" ry="2" />
<text  x="978.24" y="143.5" >nn.Modul..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (70,117 us., 9.26%)</title><rect x="677.5" y="117" width="109.3" height="15.0" fill="rgb(215,161,3)" rx="2" ry="2" />
<text  x="680.49" y="127.5" >nn.Module:_OP..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (400 us., 0.05%)</title><rect x="1188.0" y="133" width="0.6" height="15.0" fill="rgb(220,54,50)" rx="2" ry="2" />
<text  x="1190.98" y="143.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (77,456 us., 10.23%)</title><rect x="818.2" y="69" width="120.7" height="15.0" fill="rgb(222,222,15)" rx="2" ry="2" />
<text  x="821.17" y="79.5" >torch/autograd/..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (989 us., 0.13%)</title><rect x="675.9" y="133" width="1.6" height="15.0" fill="rgb(223,190,40)" rx="2" ry="2" />
<text  x="678.94" y="143.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (98,639 us., 13.03%)</title><rect x="10.0" y="53" width="153.7" height="15.0" fill="rgb(213,49,6)" rx="2" ry="2" />
<text  x="13.00" y="63.5" >profiling/utils.py(..</text>
</g>
<g >
<title>&lt;built-in_method_bmm_of_type_object_at_0x7f3e639a39c0&gt; (77,255 us., 10.20%)</title><rect x="550.9" y="229" width="120.4" height="15.0" fill="rgb(244,89,53)" rx="2" ry="2" />
<text  x="553.94" y="239.5" >&lt;built-in_metho..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (1,396 us., 0.18%)</title><rect x="945.2" y="181" width="2.2" height="15.0" fill="rgb(207,125,42)" rx="2" ry="2" />
<text  x="948.24" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_OPTAttention (54,878 us., 7.25%)</title><rect x="1084.5" y="213" width="85.6" height="15.0" fill="rgb(236,182,4)" rx="2" ry="2" />
<text  x="1087.54" y="223.5" >nn.Module:..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (717 us., 0.09%)</title><rect x="974.1" y="149" width="1.1" height="15.0" fill="rgb(220,113,8)" rx="2" ry="2" />
<text  x="977.12" y="159.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (301 us., 0.04%)</title><rect x="786.8" y="101" width="0.4" height="15.0" fill="rgb(243,36,26)" rx="2" ry="2" />
<text  x="789.75" y="111.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (717 us., 0.09%)</title><rect x="974.1" y="85" width="1.1" height="15.0" fill="rgb(240,141,45)" rx="2" ry="2" />
<text  x="977.12" y="95.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (46,808 us., 6.18%)</title><rect x="975.2" y="85" width="73.0" height="15.0" fill="rgb(241,103,19)" rx="2" ry="2" />
<text  x="978.24" y="95.5" >profilin..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (400 us., 0.05%)</title><rect x="1188.0" y="149" width="0.6" height="15.0" fill="rgb(224,172,11)" rx="2" ry="2" />
<text  x="1190.98" y="159.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (54,878 us., 7.25%)</title><rect x="1084.5" y="133" width="85.6" height="15.0" fill="rgb(242,153,2)" rx="2" ry="2" />
<text  x="1087.54" y="143.5" >transforme..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (400 us., 0.05%)</title><rect x="1188.0" y="197" width="0.6" height="15.0" fill="rgb(222,91,8)" rx="2" ry="2" />
<text  x="1190.98" y="207.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (597 us., 0.08%)</title><rect x="1083.6" y="197" width="0.9" height="15.0" fill="rgb(254,1,22)" rx="2" ry="2" />
<text  x="1086.61" y="207.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (597 us., 0.08%)</title><rect x="1083.6" y="117" width="0.9" height="15.0" fill="rgb(212,178,51)" rx="2" ry="2" />
<text  x="1086.61" y="127.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (1,706 us., 0.23%)</title><rect x="671.3" y="213" width="2.7" height="15.0" fill="rgb(238,173,43)" rx="2" ry="2" />
<text  x="674.33" y="223.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (4,080 us., 0.54%)</title><rect x="938.9" y="133" width="6.3" height="15.0" fill="rgb(216,16,14)" rx="2" ry="2" />
<text  x="941.88" y="143.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (11,501 us., 1.52%)</title><rect x="1170.1" y="165" width="17.9" height="15.0" fill="rgb(212,174,40)" rx="2" ry="2" />
<text  x="1173.05" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_OPTAttention (46,808 us., 6.18%)</title><rect x="975.2" y="197" width="73.0" height="15.0" fill="rgb(238,225,43)" rx="2" ry="2" />
<text  x="978.24" y="207.5" >nn.Modul..</text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (597 us., 0.08%)</title><rect x="1083.6" y="213" width="0.9" height="15.0" fill="rgb(213,170,50)" rx="2" ry="2" />
<text  x="1086.61" y="223.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (77,456 us., 10.23%)</title><rect x="818.2" y="85" width="120.7" height="15.0" fill="rgb(205,156,17)" rx="2" ry="2" />
<text  x="821.17" y="95.5" >profiling/utils..</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (1,258 us., 0.17%)</title><rect x="674.0" y="117" width="1.9" height="15.0" fill="rgb(208,69,39)" rx="2" ry="2" />
<text  x="676.98" y="127.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (22,326 us., 2.95%)</title><rect x="1048.5" y="53" width="34.8" height="15.0" fill="rgb(251,137,12)" rx="2" ry="2" />
<text  x="1051.49" y="63.5" >to..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (11,501 us., 1.52%)</title><rect x="1170.1" y="229" width="17.9" height="15.0" fill="rgb(216,62,44)" rx="2" ry="2" />
<text  x="1173.05" y="239.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (200 us., 0.03%)</title><rect x="1048.2" y="213" width="0.3" height="15.0" fill="rgb(249,125,36)" rx="2" ry="2" />
<text  x="1051.18" y="223.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (989 us., 0.13%)</title><rect x="675.9" y="69" width="1.6" height="15.0" fill="rgb(207,182,51)" rx="2" ry="2" />
<text  x="678.94" y="79.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (597 us., 0.08%)</title><rect x="1083.6" y="229" width="0.9" height="15.0" fill="rgb(232,180,26)" rx="2" ry="2" />
<text  x="1086.61" y="239.5" ></text>
</g>
<g >
<title>&lt;built-in_method_embedding_of_type_object_at_0x7f3e639a39c0&gt; (2,247 us., 0.30%)</title><rect x="674.0" y="229" width="3.5" height="15.0" fill="rgb(240,112,15)" rx="2" ry="2" />
<text  x="676.98" y="239.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (19,864 us., 2.62%)</title><rect x="787.2" y="133" width="31.0" height="15.0" fill="rgb(241,100,4)" rx="2" ry="2" />
<text  x="790.22" y="143.5" >tr..</text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (77,255 us., 10.20%)</title><rect x="550.9" y="165" width="120.4" height="15.0" fill="rgb(206,181,21)" rx="2" ry="2" />
<text  x="553.94" y="175.5" >nn.Module:_OPTD..</text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (22,326 us., 2.95%)</title><rect x="1048.5" y="149" width="34.8" height="15.0" fill="rgb(235,220,24)" rx="2" ry="2" />
<text  x="1051.49" y="159.5" >nn..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (989 us., 0.13%)</title><rect x="675.9" y="181" width="1.6" height="15.0" fill="rgb(222,205,22)" rx="2" ry="2" />
<text  x="678.94" y="191.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (11,501 us., 1.52%)</title><rect x="1170.1" y="133" width="17.9" height="15.0" fill="rgb(217,104,40)" rx="2" ry="2" />
<text  x="1173.05" y="143.5" ></text>
</g>
<g >
<title>&lt;built-in_method_cumsum_of_type_object_at_0x7f3e639a39c0&gt; (1,706 us., 0.23%)</title><rect x="671.3" y="229" width="2.7" height="15.0" fill="rgb(244,42,30)" rx="2" ry="2" />
<text  x="674.33" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_OPTAttention (77,255 us., 10.20%)</title><rect x="550.9" y="197" width="120.4" height="15.0" fill="rgb(248,213,25)" rx="2" ry="2" />
<text  x="553.94" y="207.5" >nn.Module:_OPTA..</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (1,706 us., 0.23%)</title><rect x="671.3" y="133" width="2.7" height="15.0" fill="rgb(214,113,47)" rx="2" ry="2" />
<text  x="674.33" y="143.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (19,864 us., 2.62%)</title><rect x="787.2" y="53" width="31.0" height="15.0" fill="rgb(208,49,19)" rx="2" ry="2" />
<text  x="790.22" y="63.5" >to..</text>
</g>
<g >
<title>torch/nn/modules/activation.py(97):_forward (22,326 us., 2.95%)</title><rect x="1048.5" y="197" width="34.8" height="15.0" fill="rgb(253,26,28)" rx="2" ry="2" />
<text  x="1051.49" y="207.5" >to..</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (46,808 us., 6.18%)</title><rect x="975.2" y="101" width="73.0" height="15.0" fill="rgb(240,8,36)" rx="2" ry="2" />
<text  x="978.24" y="111.5" >nn.Modul..</text>
</g>
<g >
<title>torch/nn/functional.py(1804):_softmax (70,117 us., 9.26%)</title><rect x="677.5" y="213" width="109.3" height="15.0" fill="rgb(252,127,23)" rx="2" ry="2" />
<text  x="680.49" y="223.5" >torch/nn/func..</text>
</g>
<g >
<title>&lt;built-in_function_linear&gt; (347,124 us., 45.84%)</title><rect x="10.0" y="229" width="540.9" height="15.0" fill="rgb(234,51,45)" rx="2" ry="2" />
<text  x="13.00" y="239.5" >&lt;built-in_function_linear&gt;</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (54,878 us., 7.25%)</title><rect x="1084.5" y="149" width="85.6" height="15.0" fill="rgb(244,102,7)" rx="2" ry="2" />
<text  x="1087.54" y="159.5" >nn.Module:..</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (19,864 us., 2.62%)</title><rect x="787.2" y="85" width="31.0" height="15.0" fill="rgb(213,105,7)" rx="2" ry="2" />
<text  x="790.22" y="95.5" >nn..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (66,410 us., 8.77%)</title><rect x="447.4" y="149" width="103.5" height="15.0" fill="rgb(218,112,16)" rx="2" ry="2" />
<text  x="450.45" y="159.5" >profiling/ut..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (989 us., 0.13%)</title><rect x="675.9" y="149" width="1.6" height="15.0" fill="rgb(209,96,33)" rx="2" ry="2" />
<text  x="678.94" y="159.5" ></text>
</g>
<g >
<title>torch/_tensor.py(26):_wrapped (207 us., 0.03%)</title><rect x="1083.3" y="197" width="0.3" height="15.0" fill="rgb(244,152,24)" rx="2" ry="2" />
<text  x="1086.28" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_ReLU (22,326 us., 2.95%)</title><rect x="1048.5" y="181" width="34.8" height="15.0" fill="rgb(215,166,34)" rx="2" ry="2" />
<text  x="1051.49" y="191.5" >nn..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (400 us., 0.05%)</title><rect x="1188.0" y="181" width="0.6" height="15.0" fill="rgb(249,29,4)" rx="2" ry="2" />
<text  x="1190.98" y="191.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (1,706 us., 0.23%)</title><rect x="671.3" y="181" width="2.7" height="15.0" fill="rgb(214,171,37)" rx="2" ry="2" />
<text  x="674.33" y="191.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (717 us., 0.09%)</title><rect x="974.1" y="101" width="1.1" height="15.0" fill="rgb(253,144,41)" rx="2" ry="2" />
<text  x="977.12" y="111.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (54,878 us., 7.25%)</title><rect x="1084.5" y="101" width="85.6" height="15.0" fill="rgb(242,209,5)" rx="2" ry="2" />
<text  x="1087.54" y="111.5" >profiling/..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (77,255 us., 10.20%)</title><rect x="550.9" y="181" width="120.4" height="15.0" fill="rgb(218,22,20)" rx="2" ry="2" />
<text  x="553.94" y="191.5" >transformers/mo..</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (182,075 us., 24.05%)</title><rect x="163.7" y="101" width="283.7" height="15.0" fill="rgb(214,152,53)" rx="2" ry="2" />
<text  x="166.71" y="111.5" >nn.Module:_OPTForCausalLM</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (17,140 us., 2.26%)</title><rect x="947.4" y="133" width="26.7" height="15.0" fill="rgb(223,82,14)" rx="2" ry="2" />
<text  x="950.41" y="143.5" >t..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (98,639 us., 13.03%)</title><rect x="10.0" y="85" width="153.7" height="15.0" fill="rgb(211,137,5)" rx="2" ry="2" />
<text  x="13.00" y="95.5" >transformers/models..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (4,080 us., 0.54%)</title><rect x="938.9" y="117" width="6.3" height="15.0" fill="rgb(250,150,48)" rx="2" ry="2" />
<text  x="941.88" y="127.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (717 us., 0.09%)</title><rect x="974.1" y="165" width="1.1" height="15.0" fill="rgb(243,203,43)" rx="2" ry="2" />
<text  x="977.12" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (989 us., 0.13%)</title><rect x="675.9" y="165" width="1.6" height="15.0" fill="rgb(216,78,40)" rx="2" ry="2" />
<text  x="678.94" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_Linear (347,124 us., 45.84%)</title><rect x="10.0" y="197" width="540.9" height="15.0" fill="rgb(243,107,28)" rx="2" ry="2" />
<text  x="13.00" y="207.5" >nn.Module:_Linear</text>
</g>
<g >
<title>nn.Module:_OPTAttention (70,117 us., 9.26%)</title><rect x="677.5" y="181" width="109.3" height="15.0" fill="rgb(205,88,26)" rx="2" ry="2" />
<text  x="680.49" y="191.5" >nn.Module:_OP..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (597 us., 0.08%)</title><rect x="1083.6" y="133" width="0.9" height="15.0" fill="rgb(228,183,36)" rx="2" ry="2" />
<text  x="1086.61" y="143.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,706 us., 0.23%)</title><rect x="671.3" y="101" width="2.7" height="15.0" fill="rgb(237,145,2)" rx="2" ry="2" />
<text  x="674.33" y="111.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (70,117 us., 9.26%)</title><rect x="677.5" y="53" width="109.3" height="15.0" fill="rgb(251,222,54)" rx="2" ry="2" />
<text  x="680.49" y="63.5" >torch/autogra..</text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (182,075 us., 24.05%)</title><rect x="163.7" y="165" width="283.7" height="15.0" fill="rgb(238,162,7)" rx="2" ry="2" />
<text  x="166.71" y="175.5" >nn.Module:_OPTDecoderLayer</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (77,456 us., 10.23%)</title><rect x="818.2" y="133" width="120.7" height="15.0" fill="rgb(249,54,39)" rx="2" ry="2" />
<text  x="821.17" y="143.5" >nn.Module:_OPTD..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (898 us., 0.12%)</title><rect x="1188.6" y="197" width="1.4" height="15.0" fill="rgb(227,217,27)" rx="2" ry="2" />
<text  x="1191.60" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoder (898 us., 0.12%)</title><rect x="1188.6" y="213" width="1.4" height="15.0" fill="rgb(229,175,1)" rx="2" ry="2" />
<text  x="1191.60" y="223.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(89):__expand_mask (1,396 us., 0.18%)</title><rect x="945.2" y="213" width="2.2" height="15.0" fill="rgb(249,97,25)" rx="2" ry="2" />
<text  x="948.24" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_OPTAttention (19,864 us., 2.62%)</title><rect x="787.2" y="181" width="31.0" height="15.0" fill="rgb(217,180,11)" rx="2" ry="2" />
<text  x="790.22" y="191.5" >nn..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,396 us., 0.18%)</title><rect x="945.2" y="149" width="2.2" height="15.0" fill="rgb(240,215,22)" rx="2" ry="2" />
<text  x="948.24" y="159.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (19,864 us., 2.62%)</title><rect x="787.2" y="69" width="31.0" height="15.0" fill="rgb(245,144,40)" rx="2" ry="2" />
<text  x="790.22" y="79.5" >pr..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (4,080 us., 0.54%)</title><rect x="938.9" y="165" width="6.3" height="15.0" fill="rgb(228,68,42)" rx="2" ry="2" />
<text  x="941.88" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (17,140 us., 2.26%)</title><rect x="947.4" y="149" width="26.7" height="15.0" fill="rgb(233,206,7)" rx="2" ry="2" />
<text  x="950.41" y="159.5" >n..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (182,075 us., 24.05%)</title><rect x="163.7" y="69" width="283.7" height="15.0" fill="rgb(217,34,0)" rx="2" ry="2" />
<text  x="166.71" y="79.5" >torch/autograd/grad_mode.py(27):_decor..</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (597 us., 0.08%)</title><rect x="1083.6" y="149" width="0.9" height="15.0" fill="rgb(235,205,27)" rx="2" ry="2" />
<text  x="1086.61" y="159.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(157):__shape (19,864 us., 2.62%)</title><rect x="787.2" y="213" width="31.0" height="15.0" fill="rgb(239,193,19)" rx="2" ry="2" />
<text  x="790.22" y="223.5" >tr..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (22,326 us., 2.95%)</title><rect x="1048.5" y="69" width="34.8" height="15.0" fill="rgb(223,99,4)" rx="2" ry="2" />
<text  x="1051.49" y="79.5" >pr..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,706 us., 0.23%)</title><rect x="671.3" y="117" width="2.7" height="15.0" fill="rgb(225,147,27)" rx="2" ry="2" />
<text  x="674.33" y="127.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (4,080 us., 0.54%)</title><rect x="938.9" y="197" width="6.3" height="15.0" fill="rgb(248,159,10)" rx="2" ry="2" />
<text  x="941.88" y="207.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(160):_forward (19,864 us., 2.62%)</title><rect x="787.2" y="197" width="31.0" height="15.0" fill="rgb(246,9,2)" rx="2" ry="2" />
<text  x="790.22" y="207.5" >tr..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (54,878 us., 7.25%)</title><rect x="1084.5" y="165" width="85.6" height="15.0" fill="rgb(241,108,15)" rx="2" ry="2" />
<text  x="1087.54" y="175.5" >transforme..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (989 us., 0.13%)</title><rect x="675.9" y="85" width="1.6" height="15.0" fill="rgb(213,108,24)" rx="2" ry="2" />
<text  x="678.94" y="95.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (22,326 us., 2.95%)</title><rect x="1048.5" y="165" width="34.8" height="15.0" fill="rgb(212,200,45)" rx="2" ry="2" />
<text  x="1051.49" y="175.5" >tr..</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (301 us., 0.04%)</title><rect x="786.8" y="133" width="0.4" height="15.0" fill="rgb(213,210,5)" rx="2" ry="2" />
<text  x="789.75" y="143.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoder (11,501 us., 1.52%)</title><rect x="1170.1" y="181" width="17.9" height="15.0" fill="rgb(206,108,54)" rx="2" ry="2" />
<text  x="1173.05" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoder (200 us., 0.03%)</title><rect x="1048.2" y="197" width="0.3" height="15.0" fill="rgb(214,65,24)" rx="2" ry="2" />
<text  x="1051.18" y="207.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (207 us., 0.03%)</title><rect x="1083.3" y="149" width="0.3" height="15.0" fill="rgb(210,224,9)" rx="2" ry="2" />
<text  x="1086.28" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoder (597 us., 0.08%)</title><rect x="1083.6" y="181" width="0.9" height="15.0" fill="rgb(214,104,16)" rx="2" ry="2" />
<text  x="1086.61" y="191.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(533):__prepare_decoder_attention_mask (207 us., 0.03%)</title><rect x="1083.3" y="165" width="0.3" height="15.0" fill="rgb(245,206,16)" rx="2" ry="2" />
<text  x="1086.28" y="175.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (22,326 us., 2.95%)</title><rect x="1048.5" y="133" width="34.8" height="15.0" fill="rgb(222,203,10)" rx="2" ry="2" />
<text  x="1051.49" y="143.5" >tr..</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (989 us., 0.13%)</title><rect x="675.9" y="101" width="1.6" height="15.0" fill="rgb(208,177,51)" rx="2" ry="2" />
<text  x="678.94" y="111.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (77,255 us., 10.20%)</title><rect x="550.9" y="69" width="120.4" height="15.0" fill="rgb(248,95,39)" rx="2" ry="2" />
<text  x="553.94" y="79.5" >torch/autograd/..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(160):_forward (70,117 us., 9.26%)</title><rect x="677.5" y="197" width="109.3" height="15.0" fill="rgb(246,177,50)" rx="2" ry="2" />
<text  x="680.49" y="207.5" >transformers/..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (98,639 us., 13.03%)</title><rect x="10.0" y="101" width="153.7" height="15.0" fill="rgb(253,18,53)" rx="2" ry="2" />
<text  x="13.00" y="111.5" >nn.Module:_OPTDecoder</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,706 us., 0.23%)</title><rect x="671.3" y="149" width="2.7" height="15.0" fill="rgb(226,98,10)" rx="2" ry="2" />
<text  x="674.33" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_LayerNorm (17,857 us., 2.36%)</title><rect x="947.4" y="181" width="27.8" height="15.0" fill="rgb(218,158,36)" rx="2" ry="2" />
<text  x="950.41" y="191.5" >n..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(533):__prepare_decoder_attention_mask (400 us., 0.05%)</title><rect x="1188.0" y="229" width="0.6" height="15.0" fill="rgb(216,153,10)" rx="2" ry="2" />
<text  x="1190.98" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (70,117 us., 9.26%)</title><rect x="677.5" y="85" width="109.3" height="15.0" fill="rgb(206,162,9)" rx="2" ry="2" />
<text  x="680.49" y="95.5" >nn.Module:_OP..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (77,255 us., 10.20%)</title><rect x="550.9" y="85" width="120.4" height="15.0" fill="rgb(208,171,12)" rx="2" ry="2" />
<text  x="553.94" y="95.5" >profiling/utils..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (11,501 us., 1.52%)</title><rect x="1170.1" y="197" width="17.9" height="15.0" fill="rgb(223,227,16)" rx="2" ry="2" />
<text  x="1173.05" y="207.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (200 us., 0.03%)</title><rect x="1048.2" y="149" width="0.3" height="15.0" fill="rgb(216,149,1)" rx="2" ry="2" />
<text  x="1051.18" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (207 us., 0.03%)</title><rect x="1083.3" y="101" width="0.3" height="15.0" fill="rgb(245,49,0)" rx="2" ry="2" />
<text  x="1086.28" y="111.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,396 us., 0.18%)</title><rect x="945.2" y="101" width="2.2" height="15.0" fill="rgb(254,73,0)" rx="2" ry="2" />
<text  x="948.24" y="111.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (70,117 us., 9.26%)</title><rect x="677.5" y="69" width="109.3" height="15.0" fill="rgb(215,0,21)" rx="2" ry="2" />
<text  x="680.49" y="79.5" >profiling/uti..</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (22,326 us., 2.95%)</title><rect x="1048.5" y="85" width="34.8" height="15.0" fill="rgb(221,55,30)" rx="2" ry="2" />
<text  x="1051.49" y="95.5" >nn..</text>
</g>
<g >
<title>all (757,218 us., 100%)</title><rect x="10.0" y="245" width="1180.0" height="15.0" fill="rgb(253,220,48)" rx="2" ry="2" />
<text  x="13.00" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (898 us., 0.12%)</title><rect x="1188.6" y="181" width="1.4" height="15.0" fill="rgb(242,71,38)" rx="2" ry="2" />
<text  x="1191.60" y="191.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (182,075 us., 24.05%)</title><rect x="163.7" y="85" width="283.7" height="15.0" fill="rgb(216,107,26)" rx="2" ry="2" />
<text  x="166.71" y="95.5" >profiling/utils.py(18):_profile_model</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,258 us., 0.17%)</title><rect x="674.0" y="133" width="1.9" height="15.0" fill="rgb(223,89,38)" rx="2" ry="2" />
<text  x="676.98" y="143.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (182,075 us., 24.05%)</title><rect x="163.7" y="117" width="283.7" height="15.0" fill="rgb(209,161,3)" rx="2" ry="2" />
<text  x="166.71" y="127.5" >transformers/models/opt/modeling_opt.p..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (54,878 us., 7.25%)</title><rect x="1084.5" y="197" width="85.6" height="15.0" fill="rgb(236,38,4)" rx="2" ry="2" />
<text  x="1087.54" y="207.5" >transforme..</text>
</g>
<g >
<title>&lt;built-in_method_rsub_of_type_object_at_0x7f3e639a39c0&gt; (207 us., 0.03%)</title><rect x="1083.3" y="229" width="0.3" height="15.0" fill="rgb(235,135,13)" rx="2" ry="2" />
<text  x="1086.28" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (200 us., 0.03%)</title><rect x="1048.2" y="165" width="0.3" height="15.0" fill="rgb(209,222,45)" rx="2" ry="2" />
<text  x="1051.18" y="175.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (301 us., 0.04%)</title><rect x="786.8" y="117" width="0.4" height="15.0" fill="rgb(237,162,4)" rx="2" ry="2" />
<text  x="789.75" y="127.5" ></text>
</g>
<g >
<title>torch/nn/modules/normalization.py(188):_forward (17,857 us., 2.36%)</title><rect x="947.4" y="197" width="27.8" height="15.0" fill="rgb(239,82,22)" rx="2" ry="2" />
<text  x="950.41" y="207.5" >t..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (989 us., 0.13%)</title><rect x="675.9" y="117" width="1.6" height="15.0" fill="rgb(211,209,35)" rx="2" ry="2" />
<text  x="678.94" y="127.5" ></text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (17,140 us., 2.26%)</title><rect x="947.4" y="85" width="26.7" height="15.0" fill="rgb(223,180,2)" rx="2" ry="2" />
<text  x="950.41" y="95.5" >n..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (182,075 us., 24.05%)</title><rect x="163.7" y="133" width="283.7" height="15.0" fill="rgb(245,181,12)" rx="2" ry="2" />
<text  x="166.71" y="143.5" >nn.Module:_OPTDecoder</text>
</g>
<g >
<title>torch/nn/modules/sparse.py(157):_forward (2,247 us., 0.30%)</title><rect x="674.0" y="197" width="3.5" height="15.0" fill="rgb(212,172,22)" rx="2" ry="2" />
<text  x="676.98" y="207.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (17,140 us., 2.26%)</title><rect x="947.4" y="101" width="26.7" height="15.0" fill="rgb(234,92,10)" rx="2" ry="2" />
<text  x="950.41" y="111.5" >t..</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (1,396 us., 0.18%)</title><rect x="945.2" y="133" width="2.2" height="15.0" fill="rgb(246,199,41)" rx="2" ry="2" />
<text  x="948.24" y="143.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(160):_forward (54,878 us., 7.25%)</title><rect x="1084.5" y="229" width="85.6" height="15.0" fill="rgb(241,108,37)" rx="2" ry="2" />
<text  x="1087.54" y="239.5" >transforme..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (898 us., 0.12%)</title><rect x="1188.6" y="165" width="1.4" height="15.0" fill="rgb(234,171,41)" rx="2" ry="2" />
<text  x="1191.60" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (98,639 us., 13.03%)</title><rect x="10.0" y="69" width="153.7" height="15.0" fill="rgb(216,194,0)" rx="2" ry="2" />
<text  x="13.00" y="79.5" >nn.Module:_OPTForCa..</text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (70,117 us., 9.26%)</title><rect x="677.5" y="149" width="109.3" height="15.0" fill="rgb(252,101,30)" rx="2" ry="2" />
<text  x="680.49" y="159.5" >nn.Module:_OP..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (182,075 us., 24.05%)</title><rect x="163.7" y="149" width="283.7" height="15.0" fill="rgb(249,109,21)" rx="2" ry="2" />
<text  x="166.71" y="159.5" >transformers/models/opt/modeling_opt.p..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (77,456 us., 10.23%)</title><rect x="818.2" y="149" width="120.7" height="15.0" fill="rgb(238,220,26)" rx="2" ry="2" />
<text  x="821.17" y="159.5" >transformers/mo..</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (11,501 us., 1.52%)</title><rect x="1170.1" y="149" width="17.9" height="15.0" fill="rgb(249,190,50)" rx="2" ry="2" />
<text  x="1173.05" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (46,808 us., 6.18%)</title><rect x="975.2" y="165" width="73.0" height="15.0" fill="rgb(213,175,26)" rx="2" ry="2" />
<text  x="978.24" y="175.5" >nn.Modul..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (70,117 us., 9.26%)</title><rect x="677.5" y="165" width="109.3" height="15.0" fill="rgb(236,111,27)" rx="2" ry="2" />
<text  x="680.49" y="175.5" >transformers/..</text>
</g>
<g >
<title>torch/nn/functional.py(2099):_embedding (2,247 us., 0.30%)</title><rect x="674.0" y="213" width="3.5" height="15.0" fill="rgb(212,139,22)" rx="2" ry="2" />
<text  x="676.98" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoder (1,258 us., 0.17%)</title><rect x="674.0" y="149" width="1.9" height="15.0" fill="rgb(210,113,51)" rx="2" ry="2" />
<text  x="676.98" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoder (1,396 us., 0.18%)</title><rect x="945.2" y="165" width="2.2" height="15.0" fill="rgb(219,199,29)" rx="2" ry="2" />
<text  x="948.24" y="175.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (19,864 us., 2.62%)</title><rect x="787.2" y="165" width="31.0" height="15.0" fill="rgb(210,87,20)" rx="2" ry="2" />
<text  x="790.22" y="175.5" >tr..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (77,456 us., 10.23%)</title><rect x="818.2" y="181" width="120.7" height="15.0" fill="rgb(221,218,40)" rx="2" ry="2" />
<text  x="821.17" y="191.5" >transformers/mo..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (207 us., 0.03%)</title><rect x="1083.3" y="133" width="0.3" height="15.0" fill="rgb(209,14,45)" rx="2" ry="2" />
<text  x="1086.28" y="143.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoder (17,140 us., 2.26%)</title><rect x="947.4" y="117" width="26.7" height="15.0" fill="rgb(234,222,28)" rx="2" ry="2" />
<text  x="950.41" y="127.5" >n..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(533):__prepare_decoder_attention_mask (1,396 us., 0.18%)</title><rect x="945.2" y="197" width="2.2" height="15.0" fill="rgb(254,148,44)" rx="2" ry="2" />
<text  x="948.24" y="207.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,258 us., 0.17%)</title><rect x="674.0" y="101" width="1.9" height="15.0" fill="rgb(248,37,25)" rx="2" ry="2" />
<text  x="676.98" y="111.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (898 us., 0.12%)</title><rect x="1188.6" y="149" width="1.4" height="15.0" fill="rgb(205,64,46)" rx="2" ry="2" />
<text  x="1191.60" y="159.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (77,255 us., 10.20%)</title><rect x="550.9" y="117" width="120.4" height="15.0" fill="rgb(230,34,42)" rx="2" ry="2" />
<text  x="553.94" y="127.5" >transformers/mo..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(160):_forward (77,255 us., 10.20%)</title><rect x="550.9" y="213" width="120.4" height="15.0" fill="rgb(217,53,53)" rx="2" ry="2" />
<text  x="553.94" y="223.5" >transformers/mo..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (66,410 us., 8.77%)</title><rect x="447.4" y="133" width="103.5" height="15.0" fill="rgb(212,112,33)" rx="2" ry="2" />
<text  x="450.45" y="143.5" >torch/autogr..</text>
</g>
</g>
</svg>
