<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="326" onload="init(evt)" viewBox="0 0 1200 326" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="326.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >CUDA Time</text>
<text id="details" x="10.00" y="309" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="309" > </text>
<g id="frames">
<g >
<title>torch_int/nn/linear.py(92):_forward (11,897 us., 2.16%)</title><rect x="730.0" y="245" width="25.5" height="15.0" fill="rgb(212,40,50)" rx="2" ry="2" />
<text  x="732.97" y="255.5" >t..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (320 us., 0.06%)</title><rect x="93.4" y="133" width="0.7" height="15.0" fill="rgb(230,210,44)" rx="2" ry="2" />
<text  x="96.43" y="143.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (46,689 us., 8.48%)</title><rect x="773.6" y="181" width="100.2" height="15.0" fill="rgb(221,75,53)" rx="2" ry="2" />
<text  x="776.64" y="191.5" >nn.Module:_I..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (199 us., 0.04%)</title><rect x="874.6" y="197" width="0.4" height="15.0" fill="rgb(238,107,28)" rx="2" ry="2" />
<text  x="877.62" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (4,788 us., 0.87%)</title><rect x="719.7" y="101" width="10.3" height="15.0" fill="rgb(237,99,52)" rx="2" ry="2" />
<text  x="722.71" y="111.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (39,471 us., 7.17%)</title><rect x="94.1" y="85" width="84.6" height="15.0" fill="rgb(254,84,36)" rx="2" ry="2" />
<text  x="97.11" y="95.5" >torch/aut..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (603 us., 0.11%)</title><rect x="180.4" y="213" width="1.3" height="15.0" fill="rgb(218,146,13)" rx="2" ry="2" />
<text  x="183.43" y="223.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (46,689 us., 8.48%)</title><rect x="773.6" y="101" width="100.2" height="15.0" fill="rgb(239,184,15)" rx="2" ry="2" />
<text  x="776.64" y="111.5" >profiling/ut..</text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (145,600 us., 26.46%)</title><rect x="876.5" y="213" width="312.2" height="15.0" fill="rgb(253,133,46)" rx="2" ry="2" />
<text  x="879.51" y="223.5" >torch_int/nn/opt.py(183):_forward</text>
</g>
<g >
<title>torch/nn/functional.py(2488):_layer_norm (507 us., 0.09%)</title><rect x="708.4" y="245" width="1.1" height="15.0" fill="rgb(249,24,20)" rx="2" ry="2" />
<text  x="711.37" y="255.5" ></text>
</g>
<g >
<title>&lt;built-in_function_linear&gt; (38,480 us., 6.99%)</title><rect x="10.0" y="261" width="82.5" height="15.0" fill="rgb(233,6,13)" rx="2" ry="2" />
<text  x="13.00" y="271.5" >&lt;built-in..</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (603 us., 0.11%)</title><rect x="180.4" y="181" width="1.3" height="15.0" fill="rgb(222,143,49)" rx="2" ry="2" />
<text  x="183.43" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (46,689 us., 8.48%)</title><rect x="773.6" y="149" width="100.2" height="15.0" fill="rgb(241,193,8)" rx="2" ry="2" />
<text  x="776.64" y="159.5" >nn.Module:_I..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (597 us., 0.11%)</title><rect x="1188.7" y="213" width="1.3" height="15.0" fill="rgb(228,77,47)" rx="2" ry="2" />
<text  x="1191.72" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (145,600 us., 26.46%)</title><rect x="876.5" y="165" width="312.2" height="15.0" fill="rgb(230,47,4)" rx="2" ry="2" />
<text  x="879.51" y="175.5" >nn.Module:_Int8OPTDecoder</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (320 us., 0.06%)</title><rect x="93.4" y="197" width="0.7" height="15.0" fill="rgb(226,17,43)" rx="2" ry="2" />
<text  x="96.43" y="207.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (426 us., 0.08%)</title><rect x="92.5" y="181" width="0.9" height="15.0" fill="rgb(245,214,24)" rx="2" ry="2" />
<text  x="95.51" y="191.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (11,897 us., 2.16%)</title><rect x="730.0" y="149" width="25.5" height="15.0" fill="rgb(248,195,39)" rx="2" ry="2" />
<text  x="732.97" y="159.5" >t..</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (507 us., 0.09%)</title><rect x="708.4" y="197" width="1.1" height="15.0" fill="rgb(206,173,54)" rx="2" ry="2" />
<text  x="711.37" y="207.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (597 us., 0.11%)</title><rect x="1188.7" y="165" width="1.3" height="15.0" fill="rgb(247,136,51)" rx="2" ry="2" />
<text  x="1191.72" y="175.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (320 us., 0.06%)</title><rect x="93.4" y="213" width="0.7" height="15.0" fill="rgb(207,5,42)" rx="2" ry="2" />
<text  x="96.43" y="223.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (703 us., 0.13%)</title><rect x="288.4" y="181" width="1.5" height="15.0" fill="rgb(234,181,33)" rx="2" ry="2" />
<text  x="291.43" y="191.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (4,788 us., 0.87%)</title><rect x="719.7" y="53" width="10.3" height="15.0" fill="rgb(233,215,39)" rx="2" ry="2" />
<text  x="722.71" y="63.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (11,897 us., 2.16%)</title><rect x="730.0" y="197" width="25.5" height="15.0" fill="rgb(234,133,24)" rx="2" ry="2" />
<text  x="732.97" y="207.5" >t..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (39,471 us., 7.17%)</title><rect x="94.1" y="101" width="84.6" height="15.0" fill="rgb(223,125,32)" rx="2" ry="2" />
<text  x="97.11" y="111.5" >profiling..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (301 us., 0.05%)</title><rect x="705.3" y="245" width="0.6" height="15.0" fill="rgb(237,144,6)" rx="2" ry="2" />
<text  x="708.28" y="255.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (47,664 us., 8.66%)</title><rect x="181.7" y="85" width="102.2" height="15.0" fill="rgb(207,111,4)" rx="2" ry="2" />
<text  x="184.73" y="95.5" >profiling/ut..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (11,897 us., 2.16%)</title><rect x="730.0" y="85" width="25.5" height="15.0" fill="rgb(236,111,23)" rx="2" ry="2" />
<text  x="732.97" y="95.5" >t..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (426 us., 0.08%)</title><rect x="92.5" y="165" width="0.9" height="15.0" fill="rgb(224,50,44)" rx="2" ry="2" />
<text  x="95.51" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_W8A8B8O8LinearReLU (8,469 us., 1.54%)</title><rect x="755.5" y="213" width="18.1" height="15.0" fill="rgb(240,171,15)" rx="2" ry="2" />
<text  x="758.49" y="223.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (46,689 us., 8.48%)</title><rect x="773.6" y="197" width="100.2" height="15.0" fill="rgb(231,127,49)" rx="2" ry="2" />
<text  x="776.64" y="207.5" >torch_int/nn..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (4,781 us., 0.87%)</title><rect x="709.5" y="133" width="10.2" height="15.0" fill="rgb(218,223,12)" rx="2" ry="2" />
<text  x="712.46" y="143.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (2,100 us., 0.38%)</title><rect x="283.9" y="181" width="4.5" height="15.0" fill="rgb(226,191,39)" rx="2" ry="2" />
<text  x="286.93" y="191.5" ></text>
</g>
<g >
<title>&lt;built-in_method_linear_relu_a8_w8_b8_o8_of_PyCapsule_object_at_0x7f578302ee70&gt; (8,469 us., 1.54%)</title><rect x="755.5" y="261" width="18.1" height="15.0" fill="rgb(254,19,51)" rx="2" ry="2" />
<text  x="758.49" y="271.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (2,100 us., 0.38%)</title><rect x="283.9" y="213" width="4.5" height="15.0" fill="rgb(208,173,1)" rx="2" ry="2" />
<text  x="286.93" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (10,830 us., 1.97%)</title><rect x="289.9" y="101" width="23.3" height="15.0" fill="rgb(227,16,17)" rx="2" ry="2" />
<text  x="292.94" y="111.5" >n..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (1,138 us., 0.21%)</title><rect x="705.9" y="197" width="2.5" height="15.0" fill="rgb(240,31,48)" rx="2" ry="2" />
<text  x="708.93" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (11,897 us., 2.16%)</title><rect x="730.0" y="101" width="25.5" height="15.0" fill="rgb(239,126,33)" rx="2" ry="2" />
<text  x="732.97" y="111.5" >n..</text>
</g>
<g >
<title>torch/nn/functional.py(1804):_softmax (47,664 us., 8.66%)</title><rect x="181.7" y="245" width="102.2" height="15.0" fill="rgb(224,46,23)" rx="2" ry="2" />
<text  x="184.73" y="255.5" >torch/nn/fun..</text>
</g>
<g >
<title>torch_int/nn/opt.py(300):__prepare_decoder_attention_mask (273 us., 0.05%)</title><rect x="875.0" y="261" width="0.6" height="15.0" fill="rgb(220,54,25)" rx="2" ry="2" />
<text  x="878.04" y="271.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (47,664 us., 8.66%)</title><rect x="181.7" y="69" width="102.2" height="15.0" fill="rgb(212,15,30)" rx="2" ry="2" />
<text  x="184.73" y="79.5" >torch/autogr..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (320 us., 0.06%)</title><rect x="93.4" y="245" width="0.7" height="15.0" fill="rgb(227,155,0)" rx="2" ry="2" />
<text  x="96.43" y="255.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (10,830 us., 1.97%)</title><rect x="289.9" y="85" width="23.3" height="15.0" fill="rgb(221,164,45)" rx="2" ry="2" />
<text  x="292.94" y="95.5" >p..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (786 us., 0.14%)</title><rect x="178.7" y="165" width="1.7" height="15.0" fill="rgb(224,217,54)" rx="2" ry="2" />
<text  x="181.75" y="175.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (39,471 us., 7.17%)</title><rect x="94.1" y="165" width="84.6" height="15.0" fill="rgb(240,81,52)" rx="2" ry="2" />
<text  x="97.11" y="175.5" >torch_int..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (597 us., 0.11%)</title><rect x="1188.7" y="181" width="1.3" height="15.0" fill="rgb(249,166,40)" rx="2" ry="2" />
<text  x="1191.72" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (8,469 us., 1.54%)</title><rect x="755.5" y="149" width="18.1" height="15.0" fill="rgb(206,36,35)" rx="2" ry="2" />
<text  x="758.49" y="159.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (507 us., 0.09%)</title><rect x="708.4" y="165" width="1.1" height="15.0" fill="rgb(253,156,34)" rx="2" ry="2" />
<text  x="711.37" y="175.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (4,788 us., 0.87%)</title><rect x="719.7" y="37" width="10.3" height="15.0" fill="rgb(209,197,28)" rx="2" ry="2" />
<text  x="722.71" y="47.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (597 us., 0.11%)</title><rect x="1188.7" y="149" width="1.3" height="15.0" fill="rgb(231,206,52)" rx="2" ry="2" />
<text  x="1191.72" y="159.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(300):__prepare_decoder_attention_mask (1,138 us., 0.21%)</title><rect x="705.9" y="229" width="2.5" height="15.0" fill="rgb(206,209,7)" rx="2" ry="2" />
<text  x="708.93" y="239.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (10,830 us., 1.97%)</title><rect x="289.9" y="117" width="23.3" height="15.0" fill="rgb(213,168,34)" rx="2" ry="2" />
<text  x="292.94" y="127.5" >t..</text>
</g>
<g >
<title>&lt;built-in_method_linear_a8_w8_b32_o32_with_scaling_of_PyCapsule_object_at_0x7f578302eed0&gt; (9,569 us., 1.74%)</title><rect x="709.5" y="261" width="20.5" height="15.0" fill="rgb(219,225,44)" rx="2" ry="2" />
<text  x="712.46" y="271.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (182,867 us., 33.23%)</title><rect x="313.2" y="149" width="392.1" height="15.0" fill="rgb(222,89,38)" rx="2" ry="2" />
<text  x="316.16" y="159.5" >nn.Module:_Int8OPTDecoder</text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (10,830 us., 1.97%)</title><rect x="289.9" y="181" width="23.3" height="15.0" fill="rgb(243,34,25)" rx="2" ry="2" />
<text  x="292.94" y="191.5" >t..</text>
</g>
<g >
<title>torch/nn/modules/normalization.py(188):_forward (507 us., 0.09%)</title><rect x="708.4" y="229" width="1.1" height="15.0" fill="rgb(218,164,38)" rx="2" ry="2" />
<text  x="711.37" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (38,480 us., 6.99%)</title><rect x="10.0" y="197" width="82.5" height="15.0" fill="rgb(217,217,53)" rx="2" ry="2" />
<text  x="13.00" y="207.5" >nn.Module..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (200 us., 0.04%)</title><rect x="874.2" y="101" width="0.4" height="15.0" fill="rgb(227,176,31)" rx="2" ry="2" />
<text  x="877.19" y="111.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (786 us., 0.14%)</title><rect x="178.7" y="197" width="1.7" height="15.0" fill="rgb(208,20,40)" rx="2" ry="2" />
<text  x="181.75" y="207.5" ></text>
</g>
<g >
<title>&lt;built-in_method_layer_norm_of_type_object_at_0x7f5877b9b9c0&gt; (507 us., 0.09%)</title><rect x="708.4" y="261" width="1.1" height="15.0" fill="rgb(206,197,52)" rx="2" ry="2" />
<text  x="711.37" y="271.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (182,867 us., 33.23%)</title><rect x="313.2" y="165" width="392.1" height="15.0" fill="rgb(244,36,0)" rx="2" ry="2" />
<text  x="316.16" y="175.5" >torch_int/nn/opt.py(321):_forward</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (10,830 us., 1.97%)</title><rect x="289.9" y="133" width="23.3" height="15.0" fill="rgb(217,203,38)" rx="2" ry="2" />
<text  x="292.94" y="143.5" >n..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (200 us., 0.04%)</title><rect x="874.2" y="117" width="0.4" height="15.0" fill="rgb(209,228,9)" rx="2" ry="2" />
<text  x="877.19" y="127.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (47,664 us., 8.66%)</title><rect x="181.7" y="165" width="102.2" height="15.0" fill="rgb(228,130,13)" rx="2" ry="2" />
<text  x="184.73" y="175.5" >nn.Module:_I..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (4,788 us., 0.87%)</title><rect x="719.7" y="69" width="10.3" height="15.0" fill="rgb(247,168,9)" rx="2" ry="2" />
<text  x="722.71" y="79.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (703 us., 0.13%)</title><rect x="288.4" y="229" width="1.5" height="15.0" fill="rgb(232,85,47)" rx="2" ry="2" />
<text  x="291.43" y="239.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (4,788 us., 0.87%)</title><rect x="719.7" y="149" width="10.3" height="15.0" fill="rgb(211,125,24)" rx="2" ry="2" />
<text  x="722.71" y="159.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (182,867 us., 33.23%)</title><rect x="313.2" y="85" width="392.1" height="15.0" fill="rgb(248,106,43)" rx="2" ry="2" />
<text  x="316.16" y="95.5" >torch/autograd/grad_mode.py(27):_decorate_context</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (46,689 us., 8.48%)</title><rect x="773.6" y="117" width="100.2" height="15.0" fill="rgb(221,70,6)" rx="2" ry="2" />
<text  x="776.64" y="127.5" >nn.Module:_I..</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (4,788 us., 0.87%)</title><rect x="719.7" y="117" width="10.3" height="15.0" fill="rgb(234,227,10)" rx="2" ry="2" />
<text  x="722.71" y="127.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (10,830 us., 1.97%)</title><rect x="289.9" y="213" width="23.3" height="15.0" fill="rgb(224,60,17)" rx="2" ry="2" />
<text  x="292.94" y="223.5" >t..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (426 us., 0.08%)</title><rect x="92.5" y="229" width="0.9" height="15.0" fill="rgb(236,72,40)" rx="2" ry="2" />
<text  x="95.51" y="239.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (199 us., 0.04%)</title><rect x="874.6" y="213" width="0.4" height="15.0" fill="rgb(250,8,50)" rx="2" ry="2" />
<text  x="877.62" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (200 us., 0.04%)</title><rect x="873.8" y="197" width="0.4" height="15.0" fill="rgb(253,6,54)" rx="2" ry="2" />
<text  x="876.76" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (320 us., 0.06%)</title><rect x="93.4" y="229" width="0.7" height="15.0" fill="rgb(223,130,16)" rx="2" ry="2" />
<text  x="96.43" y="239.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(43):__shape (10,830 us., 1.97%)</title><rect x="289.9" y="245" width="23.3" height="15.0" fill="rgb(227,51,0)" rx="2" ry="2" />
<text  x="292.94" y="255.5" >t..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (145,600 us., 26.46%)</title><rect x="876.5" y="117" width="312.2" height="15.0" fill="rgb(247,209,19)" rx="2" ry="2" />
<text  x="879.51" y="127.5" >profiling/utils.py(18):_profile_model</text>
</g>
<g >
<title>torch_int/functional/fused.py(24):_dq_add_layernorm_q_cpp (39,471 us., 7.17%)</title><rect x="94.1" y="245" width="84.6" height="15.0" fill="rgb(219,23,33)" rx="2" ry="2" />
<text  x="97.11" y="255.5" >torch_int..</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (200 us., 0.04%)</title><rect x="873.8" y="245" width="0.4" height="15.0" fill="rgb(218,131,16)" rx="2" ry="2" />
<text  x="876.76" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (46,689 us., 8.48%)</title><rect x="773.6" y="213" width="100.2" height="15.0" fill="rgb(229,137,20)" rx="2" ry="2" />
<text  x="776.64" y="223.5" >nn.Module:_I..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (11,897 us., 2.16%)</title><rect x="730.0" y="181" width="25.5" height="15.0" fill="rgb(223,176,52)" rx="2" ry="2" />
<text  x="732.97" y="191.5" >t..</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (301 us., 0.05%)</title><rect x="705.3" y="213" width="0.6" height="15.0" fill="rgb(235,213,40)" rx="2" ry="2" />
<text  x="708.28" y="223.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (2,100 us., 0.38%)</title><rect x="283.9" y="149" width="4.5" height="15.0" fill="rgb(210,170,39)" rx="2" ry="2" />
<text  x="286.93" y="159.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (182,867 us., 33.23%)</title><rect x="313.2" y="245" width="392.1" height="15.0" fill="rgb(242,106,6)" rx="2" ry="2" />
<text  x="316.16" y="255.5" >torch_int/nn/opt.py(46):_forward</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (1,138 us., 0.21%)</title><rect x="705.9" y="213" width="2.5" height="15.0" fill="rgb(214,111,19)" rx="2" ry="2" />
<text  x="708.93" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (507 us., 0.09%)</title><rect x="708.4" y="181" width="1.1" height="15.0" fill="rgb(214,135,27)" rx="2" ry="2" />
<text  x="711.37" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (11,897 us., 2.16%)</title><rect x="730.0" y="69" width="25.5" height="15.0" fill="rgb(230,19,39)" rx="2" ry="2" />
<text  x="732.97" y="79.5" >n..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (39,471 us., 7.17%)</title><rect x="94.1" y="117" width="84.6" height="15.0" fill="rgb(208,95,44)" rx="2" ry="2" />
<text  x="97.11" y="127.5" >nn.Module..</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (8,469 us., 1.54%)</title><rect x="755.5" y="165" width="18.1" height="15.0" fill="rgb(252,149,54)" rx="2" ry="2" />
<text  x="758.49" y="175.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (182,867 us., 33.23%)</title><rect x="313.2" y="101" width="392.1" height="15.0" fill="rgb(227,221,20)" rx="2" ry="2" />
<text  x="316.16" y="111.5" >profiling/utils.py(18):_profile_model</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (273 us., 0.05%)</title><rect x="875.0" y="197" width="0.6" height="15.0" fill="rgb(210,164,22)" rx="2" ry="2" />
<text  x="878.04" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (1,138 us., 0.21%)</title><rect x="705.9" y="165" width="2.5" height="15.0" fill="rgb(223,213,47)" rx="2" ry="2" />
<text  x="708.93" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_LayerNorm (507 us., 0.09%)</title><rect x="708.4" y="213" width="1.1" height="15.0" fill="rgb(240,162,46)" rx="2" ry="2" />
<text  x="711.37" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (603 us., 0.11%)</title><rect x="180.4" y="165" width="1.3" height="15.0" fill="rgb(251,171,21)" rx="2" ry="2" />
<text  x="183.43" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (39,471 us., 7.17%)</title><rect x="94.1" y="181" width="84.6" height="15.0" fill="rgb(242,164,33)" rx="2" ry="2" />
<text  x="97.11" y="191.5" >nn.Module..</text>
</g>
<g >
<title>&lt;built-in_method_ones_of_type_object_at_0x7f5877b9b9c0&gt; (200 us., 0.04%)</title><rect x="873.8" y="261" width="0.4" height="15.0" fill="rgb(235,7,43)" rx="2" ry="2" />
<text  x="876.76" y="271.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (8,469 us., 1.54%)</title><rect x="755.5" y="229" width="18.1" height="15.0" fill="rgb(246,199,14)" rx="2" ry="2" />
<text  x="758.49" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_DQ_Add_LayerNorm_Q (39,471 us., 7.17%)</title><rect x="94.1" y="213" width="84.6" height="15.0" fill="rgb(224,1,4)" rx="2" ry="2" />
<text  x="97.11" y="223.5" >nn.Module..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (46,689 us., 8.48%)</title><rect x="773.6" y="229" width="100.2" height="15.0" fill="rgb(241,64,14)" rx="2" ry="2" />
<text  x="776.64" y="239.5" >torch/autogr..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (703 us., 0.13%)</title><rect x="288.4" y="197" width="1.5" height="15.0" fill="rgb(232,200,49)" rx="2" ry="2" />
<text  x="291.43" y="207.5" ></text>
</g>
<g >
<title>torch_int/nn/linear.py(62):_forward (9,569 us., 1.74%)</title><rect x="709.5" y="245" width="20.5" height="15.0" fill="rgb(244,226,51)" rx="2" ry="2" />
<text  x="712.46" y="255.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (301 us., 0.05%)</title><rect x="705.3" y="149" width="0.6" height="15.0" fill="rgb(217,181,44)" rx="2" ry="2" />
<text  x="708.28" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (182,867 us., 33.23%)</title><rect x="313.2" y="181" width="392.1" height="15.0" fill="rgb(207,84,15)" rx="2" ry="2" />
<text  x="316.16" y="191.5" >nn.Module:_Int8OPTDecoderLayer</text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (182,867 us., 33.23%)</title><rect x="313.2" y="197" width="392.1" height="15.0" fill="rgb(254,164,27)" rx="2" ry="2" />
<text  x="316.16" y="207.5" >torch_int/nn/opt.py(183):_forward</text>
</g>
<g >
<title>&lt;built-in_method_encode_of_str_object_at_0x7f5783691450&gt; (245,603 us., 44.63%)</title><rect x="181.7" y="261" width="526.7" height="15.0" fill="rgb(230,73,46)" rx="2" ry="2" />
<text  x="184.73" y="271.5" >&lt;built-in_method_encode_of_str_object_at_0x7f5783691450&gt;</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (10,830 us., 1.97%)</title><rect x="289.9" y="165" width="23.3" height="15.0" fill="rgb(249,223,52)" rx="2" ry="2" />
<text  x="292.94" y="175.5" >n..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (11,897 us., 2.16%)</title><rect x="730.0" y="53" width="25.5" height="15.0" fill="rgb(252,86,48)" rx="2" ry="2" />
<text  x="732.97" y="63.5" >p..</text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (47,664 us., 8.66%)</title><rect x="181.7" y="197" width="102.2" height="15.0" fill="rgb(225,166,47)" rx="2" ry="2" />
<text  x="184.73" y="207.5" >nn.Module:_I..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (8,469 us., 1.54%)</title><rect x="755.5" y="117" width="18.1" height="15.0" fill="rgb(220,94,22)" rx="2" ry="2" />
<text  x="758.49" y="127.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (8,469 us., 1.54%)</title><rect x="755.5" y="85" width="18.1" height="15.0" fill="rgb(215,168,49)" rx="2" ry="2" />
<text  x="758.49" y="95.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (4,788 us., 0.87%)</title><rect x="719.7" y="133" width="10.3" height="15.0" fill="rgb(218,101,5)" rx="2" ry="2" />
<text  x="722.71" y="143.5" ></text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (603 us., 0.11%)</title><rect x="180.4" y="197" width="1.3" height="15.0" fill="rgb(239,83,29)" rx="2" ry="2" />
<text  x="183.43" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (786 us., 0.14%)</title><rect x="178.7" y="181" width="1.7" height="15.0" fill="rgb(232,86,34)" rx="2" ry="2" />
<text  x="181.75" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (47,664 us., 8.66%)</title><rect x="181.7" y="101" width="102.2" height="15.0" fill="rgb(252,145,35)" rx="2" ry="2" />
<text  x="184.73" y="111.5" >nn.Module:_I..</text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (46,689 us., 8.48%)</title><rect x="773.6" y="245" width="100.2" height="15.0" fill="rgb(221,175,3)" rx="2" ry="2" />
<text  x="776.64" y="255.5" >torch_int/nn..</text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (145,600 us., 26.46%)</title><rect x="876.5" y="261" width="312.2" height="15.0" fill="rgb(243,147,6)" rx="2" ry="2" />
<text  x="879.51" y="271.5" >torch_int/nn/opt.py(46):_forward</text>
</g>
<g >
<title>&lt;built-in_method_max_of_type_object_at_0x7f5877b9b9c0&gt; (46,689 us., 8.48%)</title><rect x="773.6" y="261" width="100.2" height="15.0" fill="rgb(237,204,19)" rx="2" ry="2" />
<text  x="776.64" y="271.5" >&lt;built-in_me..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (200 us., 0.04%)</title><rect x="873.8" y="181" width="0.4" height="15.0" fill="rgb(246,64,54)" rx="2" ry="2" />
<text  x="876.76" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (301 us., 0.05%)</title><rect x="705.3" y="197" width="0.6" height="15.0" fill="rgb(240,125,28)" rx="2" ry="2" />
<text  x="708.28" y="207.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (320 us., 0.06%)</title><rect x="93.4" y="149" width="0.7" height="15.0" fill="rgb(206,116,49)" rx="2" ry="2" />
<text  x="96.43" y="159.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(300):__prepare_decoder_attention_mask (2,100 us., 0.38%)</title><rect x="283.9" y="245" width="4.5" height="15.0" fill="rgb(253,53,1)" rx="2" ry="2" />
<text  x="286.93" y="255.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (145,600 us., 26.46%)</title><rect x="876.5" y="149" width="312.2" height="15.0" fill="rgb(242,117,35)" rx="2" ry="2" />
<text  x="879.51" y="159.5" >transformers/models/opt/modeling_opt.py(84..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (9,569 us., 1.74%)</title><rect x="709.5" y="229" width="20.5" height="15.0" fill="rgb(221,199,5)" rx="2" ry="2" />
<text  x="712.46" y="239.5" ></text>
</g>
<g >
<title>torch/_tensor.py(26):_wrapped (200 us., 0.04%)</title><rect x="874.2" y="229" width="0.4" height="15.0" fill="rgb(211,118,28)" rx="2" ry="2" />
<text  x="877.19" y="239.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (273 us., 0.05%)</title><rect x="875.0" y="213" width="0.6" height="15.0" fill="rgb(213,80,4)" rx="2" ry="2" />
<text  x="878.04" y="223.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (199 us., 0.04%)</title><rect x="874.6" y="245" width="0.4" height="15.0" fill="rgb(243,51,10)" rx="2" ry="2" />
<text  x="877.62" y="255.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (703 us., 0.13%)</title><rect x="288.4" y="245" width="1.5" height="15.0" fill="rgb(254,56,11)" rx="2" ry="2" />
<text  x="291.43" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (200 us., 0.04%)</title><rect x="873.8" y="229" width="0.4" height="15.0" fill="rgb(233,16,5)" rx="2" ry="2" />
<text  x="876.76" y="239.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (4,781 us., 0.87%)</title><rect x="709.5" y="165" width="10.2" height="15.0" fill="rgb(240,164,34)" rx="2" ry="2" />
<text  x="712.46" y="175.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (10,830 us., 1.97%)</title><rect x="289.9" y="149" width="23.3" height="15.0" fill="rgb(209,216,46)" rx="2" ry="2" />
<text  x="292.94" y="159.5" >t..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (11,897 us., 2.16%)</title><rect x="730.0" y="229" width="25.5" height="15.0" fill="rgb(232,83,19)" rx="2" ry="2" />
<text  x="732.97" y="239.5" >t..</text>
</g>
<g >
<title>torch_int/nn/fused.py(13):_forward (39,471 us., 7.17%)</title><rect x="94.1" y="229" width="84.6" height="15.0" fill="rgb(226,176,2)" rx="2" ry="2" />
<text  x="97.11" y="239.5" >torch_int..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (703 us., 0.13%)</title><rect x="288.4" y="165" width="1.5" height="15.0" fill="rgb(217,19,40)" rx="2" ry="2" />
<text  x="291.43" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (145,600 us., 26.46%)</title><rect x="876.5" y="229" width="312.2" height="15.0" fill="rgb(206,136,20)" rx="2" ry="2" />
<text  x="879.51" y="239.5" >nn.Module:_Int8OPTAttention</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (200 us., 0.04%)</title><rect x="873.8" y="213" width="0.4" height="15.0" fill="rgb(215,82,53)" rx="2" ry="2" />
<text  x="876.76" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (8,469 us., 1.54%)</title><rect x="755.5" y="181" width="18.1" height="15.0" fill="rgb(233,140,25)" rx="2" ry="2" />
<text  x="758.49" y="191.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (320 us., 0.06%)</title><rect x="93.4" y="181" width="0.7" height="15.0" fill="rgb(232,201,8)" rx="2" ry="2" />
<text  x="96.43" y="191.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (4,788 us., 0.87%)</title><rect x="719.7" y="85" width="10.3" height="15.0" fill="rgb(209,224,18)" rx="2" ry="2" />
<text  x="722.71" y="95.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (200 us., 0.04%)</title><rect x="874.2" y="133" width="0.4" height="15.0" fill="rgb(234,162,23)" rx="2" ry="2" />
<text  x="877.19" y="143.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (38,480 us., 6.99%)</title><rect x="10.0" y="181" width="82.5" height="15.0" fill="rgb(233,35,32)" rx="2" ry="2" />
<text  x="13.00" y="191.5" >profiling..</text>
</g>
<g >
<title>torch/_tensor.py(637):___rsub__ (200 us., 0.04%)</title><rect x="874.2" y="245" width="0.4" height="15.0" fill="rgb(240,6,40)" rx="2" ry="2" />
<text  x="877.19" y="255.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (412 us., 0.07%)</title><rect x="875.6" y="261" width="0.9" height="15.0" fill="rgb(231,45,5)" rx="2" ry="2" />
<text  x="878.63" y="271.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (199 us., 0.04%)</title><rect x="874.6" y="165" width="0.4" height="15.0" fill="rgb(228,12,7)" rx="2" ry="2" />
<text  x="877.62" y="175.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (603 us., 0.11%)</title><rect x="180.4" y="117" width="1.3" height="15.0" fill="rgb(235,3,4)" rx="2" ry="2" />
<text  x="183.43" y="127.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (145,600 us., 26.46%)</title><rect x="876.5" y="181" width="312.2" height="15.0" fill="rgb(217,3,29)" rx="2" ry="2" />
<text  x="879.51" y="191.5" >torch_int/nn/opt.py(321):_forward</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (597 us., 0.11%)</title><rect x="1188.7" y="229" width="1.3" height="15.0" fill="rgb(240,174,20)" rx="2" ry="2" />
<text  x="1191.72" y="239.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (145,600 us., 26.46%)</title><rect x="876.5" y="101" width="312.2" height="15.0" fill="rgb(235,208,54)" rx="2" ry="2" />
<text  x="879.51" y="111.5" >torch/autograd/grad_mode.py(27):_decorate_..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (4,781 us., 0.87%)</title><rect x="709.5" y="101" width="10.2" height="15.0" fill="rgb(245,71,44)" rx="2" ry="2" />
<text  x="712.46" y="111.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (273 us., 0.05%)</title><rect x="875.0" y="165" width="0.6" height="15.0" fill="rgb(238,36,37)" rx="2" ry="2" />
<text  x="878.04" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (507 us., 0.09%)</title><rect x="708.4" y="149" width="1.1" height="15.0" fill="rgb(227,21,28)" rx="2" ry="2" />
<text  x="711.37" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (182,867 us., 33.23%)</title><rect x="313.2" y="213" width="392.1" height="15.0" fill="rgb(241,144,10)" rx="2" ry="2" />
<text  x="316.16" y="223.5" >nn.Module:_Int8OPTAttention</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (597 us., 0.11%)</title><rect x="1188.7" y="197" width="1.3" height="15.0" fill="rgb(238,0,41)" rx="2" ry="2" />
<text  x="1191.72" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (145,600 us., 26.46%)</title><rect x="876.5" y="133" width="312.2" height="15.0" fill="rgb(224,163,17)" rx="2" ry="2" />
<text  x="879.51" y="143.5" >nn.Module:_Int8OPTForCausalLM</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (4,781 us., 0.87%)</title><rect x="709.5" y="85" width="10.2" height="15.0" fill="rgb(244,153,40)" rx="2" ry="2" />
<text  x="712.46" y="95.5" ></text>
</g>
<g >
<title>torch_int/nn/linear.py(122):_forward (8,469 us., 1.54%)</title><rect x="755.5" y="245" width="18.1" height="15.0" fill="rgb(219,70,34)" rx="2" ry="2" />
<text  x="758.49" y="255.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(300):__prepare_decoder_attention_mask (200 us., 0.04%)</title><rect x="874.2" y="197" width="0.4" height="15.0" fill="rgb(251,72,30)" rx="2" ry="2" />
<text  x="877.19" y="207.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (39,471 us., 7.17%)</title><rect x="94.1" y="197" width="84.6" height="15.0" fill="rgb(236,122,12)" rx="2" ry="2" />
<text  x="97.11" y="207.5" >torch_int..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (603 us., 0.11%)</title><rect x="180.4" y="101" width="1.3" height="15.0" fill="rgb(247,65,34)" rx="2" ry="2" />
<text  x="183.43" y="111.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (603 us., 0.11%)</title><rect x="180.4" y="133" width="1.3" height="15.0" fill="rgb(218,144,30)" rx="2" ry="2" />
<text  x="183.43" y="143.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (200 us., 0.04%)</title><rect x="873.8" y="165" width="0.4" height="15.0" fill="rgb(214,124,26)" rx="2" ry="2" />
<text  x="876.76" y="175.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (301 us., 0.05%)</title><rect x="705.3" y="133" width="0.6" height="15.0" fill="rgb(234,19,0)" rx="2" ry="2" />
<text  x="708.28" y="143.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (273 us., 0.05%)</title><rect x="875.0" y="229" width="0.6" height="15.0" fill="rgb(240,193,6)" rx="2" ry="2" />
<text  x="878.04" y="239.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (4,788 us., 0.87%)</title><rect x="719.7" y="197" width="10.3" height="15.0" fill="rgb(235,65,15)" rx="2" ry="2" />
<text  x="722.71" y="207.5" ></text>
</g>
<g >
<title>&lt;built-in_method_linear_a8_w8_b8_o8_of_PyCapsule_object_at_0x7f578302ef00&gt; (11,897 us., 2.16%)</title><rect x="730.0" y="261" width="25.5" height="15.0" fill="rgb(209,179,25)" rx="2" ry="2" />
<text  x="732.97" y="271.5" >&lt;..</text>
</g>
<g >
<title>nn.Module:_W8A8B32O32LinearWithScaling (9,569 us., 1.74%)</title><rect x="709.5" y="213" width="20.5" height="15.0" fill="rgb(242,62,46)" rx="2" ry="2" />
<text  x="712.46" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (11,897 us., 2.16%)</title><rect x="730.0" y="165" width="25.5" height="15.0" fill="rgb(248,188,50)" rx="2" ry="2" />
<text  x="732.97" y="175.5" >n..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (4,788 us., 0.87%)</title><rect x="719.7" y="181" width="10.3" height="15.0" fill="rgb(252,103,9)" rx="2" ry="2" />
<text  x="722.71" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_W8A8B8O8Linear (11,897 us., 2.16%)</title><rect x="730.0" y="213" width="25.5" height="15.0" fill="rgb(235,59,13)" rx="2" ry="2" />
<text  x="732.97" y="223.5" >n..</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (426 us., 0.08%)</title><rect x="92.5" y="245" width="0.9" height="15.0" fill="rgb(226,217,29)" rx="2" ry="2" />
<text  x="95.51" y="255.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (412 us., 0.07%)</title><rect x="875.6" y="181" width="0.9" height="15.0" fill="rgb(248,98,47)" rx="2" ry="2" />
<text  x="878.63" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Embedding (786 us., 0.14%)</title><rect x="178.7" y="213" width="1.7" height="15.0" fill="rgb(223,30,17)" rx="2" ry="2" />
<text  x="181.75" y="223.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (786 us., 0.14%)</title><rect x="178.7" y="133" width="1.7" height="15.0" fill="rgb(229,34,22)" rx="2" ry="2" />
<text  x="181.75" y="143.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (273 us., 0.05%)</title><rect x="875.0" y="245" width="0.6" height="15.0" fill="rgb(247,112,3)" rx="2" ry="2" />
<text  x="878.04" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (4,781 us., 0.87%)</title><rect x="709.5" y="181" width="10.2" height="15.0" fill="rgb(249,129,48)" rx="2" ry="2" />
<text  x="712.46" y="191.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (200 us., 0.04%)</title><rect x="874.2" y="149" width="0.4" height="15.0" fill="rgb(249,51,53)" rx="2" ry="2" />
<text  x="877.19" y="159.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (8,469 us., 1.54%)</title><rect x="755.5" y="101" width="18.1" height="15.0" fill="rgb(239,151,39)" rx="2" ry="2" />
<text  x="758.49" y="111.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (786 us., 0.14%)</title><rect x="178.7" y="149" width="1.7" height="15.0" fill="rgb(242,126,21)" rx="2" ry="2" />
<text  x="181.75" y="159.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (2,100 us., 0.38%)</title><rect x="283.9" y="229" width="4.5" height="15.0" fill="rgb(209,92,2)" rx="2" ry="2" />
<text  x="286.93" y="239.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (182,867 us., 33.23%)</title><rect x="313.2" y="229" width="392.1" height="15.0" fill="rgb(249,87,17)" rx="2" ry="2" />
<text  x="316.16" y="239.5" >torch/autograd/grad_mode.py(24):_decorate_context</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (320 us., 0.06%)</title><rect x="93.4" y="165" width="0.7" height="15.0" fill="rgb(207,193,4)" rx="2" ry="2" />
<text  x="96.43" y="175.5" ></text>
</g>
<g >
<title>&lt;built-in_method_add_of_type_object_at_0x7f5877b9b9c0&gt; (426 us., 0.08%)</title><rect x="92.5" y="261" width="0.9" height="15.0" fill="rgb(243,111,34)" rx="2" ry="2" />
<text  x="95.51" y="271.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (301 us., 0.05%)</title><rect x="705.3" y="165" width="0.6" height="15.0" fill="rgb(236,216,10)" rx="2" ry="2" />
<text  x="708.28" y="175.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (273 us., 0.05%)</title><rect x="875.0" y="181" width="0.6" height="15.0" fill="rgb(228,86,22)" rx="2" ry="2" />
<text  x="878.04" y="191.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (11,897 us., 2.16%)</title><rect x="730.0" y="117" width="25.5" height="15.0" fill="rgb(254,70,33)" rx="2" ry="2" />
<text  x="732.97" y="127.5" >t..</text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (47,664 us., 8.66%)</title><rect x="181.7" y="181" width="102.2" height="15.0" fill="rgb(229,155,15)" rx="2" ry="2" />
<text  x="184.73" y="191.5" >torch_int/nn..</text>
</g>
<g >
<title>&lt;built-in_method_dq_add_layernorm_q_of_PyCapsule_object_at_0x7f578302ef30&gt; (39,471 us., 7.17%)</title><rect x="94.1" y="261" width="84.6" height="15.0" fill="rgb(208,190,8)" rx="2" ry="2" />
<text  x="97.11" y="271.5" >&lt;built-in..</text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (4,781 us., 0.87%)</title><rect x="709.5" y="197" width="10.2" height="15.0" fill="rgb(230,62,11)" rx="2" ry="2" />
<text  x="712.46" y="207.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (10,830 us., 1.97%)</title><rect x="289.9" y="69" width="23.3" height="15.0" fill="rgb(247,181,4)" rx="2" ry="2" />
<text  x="292.94" y="79.5" >t..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (38,480 us., 6.99%)</title><rect x="10.0" y="213" width="82.5" height="15.0" fill="rgb(236,152,34)" rx="2" ry="2" />
<text  x="13.00" y="223.5" >transform..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (4,781 us., 0.87%)</title><rect x="709.5" y="149" width="10.2" height="15.0" fill="rgb(206,42,42)" rx="2" ry="2" />
<text  x="712.46" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (39,471 us., 7.17%)</title><rect x="94.1" y="149" width="84.6" height="15.0" fill="rgb(215,159,27)" rx="2" ry="2" />
<text  x="97.11" y="159.5" >nn.Module..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (426 us., 0.08%)</title><rect x="92.5" y="213" width="0.9" height="15.0" fill="rgb(245,182,15)" rx="2" ry="2" />
<text  x="95.51" y="223.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (182,867 us., 33.23%)</title><rect x="313.2" y="133" width="392.1" height="15.0" fill="rgb(213,217,15)" rx="2" ry="2" />
<text  x="316.16" y="143.5" >transformers/models/opt/modeling_opt.py(840):_forward</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (412 us., 0.07%)</title><rect x="875.6" y="229" width="0.9" height="15.0" fill="rgb(218,226,5)" rx="2" ry="2" />
<text  x="878.63" y="239.5" ></text>
</g>
<g >
<title>&lt;built-in_method_rsub_of_type_object_at_0x7f5877b9b9c0&gt; (200 us., 0.04%)</title><rect x="874.2" y="261" width="0.4" height="15.0" fill="rgb(247,223,43)" rx="2" ry="2" />
<text  x="877.19" y="271.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,138 us., 0.21%)</title><rect x="705.9" y="149" width="2.5" height="15.0" fill="rgb(208,98,48)" rx="2" ry="2" />
<text  x="708.93" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (182,867 us., 33.23%)</title><rect x="313.2" y="117" width="392.1" height="15.0" fill="rgb(247,58,1)" rx="2" ry="2" />
<text  x="316.16" y="127.5" >nn.Module:_Int8OPTForCausalLM</text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (4,788 us., 0.87%)</title><rect x="719.7" y="165" width="10.3" height="15.0" fill="rgb(253,202,28)" rx="2" ry="2" />
<text  x="722.71" y="175.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(89):__expand_mask (1,138 us., 0.21%)</title><rect x="705.9" y="245" width="2.5" height="15.0" fill="rgb(244,72,28)" rx="2" ry="2" />
<text  x="708.93" y="255.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,138 us., 0.21%)</title><rect x="705.9" y="181" width="2.5" height="15.0" fill="rgb(249,38,14)" rx="2" ry="2" />
<text  x="708.93" y="191.5" ></text>
</g>
<g >
<title>all (550,301 us., 100%)</title><rect x="10.0" y="277" width="1180.0" height="15.0" fill="rgb(210,8,35)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (426 us., 0.08%)</title><rect x="92.5" y="197" width="0.9" height="15.0" fill="rgb(241,10,51)" rx="2" ry="2" />
<text  x="95.51" y="207.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (39,471 us., 7.17%)</title><rect x="94.1" y="133" width="84.6" height="15.0" fill="rgb(249,86,43)" rx="2" ry="2" />
<text  x="97.11" y="143.5" >transform..</text>
</g>
<g >
<title>&lt;built-in_method_zeros_like_of_type_object_at_0x7f5877b9b9c0&gt; (199 us., 0.04%)</title><rect x="874.6" y="261" width="0.4" height="15.0" fill="rgb(212,214,4)" rx="2" ry="2" />
<text  x="877.62" y="271.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (603 us., 0.11%)</title><rect x="180.4" y="149" width="1.3" height="15.0" fill="rgb(208,148,22)" rx="2" ry="2" />
<text  x="183.43" y="159.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (703 us., 0.13%)</title><rect x="288.4" y="213" width="1.5" height="15.0" fill="rgb(224,9,29)" rx="2" ry="2" />
<text  x="291.43" y="223.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (47,664 us., 8.66%)</title><rect x="181.7" y="229" width="102.2" height="15.0" fill="rgb(218,105,39)" rx="2" ry="2" />
<text  x="184.73" y="239.5" >torch_int/nn..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (2,100 us., 0.38%)</title><rect x="283.9" y="197" width="4.5" height="15.0" fill="rgb(220,229,26)" rx="2" ry="2" />
<text  x="286.93" y="207.5" ></text>
</g>
<g >
<title>torch/nn/modules/linear.py(113):_forward (38,480 us., 6.99%)</title><rect x="10.0" y="245" width="82.5" height="15.0" fill="rgb(221,5,31)" rx="2" ry="2" />
<text  x="13.00" y="255.5" >torch/nn/..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (46,689 us., 8.48%)</title><rect x="773.6" y="85" width="100.2" height="15.0" fill="rgb(246,198,52)" rx="2" ry="2" />
<text  x="776.64" y="95.5" >torch/autogr..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (4,781 us., 0.87%)</title><rect x="709.5" y="117" width="10.2" height="15.0" fill="rgb(247,84,52)" rx="2" ry="2" />
<text  x="712.46" y="127.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (200 us., 0.04%)</title><rect x="874.2" y="165" width="0.4" height="15.0" fill="rgb(211,150,30)" rx="2" ry="2" />
<text  x="877.19" y="175.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (507 us., 0.09%)</title><rect x="708.4" y="117" width="1.1" height="15.0" fill="rgb(245,35,30)" rx="2" ry="2" />
<text  x="711.37" y="127.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (786 us., 0.14%)</title><rect x="178.7" y="117" width="1.7" height="15.0" fill="rgb(216,83,6)" rx="2" ry="2" />
<text  x="181.75" y="127.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (199 us., 0.04%)</title><rect x="874.6" y="181" width="0.4" height="15.0" fill="rgb(226,46,12)" rx="2" ry="2" />
<text  x="877.62" y="191.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (10,830 us., 1.97%)</title><rect x="289.9" y="229" width="23.3" height="15.0" fill="rgb(241,152,6)" rx="2" ry="2" />
<text  x="292.94" y="239.5" >t..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (412 us., 0.07%)</title><rect x="875.6" y="213" width="0.9" height="15.0" fill="rgb(254,10,34)" rx="2" ry="2" />
<text  x="878.63" y="223.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (47,664 us., 8.66%)</title><rect x="181.7" y="213" width="102.2" height="15.0" fill="rgb(215,150,54)" rx="2" ry="2" />
<text  x="184.73" y="223.5" >torch/autogr..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (11,897 us., 2.16%)</title><rect x="730.0" y="133" width="25.5" height="15.0" fill="rgb(226,102,40)" rx="2" ry="2" />
<text  x="732.97" y="143.5" >n..</text>
</g>
<g >
<title>torch/nn/modules/sparse.py(157):_forward (1,389 us., 0.25%)</title><rect x="178.7" y="229" width="3.0" height="15.0" fill="rgb(246,4,0)" rx="2" ry="2" />
<text  x="181.75" y="239.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (8,469 us., 1.54%)</title><rect x="755.5" y="197" width="18.1" height="15.0" fill="rgb(244,33,6)" rx="2" ry="2" />
<text  x="758.49" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (10,830 us., 1.97%)</title><rect x="289.9" y="197" width="23.3" height="15.0" fill="rgb(253,203,0)" rx="2" ry="2" />
<text  x="292.94" y="207.5" >n..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (145,600 us., 26.46%)</title><rect x="876.5" y="197" width="312.2" height="15.0" fill="rgb(230,219,51)" rx="2" ry="2" />
<text  x="879.51" y="207.5" >nn.Module:_Int8OPTDecoderLayer</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (46,689 us., 8.48%)</title><rect x="773.6" y="165" width="100.2" height="15.0" fill="rgb(217,161,46)" rx="2" ry="2" />
<text  x="776.64" y="175.5" >torch_int/nn..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (412 us., 0.07%)</title><rect x="875.6" y="197" width="0.9" height="15.0" fill="rgb(239,171,49)" rx="2" ry="2" />
<text  x="878.63" y="207.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (597 us., 0.11%)</title><rect x="1188.7" y="261" width="1.3" height="15.0" fill="rgb(253,114,13)" rx="2" ry="2" />
<text  x="1191.72" y="271.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (47,664 us., 8.66%)</title><rect x="181.7" y="117" width="102.2" height="15.0" fill="rgb(238,157,1)" rx="2" ry="2" />
<text  x="184.73" y="127.5" >transformers..</text>
</g>
<g >
<title>&lt;built-in_method_embedding_of_type_object_at_0x7f5877b9b9c0&gt; (1,389 us., 0.25%)</title><rect x="178.7" y="261" width="3.0" height="15.0" fill="rgb(238,47,2)" rx="2" ry="2" />
<text  x="181.75" y="271.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (145,600 us., 26.46%)</title><rect x="876.5" y="245" width="312.2" height="15.0" fill="rgb(225,2,37)" rx="2" ry="2" />
<text  x="879.51" y="255.5" >torch/autograd/grad_mode.py(24):_decorate_..</text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (597 us., 0.11%)</title><rect x="1188.7" y="245" width="1.3" height="15.0" fill="rgb(205,3,53)" rx="2" ry="2" />
<text  x="1191.72" y="255.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (46,689 us., 8.48%)</title><rect x="773.6" y="133" width="100.2" height="15.0" fill="rgb(222,165,5)" rx="2" ry="2" />
<text  x="776.64" y="143.5" >transformers..</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (47,664 us., 8.66%)</title><rect x="181.7" y="149" width="102.2" height="15.0" fill="rgb(246,54,30)" rx="2" ry="2" />
<text  x="184.73" y="159.5" >torch_int/nn..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(89):__expand_mask (200 us., 0.04%)</title><rect x="874.2" y="213" width="0.4" height="15.0" fill="rgb(227,73,32)" rx="2" ry="2" />
<text  x="877.19" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (47,664 us., 8.66%)</title><rect x="181.7" y="133" width="102.2" height="15.0" fill="rgb(222,30,53)" rx="2" ry="2" />
<text  x="184.73" y="143.5" >nn.Module:_I..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (199 us., 0.04%)</title><rect x="874.6" y="229" width="0.4" height="15.0" fill="rgb(253,214,50)" rx="2" ry="2" />
<text  x="877.62" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (412 us., 0.07%)</title><rect x="875.6" y="245" width="0.9" height="15.0" fill="rgb(206,173,1)" rx="2" ry="2" />
<text  x="878.63" y="255.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (2,100 us., 0.38%)</title><rect x="283.9" y="165" width="4.5" height="15.0" fill="rgb(242,197,26)" rx="2" ry="2" />
<text  x="286.93" y="175.5" ></text>
</g>
<g >
<title>&lt;built-in_method_cumsum_of_type_object_at_0x7f5877b9b9c0&gt; (320 us., 0.06%)</title><rect x="93.4" y="261" width="0.7" height="15.0" fill="rgb(208,125,0)" rx="2" ry="2" />
<text  x="96.43" y="271.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (38,480 us., 6.99%)</title><rect x="10.0" y="165" width="82.5" height="15.0" fill="rgb(230,114,54)" rx="2" ry="2" />
<text  x="13.00" y="175.5" >torch/aut..</text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (301 us., 0.05%)</title><rect x="705.3" y="229" width="0.6" height="15.0" fill="rgb(234,55,54)" rx="2" ry="2" />
<text  x="708.28" y="239.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (8,469 us., 1.54%)</title><rect x="755.5" y="133" width="18.1" height="15.0" fill="rgb(246,119,16)" rx="2" ry="2" />
<text  x="758.49" y="143.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (200 us., 0.04%)</title><rect x="874.2" y="181" width="0.4" height="15.0" fill="rgb(232,158,36)" rx="2" ry="2" />
<text  x="877.19" y="191.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (301 us., 0.05%)</title><rect x="705.3" y="181" width="0.6" height="15.0" fill="rgb(219,9,23)" rx="2" ry="2" />
<text  x="708.28" y="191.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (11,897 us., 2.16%)</title><rect x="730.0" y="37" width="25.5" height="15.0" fill="rgb(218,7,32)" rx="2" ry="2" />
<text  x="732.97" y="47.5" >t..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,138 us., 0.21%)</title><rect x="705.9" y="133" width="2.5" height="15.0" fill="rgb(239,1,9)" rx="2" ry="2" />
<text  x="708.93" y="143.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (507 us., 0.09%)</title><rect x="708.4" y="133" width="1.1" height="15.0" fill="rgb(218,45,17)" rx="2" ry="2" />
<text  x="711.37" y="143.5" ></text>
</g>
<g >
<title>nn.Module:_Linear (38,480 us., 6.99%)</title><rect x="10.0" y="229" width="82.5" height="15.0" fill="rgb(209,132,21)" rx="2" ry="2" />
<text  x="13.00" y="239.5" >nn.Module..</text>
</g>
<g >
<title>torch/nn/functional.py(2099):_embedding (1,389 us., 0.25%)</title><rect x="178.7" y="245" width="3.0" height="15.0" fill="rgb(243,94,38)" rx="2" ry="2" />
<text  x="181.75" y="255.5" ></text>
</g>
</g>
</svg>
