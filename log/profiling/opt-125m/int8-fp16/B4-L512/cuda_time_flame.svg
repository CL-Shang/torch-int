<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="326" onload="init(evt)" viewBox="0 0 1200 326" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="326.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >CUDA Time</text>
<text id="details" x="10.00" y="309" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="309" > </text>
<g id="frames">
<g >
<title>nn.Module:_Int8OPTForCausalLM (300 us., 0.02%)</title><rect x="855.4" y="133" width="0.2" height="15.0" fill="rgb(224,93,35)" rx="2" ry="2" />
<text  x="858.44" y="143.5" ></text>
</g>
<g >
<title>torch/nn/functional.py(2099):_embedding (3,690 us., 0.19%)</title><rect x="154.9" y="245" width="2.2" height="15.0" fill="rgb(240,56,46)" rx="2" ry="2" />
<text  x="157.91" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Linear (127,726 us., 6.54%)</title><rect x="10.0" y="229" width="77.2" height="15.0" fill="rgb(250,120,20)" rx="2" ry="2" />
<text  x="13.00" y="239.5" >nn.Modul..</text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (31,141 us., 1.60%)</title><rect x="272.2" y="181" width="18.8" height="15.0" fill="rgb(219,12,2)" rx="2" ry="2" />
<text  x="275.21" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Embedding (2,042 us., 0.10%)</title><rect x="154.9" y="213" width="1.2" height="15.0" fill="rgb(237,151,12)" rx="2" ry="2" />
<text  x="157.91" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (12,146 us., 0.62%)</title><rect x="713.3" y="165" width="7.3" height="15.0" fill="rgb(243,156,11)" rx="2" ry="2" />
<text  x="716.31" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (13,941 us., 0.71%)</title><rect x="704.9" y="117" width="8.4" height="15.0" fill="rgb(215,10,39)" rx="2" ry="2" />
<text  x="707.88" y="127.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (2,042 us., 0.10%)</title><rect x="154.9" y="181" width="1.2" height="15.0" fill="rgb(225,115,9)" rx="2" ry="2" />
<text  x="157.91" y="191.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (548,588 us., 28.10%)</title><rect x="858.0" y="245" width="331.6" height="15.0" fill="rgb(222,221,26)" rx="2" ry="2" />
<text  x="861.00" y="255.5" >torch/autograd/grad_mode.py(24):_decorate_co..</text>
</g>
<g >
<title>&lt;built-in_method_max_of_type_object_at_0x7facdcffc9c0&gt; (179,124 us., 9.18%)</title><rect x="747.0" y="261" width="108.3" height="15.0" fill="rgb(227,9,1)" rx="2" ry="2" />
<text  x="750.03" y="271.5" >&lt;built-in_met..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (179,847 us., 9.21%)</title><rect x="157.1" y="165" width="108.8" height="15.0" fill="rgb(216,57,11)" rx="2" ry="2" />
<text  x="160.14" y="175.5" >nn.Module:_In..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (21,715 us., 1.11%)</title><rect x="733.9" y="133" width="13.1" height="15.0" fill="rgb(222,85,0)" rx="2" ry="2" />
<text  x="736.90" y="143.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (2,042 us., 0.10%)</title><rect x="154.9" y="197" width="1.2" height="15.0" fill="rgb(254,51,47)" rx="2" ry="2" />
<text  x="157.91" y="207.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (8,174 us., 0.42%)</title><rect x="265.9" y="197" width="4.9" height="15.0" fill="rgb(246,151,1)" rx="2" ry="2" />
<text  x="268.86" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (1,848 us., 0.09%)</title><rect x="87.2" y="229" width="1.1" height="15.0" fill="rgb(213,73,30)" rx="2" ry="2" />
<text  x="90.21" y="239.5" ></text>
</g>
<g >
<title>torch_int/nn/fused.py(13):_forward (108,534 us., 5.56%)</title><rect x="89.3" y="229" width="65.6" height="15.0" fill="rgb(250,189,53)" rx="2" ry="2" />
<text  x="92.30" y="239.5" >torch_i..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (179,124 us., 9.18%)</title><rect x="747.0" y="101" width="108.3" height="15.0" fill="rgb(233,13,11)" rx="2" ry="2" />
<text  x="750.03" y="111.5" >profiling/uti..</text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (681,177 us., 34.90%)</title><rect x="291.0" y="197" width="411.8" height="15.0" fill="rgb(248,193,27)" rx="2" ry="2" />
<text  x="294.03" y="207.5" >torch_int/nn/opt.py(183):_forward</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (21,926 us., 1.12%)</title><rect x="720.6" y="181" width="13.3" height="15.0" fill="rgb(229,164,10)" rx="2" ry="2" />
<text  x="723.65" y="191.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (548,588 us., 28.10%)</title><rect x="858.0" y="149" width="331.6" height="15.0" fill="rgb(210,145,20)" rx="2" ry="2" />
<text  x="861.00" y="159.5" >transformers/models/opt/modeling_opt.py(840)..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (8,174 us., 0.42%)</title><rect x="265.9" y="213" width="4.9" height="15.0" fill="rgb(249,92,35)" rx="2" ry="2" />
<text  x="268.86" y="223.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (21,926 us., 1.12%)</title><rect x="720.6" y="117" width="13.3" height="15.0" fill="rgb(235,217,6)" rx="2" ry="2" />
<text  x="723.65" y="127.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (13,941 us., 0.71%)</title><rect x="704.9" y="181" width="8.4" height="15.0" fill="rgb(237,207,19)" rx="2" ry="2" />
<text  x="707.88" y="191.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (2,322 us., 0.12%)</title><rect x="270.8" y="213" width="1.4" height="15.0" fill="rgb(244,35,13)" rx="2" ry="2" />
<text  x="273.81" y="223.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (681,177 us., 34.90%)</title><rect x="291.0" y="85" width="411.8" height="15.0" fill="rgb(240,96,9)" rx="2" ry="2" />
<text  x="294.03" y="95.5" >torch/autograd/grad_mode.py(27):_decorate_context</text>
</g>
<g >
<title>&lt;built-in_function_linear&gt; (127,726 us., 6.54%)</title><rect x="10.0" y="261" width="77.2" height="15.0" fill="rgb(229,129,40)" rx="2" ry="2" />
<text  x="13.00" y="271.5" >&lt;built-i..</text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (1,648 us., 0.08%)</title><rect x="156.1" y="197" width="1.0" height="15.0" fill="rgb(235,213,46)" rx="2" ry="2" />
<text  x="159.15" y="207.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (13,941 us., 0.71%)</title><rect x="704.9" y="101" width="8.4" height="15.0" fill="rgb(206,108,3)" rx="2" ry="2" />
<text  x="707.88" y="111.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (21,715 us., 1.11%)</title><rect x="733.9" y="181" width="13.1" height="15.0" fill="rgb(226,58,51)" rx="2" ry="2" />
<text  x="736.90" y="191.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,648 us., 0.08%)</title><rect x="156.1" y="101" width="1.0" height="15.0" fill="rgb(228,32,36)" rx="2" ry="2" />
<text  x="159.15" y="111.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (31,141 us., 1.60%)</title><rect x="272.2" y="117" width="18.8" height="15.0" fill="rgb(238,195,0)" rx="2" ry="2" />
<text  x="275.21" y="127.5" ></text>
</g>
<g >
<title>&lt;built-in_method_embedding_of_type_object_at_0x7facdcffc9c0&gt; (3,690 us., 0.19%)</title><rect x="154.9" y="261" width="2.2" height="15.0" fill="rgb(209,191,4)" rx="2" ry="2" />
<text  x="157.91" y="271.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (179,124 us., 9.18%)</title><rect x="747.0" y="245" width="108.3" height="15.0" fill="rgb(246,81,17)" rx="2" ry="2" />
<text  x="750.03" y="255.5" >torch_int/nn/..</text>
</g>
<g >
<title>&lt;built-in_method_layer_norm_of_type_object_at_0x7facdcffc9c0&gt; (1,100 us., 0.06%)</title><rect x="704.2" y="261" width="0.7" height="15.0" fill="rgb(211,100,17)" rx="2" ry="2" />
<text  x="707.21" y="271.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (681,177 us., 34.90%)</title><rect x="291.0" y="245" width="411.8" height="15.0" fill="rgb(235,98,5)" rx="2" ry="2" />
<text  x="294.03" y="255.5" >torch_int/nn/opt.py(46):_forward</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (21,926 us., 1.12%)</title><rect x="720.6" y="133" width="13.3" height="15.0" fill="rgb(205,144,47)" rx="2" ry="2" />
<text  x="723.65" y="143.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (108,534 us., 5.56%)</title><rect x="89.3" y="117" width="65.6" height="15.0" fill="rgb(225,211,21)" rx="2" ry="2" />
<text  x="92.30" y="127.5" >nn.Modu..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (2,042 us., 0.10%)</title><rect x="154.9" y="117" width="1.2" height="15.0" fill="rgb(219,95,53)" rx="2" ry="2" />
<text  x="157.91" y="127.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(89):__expand_mask (2,001 us., 0.10%)</title><rect x="703.0" y="245" width="1.2" height="15.0" fill="rgb(233,204,37)" rx="2" ry="2" />
<text  x="706.00" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (492 us., 0.03%)</title><rect x="855.6" y="197" width="0.3" height="15.0" fill="rgb(233,87,3)" rx="2" ry="2" />
<text  x="858.62" y="207.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (599 us., 0.03%)</title><rect x="1189.6" y="165" width="0.4" height="15.0" fill="rgb(230,190,46)" rx="2" ry="2" />
<text  x="1192.64" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (179,847 us., 9.21%)</title><rect x="157.1" y="101" width="108.8" height="15.0" fill="rgb(233,29,47)" rx="2" ry="2" />
<text  x="160.14" y="111.5" >nn.Module:_In..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (681,177 us., 34.90%)</title><rect x="291.0" y="229" width="411.8" height="15.0" fill="rgb(220,101,24)" rx="2" ry="2" />
<text  x="294.03" y="239.5" >torch/autograd/grad_mode.py(24):_decorate_context</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (108,534 us., 5.56%)</title><rect x="89.3" y="85" width="65.6" height="15.0" fill="rgb(226,161,3)" rx="2" ry="2" />
<text  x="92.30" y="95.5" >torch/a..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (677 us., 0.03%)</title><rect x="855.9" y="165" width="0.4" height="15.0" fill="rgb(235,95,0)" rx="2" ry="2" />
<text  x="858.92" y="175.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (677 us., 0.03%)</title><rect x="855.9" y="181" width="0.4" height="15.0" fill="rgb(246,109,17)" rx="2" ry="2" />
<text  x="858.92" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (599 us., 0.03%)</title><rect x="1189.6" y="181" width="0.4" height="15.0" fill="rgb(221,76,17)" rx="2" ry="2" />
<text  x="1192.64" y="191.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (8,174 us., 0.42%)</title><rect x="265.9" y="149" width="4.9" height="15.0" fill="rgb(219,148,31)" rx="2" ry="2" />
<text  x="268.86" y="159.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (179,847 us., 9.21%)</title><rect x="157.1" y="213" width="108.8" height="15.0" fill="rgb(237,99,33)" rx="2" ry="2" />
<text  x="160.14" y="223.5" >torch/autogra..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (599 us., 0.03%)</title><rect x="1189.6" y="213" width="0.4" height="15.0" fill="rgb(249,171,16)" rx="2" ry="2" />
<text  x="1192.64" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (1,602 us., 0.08%)</title><rect x="88.3" y="229" width="1.0" height="15.0" fill="rgb(248,1,36)" rx="2" ry="2" />
<text  x="91.33" y="239.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (21,926 us., 1.12%)</title><rect x="720.6" y="53" width="13.3" height="15.0" fill="rgb(216,32,35)" rx="2" ry="2" />
<text  x="723.65" y="63.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (677 us., 0.03%)</title><rect x="855.9" y="229" width="0.4" height="15.0" fill="rgb(219,217,18)" rx="2" ry="2" />
<text  x="858.92" y="239.5" ></text>
</g>
<g >
<title>&lt;built-in_method_linear_relu_a8_w8_b8_o8_of_PyCapsule_object_at_0x7fabe848fe70&gt; (21,715 us., 1.11%)</title><rect x="733.9" y="261" width="13.1" height="15.0" fill="rgb(229,77,24)" rx="2" ry="2" />
<text  x="736.90" y="271.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (548,588 us., 28.10%)</title><rect x="858.0" y="197" width="331.6" height="15.0" fill="rgb(217,197,48)" rx="2" ry="2" />
<text  x="861.00" y="207.5" >nn.Module:_Int8OPTDecoderLayer</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (2,001 us., 0.10%)</title><rect x="703.0" y="197" width="1.2" height="15.0" fill="rgb(211,7,8)" rx="2" ry="2" />
<text  x="706.00" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (548,588 us., 28.10%)</title><rect x="858.0" y="165" width="331.6" height="15.0" fill="rgb(251,221,37)" rx="2" ry="2" />
<text  x="861.00" y="175.5" >nn.Module:_Int8OPTDecoder</text>
</g>
<g >
<title>&lt;built-in_method_dq_add_layernorm_q_of_PyCapsule_object_at_0x7fabe848ff30&gt; (108,534 us., 5.56%)</title><rect x="89.3" y="261" width="65.6" height="15.0" fill="rgb(216,64,26)" rx="2" ry="2" />
<text  x="92.30" y="271.5" >&lt;built-..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (2,775 us., 0.14%)</title><rect x="856.3" y="245" width="1.7" height="15.0" fill="rgb(252,77,10)" rx="2" ry="2" />
<text  x="859.32" y="255.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (599 us., 0.03%)</title><rect x="1189.6" y="197" width="0.4" height="15.0" fill="rgb(221,16,53)" rx="2" ry="2" />
<text  x="1192.64" y="207.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (2,775 us., 0.14%)</title><rect x="856.3" y="181" width="1.7" height="15.0" fill="rgb(250,69,20)" rx="2" ry="2" />
<text  x="859.32" y="191.5" ></text>
</g>
<g >
<title>torch_int/functional/fused.py(24):_dq_add_layernorm_q_cpp (108,534 us., 5.56%)</title><rect x="89.3" y="245" width="65.6" height="15.0" fill="rgb(229,133,5)" rx="2" ry="2" />
<text  x="92.30" y="255.5" >torch_i..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (492 us., 0.03%)</title><rect x="855.6" y="229" width="0.3" height="15.0" fill="rgb(236,200,35)" rx="2" ry="2" />
<text  x="858.62" y="239.5" ></text>
</g>
<g >
<title>torch/nn/modules/normalization.py(188):_forward (1,100 us., 0.06%)</title><rect x="704.2" y="229" width="0.7" height="15.0" fill="rgb(232,204,25)" rx="2" ry="2" />
<text  x="707.21" y="239.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (199 us., 0.01%)</title><rect x="855.3" y="245" width="0.1" height="15.0" fill="rgb(250,221,45)" rx="2" ry="2" />
<text  x="858.32" y="255.5" ></text>
</g>
<g >
<title>&lt;built-in_method_linear_a8_w8_b8_o8_of_PyCapsule_object_at_0x7fabe848ff00&gt; (21,926 us., 1.12%)</title><rect x="720.6" y="261" width="13.3" height="15.0" fill="rgb(242,95,24)" rx="2" ry="2" />
<text  x="723.65" y="271.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (12,146 us., 0.62%)</title><rect x="713.3" y="117" width="7.3" height="15.0" fill="rgb(231,8,15)" rx="2" ry="2" />
<text  x="716.31" y="127.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (1,648 us., 0.08%)</title><rect x="156.1" y="133" width="1.0" height="15.0" fill="rgb(249,122,23)" rx="2" ry="2" />
<text  x="159.15" y="143.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (300 us., 0.02%)</title><rect x="702.8" y="165" width="0.2" height="15.0" fill="rgb(205,57,49)" rx="2" ry="2" />
<text  x="705.82" y="175.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (300 us., 0.02%)</title><rect x="702.8" y="181" width="0.2" height="15.0" fill="rgb(238,99,32)" rx="2" ry="2" />
<text  x="705.82" y="191.5" ></text>
</g>
<g >
<title>torch/nn/modules/sparse.py(157):_forward (3,690 us., 0.19%)</title><rect x="154.9" y="229" width="2.2" height="15.0" fill="rgb(213,27,48)" rx="2" ry="2" />
<text  x="157.91" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (21,926 us., 1.12%)</title><rect x="720.6" y="165" width="13.3" height="15.0" fill="rgb(244,107,3)" rx="2" ry="2" />
<text  x="723.65" y="175.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (2,042 us., 0.10%)</title><rect x="154.9" y="133" width="1.2" height="15.0" fill="rgb(223,180,5)" rx="2" ry="2" />
<text  x="157.91" y="143.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (179,847 us., 9.21%)</title><rect x="157.1" y="197" width="108.8" height="15.0" fill="rgb(253,40,7)" rx="2" ry="2" />
<text  x="160.14" y="207.5" >nn.Module:_In..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (127,726 us., 6.54%)</title><rect x="10.0" y="181" width="77.2" height="15.0" fill="rgb(244,140,17)" rx="2" ry="2" />
<text  x="13.00" y="191.5" >profilin..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (12,146 us., 0.62%)</title><rect x="713.3" y="37" width="7.3" height="15.0" fill="rgb(240,187,54)" rx="2" ry="2" />
<text  x="716.31" y="47.5" ></text>
</g>
<g >
<title>nn.Module:_W8A8B32O32LinearWithScaling (26,087 us., 1.34%)</title><rect x="704.9" y="213" width="15.7" height="15.0" fill="rgb(254,166,37)" rx="2" ry="2" />
<text  x="707.88" y="223.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (179,847 us., 9.21%)</title><rect x="157.1" y="149" width="108.8" height="15.0" fill="rgb(251,12,23)" rx="2" ry="2" />
<text  x="160.14" y="159.5" >torch_int/nn/..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (1,848 us., 0.09%)</title><rect x="87.2" y="197" width="1.1" height="15.0" fill="rgb(232,42,17)" rx="2" ry="2" />
<text  x="90.21" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (179,124 us., 9.18%)</title><rect x="747.0" y="181" width="108.3" height="15.0" fill="rgb(240,185,45)" rx="2" ry="2" />
<text  x="750.03" y="191.5" >nn.Module:_In..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (108,534 us., 5.56%)</title><rect x="89.3" y="149" width="65.6" height="15.0" fill="rgb(221,170,2)" rx="2" ry="2" />
<text  x="92.30" y="159.5" >nn.Modu..</text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (548,588 us., 28.10%)</title><rect x="858.0" y="213" width="331.6" height="15.0" fill="rgb(233,67,40)" rx="2" ry="2" />
<text  x="861.00" y="223.5" >torch_int/nn/opt.py(183):_forward</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (1,648 us., 0.08%)</title><rect x="156.1" y="165" width="1.0" height="15.0" fill="rgb(250,27,44)" rx="2" ry="2" />
<text  x="159.15" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (300 us., 0.02%)</title><rect x="702.8" y="197" width="0.2" height="15.0" fill="rgb(205,98,28)" rx="2" ry="2" />
<text  x="705.82" y="207.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (681,177 us., 34.90%)</title><rect x="291.0" y="101" width="411.8" height="15.0" fill="rgb(224,97,41)" rx="2" ry="2" />
<text  x="294.03" y="111.5" >profiling/utils.py(18):_profile_model</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,848 us., 0.09%)</title><rect x="87.2" y="181" width="1.1" height="15.0" fill="rgb(238,65,17)" rx="2" ry="2" />
<text  x="90.21" y="191.5" ></text>
</g>
<g >
<title>&lt;built-in_method_rsub_of_type_object_at_0x7facdcffc9c0&gt; (300 us., 0.02%)</title><rect x="855.4" y="261" width="0.2" height="15.0" fill="rgb(242,109,49)" rx="2" ry="2" />
<text  x="858.44" y="271.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (300 us., 0.02%)</title><rect x="855.4" y="165" width="0.2" height="15.0" fill="rgb(222,229,25)" rx="2" ry="2" />
<text  x="858.44" y="175.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (108,534 us., 5.56%)</title><rect x="89.3" y="165" width="65.6" height="15.0" fill="rgb(217,146,16)" rx="2" ry="2" />
<text  x="92.30" y="175.5" >torch_i..</text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (21,926 us., 1.12%)</title><rect x="720.6" y="197" width="13.3" height="15.0" fill="rgb(252,14,39)" rx="2" ry="2" />
<text  x="723.65" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (2,322 us., 0.12%)</title><rect x="270.8" y="197" width="1.4" height="15.0" fill="rgb(254,118,54)" rx="2" ry="2" />
<text  x="273.81" y="207.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (492 us., 0.03%)</title><rect x="855.6" y="245" width="0.3" height="15.0" fill="rgb(238,202,6)" rx="2" ry="2" />
<text  x="858.62" y="255.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (31,141 us., 1.60%)</title><rect x="272.2" y="213" width="18.8" height="15.0" fill="rgb(242,204,10)" rx="2" ry="2" />
<text  x="275.21" y="223.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (179,124 us., 9.18%)</title><rect x="747.0" y="229" width="108.3" height="15.0" fill="rgb(234,40,22)" rx="2" ry="2" />
<text  x="750.03" y="239.5" >torch/autogra..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (12,146 us., 0.62%)</title><rect x="713.3" y="133" width="7.3" height="15.0" fill="rgb(225,24,22)" rx="2" ry="2" />
<text  x="716.31" y="143.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (179,124 us., 9.18%)</title><rect x="747.0" y="133" width="108.3" height="15.0" fill="rgb(223,163,11)" rx="2" ry="2" />
<text  x="750.03" y="143.5" >transformers/..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (21,926 us., 1.12%)</title><rect x="720.6" y="101" width="13.3" height="15.0" fill="rgb(207,97,25)" rx="2" ry="2" />
<text  x="723.65" y="111.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (21,715 us., 1.11%)</title><rect x="733.9" y="101" width="13.1" height="15.0" fill="rgb(234,193,31)" rx="2" ry="2" />
<text  x="736.90" y="111.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,848 us., 0.09%)</title><rect x="87.2" y="213" width="1.1" height="15.0" fill="rgb(248,131,53)" rx="2" ry="2" />
<text  x="90.21" y="223.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (2,775 us., 0.14%)</title><rect x="856.3" y="261" width="1.7" height="15.0" fill="rgb(217,25,18)" rx="2" ry="2" />
<text  x="859.32" y="271.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (1,648 us., 0.08%)</title><rect x="156.1" y="181" width="1.0" height="15.0" fill="rgb(244,34,24)" rx="2" ry="2" />
<text  x="159.15" y="191.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (199 us., 0.01%)</title><rect x="855.3" y="181" width="0.1" height="15.0" fill="rgb(253,205,44)" rx="2" ry="2" />
<text  x="858.32" y="191.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (26,087 us., 1.34%)</title><rect x="704.9" y="229" width="15.7" height="15.0" fill="rgb(216,30,0)" rx="2" ry="2" />
<text  x="707.88" y="239.5" ></text>
</g>
<g >
<title>torch/_tensor.py(26):_wrapped (300 us., 0.02%)</title><rect x="855.4" y="229" width="0.2" height="15.0" fill="rgb(254,211,33)" rx="2" ry="2" />
<text  x="858.44" y="239.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(300):__prepare_decoder_attention_mask (677 us., 0.03%)</title><rect x="855.9" y="261" width="0.4" height="15.0" fill="rgb(241,170,25)" rx="2" ry="2" />
<text  x="858.92" y="271.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (8,174 us., 0.42%)</title><rect x="265.9" y="229" width="4.9" height="15.0" fill="rgb(214,138,29)" rx="2" ry="2" />
<text  x="268.86" y="239.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (179,847 us., 9.21%)</title><rect x="157.1" y="69" width="108.8" height="15.0" fill="rgb(217,220,33)" rx="2" ry="2" />
<text  x="160.14" y="79.5" >torch/autogra..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (179,124 us., 9.18%)</title><rect x="747.0" y="117" width="108.3" height="15.0" fill="rgb(224,155,20)" rx="2" ry="2" />
<text  x="750.03" y="127.5" >nn.Module:_In..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (681,177 us., 34.90%)</title><rect x="291.0" y="133" width="411.8" height="15.0" fill="rgb(240,32,7)" rx="2" ry="2" />
<text  x="294.03" y="143.5" >transformers/models/opt/modeling_opt.py(840):_forward</text>
</g>
<g >
<title>&lt;built-in_method_zeros_like_of_type_object_at_0x7facdcffc9c0&gt; (492 us., 0.03%)</title><rect x="855.6" y="261" width="0.3" height="15.0" fill="rgb(215,158,53)" rx="2" ry="2" />
<text  x="858.62" y="271.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(300):__prepare_decoder_attention_mask (8,174 us., 0.42%)</title><rect x="265.9" y="245" width="4.9" height="15.0" fill="rgb(232,54,8)" rx="2" ry="2" />
<text  x="268.86" y="255.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (108,534 us., 5.56%)</title><rect x="89.3" y="101" width="65.6" height="15.0" fill="rgb(249,153,54)" rx="2" ry="2" />
<text  x="92.30" y="111.5" >profili..</text>
</g>
<g >
<title>all (1,951,944 us., 100%)</title><rect x="10.0" y="277" width="1180.0" height="15.0" fill="rgb(208,37,17)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (300 us., 0.02%)</title><rect x="702.8" y="149" width="0.2" height="15.0" fill="rgb(238,113,5)" rx="2" ry="2" />
<text  x="705.82" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (21,715 us., 1.11%)</title><rect x="733.9" y="149" width="13.1" height="15.0" fill="rgb(251,60,25)" rx="2" ry="2" />
<text  x="736.90" y="159.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (13,941 us., 0.71%)</title><rect x="704.9" y="197" width="8.4" height="15.0" fill="rgb(213,30,44)" rx="2" ry="2" />
<text  x="707.88" y="207.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,648 us., 0.08%)</title><rect x="156.1" y="149" width="1.0" height="15.0" fill="rgb(214,99,19)" rx="2" ry="2" />
<text  x="159.15" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (31,141 us., 1.60%)</title><rect x="272.2" y="197" width="18.8" height="15.0" fill="rgb(207,36,13)" rx="2" ry="2" />
<text  x="275.21" y="207.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (300 us., 0.02%)</title><rect x="855.4" y="181" width="0.2" height="15.0" fill="rgb(224,211,40)" rx="2" ry="2" />
<text  x="858.44" y="191.5" ></text>
</g>
<g >
<title>&lt;built-in_method_linear_a8_w8_b32_o32_with_scaling_of_PyCapsule_object_at_0x7fabe848fed0&gt; (26,087 us., 1.34%)</title><rect x="704.9" y="261" width="15.7" height="15.0" fill="rgb(231,116,17)" rx="2" ry="2" />
<text  x="707.88" y="271.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (179,847 us., 9.21%)</title><rect x="157.1" y="181" width="108.8" height="15.0" fill="rgb(215,87,22)" rx="2" ry="2" />
<text  x="160.14" y="191.5" >torch_int/nn/..</text>
</g>
<g >
<title>torch_int/nn/opt.py(300):__prepare_decoder_attention_mask (300 us., 0.02%)</title><rect x="855.4" y="197" width="0.2" height="15.0" fill="rgb(208,167,25)" rx="2" ry="2" />
<text  x="858.44" y="207.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (13,941 us., 0.71%)</title><rect x="704.9" y="85" width="8.4" height="15.0" fill="rgb(234,99,9)" rx="2" ry="2" />
<text  x="707.88" y="95.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (127,726 us., 6.54%)</title><rect x="10.0" y="165" width="77.2" height="15.0" fill="rgb(245,19,8)" rx="2" ry="2" />
<text  x="13.00" y="175.5" >torch/au..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (21,926 us., 1.12%)</title><rect x="720.6" y="85" width="13.3" height="15.0" fill="rgb(219,85,27)" rx="2" ry="2" />
<text  x="723.65" y="95.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (108,534 us., 5.56%)</title><rect x="89.3" y="133" width="65.6" height="15.0" fill="rgb(207,60,49)" rx="2" ry="2" />
<text  x="92.30" y="143.5" >transfo..</text>
</g>
<g >
<title>torch_int/nn/opt.py(300):__prepare_decoder_attention_mask (2,001 us., 0.10%)</title><rect x="703.0" y="229" width="1.2" height="15.0" fill="rgb(251,221,40)" rx="2" ry="2" />
<text  x="706.00" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (13,941 us., 0.71%)</title><rect x="704.9" y="149" width="8.4" height="15.0" fill="rgb(250,225,20)" rx="2" ry="2" />
<text  x="707.88" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (599 us., 0.03%)</title><rect x="1189.6" y="245" width="0.4" height="15.0" fill="rgb(237,222,24)" rx="2" ry="2" />
<text  x="1192.64" y="255.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (31,141 us., 1.60%)</title><rect x="272.2" y="85" width="18.8" height="15.0" fill="rgb(219,203,26)" rx="2" ry="2" />
<text  x="275.21" y="95.5" ></text>
</g>
<g >
<title>&lt;built-in_method_add_of_type_object_at_0x7facdcffc9c0&gt; (1,848 us., 0.09%)</title><rect x="87.2" y="261" width="1.1" height="15.0" fill="rgb(247,35,1)" rx="2" ry="2" />
<text  x="90.21" y="271.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (548,588 us., 28.10%)</title><rect x="858.0" y="229" width="331.6" height="15.0" fill="rgb(228,67,40)" rx="2" ry="2" />
<text  x="861.00" y="239.5" >nn.Module:_Int8OPTAttention</text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (21,715 us., 1.11%)</title><rect x="733.9" y="197" width="13.1" height="15.0" fill="rgb(208,126,3)" rx="2" ry="2" />
<text  x="736.90" y="207.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (300 us., 0.02%)</title><rect x="855.4" y="117" width="0.2" height="15.0" fill="rgb(221,79,18)" rx="2" ry="2" />
<text  x="858.44" y="127.5" ></text>
</g>
<g >
<title>torch/_tensor.py(637):___rsub__ (300 us., 0.02%)</title><rect x="855.4" y="245" width="0.2" height="15.0" fill="rgb(238,155,53)" rx="2" ry="2" />
<text  x="858.44" y="255.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (599 us., 0.03%)</title><rect x="1189.6" y="149" width="0.4" height="15.0" fill="rgb(240,164,25)" rx="2" ry="2" />
<text  x="1192.64" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (1,602 us., 0.08%)</title><rect x="88.3" y="165" width="1.0" height="15.0" fill="rgb(244,69,23)" rx="2" ry="2" />
<text  x="91.33" y="175.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (127,726 us., 6.54%)</title><rect x="10.0" y="213" width="77.2" height="15.0" fill="rgb(229,71,5)" rx="2" ry="2" />
<text  x="13.00" y="223.5" >transfor..</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (677 us., 0.03%)</title><rect x="855.9" y="245" width="0.4" height="15.0" fill="rgb(214,121,27)" rx="2" ry="2" />
<text  x="858.92" y="255.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (300 us., 0.02%)</title><rect x="855.4" y="101" width="0.2" height="15.0" fill="rgb(253,5,0)" rx="2" ry="2" />
<text  x="858.44" y="111.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (21,715 us., 1.11%)</title><rect x="733.9" y="165" width="13.1" height="15.0" fill="rgb(243,114,27)" rx="2" ry="2" />
<text  x="736.90" y="175.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (21,715 us., 1.11%)</title><rect x="733.9" y="85" width="13.1" height="15.0" fill="rgb(226,183,8)" rx="2" ry="2" />
<text  x="736.90" y="95.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (127,726 us., 6.54%)</title><rect x="10.0" y="197" width="77.2" height="15.0" fill="rgb(252,43,18)" rx="2" ry="2" />
<text  x="13.00" y="207.5" >nn.Modul..</text>
</g>
<g >
<title>&lt;built-in_method_ones_of_type_object_at_0x7facdcffc9c0&gt; (199 us., 0.01%)</title><rect x="855.3" y="261" width="0.1" height="15.0" fill="rgb(239,86,46)" rx="2" ry="2" />
<text  x="858.32" y="271.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (2,775 us., 0.14%)</title><rect x="856.3" y="229" width="1.7" height="15.0" fill="rgb(207,17,38)" rx="2" ry="2" />
<text  x="859.32" y="239.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,602 us., 0.08%)</title><rect x="88.3" y="181" width="1.0" height="15.0" fill="rgb(236,51,16)" rx="2" ry="2" />
<text  x="91.33" y="191.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (677 us., 0.03%)</title><rect x="855.9" y="213" width="0.4" height="15.0" fill="rgb(238,25,42)" rx="2" ry="2" />
<text  x="858.92" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (677 us., 0.03%)</title><rect x="855.9" y="197" width="0.4" height="15.0" fill="rgb(238,93,2)" rx="2" ry="2" />
<text  x="858.92" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (199 us., 0.01%)</title><rect x="855.3" y="229" width="0.1" height="15.0" fill="rgb(249,164,47)" rx="2" ry="2" />
<text  x="858.32" y="239.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (2,322 us., 0.12%)</title><rect x="270.8" y="181" width="1.4" height="15.0" fill="rgb(217,202,41)" rx="2" ry="2" />
<text  x="273.81" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (21,926 us., 1.12%)</title><rect x="720.6" y="69" width="13.3" height="15.0" fill="rgb(221,169,43)" rx="2" ry="2" />
<text  x="723.65" y="79.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (31,141 us., 1.60%)</title><rect x="272.2" y="133" width="18.8" height="15.0" fill="rgb(250,123,32)" rx="2" ry="2" />
<text  x="275.21" y="143.5" ></text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (300 us., 0.02%)</title><rect x="702.8" y="229" width="0.2" height="15.0" fill="rgb(254,31,32)" rx="2" ry="2" />
<text  x="705.82" y="239.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (300 us., 0.02%)</title><rect x="702.8" y="133" width="0.2" height="15.0" fill="rgb(233,197,22)" rx="2" ry="2" />
<text  x="705.82" y="143.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (179,124 us., 9.18%)</title><rect x="747.0" y="165" width="108.3" height="15.0" fill="rgb(230,79,18)" rx="2" ry="2" />
<text  x="750.03" y="175.5" >torch_int/nn/..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (1,100 us., 0.06%)</title><rect x="704.2" y="149" width="0.7" height="15.0" fill="rgb(226,13,52)" rx="2" ry="2" />
<text  x="707.21" y="159.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (681,177 us., 34.90%)</title><rect x="291.0" y="165" width="411.8" height="15.0" fill="rgb(228,143,27)" rx="2" ry="2" />
<text  x="294.03" y="175.5" >torch_int/nn/opt.py(321):_forward</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (12,146 us., 0.62%)</title><rect x="713.3" y="85" width="7.3" height="15.0" fill="rgb(229,9,4)" rx="2" ry="2" />
<text  x="716.31" y="95.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (300 us., 0.02%)</title><rect x="855.4" y="149" width="0.2" height="15.0" fill="rgb(237,103,30)" rx="2" ry="2" />
<text  x="858.44" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_W8A8B8O8LinearReLU (21,715 us., 1.11%)</title><rect x="733.9" y="213" width="13.1" height="15.0" fill="rgb(216,189,6)" rx="2" ry="2" />
<text  x="736.90" y="223.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (12,146 us., 0.62%)</title><rect x="713.3" y="197" width="7.3" height="15.0" fill="rgb(251,165,21)" rx="2" ry="2" />
<text  x="716.31" y="207.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (1,602 us., 0.08%)</title><rect x="88.3" y="245" width="1.0" height="15.0" fill="rgb(219,56,6)" rx="2" ry="2" />
<text  x="91.33" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (31,141 us., 1.60%)</title><rect x="272.2" y="101" width="18.8" height="15.0" fill="rgb(237,13,35)" rx="2" ry="2" />
<text  x="275.21" y="111.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (21,926 us., 1.12%)</title><rect x="720.6" y="229" width="13.3" height="15.0" fill="rgb(225,105,37)" rx="2" ry="2" />
<text  x="723.65" y="239.5" ></text>
</g>
<g >
<title>torch_int/nn/linear.py(92):_forward (21,926 us., 1.12%)</title><rect x="720.6" y="245" width="13.3" height="15.0" fill="rgb(207,158,6)" rx="2" ry="2" />
<text  x="723.65" y="255.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (31,141 us., 1.60%)</title><rect x="272.2" y="69" width="18.8" height="15.0" fill="rgb(246,205,35)" rx="2" ry="2" />
<text  x="275.21" y="79.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (13,941 us., 0.71%)</title><rect x="704.9" y="133" width="8.4" height="15.0" fill="rgb(214,214,28)" rx="2" ry="2" />
<text  x="707.88" y="143.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (492 us., 0.03%)</title><rect x="855.6" y="181" width="0.3" height="15.0" fill="rgb(224,50,19)" rx="2" ry="2" />
<text  x="858.62" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (12,146 us., 0.62%)</title><rect x="713.3" y="69" width="7.3" height="15.0" fill="rgb(232,210,38)" rx="2" ry="2" />
<text  x="716.31" y="79.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (179,847 us., 9.21%)</title><rect x="157.1" y="133" width="108.8" height="15.0" fill="rgb(249,210,42)" rx="2" ry="2" />
<text  x="160.14" y="143.5" >nn.Module:_In..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,602 us., 0.08%)</title><rect x="88.3" y="133" width="1.0" height="15.0" fill="rgb(215,99,30)" rx="2" ry="2" />
<text  x="91.33" y="143.5" ></text>
</g>
<g >
<title>&lt;built-in_method_cumsum_of_type_object_at_0x7facdcffc9c0&gt; (1,602 us., 0.08%)</title><rect x="88.3" y="261" width="1.0" height="15.0" fill="rgb(252,188,50)" rx="2" ry="2" />
<text  x="91.33" y="271.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (599 us., 0.03%)</title><rect x="1189.6" y="229" width="0.4" height="15.0" fill="rgb(226,169,20)" rx="2" ry="2" />
<text  x="1192.64" y="239.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (2,322 us., 0.12%)</title><rect x="270.8" y="245" width="1.4" height="15.0" fill="rgb(227,22,53)" rx="2" ry="2" />
<text  x="273.81" y="255.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (2,001 us., 0.10%)</title><rect x="703.0" y="213" width="1.2" height="15.0" fill="rgb(232,80,34)" rx="2" ry="2" />
<text  x="706.00" y="223.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,100 us., 0.06%)</title><rect x="704.2" y="117" width="0.7" height="15.0" fill="rgb(213,110,54)" rx="2" ry="2" />
<text  x="707.21" y="127.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (179,124 us., 9.18%)</title><rect x="747.0" y="213" width="108.3" height="15.0" fill="rgb(216,218,22)" rx="2" ry="2" />
<text  x="750.03" y="223.5" >nn.Module:_In..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (300 us., 0.02%)</title><rect x="702.8" y="245" width="0.2" height="15.0" fill="rgb(211,118,14)" rx="2" ry="2" />
<text  x="705.82" y="255.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (179,847 us., 9.21%)</title><rect x="157.1" y="85" width="108.8" height="15.0" fill="rgb(230,154,34)" rx="2" ry="2" />
<text  x="160.14" y="95.5" >profiling/uti..</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (300 us., 0.02%)</title><rect x="702.8" y="213" width="0.2" height="15.0" fill="rgb(248,8,22)" rx="2" ry="2" />
<text  x="705.82" y="223.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,100 us., 0.06%)</title><rect x="704.2" y="165" width="0.7" height="15.0" fill="rgb(215,192,39)" rx="2" ry="2" />
<text  x="707.21" y="175.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (2,322 us., 0.12%)</title><rect x="270.8" y="165" width="1.4" height="15.0" fill="rgb(237,106,33)" rx="2" ry="2" />
<text  x="273.81" y="175.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (2,001 us., 0.10%)</title><rect x="703.0" y="133" width="1.2" height="15.0" fill="rgb(249,107,36)" rx="2" ry="2" />
<text  x="706.00" y="143.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,602 us., 0.08%)</title><rect x="88.3" y="149" width="1.0" height="15.0" fill="rgb(211,172,37)" rx="2" ry="2" />
<text  x="91.33" y="159.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (21,926 us., 1.12%)</title><rect x="720.6" y="149" width="13.3" height="15.0" fill="rgb(208,227,47)" rx="2" ry="2" />
<text  x="723.65" y="159.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (108,534 us., 5.56%)</title><rect x="89.3" y="197" width="65.6" height="15.0" fill="rgb(245,229,1)" rx="2" ry="2" />
<text  x="92.30" y="207.5" >torch_i..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (2,042 us., 0.10%)</title><rect x="154.9" y="165" width="1.2" height="15.0" fill="rgb(210,16,12)" rx="2" ry="2" />
<text  x="157.91" y="175.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(43):__shape (31,141 us., 1.60%)</title><rect x="272.2" y="245" width="18.8" height="15.0" fill="rgb(229,58,54)" rx="2" ry="2" />
<text  x="275.21" y="255.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (1,648 us., 0.08%)</title><rect x="156.1" y="213" width="1.0" height="15.0" fill="rgb(220,14,27)" rx="2" ry="2" />
<text  x="159.15" y="223.5" ></text>
</g>
<g >
<title>torch_int/nn/linear.py(122):_forward (21,715 us., 1.11%)</title><rect x="733.9" y="245" width="13.1" height="15.0" fill="rgb(236,190,34)" rx="2" ry="2" />
<text  x="736.90" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (2,001 us., 0.10%)</title><rect x="703.0" y="165" width="1.2" height="15.0" fill="rgb(240,94,45)" rx="2" ry="2" />
<text  x="706.00" y="175.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (199 us., 0.01%)</title><rect x="855.3" y="213" width="0.1" height="15.0" fill="rgb(240,43,38)" rx="2" ry="2" />
<text  x="858.32" y="223.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (179,124 us., 9.18%)</title><rect x="747.0" y="85" width="108.3" height="15.0" fill="rgb(243,121,23)" rx="2" ry="2" />
<text  x="750.03" y="95.5" >torch/autogra..</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (1,602 us., 0.08%)</title><rect x="88.3" y="213" width="1.0" height="15.0" fill="rgb(220,9,16)" rx="2" ry="2" />
<text  x="91.33" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (681,177 us., 34.90%)</title><rect x="291.0" y="213" width="411.8" height="15.0" fill="rgb(248,7,8)" rx="2" ry="2" />
<text  x="294.03" y="223.5" >nn.Module:_Int8OPTAttention</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (2,042 us., 0.10%)</title><rect x="154.9" y="149" width="1.2" height="15.0" fill="rgb(237,45,40)" rx="2" ry="2" />
<text  x="157.91" y="159.5" ></text>
</g>
<g >
<title>torch/nn/functional.py(1804):_softmax (179,847 us., 9.21%)</title><rect x="157.1" y="245" width="108.8" height="15.0" fill="rgb(232,93,36)" rx="2" ry="2" />
<text  x="160.14" y="255.5" >torch/nn/func..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (2,775 us., 0.14%)</title><rect x="856.3" y="197" width="1.7" height="15.0" fill="rgb(209,106,44)" rx="2" ry="2" />
<text  x="859.32" y="207.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (13,941 us., 0.71%)</title><rect x="704.9" y="165" width="8.4" height="15.0" fill="rgb(230,140,7)" rx="2" ry="2" />
<text  x="707.88" y="175.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (12,146 us., 0.62%)</title><rect x="713.3" y="149" width="7.3" height="15.0" fill="rgb(243,82,50)" rx="2" ry="2" />
<text  x="716.31" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (179,124 us., 9.18%)</title><rect x="747.0" y="149" width="108.3" height="15.0" fill="rgb(240,200,9)" rx="2" ry="2" />
<text  x="750.03" y="159.5" >nn.Module:_In..</text>
</g>
<g >
<title>nn.Module:_LayerNorm (1,100 us., 0.06%)</title><rect x="704.2" y="213" width="0.7" height="15.0" fill="rgb(253,45,34)" rx="2" ry="2" />
<text  x="707.21" y="223.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (12,146 us., 0.62%)</title><rect x="713.3" y="181" width="7.3" height="15.0" fill="rgb(251,229,54)" rx="2" ry="2" />
<text  x="716.31" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (21,715 us., 1.11%)</title><rect x="733.9" y="117" width="13.1" height="15.0" fill="rgb(210,217,41)" rx="2" ry="2" />
<text  x="736.90" y="127.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (31,141 us., 1.60%)</title><rect x="272.2" y="149" width="18.8" height="15.0" fill="rgb(232,112,46)" rx="2" ry="2" />
<text  x="275.21" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (31,141 us., 1.60%)</title><rect x="272.2" y="165" width="18.8" height="15.0" fill="rgb(247,60,32)" rx="2" ry="2" />
<text  x="275.21" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (548,588 us., 28.10%)</title><rect x="858.0" y="133" width="331.6" height="15.0" fill="rgb(224,178,9)" rx="2" ry="2" />
<text  x="861.00" y="143.5" >nn.Module:_Int8OPTForCausalLM</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (548,588 us., 28.10%)</title><rect x="858.0" y="101" width="331.6" height="15.0" fill="rgb(214,100,23)" rx="2" ry="2" />
<text  x="861.00" y="111.5" >torch/autograd/grad_mode.py(27):_decorate_co..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(89):__expand_mask (300 us., 0.02%)</title><rect x="855.4" y="213" width="0.2" height="15.0" fill="rgb(235,224,40)" rx="2" ry="2" />
<text  x="858.44" y="223.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (599 us., 0.03%)</title><rect x="1189.6" y="261" width="0.4" height="15.0" fill="rgb(245,98,38)" rx="2" ry="2" />
<text  x="1192.64" y="271.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (681,177 us., 34.90%)</title><rect x="291.0" y="181" width="411.8" height="15.0" fill="rgb(205,0,50)" rx="2" ry="2" />
<text  x="294.03" y="191.5" >nn.Module:_Int8OPTDecoderLayer</text>
</g>
<g >
<title>torch/nn/functional.py(2488):_layer_norm (1,100 us., 0.06%)</title><rect x="704.2" y="245" width="0.7" height="15.0" fill="rgb(224,35,51)" rx="2" ry="2" />
<text  x="707.21" y="255.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (1,848 us., 0.09%)</title><rect x="87.2" y="245" width="1.1" height="15.0" fill="rgb(220,226,41)" rx="2" ry="2" />
<text  x="90.21" y="255.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (2,001 us., 0.10%)</title><rect x="703.0" y="181" width="1.2" height="15.0" fill="rgb(214,85,10)" rx="2" ry="2" />
<text  x="706.00" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (2,322 us., 0.12%)</title><rect x="270.8" y="229" width="1.4" height="15.0" fill="rgb(232,21,7)" rx="2" ry="2" />
<text  x="273.81" y="239.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (31,141 us., 1.60%)</title><rect x="272.2" y="229" width="18.8" height="15.0" fill="rgb(218,222,23)" rx="2" ry="2" />
<text  x="275.21" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_DQ_Add_LayerNorm_Q (108,534 us., 5.56%)</title><rect x="89.3" y="213" width="65.6" height="15.0" fill="rgb(224,207,49)" rx="2" ry="2" />
<text  x="92.30" y="223.5" >nn.Modu..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (12,146 us., 0.62%)</title><rect x="713.3" y="101" width="7.3" height="15.0" fill="rgb(234,175,51)" rx="2" ry="2" />
<text  x="716.31" y="111.5" ></text>
</g>
<g >
<title>torch/nn/modules/linear.py(113):_forward (127,726 us., 6.54%)</title><rect x="10.0" y="245" width="77.2" height="15.0" fill="rgb(210,212,10)" rx="2" ry="2" />
<text  x="13.00" y="255.5" >torch/nn..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (2,775 us., 0.14%)</title><rect x="856.3" y="213" width="1.7" height="15.0" fill="rgb(235,12,31)" rx="2" ry="2" />
<text  x="859.32" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (681,177 us., 34.90%)</title><rect x="291.0" y="149" width="411.8" height="15.0" fill="rgb(252,147,36)" rx="2" ry="2" />
<text  x="294.03" y="159.5" >nn.Module:_Int8OPTDecoder</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (8,174 us., 0.42%)</title><rect x="265.9" y="181" width="4.9" height="15.0" fill="rgb(218,106,5)" rx="2" ry="2" />
<text  x="268.86" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (108,534 us., 5.56%)</title><rect x="89.3" y="181" width="65.6" height="15.0" fill="rgb(250,100,19)" rx="2" ry="2" />
<text  x="92.30" y="191.5" >nn.Modu..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (199 us., 0.01%)</title><rect x="855.3" y="165" width="0.1" height="15.0" fill="rgb(206,197,24)" rx="2" ry="2" />
<text  x="858.32" y="175.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (548,588 us., 28.10%)</title><rect x="858.0" y="181" width="331.6" height="15.0" fill="rgb(239,67,26)" rx="2" ry="2" />
<text  x="861.00" y="191.5" >torch_int/nn/opt.py(321):_forward</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,648 us., 0.08%)</title><rect x="156.1" y="117" width="1.0" height="15.0" fill="rgb(233,15,35)" rx="2" ry="2" />
<text  x="159.15" y="127.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (179,847 us., 9.21%)</title><rect x="157.1" y="229" width="108.8" height="15.0" fill="rgb(210,58,0)" rx="2" ry="2" />
<text  x="160.14" y="239.5" >torch_int/nn/..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (2,001 us., 0.10%)</title><rect x="703.0" y="149" width="1.2" height="15.0" fill="rgb(225,89,32)" rx="2" ry="2" />
<text  x="706.00" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (199 us., 0.01%)</title><rect x="855.3" y="197" width="0.1" height="15.0" fill="rgb(243,89,39)" rx="2" ry="2" />
<text  x="858.32" y="207.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,848 us., 0.09%)</title><rect x="87.2" y="165" width="1.1" height="15.0" fill="rgb(231,142,4)" rx="2" ry="2" />
<text  x="90.21" y="175.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (21,715 us., 1.11%)</title><rect x="733.9" y="229" width="13.1" height="15.0" fill="rgb(205,132,27)" rx="2" ry="2" />
<text  x="736.90" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (1,602 us., 0.08%)</title><rect x="88.3" y="197" width="1.0" height="15.0" fill="rgb(211,176,19)" rx="2" ry="2" />
<text  x="91.33" y="207.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (8,174 us., 0.42%)</title><rect x="265.9" y="165" width="4.9" height="15.0" fill="rgb(249,153,32)" rx="2" ry="2" />
<text  x="268.86" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_W8A8B8O8Linear (21,926 us., 1.12%)</title><rect x="720.6" y="213" width="13.3" height="15.0" fill="rgb(239,72,22)" rx="2" ry="2" />
<text  x="723.65" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (1,100 us., 0.06%)</title><rect x="704.2" y="181" width="0.7" height="15.0" fill="rgb(246,88,37)" rx="2" ry="2" />
<text  x="707.21" y="191.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (548,588 us., 28.10%)</title><rect x="858.0" y="261" width="331.6" height="15.0" fill="rgb(232,138,46)" rx="2" ry="2" />
<text  x="861.00" y="271.5" >torch_int/nn/opt.py(46):_forward</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,100 us., 0.06%)</title><rect x="704.2" y="133" width="0.7" height="15.0" fill="rgb(210,105,7)" rx="2" ry="2" />
<text  x="707.21" y="143.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (492 us., 0.03%)</title><rect x="855.6" y="213" width="0.3" height="15.0" fill="rgb(230,112,18)" rx="2" ry="2" />
<text  x="858.62" y="223.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (12,146 us., 0.62%)</title><rect x="713.3" y="53" width="7.3" height="15.0" fill="rgb(218,186,20)" rx="2" ry="2" />
<text  x="716.31" y="63.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (179,124 us., 9.18%)</title><rect x="747.0" y="197" width="108.3" height="15.0" fill="rgb(210,118,41)" rx="2" ry="2" />
<text  x="750.03" y="207.5" >torch_int/nn/..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (21,926 us., 1.12%)</title><rect x="720.6" y="37" width="13.3" height="15.0" fill="rgb(245,222,2)" rx="2" ry="2" />
<text  x="723.65" y="47.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (1,100 us., 0.06%)</title><rect x="704.2" y="197" width="0.7" height="15.0" fill="rgb(226,15,3)" rx="2" ry="2" />
<text  x="707.21" y="207.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (492 us., 0.03%)</title><rect x="855.6" y="165" width="0.3" height="15.0" fill="rgb(233,47,49)" rx="2" ry="2" />
<text  x="858.62" y="175.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (179,847 us., 9.21%)</title><rect x="157.1" y="117" width="108.8" height="15.0" fill="rgb(216,22,22)" rx="2" ry="2" />
<text  x="160.14" y="127.5" >transformers/..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (681,177 us., 34.90%)</title><rect x="291.0" y="117" width="411.8" height="15.0" fill="rgb(226,113,24)" rx="2" ry="2" />
<text  x="294.03" y="127.5" >nn.Module:_Int8OPTForCausalLM</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (548,588 us., 28.10%)</title><rect x="858.0" y="117" width="331.6" height="15.0" fill="rgb(217,39,17)" rx="2" ry="2" />
<text  x="861.00" y="127.5" >profiling/utils.py(18):_profile_model</text>
</g>
<g >
<title>torch_int/nn/linear.py(62):_forward (26,087 us., 1.34%)</title><rect x="704.9" y="245" width="15.7" height="15.0" fill="rgb(220,161,25)" rx="2" ry="2" />
<text  x="707.88" y="255.5" ></text>
</g>
<g >
<title>&lt;built-in_method_encode_of_str_object_at_0x7fabe8af2450&gt; (904,962 us., 46.36%)</title><rect x="157.1" y="261" width="547.1" height="15.0" fill="rgb(229,96,29)" rx="2" ry="2" />
<text  x="160.14" y="271.5" >&lt;built-in_method_encode_of_str_object_at_0x7fabe8af2450&gt;</text>
</g>
</g>
</svg>
