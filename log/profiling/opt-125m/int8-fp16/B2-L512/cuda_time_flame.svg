<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="326" onload="init(evt)" viewBox="0 0 1200 326" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="326.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >CUDA Time</text>
<text id="details" x="10.00" y="309" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="309" > </text>
<g id="frames">
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (200 us., 0.02%)</title><rect x="861.1" y="165" width="0.2" height="15.0" fill="rgb(240,210,31)" rx="2" ry="2" />
<text  x="864.08" y="175.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (13,107 us., 1.29%)</title><rect x="740.3" y="133" width="15.2" height="15.0" fill="rgb(210,102,44)" rx="2" ry="2" />
<text  x="743.31" y="143.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (255 us., 0.03%)</title><rect x="861.6" y="245" width="0.2" height="15.0" fill="rgb(221,14,10)" rx="2" ry="2" />
<text  x="864.55" y="255.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(300):__prepare_decoder_attention_mask (203 us., 0.02%)</title><rect x="861.3" y="197" width="0.3" height="15.0" fill="rgb(233,33,19)" rx="2" ry="2" />
<text  x="864.31" y="207.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,199 us., 0.12%)</title><rect x="159.7" y="165" width="1.4" height="15.0" fill="rgb(218,147,3)" rx="2" ry="2" />
<text  x="162.66" y="175.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (1,365 us., 0.13%)</title><rect x="704.0" y="213" width="1.5" height="15.0" fill="rgb(234,201,51)" rx="2" ry="2" />
<text  x="706.95" y="223.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (63,262 us., 6.23%)</title><rect x="86.2" y="101" width="73.5" height="15.0" fill="rgb(230,35,44)" rx="2" ry="2" />
<text  x="89.18" y="111.5" >profilin..</text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (6,000 us., 0.59%)</title><rect x="714.6" y="197" width="6.9" height="15.0" fill="rgb(241,65,3)" rx="2" ry="2" />
<text  x="717.55" y="207.5" ></text>
</g>
<g >
<title>torch_int/functional/fused.py(24):_dq_add_layernorm_q_cpp (63,262 us., 6.23%)</title><rect x="86.2" y="245" width="73.5" height="15.0" fill="rgb(252,35,48)" rx="2" ry="2" />
<text  x="89.18" y="255.5" >torch_in..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (90,870 us., 8.94%)</title><rect x="755.5" y="149" width="105.6" height="15.0" fill="rgb(246,158,28)" rx="2" ry="2" />
<text  x="758.53" y="159.5" >nn.Module:_I..</text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (280,344 us., 27.60%)</title><rect x="863.7" y="229" width="325.6" height="15.0" fill="rgb(226,4,30)" rx="2" ry="2" />
<text  x="866.68" y="239.5" >nn.Module:_Int8OPTAttention</text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (90,870 us., 8.94%)</title><rect x="755.5" y="245" width="105.6" height="15.0" fill="rgb(222,217,23)" rx="2" ry="2" />
<text  x="758.53" y="255.5" >torch_int/nn..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (818 us., 0.08%)</title><rect x="83.4" y="165" width="0.9" height="15.0" fill="rgb(254,65,41)" rx="2" ry="2" />
<text  x="86.38" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (280,344 us., 27.60%)</title><rect x="863.7" y="133" width="325.6" height="15.0" fill="rgb(213,202,52)" rx="2" ry="2" />
<text  x="866.68" y="143.5" >nn.Module:_Int8OPTForCausalLM</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (351,539 us., 34.60%)</title><rect x="295.3" y="229" width="408.3" height="15.0" fill="rgb(242,191,1)" rx="2" ry="2" />
<text  x="298.28" y="239.5" >torch/autograd/grad_mode.py(24):_decorate_context</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (1,179 us., 0.12%)</title><rect x="862.3" y="245" width="1.4" height="15.0" fill="rgb(207,79,5)" rx="2" ry="2" />
<text  x="865.31" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (16,176 us., 1.59%)</title><rect x="721.5" y="133" width="18.8" height="15.0" fill="rgb(219,82,51)" rx="2" ry="2" />
<text  x="724.52" y="143.5" ></text>
</g>
<g >
<title>nn.Module:_LayerNorm (749 us., 0.07%)</title><rect x="705.5" y="213" width="0.9" height="15.0" fill="rgb(205,166,8)" rx="2" ry="2" />
<text  x="708.54" y="223.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (200 us., 0.02%)</title><rect x="861.1" y="245" width="0.2" height="15.0" fill="rgb(236,199,53)" rx="2" ry="2" />
<text  x="864.08" y="255.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (91,516 us., 9.01%)</title><rect x="162.1" y="181" width="106.3" height="15.0" fill="rgb(213,77,38)" rx="2" ry="2" />
<text  x="165.13" y="191.5" >torch_int/nn/..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (255 us., 0.03%)</title><rect x="861.6" y="165" width="0.2" height="15.0" fill="rgb(250,106,47)" rx="2" ry="2" />
<text  x="864.55" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (91,516 us., 9.01%)</title><rect x="162.1" y="133" width="106.3" height="15.0" fill="rgb(232,127,17)" rx="2" ry="2" />
<text  x="165.13" y="143.5" >nn.Module:_In..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (13,107 us., 1.29%)</title><rect x="740.3" y="117" width="15.2" height="15.0" fill="rgb(225,112,18)" rx="2" ry="2" />
<text  x="743.31" y="127.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (13,107 us., 1.29%)</title><rect x="740.3" y="181" width="15.2" height="15.0" fill="rgb(205,161,25)" rx="2" ry="2" />
<text  x="743.31" y="191.5" ></text>
</g>
<g >
<title>torch/nn/functional.py(2488):_layer_norm (749 us., 0.07%)</title><rect x="705.5" y="245" width="0.9" height="15.0" fill="rgb(207,132,40)" rx="2" ry="2" />
<text  x="708.54" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (17,948 us., 1.77%)</title><rect x="274.4" y="133" width="20.9" height="15.0" fill="rgb(234,167,39)" rx="2" ry="2" />
<text  x="277.43" y="143.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(89):__expand_mask (1,365 us., 0.13%)</title><rect x="704.0" y="245" width="1.5" height="15.0" fill="rgb(225,60,25)" rx="2" ry="2" />
<text  x="706.95" y="255.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (90,870 us., 8.94%)</title><rect x="755.5" y="229" width="105.6" height="15.0" fill="rgb(205,122,33)" rx="2" ry="2" />
<text  x="758.53" y="239.5" >torch/autogr..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (6,000 us., 0.59%)</title><rect x="714.6" y="53" width="6.9" height="15.0" fill="rgb(206,128,41)" rx="2" ry="2" />
<text  x="717.55" y="63.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (4,082 us., 0.40%)</title><rect x="268.4" y="197" width="4.8" height="15.0" fill="rgb(231,175,38)" rx="2" ry="2" />
<text  x="271.43" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (63,171 us., 6.22%)</title><rect x="10.0" y="197" width="73.4" height="15.0" fill="rgb(223,162,51)" rx="2" ry="2" />
<text  x="13.00" y="207.5" >nn.Modul..</text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (1,598 us., 0.16%)</title><rect x="84.3" y="229" width="1.9" height="15.0" fill="rgb(210,58,29)" rx="2" ry="2" />
<text  x="87.33" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (351,539 us., 34.60%)</title><rect x="295.3" y="213" width="408.3" height="15.0" fill="rgb(206,60,23)" rx="2" ry="2" />
<text  x="298.28" y="223.5" >nn.Module:_Int8OPTAttention</text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (17,948 us., 1.77%)</title><rect x="274.4" y="229" width="20.9" height="15.0" fill="rgb(225,96,48)" rx="2" ry="2" />
<text  x="277.43" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (16,176 us., 1.59%)</title><rect x="721.5" y="101" width="18.8" height="15.0" fill="rgb(219,135,6)" rx="2" ry="2" />
<text  x="724.52" y="111.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (13,107 us., 1.29%)</title><rect x="740.3" y="101" width="15.2" height="15.0" fill="rgb(250,37,6)" rx="2" ry="2" />
<text  x="743.31" y="111.5" ></text>
</g>
<g >
<title>&lt;built-in_method_encode_of_str_object_at_0x7f2fca178450&gt; (467,841 us., 46.05%)</title><rect x="162.1" y="261" width="543.4" height="15.0" fill="rgb(240,168,28)" rx="2" ry="2" />
<text  x="165.13" y="271.5" >&lt;built-in_method_encode_of_str_object_at_0x7f2fca178450&gt;</text>
</g>
<g >
<title>torch_int/nn/linear.py(92):_forward (16,176 us., 1.59%)</title><rect x="721.5" y="245" width="18.8" height="15.0" fill="rgb(230,207,51)" rx="2" ry="2" />
<text  x="724.52" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_W8A8B32O32LinearWithScaling (13,010 us., 1.28%)</title><rect x="706.4" y="213" width="15.1" height="15.0" fill="rgb(233,8,10)" rx="2" ry="2" />
<text  x="709.41" y="223.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (13,107 us., 1.29%)</title><rect x="740.3" y="197" width="15.2" height="15.0" fill="rgb(249,76,23)" rx="2" ry="2" />
<text  x="743.31" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (1,199 us., 0.12%)</title><rect x="159.7" y="181" width="1.4" height="15.0" fill="rgb(225,124,17)" rx="2" ry="2" />
<text  x="162.66" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (1,365 us., 0.13%)</title><rect x="704.0" y="197" width="1.5" height="15.0" fill="rgb(222,36,6)" rx="2" ry="2" />
<text  x="706.95" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (351,539 us., 34.60%)</title><rect x="295.3" y="149" width="408.3" height="15.0" fill="rgb(235,179,5)" rx="2" ry="2" />
<text  x="298.28" y="159.5" >nn.Module:_Int8OPTDecoder</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (255 us., 0.03%)</title><rect x="861.6" y="197" width="0.2" height="15.0" fill="rgb(247,98,7)" rx="2" ry="2" />
<text  x="864.55" y="207.5" ></text>
</g>
<g >
<title>&lt;built-in_method_dq_add_layernorm_q_of_PyCapsule_object_at_0x7f2fc9b15f30&gt; (63,262 us., 6.23%)</title><rect x="86.2" y="261" width="73.5" height="15.0" fill="rgb(244,199,27)" rx="2" ry="2" />
<text  x="89.18" y="271.5" >&lt;built-i..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (6,000 us., 0.59%)</title><rect x="714.6" y="181" width="6.9" height="15.0" fill="rgb(221,183,49)" rx="2" ry="2" />
<text  x="717.55" y="191.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (13,107 us., 1.29%)</title><rect x="740.3" y="85" width="15.2" height="15.0" fill="rgb(231,132,0)" rx="2" ry="2" />
<text  x="743.31" y="95.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (7,010 us., 0.69%)</title><rect x="706.4" y="197" width="8.2" height="15.0" fill="rgb(221,67,7)" rx="2" ry="2" />
<text  x="709.41" y="207.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,092 us., 0.11%)</title><rect x="273.2" y="213" width="1.2" height="15.0" fill="rgb(220,88,37)" rx="2" ry="2" />
<text  x="276.17" y="223.5" ></text>
</g>
<g >
<title>&lt;built-in_method_linear_a8_w8_b32_o32_with_scaling_of_PyCapsule_object_at_0x7f2fc9b15ed0&gt; (13,010 us., 1.28%)</title><rect x="706.4" y="261" width="15.1" height="15.0" fill="rgb(211,194,15)" rx="2" ry="2" />
<text  x="709.41" y="271.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (17,948 us., 1.77%)</title><rect x="274.4" y="149" width="20.9" height="15.0" fill="rgb(221,35,24)" rx="2" ry="2" />
<text  x="277.43" y="159.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (351,539 us., 34.60%)</title><rect x="295.3" y="165" width="408.3" height="15.0" fill="rgb(247,126,19)" rx="2" ry="2" />
<text  x="298.28" y="175.5" >torch_int/nn/opt.py(321):_forward</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (280,344 us., 27.60%)</title><rect x="863.7" y="149" width="325.6" height="15.0" fill="rgb(242,18,51)" rx="2" ry="2" />
<text  x="866.68" y="159.5" >transformers/models/opt/modeling_opt.py(840..</text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (16,176 us., 1.59%)</title><rect x="721.5" y="165" width="18.8" height="15.0" fill="rgb(223,98,13)" rx="2" ry="2" />
<text  x="724.52" y="175.5" ></text>
</g>
<g >
<title>torch/nn/modules/normalization.py(188):_forward (749 us., 0.07%)</title><rect x="705.5" y="229" width="0.9" height="15.0" fill="rgb(215,102,5)" rx="2" ry="2" />
<text  x="708.54" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (351,539 us., 34.60%)</title><rect x="295.3" y="181" width="408.3" height="15.0" fill="rgb(228,43,22)" rx="2" ry="2" />
<text  x="298.28" y="191.5" >nn.Module:_Int8OPTDecoderLayer</text>
</g>
<g >
<title>torch_int/nn/opt.py(43):__shape (17,948 us., 1.77%)</title><rect x="274.4" y="245" width="20.9" height="15.0" fill="rgb(240,79,46)" rx="2" ry="2" />
<text  x="277.43" y="255.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (7,010 us., 0.69%)</title><rect x="706.4" y="165" width="8.2" height="15.0" fill="rgb(227,76,14)" rx="2" ry="2" />
<text  x="709.41" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (6,000 us., 0.59%)</title><rect x="714.6" y="69" width="6.9" height="15.0" fill="rgb(224,106,17)" rx="2" ry="2" />
<text  x="717.55" y="79.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,365 us., 0.13%)</title><rect x="704.0" y="133" width="1.5" height="15.0" fill="rgb(217,7,33)" rx="2" ry="2" />
<text  x="706.95" y="143.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (17,948 us., 1.77%)</title><rect x="274.4" y="197" width="20.9" height="15.0" fill="rgb(205,74,13)" rx="2" ry="2" />
<text  x="277.43" y="207.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (63,171 us., 6.22%)</title><rect x="10.0" y="213" width="73.4" height="15.0" fill="rgb(223,25,11)" rx="2" ry="2" />
<text  x="13.00" y="223.5" >transfor..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (203 us., 0.02%)</title><rect x="861.3" y="133" width="0.3" height="15.0" fill="rgb(246,192,8)" rx="2" ry="2" />
<text  x="864.31" y="143.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (255 us., 0.03%)</title><rect x="861.6" y="229" width="0.2" height="15.0" fill="rgb(252,134,32)" rx="2" ry="2" />
<text  x="864.55" y="239.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (91,516 us., 9.01%)</title><rect x="162.1" y="85" width="106.3" height="15.0" fill="rgb(228,73,2)" rx="2" ry="2" />
<text  x="165.13" y="95.5" >profiling/uti..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (351,539 us., 34.60%)</title><rect x="295.3" y="117" width="408.3" height="15.0" fill="rgb(225,34,29)" rx="2" ry="2" />
<text  x="298.28" y="127.5" >nn.Module:_Int8OPTForCausalLM</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (203 us., 0.02%)</title><rect x="861.3" y="101" width="0.3" height="15.0" fill="rgb(240,179,3)" rx="2" ry="2" />
<text  x="864.31" y="111.5" ></text>
</g>
<g >
<title>torch_int/nn/linear.py(62):_forward (13,010 us., 1.28%)</title><rect x="706.4" y="245" width="15.1" height="15.0" fill="rgb(250,76,13)" rx="2" ry="2" />
<text  x="709.41" y="255.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (203 us., 0.02%)</title><rect x="861.3" y="149" width="0.3" height="15.0" fill="rgb(233,216,43)" rx="2" ry="2" />
<text  x="864.31" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (6,000 us., 0.59%)</title><rect x="714.6" y="101" width="6.9" height="15.0" fill="rgb(226,119,15)" rx="2" ry="2" />
<text  x="717.55" y="111.5" ></text>
</g>
<g >
<title>torch/_tensor.py(637):___rsub__ (203 us., 0.02%)</title><rect x="861.3" y="245" width="0.3" height="15.0" fill="rgb(231,74,26)" rx="2" ry="2" />
<text  x="864.31" y="255.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,598 us., 0.16%)</title><rect x="84.3" y="133" width="1.9" height="15.0" fill="rgb(218,219,50)" rx="2" ry="2" />
<text  x="87.33" y="143.5" ></text>
</g>
<g >
<title>&lt;built-in_method_linear_relu_a8_w8_b8_o8_of_PyCapsule_object_at_0x7f2fc9b15e70&gt; (13,107 us., 1.29%)</title><rect x="740.3" y="261" width="15.2" height="15.0" fill="rgb(218,173,24)" rx="2" ry="2" />
<text  x="743.31" y="271.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,179 us., 0.12%)</title><rect x="862.3" y="197" width="1.4" height="15.0" fill="rgb(220,24,53)" rx="2" ry="2" />
<text  x="865.31" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (200 us., 0.02%)</title><rect x="861.1" y="229" width="0.2" height="15.0" fill="rgb(214,162,29)" rx="2" ry="2" />
<text  x="864.08" y="239.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (17,948 us., 1.77%)</title><rect x="274.4" y="181" width="20.9" height="15.0" fill="rgb(233,146,20)" rx="2" ry="2" />
<text  x="277.43" y="191.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (280,344 us., 27.60%)</title><rect x="863.7" y="213" width="325.6" height="15.0" fill="rgb(233,12,34)" rx="2" ry="2" />
<text  x="866.68" y="223.5" >torch_int/nn/opt.py(183):_forward</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,598 us., 0.16%)</title><rect x="84.3" y="181" width="1.9" height="15.0" fill="rgb(208,212,53)" rx="2" ry="2" />
<text  x="87.33" y="191.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (922 us., 0.09%)</title><rect x="161.1" y="101" width="1.0" height="15.0" fill="rgb(209,8,21)" rx="2" ry="2" />
<text  x="164.06" y="111.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (91,516 us., 9.01%)</title><rect x="162.1" y="165" width="106.3" height="15.0" fill="rgb(227,5,39)" rx="2" ry="2" />
<text  x="165.13" y="175.5" >nn.Module:_In..</text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (598 us., 0.06%)</title><rect x="1189.3" y="245" width="0.7" height="15.0" fill="rgb(219,9,47)" rx="2" ry="2" />
<text  x="1192.31" y="255.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (63,171 us., 6.22%)</title><rect x="10.0" y="165" width="73.4" height="15.0" fill="rgb(247,135,27)" rx="2" ry="2" />
<text  x="13.00" y="175.5" >torch/au..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,092 us., 0.11%)</title><rect x="273.2" y="165" width="1.2" height="15.0" fill="rgb(243,163,50)" rx="2" ry="2" />
<text  x="276.17" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_Embedding (1,199 us., 0.12%)</title><rect x="159.7" y="213" width="1.4" height="15.0" fill="rgb(238,62,43)" rx="2" ry="2" />
<text  x="162.66" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (7,010 us., 0.69%)</title><rect x="706.4" y="149" width="8.2" height="15.0" fill="rgb(207,82,5)" rx="2" ry="2" />
<text  x="709.41" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_W8A8B8O8LinearReLU (13,107 us., 1.29%)</title><rect x="740.3" y="213" width="15.2" height="15.0" fill="rgb(254,193,11)" rx="2" ry="2" />
<text  x="743.31" y="223.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (299 us., 0.03%)</title><rect x="703.6" y="149" width="0.4" height="15.0" fill="rgb(227,75,51)" rx="2" ry="2" />
<text  x="706.61" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (598 us., 0.06%)</title><rect x="1189.3" y="181" width="0.7" height="15.0" fill="rgb(236,99,33)" rx="2" ry="2" />
<text  x="1192.31" y="191.5" ></text>
</g>
<g >
<title>torch/nn/modules/sparse.py(157):_forward (2,121 us., 0.21%)</title><rect x="159.7" y="229" width="2.4" height="15.0" fill="rgb(209,43,37)" rx="2" ry="2" />
<text  x="162.66" y="239.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(89):__expand_mask (203 us., 0.02%)</title><rect x="861.3" y="213" width="0.3" height="15.0" fill="rgb(214,79,10)" rx="2" ry="2" />
<text  x="864.31" y="223.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (351,539 us., 34.60%)</title><rect x="295.3" y="101" width="408.3" height="15.0" fill="rgb(230,37,23)" rx="2" ry="2" />
<text  x="298.28" y="111.5" >profiling/utils.py(18):_profile_model</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (7,010 us., 0.69%)</title><rect x="706.4" y="117" width="8.2" height="15.0" fill="rgb(220,207,6)" rx="2" ry="2" />
<text  x="709.41" y="127.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(300):__prepare_decoder_attention_mask (1,365 us., 0.13%)</title><rect x="704.0" y="229" width="1.5" height="15.0" fill="rgb(240,82,7)" rx="2" ry="2" />
<text  x="706.95" y="239.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (6,000 us., 0.59%)</title><rect x="714.6" y="37" width="6.9" height="15.0" fill="rgb(224,125,27)" rx="2" ry="2" />
<text  x="717.55" y="47.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (299 us., 0.03%)</title><rect x="703.6" y="133" width="0.4" height="15.0" fill="rgb(217,84,20)" rx="2" ry="2" />
<text  x="706.61" y="143.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (91,516 us., 9.01%)</title><rect x="162.1" y="69" width="106.3" height="15.0" fill="rgb(224,170,45)" rx="2" ry="2" />
<text  x="165.13" y="79.5" >torch/autogra..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (280,344 us., 27.60%)</title><rect x="863.7" y="197" width="325.6" height="15.0" fill="rgb(225,159,15)" rx="2" ry="2" />
<text  x="866.68" y="207.5" >nn.Module:_Int8OPTDecoderLayer</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (16,176 us., 1.59%)</title><rect x="721.5" y="53" width="18.8" height="15.0" fill="rgb(237,216,14)" rx="2" ry="2" />
<text  x="724.52" y="63.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,199 us., 0.12%)</title><rect x="159.7" y="117" width="1.4" height="15.0" fill="rgb(235,216,12)" rx="2" ry="2" />
<text  x="162.66" y="127.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (200 us., 0.02%)</title><rect x="861.1" y="197" width="0.2" height="15.0" fill="rgb(224,99,32)" rx="2" ry="2" />
<text  x="864.08" y="207.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (90,870 us., 8.94%)</title><rect x="755.5" y="101" width="105.6" height="15.0" fill="rgb(238,56,53)" rx="2" ry="2" />
<text  x="758.53" y="111.5" >profiling/ut..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (922 us., 0.09%)</title><rect x="161.1" y="149" width="1.0" height="15.0" fill="rgb(238,199,45)" rx="2" ry="2" />
<text  x="164.06" y="159.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (598 us., 0.06%)</title><rect x="1189.3" y="165" width="0.7" height="15.0" fill="rgb(228,8,43)" rx="2" ry="2" />
<text  x="1192.31" y="175.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (91,516 us., 9.01%)</title><rect x="162.1" y="149" width="106.3" height="15.0" fill="rgb(239,128,42)" rx="2" ry="2" />
<text  x="165.13" y="159.5" >torch_int/nn/..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (90,870 us., 8.94%)</title><rect x="755.5" y="85" width="105.6" height="15.0" fill="rgb(221,55,39)" rx="2" ry="2" />
<text  x="758.53" y="95.5" >torch/autogr..</text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (351,539 us., 34.60%)</title><rect x="295.3" y="245" width="408.3" height="15.0" fill="rgb(222,51,0)" rx="2" ry="2" />
<text  x="298.28" y="255.5" >torch_int/nn/opt.py(46):_forward</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (280,344 us., 27.60%)</title><rect x="863.7" y="101" width="325.6" height="15.0" fill="rgb(240,44,18)" rx="2" ry="2" />
<text  x="866.68" y="111.5" >torch/autograd/grad_mode.py(27):_decorate_c..</text>
</g>
<g >
<title>&lt;built-in_method_layer_norm_of_type_object_at_0x7f30be6829c0&gt; (749 us., 0.07%)</title><rect x="705.5" y="261" width="0.9" height="15.0" fill="rgb(248,138,4)" rx="2" ry="2" />
<text  x="708.54" y="271.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (749 us., 0.07%)</title><rect x="705.5" y="149" width="0.9" height="15.0" fill="rgb(224,103,19)" rx="2" ry="2" />
<text  x="708.54" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (91,516 us., 9.01%)</title><rect x="162.1" y="101" width="106.3" height="15.0" fill="rgb(223,33,8)" rx="2" ry="2" />
<text  x="165.13" y="111.5" >nn.Module:_In..</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (396 us., 0.04%)</title><rect x="861.8" y="245" width="0.5" height="15.0" fill="rgb(209,75,45)" rx="2" ry="2" />
<text  x="864.85" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (91,516 us., 9.01%)</title><rect x="162.1" y="197" width="106.3" height="15.0" fill="rgb(235,175,4)" rx="2" ry="2" />
<text  x="165.13" y="207.5" >nn.Module:_In..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (1,092 us., 0.11%)</title><rect x="273.2" y="197" width="1.2" height="15.0" fill="rgb(247,40,5)" rx="2" ry="2" />
<text  x="276.17" y="207.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (598 us., 0.06%)</title><rect x="1189.3" y="197" width="0.7" height="15.0" fill="rgb(240,197,23)" rx="2" ry="2" />
<text  x="1192.31" y="207.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (299 us., 0.03%)</title><rect x="703.6" y="181" width="0.4" height="15.0" fill="rgb(220,13,30)" rx="2" ry="2" />
<text  x="706.61" y="191.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (396 us., 0.04%)</title><rect x="861.8" y="165" width="0.5" height="15.0" fill="rgb(208,187,19)" rx="2" ry="2" />
<text  x="864.85" y="175.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (4,082 us., 0.40%)</title><rect x="268.4" y="165" width="4.8" height="15.0" fill="rgb(230,141,23)" rx="2" ry="2" />
<text  x="271.43" y="175.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (4,082 us., 0.40%)</title><rect x="268.4" y="229" width="4.8" height="15.0" fill="rgb(245,87,8)" rx="2" ry="2" />
<text  x="271.43" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (203 us., 0.02%)</title><rect x="861.3" y="165" width="0.3" height="15.0" fill="rgb(228,45,43)" rx="2" ry="2" />
<text  x="864.31" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (90,870 us., 8.94%)</title><rect x="755.5" y="181" width="105.6" height="15.0" fill="rgb(237,90,14)" rx="2" ry="2" />
<text  x="758.53" y="191.5" >nn.Module:_I..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (1,092 us., 0.11%)</title><rect x="273.2" y="229" width="1.2" height="15.0" fill="rgb(205,192,3)" rx="2" ry="2" />
<text  x="276.17" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_DQ_Add_LayerNorm_Q (63,262 us., 6.23%)</title><rect x="86.2" y="213" width="73.5" height="15.0" fill="rgb(235,25,51)" rx="2" ry="2" />
<text  x="89.18" y="223.5" >nn.Modul..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (299 us., 0.03%)</title><rect x="703.6" y="197" width="0.4" height="15.0" fill="rgb(242,177,35)" rx="2" ry="2" />
<text  x="706.61" y="207.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,365 us., 0.13%)</title><rect x="704.0" y="149" width="1.5" height="15.0" fill="rgb(222,146,22)" rx="2" ry="2" />
<text  x="706.95" y="159.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (351,539 us., 34.60%)</title><rect x="295.3" y="133" width="408.3" height="15.0" fill="rgb(222,201,44)" rx="2" ry="2" />
<text  x="298.28" y="143.5" >transformers/models/opt/modeling_opt.py(840):_forward</text>
</g>
<g >
<title>&lt;built-in_method_linear_a8_w8_b8_o8_of_PyCapsule_object_at_0x7f2fc9b15f00&gt; (16,176 us., 1.59%)</title><rect x="721.5" y="261" width="18.8" height="15.0" fill="rgb(210,53,24)" rx="2" ry="2" />
<text  x="724.52" y="271.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (299 us., 0.03%)</title><rect x="703.6" y="165" width="0.4" height="15.0" fill="rgb(244,167,16)" rx="2" ry="2" />
<text  x="706.61" y="175.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,598 us., 0.16%)</title><rect x="84.3" y="149" width="1.9" height="15.0" fill="rgb(230,121,28)" rx="2" ry="2" />
<text  x="87.33" y="159.5" ></text>
</g>
<g >
<title>torch/nn/modules/linear.py(113):_forward (63,171 us., 6.22%)</title><rect x="10.0" y="245" width="73.4" height="15.0" fill="rgb(232,123,22)" rx="2" ry="2" />
<text  x="13.00" y="255.5" >torch/nn..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (4,082 us., 0.40%)</title><rect x="268.4" y="213" width="4.8" height="15.0" fill="rgb(241,26,24)" rx="2" ry="2" />
<text  x="271.43" y="223.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (17,948 us., 1.77%)</title><rect x="274.4" y="117" width="20.9" height="15.0" fill="rgb(228,176,53)" rx="2" ry="2" />
<text  x="277.43" y="127.5" ></text>
</g>
<g >
<title>torch/_tensor.py(26):_wrapped (203 us., 0.02%)</title><rect x="861.3" y="229" width="0.3" height="15.0" fill="rgb(244,74,5)" rx="2" ry="2" />
<text  x="864.31" y="239.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (1,598 us., 0.16%)</title><rect x="84.3" y="213" width="1.9" height="15.0" fill="rgb(216,126,51)" rx="2" ry="2" />
<text  x="87.33" y="223.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (63,262 us., 6.23%)</title><rect x="86.2" y="197" width="73.5" height="15.0" fill="rgb(217,217,1)" rx="2" ry="2" />
<text  x="89.18" y="207.5" >torch_in..</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (1,092 us., 0.11%)</title><rect x="273.2" y="245" width="1.2" height="15.0" fill="rgb(238,15,50)" rx="2" ry="2" />
<text  x="276.17" y="255.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (598 us., 0.06%)</title><rect x="1189.3" y="149" width="0.7" height="15.0" fill="rgb(205,196,3)" rx="2" ry="2" />
<text  x="1192.31" y="159.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (91,516 us., 9.01%)</title><rect x="162.1" y="117" width="106.3" height="15.0" fill="rgb(220,149,16)" rx="2" ry="2" />
<text  x="165.13" y="127.5" >transformers/..</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (598 us., 0.06%)</title><rect x="1189.3" y="229" width="0.7" height="15.0" fill="rgb(223,46,54)" rx="2" ry="2" />
<text  x="1192.31" y="239.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (1,179 us., 0.12%)</title><rect x="862.3" y="261" width="1.4" height="15.0" fill="rgb(207,229,50)" rx="2" ry="2" />
<text  x="865.31" y="271.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (299 us., 0.03%)</title><rect x="703.6" y="213" width="0.4" height="15.0" fill="rgb(247,140,52)" rx="2" ry="2" />
<text  x="706.61" y="223.5" ></text>
</g>
<g >
<title>&lt;built-in_method_cumsum_of_type_object_at_0x7f30be6829c0&gt; (1,598 us., 0.16%)</title><rect x="84.3" y="261" width="1.9" height="15.0" fill="rgb(222,227,19)" rx="2" ry="2" />
<text  x="87.33" y="271.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (396 us., 0.04%)</title><rect x="861.8" y="197" width="0.5" height="15.0" fill="rgb(228,220,21)" rx="2" ry="2" />
<text  x="864.85" y="207.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (922 us., 0.09%)</title><rect x="161.1" y="181" width="1.0" height="15.0" fill="rgb(238,96,16)" rx="2" ry="2" />
<text  x="164.06" y="191.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (13,010 us., 1.28%)</title><rect x="706.4" y="229" width="15.1" height="15.0" fill="rgb(235,8,24)" rx="2" ry="2" />
<text  x="709.41" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_Linear (63,171 us., 6.22%)</title><rect x="10.0" y="229" width="73.4" height="15.0" fill="rgb(247,76,51)" rx="2" ry="2" />
<text  x="13.00" y="239.5" >nn.Modul..</text>
</g>
<g >
<title>&lt;built-in_method_ones_of_type_object_at_0x7f30be6829c0&gt; (200 us., 0.02%)</title><rect x="861.1" y="261" width="0.2" height="15.0" fill="rgb(221,217,47)" rx="2" ry="2" />
<text  x="864.08" y="271.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (7,010 us., 0.69%)</title><rect x="706.4" y="133" width="8.2" height="15.0" fill="rgb(217,161,17)" rx="2" ry="2" />
<text  x="709.41" y="143.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (255 us., 0.03%)</title><rect x="861.6" y="181" width="0.2" height="15.0" fill="rgb(220,120,31)" rx="2" ry="2" />
<text  x="864.55" y="191.5" ></text>
</g>
<g >
<title>torch_int/nn/linear.py(122):_forward (13,107 us., 1.29%)</title><rect x="740.3" y="245" width="15.2" height="15.0" fill="rgb(230,190,41)" rx="2" ry="2" />
<text  x="743.31" y="255.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (17,948 us., 1.77%)</title><rect x="274.4" y="213" width="20.9" height="15.0" fill="rgb(232,156,28)" rx="2" ry="2" />
<text  x="277.43" y="223.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (90,870 us., 8.94%)</title><rect x="755.5" y="133" width="105.6" height="15.0" fill="rgb(205,224,12)" rx="2" ry="2" />
<text  x="758.53" y="143.5" >transformers..</text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (922 us., 0.09%)</title><rect x="161.1" y="197" width="1.0" height="15.0" fill="rgb(222,9,46)" rx="2" ry="2" />
<text  x="164.06" y="207.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (6,000 us., 0.59%)</title><rect x="714.6" y="85" width="6.9" height="15.0" fill="rgb(224,120,26)" rx="2" ry="2" />
<text  x="717.55" y="95.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (280,344 us., 27.60%)</title><rect x="863.7" y="181" width="325.6" height="15.0" fill="rgb(231,56,12)" rx="2" ry="2" />
<text  x="866.68" y="191.5" >torch_int/nn/opt.py(321):_forward</text>
</g>
<g >
<title>torch_int/nn/opt.py(300):__prepare_decoder_attention_mask (396 us., 0.04%)</title><rect x="861.8" y="261" width="0.5" height="15.0" fill="rgb(234,116,4)" rx="2" ry="2" />
<text  x="864.85" y="271.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (1,598 us., 0.16%)</title><rect x="84.3" y="245" width="1.9" height="15.0" fill="rgb(252,96,28)" rx="2" ry="2" />
<text  x="87.33" y="255.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (16,176 us., 1.59%)</title><rect x="721.5" y="229" width="18.8" height="15.0" fill="rgb(212,24,9)" rx="2" ry="2" />
<text  x="724.52" y="239.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (818 us., 0.08%)</title><rect x="83.4" y="181" width="0.9" height="15.0" fill="rgb(243,165,33)" rx="2" ry="2" />
<text  x="86.38" y="191.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (63,171 us., 6.22%)</title><rect x="10.0" y="181" width="73.4" height="15.0" fill="rgb(234,99,35)" rx="2" ry="2" />
<text  x="13.00" y="191.5" >profilin..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (396 us., 0.04%)</title><rect x="861.8" y="181" width="0.5" height="15.0" fill="rgb(231,160,26)" rx="2" ry="2" />
<text  x="864.85" y="191.5" ></text>
</g>
<g >
<title>&lt;built-in_method_max_of_type_object_at_0x7f30be6829c0&gt; (90,870 us., 8.94%)</title><rect x="755.5" y="261" width="105.6" height="15.0" fill="rgb(208,89,32)" rx="2" ry="2" />
<text  x="758.53" y="271.5" >&lt;built-in_me..</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (6,000 us., 0.59%)</title><rect x="714.6" y="117" width="6.9" height="15.0" fill="rgb(236,5,6)" rx="2" ry="2" />
<text  x="717.55" y="127.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (17,948 us., 1.77%)</title><rect x="274.4" y="101" width="20.9" height="15.0" fill="rgb(218,138,36)" rx="2" ry="2" />
<text  x="277.43" y="111.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (7,010 us., 0.69%)</title><rect x="706.4" y="181" width="8.2" height="15.0" fill="rgb(228,188,1)" rx="2" ry="2" />
<text  x="709.41" y="191.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (598 us., 0.06%)</title><rect x="1189.3" y="261" width="0.7" height="15.0" fill="rgb(252,132,24)" rx="2" ry="2" />
<text  x="1192.31" y="271.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (6,000 us., 0.59%)</title><rect x="714.6" y="133" width="6.9" height="15.0" fill="rgb(229,190,26)" rx="2" ry="2" />
<text  x="717.55" y="143.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (1,199 us., 0.12%)</title><rect x="159.7" y="149" width="1.4" height="15.0" fill="rgb(238,54,0)" rx="2" ry="2" />
<text  x="162.66" y="159.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (90,870 us., 8.94%)</title><rect x="755.5" y="197" width="105.6" height="15.0" fill="rgb(230,106,21)" rx="2" ry="2" />
<text  x="758.53" y="207.5" >torch_int/nn..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (351,539 us., 34.60%)</title><rect x="295.3" y="85" width="408.3" height="15.0" fill="rgb(214,224,3)" rx="2" ry="2" />
<text  x="298.28" y="95.5" >torch/autograd/grad_mode.py(27):_decorate_context</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (922 us., 0.09%)</title><rect x="161.1" y="117" width="1.0" height="15.0" fill="rgb(230,212,2)" rx="2" ry="2" />
<text  x="164.06" y="127.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (16,176 us., 1.59%)</title><rect x="721.5" y="197" width="18.8" height="15.0" fill="rgb(243,96,31)" rx="2" ry="2" />
<text  x="724.52" y="207.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (16,176 us., 1.59%)</title><rect x="721.5" y="85" width="18.8" height="15.0" fill="rgb(216,159,21)" rx="2" ry="2" />
<text  x="724.52" y="95.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (749 us., 0.07%)</title><rect x="705.5" y="165" width="0.9" height="15.0" fill="rgb(219,49,8)" rx="2" ry="2" />
<text  x="708.54" y="175.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (280,344 us., 27.60%)</title><rect x="863.7" y="117" width="325.6" height="15.0" fill="rgb(210,157,54)" rx="2" ry="2" />
<text  x="866.68" y="127.5" >profiling/utils.py(18):_profile_model</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (90,870 us., 8.94%)</title><rect x="755.5" y="117" width="105.6" height="15.0" fill="rgb(235,87,36)" rx="2" ry="2" />
<text  x="758.53" y="127.5" >nn.Module:_I..</text>
</g>
<g >
<title>torch_int/nn/opt.py(300):__prepare_decoder_attention_mask (4,082 us., 0.40%)</title><rect x="268.4" y="245" width="4.8" height="15.0" fill="rgb(254,59,19)" rx="2" ry="2" />
<text  x="271.43" y="255.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (280,344 us., 27.60%)</title><rect x="863.7" y="261" width="325.6" height="15.0" fill="rgb(221,148,22)" rx="2" ry="2" />
<text  x="866.68" y="271.5" >torch_int/nn/opt.py(46):_forward</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (16,176 us., 1.59%)</title><rect x="721.5" y="181" width="18.8" height="15.0" fill="rgb(214,177,4)" rx="2" ry="2" />
<text  x="724.52" y="191.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (16,176 us., 1.59%)</title><rect x="721.5" y="117" width="18.8" height="15.0" fill="rgb(253,224,26)" rx="2" ry="2" />
<text  x="724.52" y="127.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (17,948 us., 1.77%)</title><rect x="274.4" y="165" width="20.9" height="15.0" fill="rgb(231,198,6)" rx="2" ry="2" />
<text  x="277.43" y="175.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (16,176 us., 1.59%)</title><rect x="721.5" y="149" width="18.8" height="15.0" fill="rgb(229,67,8)" rx="2" ry="2" />
<text  x="724.52" y="159.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (6,000 us., 0.59%)</title><rect x="714.6" y="149" width="6.9" height="15.0" fill="rgb(211,223,25)" rx="2" ry="2" />
<text  x="717.55" y="159.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (203 us., 0.02%)</title><rect x="861.3" y="117" width="0.3" height="15.0" fill="rgb(230,22,29)" rx="2" ry="2" />
<text  x="864.31" y="127.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (749 us., 0.07%)</title><rect x="705.5" y="133" width="0.9" height="15.0" fill="rgb(229,122,44)" rx="2" ry="2" />
<text  x="708.54" y="143.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (63,262 us., 6.23%)</title><rect x="86.2" y="85" width="73.5" height="15.0" fill="rgb(254,28,22)" rx="2" ry="2" />
<text  x="89.18" y="95.5" >torch/au..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (17,948 us., 1.77%)</title><rect x="274.4" y="69" width="20.9" height="15.0" fill="rgb(240,185,54)" rx="2" ry="2" />
<text  x="277.43" y="79.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (63,262 us., 6.23%)</title><rect x="86.2" y="181" width="73.5" height="15.0" fill="rgb(230,143,23)" rx="2" ry="2" />
<text  x="89.18" y="191.5" >nn.Modul..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (91,516 us., 9.01%)</title><rect x="162.1" y="213" width="106.3" height="15.0" fill="rgb(228,3,30)" rx="2" ry="2" />
<text  x="165.13" y="223.5" >torch/autogra..</text>
</g>
<g >
<title>nn.Module:_W8A8B8O8Linear (16,176 us., 1.59%)</title><rect x="721.5" y="213" width="18.8" height="15.0" fill="rgb(253,73,45)" rx="2" ry="2" />
<text  x="724.52" y="223.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (1,199 us., 0.12%)</title><rect x="159.7" y="197" width="1.4" height="15.0" fill="rgb(220,39,10)" rx="2" ry="2" />
<text  x="162.66" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (818 us., 0.08%)</title><rect x="83.4" y="229" width="0.9" height="15.0" fill="rgb(208,76,35)" rx="2" ry="2" />
<text  x="86.38" y="239.5" ></text>
</g>
<g >
<title>&lt;built-in_function_linear&gt; (63,171 us., 6.22%)</title><rect x="10.0" y="261" width="73.4" height="15.0" fill="rgb(234,72,11)" rx="2" ry="2" />
<text  x="13.00" y="271.5" >&lt;built-i..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (280,344 us., 27.60%)</title><rect x="863.7" y="245" width="325.6" height="15.0" fill="rgb(214,5,0)" rx="2" ry="2" />
<text  x="866.68" y="255.5" >torch/autograd/grad_mode.py(24):_decorate_c..</text>
</g>
<g >
<title>torch_int/nn/fused.py(13):_forward (63,262 us., 6.23%)</title><rect x="86.2" y="229" width="73.5" height="15.0" fill="rgb(207,217,39)" rx="2" ry="2" />
<text  x="89.18" y="239.5" >torch_in..</text>
</g>
<g >
<title>&lt;built-in_method_embedding_of_type_object_at_0x7f30be6829c0&gt; (2,121 us., 0.21%)</title><rect x="159.7" y="261" width="2.4" height="15.0" fill="rgb(250,177,9)" rx="2" ry="2" />
<text  x="162.66" y="271.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (1,598 us., 0.16%)</title><rect x="84.3" y="165" width="1.9" height="15.0" fill="rgb(208,102,40)" rx="2" ry="2" />
<text  x="87.33" y="175.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (396 us., 0.04%)</title><rect x="861.8" y="213" width="0.5" height="15.0" fill="rgb(234,34,22)" rx="2" ry="2" />
<text  x="864.85" y="223.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (4,082 us., 0.40%)</title><rect x="268.4" y="149" width="4.8" height="15.0" fill="rgb(248,208,49)" rx="2" ry="2" />
<text  x="271.43" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (280,344 us., 27.60%)</title><rect x="863.7" y="165" width="325.6" height="15.0" fill="rgb(233,88,25)" rx="2" ry="2" />
<text  x="866.68" y="175.5" >nn.Module:_Int8OPTDecoder</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (749 us., 0.07%)</title><rect x="705.5" y="197" width="0.9" height="15.0" fill="rgb(219,12,36)" rx="2" ry="2" />
<text  x="708.54" y="207.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (922 us., 0.09%)</title><rect x="161.1" y="213" width="1.0" height="15.0" fill="rgb(215,125,31)" rx="2" ry="2" />
<text  x="164.06" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (922 us., 0.09%)</title><rect x="161.1" y="133" width="1.0" height="15.0" fill="rgb(252,216,2)" rx="2" ry="2" />
<text  x="164.06" y="143.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (63,262 us., 6.23%)</title><rect x="86.2" y="165" width="73.5" height="15.0" fill="rgb(248,112,38)" rx="2" ry="2" />
<text  x="89.18" y="175.5" >torch_in..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (16,176 us., 1.59%)</title><rect x="721.5" y="37" width="18.8" height="15.0" fill="rgb(226,64,52)" rx="2" ry="2" />
<text  x="724.52" y="47.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (203 us., 0.02%)</title><rect x="861.3" y="181" width="0.3" height="15.0" fill="rgb(213,199,22)" rx="2" ry="2" />
<text  x="864.31" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (1,598 us., 0.16%)</title><rect x="84.3" y="197" width="1.9" height="15.0" fill="rgb(222,18,49)" rx="2" ry="2" />
<text  x="87.33" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (63,262 us., 6.23%)</title><rect x="86.2" y="117" width="73.5" height="15.0" fill="rgb(224,120,29)" rx="2" ry="2" />
<text  x="89.18" y="127.5" >nn.Modul..</text>
</g>
<g >
<title>torch/nn/functional.py(2099):_embedding (2,121 us., 0.21%)</title><rect x="159.7" y="245" width="2.4" height="15.0" fill="rgb(233,59,13)" rx="2" ry="2" />
<text  x="162.66" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (1,179 us., 0.12%)</title><rect x="862.3" y="213" width="1.4" height="15.0" fill="rgb(252,111,8)" rx="2" ry="2" />
<text  x="865.31" y="223.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,179 us., 0.12%)</title><rect x="862.3" y="229" width="1.4" height="15.0" fill="rgb(213,186,34)" rx="2" ry="2" />
<text  x="865.31" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (299 us., 0.03%)</title><rect x="703.6" y="229" width="0.4" height="15.0" fill="rgb(236,173,41)" rx="2" ry="2" />
<text  x="706.61" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (598 us., 0.06%)</title><rect x="1189.3" y="213" width="0.7" height="15.0" fill="rgb(235,35,4)" rx="2" ry="2" />
<text  x="1192.31" y="223.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (299 us., 0.03%)</title><rect x="703.6" y="245" width="0.4" height="15.0" fill="rgb(244,98,31)" rx="2" ry="2" />
<text  x="706.61" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (16,176 us., 1.59%)</title><rect x="721.5" y="69" width="18.8" height="15.0" fill="rgb(231,99,16)" rx="2" ry="2" />
<text  x="724.52" y="79.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (90,870 us., 8.94%)</title><rect x="755.5" y="165" width="105.6" height="15.0" fill="rgb(208,212,32)" rx="2" ry="2" />
<text  x="758.53" y="175.5" >torch_int/nn..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (4,082 us., 0.40%)</title><rect x="268.4" y="181" width="4.8" height="15.0" fill="rgb(240,157,31)" rx="2" ry="2" />
<text  x="271.43" y="191.5" ></text>
</g>
<g >
<title>&lt;built-in_method_add_of_type_object_at_0x7f30be6829c0&gt; (818 us., 0.08%)</title><rect x="83.4" y="261" width="0.9" height="15.0" fill="rgb(230,207,24)" rx="2" ry="2" />
<text  x="86.38" y="271.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,179 us., 0.12%)</title><rect x="862.3" y="181" width="1.4" height="15.0" fill="rgb(245,102,45)" rx="2" ry="2" />
<text  x="865.31" y="191.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (200 us., 0.02%)</title><rect x="861.1" y="213" width="0.2" height="15.0" fill="rgb(251,89,26)" rx="2" ry="2" />
<text  x="864.08" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (818 us., 0.08%)</title><rect x="83.4" y="197" width="0.9" height="15.0" fill="rgb(227,140,50)" rx="2" ry="2" />
<text  x="86.38" y="207.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (17,948 us., 1.77%)</title><rect x="274.4" y="85" width="20.9" height="15.0" fill="rgb(218,189,35)" rx="2" ry="2" />
<text  x="277.43" y="95.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,199 us., 0.12%)</title><rect x="159.7" y="133" width="1.4" height="15.0" fill="rgb(215,173,43)" rx="2" ry="2" />
<text  x="162.66" y="143.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (749 us., 0.07%)</title><rect x="705.5" y="181" width="0.9" height="15.0" fill="rgb(242,124,47)" rx="2" ry="2" />
<text  x="708.54" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (13,107 us., 1.29%)</title><rect x="740.3" y="149" width="15.2" height="15.0" fill="rgb(233,180,39)" rx="2" ry="2" />
<text  x="743.31" y="159.5" ></text>
</g>
<g >
<title>&lt;built-in_method_zeros_like_of_type_object_at_0x7f30be6829c0&gt; (255 us., 0.03%)</title><rect x="861.6" y="261" width="0.2" height="15.0" fill="rgb(222,172,9)" rx="2" ry="2" />
<text  x="864.55" y="271.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (396 us., 0.04%)</title><rect x="861.8" y="229" width="0.5" height="15.0" fill="rgb(239,73,52)" rx="2" ry="2" />
<text  x="864.85" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (63,262 us., 6.23%)</title><rect x="86.2" y="149" width="73.5" height="15.0" fill="rgb(244,120,4)" rx="2" ry="2" />
<text  x="89.18" y="159.5" >nn.Modul..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (13,107 us., 1.29%)</title><rect x="740.3" y="229" width="15.2" height="15.0" fill="rgb(220,117,10)" rx="2" ry="2" />
<text  x="743.31" y="239.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (818 us., 0.08%)</title><rect x="83.4" y="213" width="0.9" height="15.0" fill="rgb(243,98,11)" rx="2" ry="2" />
<text  x="86.38" y="223.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,365 us., 0.13%)</title><rect x="704.0" y="181" width="1.5" height="15.0" fill="rgb(209,163,43)" rx="2" ry="2" />
<text  x="706.95" y="191.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (255 us., 0.03%)</title><rect x="861.6" y="213" width="0.2" height="15.0" fill="rgb(232,2,18)" rx="2" ry="2" />
<text  x="864.55" y="223.5" ></text>
</g>
<g >
<title>torch/nn/functional.py(1804):_softmax (91,516 us., 9.01%)</title><rect x="162.1" y="245" width="106.3" height="15.0" fill="rgb(226,117,52)" rx="2" ry="2" />
<text  x="165.13" y="255.5" >torch/nn/func..</text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (91,516 us., 9.01%)</title><rect x="162.1" y="229" width="106.3" height="15.0" fill="rgb(253,91,44)" rx="2" ry="2" />
<text  x="165.13" y="239.5" >torch_int/nn/..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (7,010 us., 0.69%)</title><rect x="706.4" y="101" width="8.2" height="15.0" fill="rgb(245,162,50)" rx="2" ry="2" />
<text  x="709.41" y="111.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (351,539 us., 34.60%)</title><rect x="295.3" y="197" width="408.3" height="15.0" fill="rgb(242,129,48)" rx="2" ry="2" />
<text  x="298.28" y="207.5" >torch_int/nn/opt.py(183):_forward</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (13,107 us., 1.29%)</title><rect x="740.3" y="165" width="15.2" height="15.0" fill="rgb(237,147,19)" rx="2" ry="2" />
<text  x="743.31" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (922 us., 0.09%)</title><rect x="161.1" y="165" width="1.0" height="15.0" fill="rgb(229,58,16)" rx="2" ry="2" />
<text  x="164.06" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (1,365 us., 0.13%)</title><rect x="704.0" y="165" width="1.5" height="15.0" fill="rgb(254,213,41)" rx="2" ry="2" />
<text  x="706.95" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (90,870 us., 8.94%)</title><rect x="755.5" y="213" width="105.6" height="15.0" fill="rgb(246,220,20)" rx="2" ry="2" />
<text  x="758.53" y="223.5" >nn.Module:_I..</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (818 us., 0.08%)</title><rect x="83.4" y="245" width="0.9" height="15.0" fill="rgb(213,40,38)" rx="2" ry="2" />
<text  x="86.38" y="255.5" ></text>
</g>
<g >
<title>all (1,015,898 us., 100%)</title><rect x="10.0" y="277" width="1180.0" height="15.0" fill="rgb(228,74,16)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,092 us., 0.11%)</title><rect x="273.2" y="181" width="1.2" height="15.0" fill="rgb(242,14,18)" rx="2" ry="2" />
<text  x="276.17" y="191.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (7,010 us., 0.69%)</title><rect x="706.4" y="85" width="8.2" height="15.0" fill="rgb(236,108,40)" rx="2" ry="2" />
<text  x="709.41" y="95.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (63,262 us., 6.23%)</title><rect x="86.2" y="133" width="73.5" height="15.0" fill="rgb(222,94,40)" rx="2" ry="2" />
<text  x="89.18" y="143.5" >transfor..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (200 us., 0.02%)</title><rect x="861.1" y="181" width="0.2" height="15.0" fill="rgb(224,67,5)" rx="2" ry="2" />
<text  x="864.08" y="191.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (749 us., 0.07%)</title><rect x="705.5" y="117" width="0.9" height="15.0" fill="rgb(240,193,15)" rx="2" ry="2" />
<text  x="708.54" y="127.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (6,000 us., 0.59%)</title><rect x="714.6" y="165" width="6.9" height="15.0" fill="rgb(243,101,18)" rx="2" ry="2" />
<text  x="717.55" y="175.5" ></text>
</g>
<g >
<title>&lt;built-in_method_rsub_of_type_object_at_0x7f30be6829c0&gt; (203 us., 0.02%)</title><rect x="861.3" y="261" width="0.3" height="15.0" fill="rgb(217,53,51)" rx="2" ry="2" />
<text  x="864.31" y="271.5" ></text>
</g>
</g>
</svg>
