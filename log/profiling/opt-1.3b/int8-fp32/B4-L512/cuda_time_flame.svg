<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="326" onload="init(evt)" viewBox="0 0 1200 326" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="326.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >CUDA Time</text>
<text id="details" x="10.00" y="309" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="309" > </text>
<g id="frames">
<g >
<title>torch_int/nn/opt.py(183):_forward (3,577,342 us., 29.32%)</title><rect x="432.6" y="197" width="346.0" height="15.0" fill="rgb(246,72,51)" rx="2" ry="2" />
<text  x="435.61" y="207.5" >torch_int/nn/opt.py(183):_forward</text>
</g>
<g >
<title>all (12,201,056 us., 100%)</title><rect x="10.0" y="277" width="1180.0" height="15.0" fill="rgb(215,56,44)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (169,625 us., 1.39%)</title><rect x="416.2" y="213" width="16.4" height="15.0" fill="rgb(224,2,31)" rx="2" ry="2" />
<text  x="419.20" y="223.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (28,118 us., 0.23%)</title><rect x="412.0" y="149" width="2.7" height="15.0" fill="rgb(222,186,47)" rx="2" ry="2" />
<text  x="414.99" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (1,530 us., 0.01%)</title><rect x="904.5" y="229" width="0.1" height="15.0" fill="rgb(210,149,53)" rx="2" ry="2" />
<text  x="907.50" y="239.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,833,447 us., 15.03%)</title><rect x="10.0" y="181" width="177.3" height="15.0" fill="rgb(216,220,13)" rx="2" ry="2" />
<text  x="13.00" y="191.5" >profiling/utils.py(18):..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (5,521 us., 0.05%)</title><rect x="319.6" y="213" width="0.6" height="15.0" fill="rgb(212,91,4)" rx="2" ry="2" />
<text  x="322.63" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_W8A8B8O8Linear (105,806 us., 0.87%)</title><rect x="791.5" y="213" width="10.3" height="15.0" fill="rgb(217,64,16)" rx="2" ry="2" />
<text  x="794.53" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (60,219 us., 0.49%)</title><rect x="779.6" y="149" width="5.8" height="15.0" fill="rgb(251,157,4)" rx="2" ry="2" />
<text  x="782.62" y="159.5" ></text>
</g>
<g >
<title>torch/nn/functional.py(2099):_embedding (11,179 us., 0.09%)</title><rect x="319.1" y="245" width="1.1" height="15.0" fill="rgb(212,38,50)" rx="2" ry="2" />
<text  x="322.09" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (2,499 us., 0.02%)</title><rect x="904.3" y="229" width="0.2" height="15.0" fill="rgb(218,72,11)" rx="2" ry="2" />
<text  x="907.26" y="239.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (5,521 us., 0.05%)</title><rect x="319.6" y="149" width="0.6" height="15.0" fill="rgb(222,219,23)" rx="2" ry="2" />
<text  x="322.63" y="159.5" ></text>
</g>
<g >
<title>torch/nn/modules/normalization.py(188):_forward (6,881 us., 0.06%)</title><rect x="779.0" y="229" width="0.6" height="15.0" fill="rgb(240,176,16)" rx="2" ry="2" />
<text  x="781.95" y="239.5" ></text>
</g>
<g >
<title>&lt;built-in_method_cumsum_of_type_object_at_0x7f89290269c0&gt; (1,708 us., 0.01%)</title><rect x="188.1" y="261" width="0.1" height="15.0" fill="rgb(218,181,28)" rx="2" ry="2" />
<text  x="191.06" y="271.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(300):__prepare_decoder_attention_mask (3,507 us., 0.03%)</title><rect x="778.6" y="229" width="0.4" height="15.0" fill="rgb(254,168,0)" rx="2" ry="2" />
<text  x="781.62" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_W8A8B8O8LinearReLU (112,292 us., 0.92%)</title><rect x="801.8" y="213" width="10.8" height="15.0" fill="rgb(233,82,16)" rx="2" ry="2" />
<text  x="804.76" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (3,507 us., 0.03%)</title><rect x="778.6" y="165" width="0.4" height="15.0" fill="rgb(217,189,12)" rx="2" ry="2" />
<text  x="781.62" y="175.5" ></text>
</g>
<g >
<title>torch_int/functional/fused.py(24):_dq_add_layernorm_q_cpp (1,353,122 us., 11.09%)</title><rect x="188.2" y="245" width="130.9" height="15.0" fill="rgb(238,159,23)" rx="2" ry="2" />
<text  x="191.22" y="255.5" >torch_int/functi..</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (1,530 us., 0.01%)</title><rect x="904.5" y="245" width="0.1" height="15.0" fill="rgb(223,156,41)" rx="2" ry="2" />
<text  x="907.50" y="255.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (5,521 us., 0.05%)</title><rect x="319.6" y="117" width="0.6" height="15.0" fill="rgb(234,150,5)" rx="2" ry="2" />
<text  x="322.63" y="127.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (169,625 us., 1.39%)</title><rect x="416.2" y="149" width="16.4" height="15.0" fill="rgb(249,149,14)" rx="2" ry="2" />
<text  x="419.20" y="159.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (7,625 us., 0.06%)</title><rect x="187.3" y="213" width="0.8" height="15.0" fill="rgb(218,138,5)" rx="2" ry="2" />
<text  x="190.32" y="223.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (3,577,342 us., 29.32%)</title><rect x="432.6" y="85" width="346.0" height="15.0" fill="rgb(245,160,22)" rx="2" ry="2" />
<text  x="435.61" y="95.5" >torch/autograd/grad_mode.py(27):_decorate_cont..</text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (5,521 us., 0.05%)</title><rect x="319.6" y="197" width="0.6" height="15.0" fill="rgb(225,38,47)" rx="2" ry="2" />
<text  x="322.63" y="207.5" ></text>
</g>
<g >
<title>torch_int/nn/linear.py(92):_forward (105,806 us., 0.87%)</title><rect x="791.5" y="245" width="10.3" height="15.0" fill="rgb(206,61,15)" rx="2" ry="2" />
<text  x="794.53" y="255.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (7,625 us., 0.06%)</title><rect x="187.3" y="181" width="0.8" height="15.0" fill="rgb(254,187,4)" rx="2" ry="2" />
<text  x="190.32" y="191.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (112,292 us., 0.92%)</title><rect x="801.8" y="133" width="10.8" height="15.0" fill="rgb(247,163,32)" rx="2" ry="2" />
<text  x="804.76" y="143.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (949,402 us., 7.78%)</title><rect x="320.2" y="165" width="91.8" height="15.0" fill="rgb(246,50,42)" rx="2" ry="2" />
<text  x="323.17" y="175.5" >nn.Module:..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (62,896 us., 0.52%)</title><rect x="785.4" y="69" width="6.1" height="15.0" fill="rgb(237,57,33)" rx="2" ry="2" />
<text  x="788.44" y="79.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (946,562 us., 7.76%)</title><rect x="812.6" y="133" width="91.6" height="15.0" fill="rgb(235,148,34)" rx="2" ry="2" />
<text  x="815.62" y="143.5" >transforme..</text>
</g>
<g >
<title>torch_int/nn/opt.py(300):__prepare_decoder_attention_mask (1,530 us., 0.01%)</title><rect x="904.5" y="261" width="0.1" height="15.0" fill="rgb(230,20,18)" rx="2" ry="2" />
<text  x="907.50" y="271.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,833,447 us., 15.03%)</title><rect x="10.0" y="165" width="177.3" height="15.0" fill="rgb(248,90,1)" rx="2" ry="2" />
<text  x="13.00" y="175.5" >torch/autograd/grad_mod..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (949,402 us., 7.78%)</title><rect x="320.2" y="101" width="91.8" height="15.0" fill="rgb(220,225,50)" rx="2" ry="2" />
<text  x="323.17" y="111.5" >nn.Module:..</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (60,219 us., 0.49%)</title><rect x="779.6" y="165" width="5.8" height="15.0" fill="rgb(245,119,53)" rx="2" ry="2" />
<text  x="782.62" y="175.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (169,625 us., 1.39%)</title><rect x="416.2" y="117" width="16.4" height="15.0" fill="rgb(245,42,1)" rx="2" ry="2" />
<text  x="419.20" y="127.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (7,625 us., 0.06%)</title><rect x="187.3" y="229" width="0.8" height="15.0" fill="rgb(222,131,21)" rx="2" ry="2" />
<text  x="190.32" y="239.5" ></text>
</g>
<g >
<title>&lt;built-in_method_dq_add_layernorm_q_of_PyCapsule_object_at_0x7f88344b8f30&gt; (1,353,122 us., 11.09%)</title><rect x="188.2" y="261" width="130.9" height="15.0" fill="rgb(236,173,14)" rx="2" ry="2" />
<text  x="191.22" y="271.5" >&lt;built-in_method..</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (5,658 us., 0.05%)</title><rect x="319.1" y="197" width="0.5" height="15.0" fill="rgb(238,203,19)" rx="2" ry="2" />
<text  x="322.09" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_LayerNorm (6,881 us., 0.06%)</title><rect x="779.0" y="213" width="0.6" height="15.0" fill="rgb(209,208,9)" rx="2" ry="2" />
<text  x="781.95" y="223.5" ></text>
</g>
<g >
<title>&lt;built-in_method_embedding_of_type_object_at_0x7f89290269c0&gt; (11,179 us., 0.09%)</title><rect x="319.1" y="261" width="1.1" height="15.0" fill="rgb(221,68,35)" rx="2" ry="2" />
<text  x="322.09" y="271.5" ></text>
</g>
<g >
<title>&lt;built-in_function_linear&gt; (1,833,447 us., 15.03%)</title><rect x="10.0" y="261" width="177.3" height="15.0" fill="rgb(224,102,27)" rx="2" ry="2" />
<text  x="13.00" y="271.5" >&lt;built-in_function_line..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,530 us., 0.01%)</title><rect x="904.5" y="181" width="0.1" height="15.0" fill="rgb(226,10,17)" rx="2" ry="2" />
<text  x="907.50" y="191.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (2,937,220 us., 24.07%)</title><rect x="905.9" y="261" width="284.0" height="15.0" fill="rgb(213,207,31)" rx="2" ry="2" />
<text  x="908.88" y="271.5" >torch_int/nn/opt.py(46):_forward</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (949,402 us., 7.78%)</title><rect x="320.2" y="133" width="91.8" height="15.0" fill="rgb(215,103,48)" rx="2" ry="2" />
<text  x="323.17" y="143.5" >nn.Module:..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (112,292 us., 0.92%)</title><rect x="801.8" y="181" width="10.8" height="15.0" fill="rgb(238,60,3)" rx="2" ry="2" />
<text  x="804.76" y="191.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(43):__shape (169,625 us., 1.39%)</title><rect x="416.2" y="245" width="16.4" height="15.0" fill="rgb(210,98,26)" rx="2" ry="2" />
<text  x="419.20" y="255.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (949,402 us., 7.78%)</title><rect x="320.2" y="85" width="91.8" height="15.0" fill="rgb(252,194,34)" rx="2" ry="2" />
<text  x="323.17" y="95.5" >profiling/..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (2,937,220 us., 24.07%)</title><rect x="905.9" y="245" width="284.0" height="15.0" fill="rgb(240,166,1)" rx="2" ry="2" />
<text  x="908.88" y="255.5" >torch/autograd/grad_mode.py(24):_decor..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (112,292 us., 0.92%)</title><rect x="801.8" y="229" width="10.8" height="15.0" fill="rgb(222,103,20)" rx="2" ry="2" />
<text  x="804.76" y="239.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (2,937,220 us., 24.07%)</title><rect x="905.9" y="181" width="284.0" height="15.0" fill="rgb(211,152,54)" rx="2" ry="2" />
<text  x="908.88" y="191.5" >torch_int/nn/opt.py(321):_forward</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (7,625 us., 0.06%)</title><rect x="187.3" y="197" width="0.8" height="15.0" fill="rgb(217,69,42)" rx="2" ry="2" />
<text  x="190.32" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (169,625 us., 1.39%)</title><rect x="416.2" y="133" width="16.4" height="15.0" fill="rgb(226,159,25)" rx="2" ry="2" />
<text  x="419.20" y="143.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (1,708 us., 0.01%)</title><rect x="188.1" y="213" width="0.1" height="15.0" fill="rgb(248,181,19)" rx="2" ry="2" />
<text  x="191.06" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (112,292 us., 0.92%)</title><rect x="801.8" y="149" width="10.8" height="15.0" fill="rgb(206,115,49)" rx="2" ry="2" />
<text  x="804.76" y="159.5" ></text>
</g>
<g >
<title>torch/nn/functional.py(2488):_layer_norm (6,881 us., 0.06%)</title><rect x="779.0" y="245" width="0.6" height="15.0" fill="rgb(240,100,22)" rx="2" ry="2" />
<text  x="781.95" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (946,562 us., 7.76%)</title><rect x="812.6" y="117" width="91.6" height="15.0" fill="rgb(229,228,5)" rx="2" ry="2" />
<text  x="815.62" y="127.5" >nn.Module:..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (62,896 us., 0.52%)</title><rect x="785.4" y="133" width="6.1" height="15.0" fill="rgb(209,44,17)" rx="2" ry="2" />
<text  x="788.44" y="143.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (6,881 us., 0.06%)</title><rect x="779.0" y="133" width="0.6" height="15.0" fill="rgb(253,164,21)" rx="2" ry="2" />
<text  x="781.95" y="143.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (1,353,122 us., 11.09%)</title><rect x="188.2" y="197" width="130.9" height="15.0" fill="rgb(246,15,7)" rx="2" ry="2" />
<text  x="191.22" y="207.5" >torch_int/nn/opt..</text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (105,806 us., 0.87%)</title><rect x="791.5" y="165" width="10.3" height="15.0" fill="rgb(212,17,10)" rx="2" ry="2" />
<text  x="794.53" y="175.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (1,708 us., 0.01%)</title><rect x="188.1" y="245" width="0.1" height="15.0" fill="rgb(248,14,53)" rx="2" ry="2" />
<text  x="191.06" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (15,500 us., 0.13%)</title><rect x="414.7" y="197" width="1.5" height="15.0" fill="rgb(226,143,47)" rx="2" ry="2" />
<text  x="417.71" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (62,896 us., 0.52%)</title><rect x="785.4" y="101" width="6.1" height="15.0" fill="rgb(220,118,23)" rx="2" ry="2" />
<text  x="788.44" y="111.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (105,806 us., 0.87%)</title><rect x="791.5" y="117" width="10.3" height="15.0" fill="rgb(232,146,16)" rx="2" ry="2" />
<text  x="794.53" y="127.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (3,577,342 us., 29.32%)</title><rect x="432.6" y="229" width="346.0" height="15.0" fill="rgb(250,26,27)" rx="2" ry="2" />
<text  x="435.61" y="239.5" >torch/autograd/grad_mode.py(24):_decorate_cont..</text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (105,806 us., 0.87%)</title><rect x="791.5" y="149" width="10.3" height="15.0" fill="rgb(212,168,32)" rx="2" ry="2" />
<text  x="794.53" y="159.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (62,896 us., 0.52%)</title><rect x="785.4" y="181" width="6.1" height="15.0" fill="rgb(226,64,40)" rx="2" ry="2" />
<text  x="788.44" y="191.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (60,219 us., 0.49%)</title><rect x="779.6" y="101" width="5.8" height="15.0" fill="rgb(233,66,12)" rx="2" ry="2" />
<text  x="782.62" y="111.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (1,833,447 us., 15.03%)</title><rect x="10.0" y="197" width="177.3" height="15.0" fill="rgb(244,22,30)" rx="2" ry="2" />
<text  x="13.00" y="207.5" >nn.Module:_Int8OPTForCa..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (60,219 us., 0.49%)</title><rect x="779.6" y="133" width="5.8" height="15.0" fill="rgb(206,94,18)" rx="2" ry="2" />
<text  x="782.62" y="143.5" ></text>
</g>
<g >
<title>&lt;built-in_method_linear_relu_a8_w8_b8_o8_of_PyCapsule_object_at_0x7f88344b8e70&gt; (112,292 us., 0.92%)</title><rect x="801.8" y="261" width="10.8" height="15.0" fill="rgb(206,156,23)" rx="2" ry="2" />
<text  x="804.76" y="271.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (949,402 us., 7.78%)</title><rect x="320.2" y="69" width="91.8" height="15.0" fill="rgb(228,121,35)" rx="2" ry="2" />
<text  x="323.17" y="79.5" >torch/auto..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (15,500 us., 0.13%)</title><rect x="414.7" y="181" width="1.5" height="15.0" fill="rgb(244,229,12)" rx="2" ry="2" />
<text  x="417.71" y="191.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (3,507 us., 0.03%)</title><rect x="778.6" y="181" width="0.4" height="15.0" fill="rgb(251,33,40)" rx="2" ry="2" />
<text  x="781.62" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (1,708 us., 0.01%)</title><rect x="188.1" y="165" width="0.1" height="15.0" fill="rgb(226,158,46)" rx="2" ry="2" />
<text  x="191.06" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (105,806 us., 0.87%)</title><rect x="791.5" y="69" width="10.3" height="15.0" fill="rgb(234,181,38)" rx="2" ry="2" />
<text  x="794.53" y="79.5" ></text>
</g>
<g >
<title>nn.Module:_Linear (1,833,447 us., 15.03%)</title><rect x="10.0" y="229" width="177.3" height="15.0" fill="rgb(215,59,14)" rx="2" ry="2" />
<text  x="13.00" y="239.5" >nn.Module:_Linear</text>
</g>
<g >
<title>&lt;built-in_method_encode_of_str_object_at_0x7f8834b1b450&gt; (4,743,818 us., 38.88%)</title><rect x="320.2" y="261" width="458.8" height="15.0" fill="rgb(227,70,1)" rx="2" ry="2" />
<text  x="323.17" y="271.5" >&lt;built-in_method_encode_of_str_object_at_0x7f8834b1b450&gt;</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (169,625 us., 1.39%)</title><rect x="416.2" y="85" width="16.4" height="15.0" fill="rgb(208,90,0)" rx="2" ry="2" />
<text  x="419.20" y="95.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (60,219 us., 0.49%)</title><rect x="779.6" y="85" width="5.8" height="15.0" fill="rgb(251,142,28)" rx="2" ry="2" />
<text  x="782.62" y="95.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (3,577,342 us., 29.32%)</title><rect x="432.6" y="181" width="346.0" height="15.0" fill="rgb(225,209,16)" rx="2" ry="2" />
<text  x="435.61" y="191.5" >nn.Module:_Int8OPTDecoderLayer</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (62,896 us., 0.52%)</title><rect x="785.4" y="37" width="6.1" height="15.0" fill="rgb(229,116,43)" rx="2" ry="2" />
<text  x="788.44" y="47.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (3,577,342 us., 29.32%)</title><rect x="432.6" y="213" width="346.0" height="15.0" fill="rgb(205,190,39)" rx="2" ry="2" />
<text  x="435.61" y="223.5" >nn.Module:_Int8OPTAttention</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (12,676 us., 0.10%)</title><rect x="904.6" y="245" width="1.3" height="15.0" fill="rgb(243,7,7)" rx="2" ry="2" />
<text  x="907.65" y="255.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,353,122 us., 11.09%)</title><rect x="188.2" y="85" width="130.9" height="15.0" fill="rgb(208,135,26)" rx="2" ry="2" />
<text  x="191.22" y="95.5" >torch/autograd/g..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,708 us., 0.01%)</title><rect x="188.1" y="181" width="0.1" height="15.0" fill="rgb(214,113,47)" rx="2" ry="2" />
<text  x="191.06" y="191.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (28,118 us., 0.23%)</title><rect x="412.0" y="197" width="2.7" height="15.0" fill="rgb(250,70,32)" rx="2" ry="2" />
<text  x="414.99" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (946,562 us., 7.76%)</title><rect x="812.6" y="149" width="91.6" height="15.0" fill="rgb(243,194,3)" rx="2" ry="2" />
<text  x="815.62" y="159.5" >nn.Module:..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (2,499 us., 0.02%)</title><rect x="904.3" y="165" width="0.2" height="15.0" fill="rgb(245,65,16)" rx="2" ry="2" />
<text  x="907.26" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (3,577,342 us., 29.32%)</title><rect x="432.6" y="149" width="346.0" height="15.0" fill="rgb(222,198,37)" rx="2" ry="2" />
<text  x="435.61" y="159.5" >nn.Module:_Int8OPTDecoder</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (1,708 us., 0.01%)</title><rect x="188.1" y="197" width="0.1" height="15.0" fill="rgb(244,132,0)" rx="2" ry="2" />
<text  x="191.06" y="207.5" ></text>
</g>
<g >
<title>torch_int/nn/linear.py(122):_forward (112,292 us., 0.92%)</title><rect x="801.8" y="245" width="10.8" height="15.0" fill="rgb(215,57,37)" rx="2" ry="2" />
<text  x="804.76" y="255.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (6,881 us., 0.06%)</title><rect x="779.0" y="165" width="0.6" height="15.0" fill="rgb(254,51,45)" rx="2" ry="2" />
<text  x="781.95" y="175.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (3,577,342 us., 29.32%)</title><rect x="432.6" y="165" width="346.0" height="15.0" fill="rgb(237,94,9)" rx="2" ry="2" />
<text  x="435.61" y="175.5" >torch_int/nn/opt.py(321):_forward</text>
</g>
<g >
<title>torch_int/nn/fused.py(13):_forward (1,353,122 us., 11.09%)</title><rect x="188.2" y="229" width="130.9" height="15.0" fill="rgb(217,63,13)" rx="2" ry="2" />
<text  x="191.22" y="239.5" >torch_int/nn/fus..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (105,806 us., 0.87%)</title><rect x="791.5" y="53" width="10.3" height="15.0" fill="rgb(236,11,36)" rx="2" ry="2" />
<text  x="794.53" y="63.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (2,937,220 us., 24.07%)</title><rect x="905.9" y="133" width="284.0" height="15.0" fill="rgb(251,191,54)" rx="2" ry="2" />
<text  x="908.88" y="143.5" >nn.Module:_Int8OPTForCausalLM</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (12,676 us., 0.10%)</title><rect x="904.6" y="213" width="1.3" height="15.0" fill="rgb(224,143,3)" rx="2" ry="2" />
<text  x="907.65" y="223.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (5,658 us., 0.05%)</title><rect x="319.1" y="133" width="0.5" height="15.0" fill="rgb(215,18,17)" rx="2" ry="2" />
<text  x="322.09" y="143.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (28,118 us., 0.23%)</title><rect x="412.0" y="165" width="2.7" height="15.0" fill="rgb(219,148,46)" rx="2" ry="2" />
<text  x="414.99" y="175.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (5,521 us., 0.05%)</title><rect x="319.6" y="101" width="0.6" height="15.0" fill="rgb(239,61,11)" rx="2" ry="2" />
<text  x="322.63" y="111.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,708 us., 0.01%)</title><rect x="188.1" y="149" width="0.1" height="15.0" fill="rgb(228,74,51)" rx="2" ry="2" />
<text  x="191.06" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (1,530 us., 0.01%)</title><rect x="904.5" y="197" width="0.1" height="15.0" fill="rgb(250,94,54)" rx="2" ry="2" />
<text  x="907.50" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (1,708 us., 0.01%)</title><rect x="188.1" y="229" width="0.1" height="15.0" fill="rgb(248,186,9)" rx="2" ry="2" />
<text  x="191.06" y="239.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (946,562 us., 7.76%)</title><rect x="812.6" y="229" width="91.6" height="15.0" fill="rgb(212,36,46)" rx="2" ry="2" />
<text  x="815.62" y="239.5" >torch/auto..</text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (169,625 us., 1.39%)</title><rect x="416.2" y="181" width="16.4" height="15.0" fill="rgb(225,34,34)" rx="2" ry="2" />
<text  x="419.20" y="191.5" ></text>
</g>
<g >
<title>torch/nn/modules/sparse.py(157):_forward (11,179 us., 0.09%)</title><rect x="319.1" y="229" width="1.1" height="15.0" fill="rgb(253,125,11)" rx="2" ry="2" />
<text  x="322.09" y="239.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (946,562 us., 7.76%)</title><rect x="812.6" y="101" width="91.6" height="15.0" fill="rgb(223,19,11)" rx="2" ry="2" />
<text  x="815.62" y="111.5" >profiling/..</text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (105,806 us., 0.87%)</title><rect x="791.5" y="197" width="10.3" height="15.0" fill="rgb(218,19,17)" rx="2" ry="2" />
<text  x="794.53" y="207.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (3,507 us., 0.03%)</title><rect x="778.6" y="213" width="0.4" height="15.0" fill="rgb(242,172,47)" rx="2" ry="2" />
<text  x="781.62" y="223.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (5,521 us., 0.05%)</title><rect x="319.6" y="181" width="0.6" height="15.0" fill="rgb(227,90,15)" rx="2" ry="2" />
<text  x="322.63" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (2,937,220 us., 24.07%)</title><rect x="905.9" y="229" width="284.0" height="15.0" fill="rgb(208,28,34)" rx="2" ry="2" />
<text  x="908.88" y="239.5" >nn.Module:_Int8OPTAttention</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (105,806 us., 0.87%)</title><rect x="791.5" y="133" width="10.3" height="15.0" fill="rgb(254,180,54)" rx="2" ry="2" />
<text  x="794.53" y="143.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (949,402 us., 7.78%)</title><rect x="320.2" y="229" width="91.8" height="15.0" fill="rgb(214,37,3)" rx="2" ry="2" />
<text  x="323.17" y="239.5" >torch_int/..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (949,402 us., 7.78%)</title><rect x="320.2" y="213" width="91.8" height="15.0" fill="rgb(215,166,12)" rx="2" ry="2" />
<text  x="323.17" y="223.5" >torch/auto..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (105,806 us., 0.87%)</title><rect x="791.5" y="85" width="10.3" height="15.0" fill="rgb(211,171,0)" rx="2" ry="2" />
<text  x="794.53" y="95.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (15,500 us., 0.13%)</title><rect x="414.7" y="213" width="1.5" height="15.0" fill="rgb(253,162,22)" rx="2" ry="2" />
<text  x="417.71" y="223.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(300):__prepare_decoder_attention_mask (28,118 us., 0.23%)</title><rect x="412.0" y="245" width="2.7" height="15.0" fill="rgb(246,210,6)" rx="2" ry="2" />
<text  x="414.99" y="255.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,530 us., 0.01%)</title><rect x="904.5" y="213" width="0.1" height="15.0" fill="rgb(219,229,26)" rx="2" ry="2" />
<text  x="907.50" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (5,521 us., 0.05%)</title><rect x="319.6" y="133" width="0.6" height="15.0" fill="rgb(249,106,3)" rx="2" ry="2" />
<text  x="322.63" y="143.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(89):__expand_mask (3,507 us., 0.03%)</title><rect x="778.6" y="245" width="0.4" height="15.0" fill="rgb(215,196,4)" rx="2" ry="2" />
<text  x="781.62" y="255.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (949,402 us., 7.78%)</title><rect x="320.2" y="117" width="91.8" height="15.0" fill="rgb(220,41,35)" rx="2" ry="2" />
<text  x="323.17" y="127.5" >transforme..</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (949,402 us., 7.78%)</title><rect x="320.2" y="149" width="91.8" height="15.0" fill="rgb(217,134,48)" rx="2" ry="2" />
<text  x="323.17" y="159.5" >torch_int/..</text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (62,896 us., 0.52%)</title><rect x="785.4" y="149" width="6.1" height="15.0" fill="rgb(217,36,41)" rx="2" ry="2" />
<text  x="788.44" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (60,219 us., 0.49%)</title><rect x="779.6" y="117" width="5.8" height="15.0" fill="rgb(229,89,4)" rx="2" ry="2" />
<text  x="782.62" y="127.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (946,562 us., 7.76%)</title><rect x="812.6" y="197" width="91.6" height="15.0" fill="rgb(207,167,20)" rx="2" ry="2" />
<text  x="815.62" y="207.5" >torch_int/..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (169,625 us., 1.39%)</title><rect x="416.2" y="69" width="16.4" height="15.0" fill="rgb(236,151,32)" rx="2" ry="2" />
<text  x="419.20" y="79.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (12,676 us., 0.10%)</title><rect x="904.6" y="197" width="1.3" height="15.0" fill="rgb(252,144,25)" rx="2" ry="2" />
<text  x="907.65" y="207.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (3,507 us., 0.03%)</title><rect x="778.6" y="149" width="0.4" height="15.0" fill="rgb(210,51,49)" rx="2" ry="2" />
<text  x="781.62" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (169,625 us., 1.39%)</title><rect x="416.2" y="197" width="16.4" height="15.0" fill="rgb(230,34,5)" rx="2" ry="2" />
<text  x="419.20" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (949,402 us., 7.78%)</title><rect x="320.2" y="197" width="91.8" height="15.0" fill="rgb(206,162,38)" rx="2" ry="2" />
<text  x="323.17" y="207.5" >nn.Module:..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (12,676 us., 0.10%)</title><rect x="904.6" y="181" width="1.3" height="15.0" fill="rgb(234,21,38)" rx="2" ry="2" />
<text  x="907.65" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_W8A8B32O32LinearWithScaling (123,115 us., 1.01%)</title><rect x="779.6" y="213" width="11.9" height="15.0" fill="rgb(247,55,4)" rx="2" ry="2" />
<text  x="782.62" y="223.5" ></text>
</g>
<g >
<title>&lt;built-in_method_add_of_type_object_at_0x7f89290269c0&gt; (7,625 us., 0.06%)</title><rect x="187.3" y="261" width="0.8" height="15.0" fill="rgb(226,106,51)" rx="2" ry="2" />
<text  x="190.32" y="271.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (946,562 us., 7.76%)</title><rect x="812.6" y="213" width="91.6" height="15.0" fill="rgb(217,134,41)" rx="2" ry="2" />
<text  x="815.62" y="223.5" >nn.Module:..</text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (169,625 us., 1.39%)</title><rect x="416.2" y="229" width="16.4" height="15.0" fill="rgb(254,225,48)" rx="2" ry="2" />
<text  x="419.20" y="239.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (62,896 us., 0.52%)</title><rect x="785.4" y="117" width="6.1" height="15.0" fill="rgb(224,86,23)" rx="2" ry="2" />
<text  x="788.44" y="127.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (62,896 us., 0.52%)</title><rect x="785.4" y="85" width="6.1" height="15.0" fill="rgb(230,210,39)" rx="2" ry="2" />
<text  x="788.44" y="95.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,708 us., 0.01%)</title><rect x="188.1" y="133" width="0.1" height="15.0" fill="rgb(223,142,49)" rx="2" ry="2" />
<text  x="191.06" y="143.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (62,896 us., 0.52%)</title><rect x="785.4" y="165" width="6.1" height="15.0" fill="rgb(221,89,16)" rx="2" ry="2" />
<text  x="788.44" y="175.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (2,499 us., 0.02%)</title><rect x="904.3" y="245" width="0.2" height="15.0" fill="rgb(236,191,45)" rx="2" ry="2" />
<text  x="907.26" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (6,881 us., 0.06%)</title><rect x="779.0" y="181" width="0.6" height="15.0" fill="rgb(223,207,10)" rx="2" ry="2" />
<text  x="781.95" y="191.5" ></text>
</g>
<g >
<title>&lt;built-in_method_max_of_type_object_at_0x7f89290269c0&gt; (946,562 us., 7.76%)</title><rect x="812.6" y="261" width="91.6" height="15.0" fill="rgb(210,149,10)" rx="2" ry="2" />
<text  x="815.62" y="271.5" >&lt;built-in_..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (6,881 us., 0.06%)</title><rect x="779.0" y="149" width="0.6" height="15.0" fill="rgb(249,69,7)" rx="2" ry="2" />
<text  x="781.95" y="159.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (112,292 us., 0.92%)</title><rect x="801.8" y="85" width="10.8" height="15.0" fill="rgb(248,176,2)" rx="2" ry="2" />
<text  x="804.76" y="95.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (5,658 us., 0.05%)</title><rect x="319.1" y="165" width="0.5" height="15.0" fill="rgb(236,33,38)" rx="2" ry="2" />
<text  x="322.09" y="175.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (946,562 us., 7.76%)</title><rect x="812.6" y="85" width="91.6" height="15.0" fill="rgb(242,87,51)" rx="2" ry="2" />
<text  x="815.62" y="95.5" >torch/auto..</text>
</g>
<g >
<title>&lt;built-in_method_linear_a8_w8_b8_o8_of_PyCapsule_object_at_0x7f88344b8f00&gt; (105,806 us., 0.87%)</title><rect x="791.5" y="261" width="10.3" height="15.0" fill="rgb(206,138,5)" rx="2" ry="2" />
<text  x="794.53" y="271.5" ></text>
</g>
<g >
<title>&lt;built-in_method_layer_norm_of_type_object_at_0x7f89290269c0&gt; (6,881 us., 0.06%)</title><rect x="779.0" y="261" width="0.6" height="15.0" fill="rgb(237,206,14)" rx="2" ry="2" />
<text  x="781.95" y="271.5" ></text>
</g>
<g >
<title>&lt;built-in_method_linear_a8_w8_b32_o32_with_scaling_of_PyCapsule_object_at_0x7f88344b8ed0&gt; (123,115 us., 1.01%)</title><rect x="779.6" y="261" width="11.9" height="15.0" fill="rgb(253,78,33)" rx="2" ry="2" />
<text  x="782.62" y="271.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (105,806 us., 0.87%)</title><rect x="791.5" y="181" width="10.3" height="15.0" fill="rgb(233,0,22)" rx="2" ry="2" />
<text  x="794.53" y="191.5" ></text>
</g>
<g >
<title>torch/nn/functional.py(1804):_softmax (949,402 us., 7.78%)</title><rect x="320.2" y="245" width="91.8" height="15.0" fill="rgb(225,63,33)" rx="2" ry="2" />
<text  x="323.17" y="255.5" >torch/nn/f..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (105,806 us., 0.87%)</title><rect x="791.5" y="101" width="10.3" height="15.0" fill="rgb(221,38,47)" rx="2" ry="2" />
<text  x="794.53" y="111.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (2,499 us., 0.02%)</title><rect x="904.3" y="181" width="0.2" height="15.0" fill="rgb(246,12,36)" rx="2" ry="2" />
<text  x="907.26" y="191.5" ></text>
</g>
<g >
<title>&lt;built-in_method_zeros_like_of_type_object_at_0x7f89290269c0&gt; (2,499 us., 0.02%)</title><rect x="904.3" y="261" width="0.2" height="15.0" fill="rgb(238,40,43)" rx="2" ry="2" />
<text  x="907.26" y="271.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (28,118 us., 0.23%)</title><rect x="412.0" y="181" width="2.7" height="15.0" fill="rgb(212,137,39)" rx="2" ry="2" />
<text  x="414.99" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (3,577,342 us., 29.32%)</title><rect x="432.6" y="117" width="346.0" height="15.0" fill="rgb(243,155,49)" rx="2" ry="2" />
<text  x="435.61" y="127.5" >nn.Module:_Int8OPTForCausalLM</text>
</g>
<g >
<title>nn.Module:_Embedding (5,658 us., 0.05%)</title><rect x="319.1" y="213" width="0.5" height="15.0" fill="rgb(250,194,26)" rx="2" ry="2" />
<text  x="322.09" y="223.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (2,937,220 us., 24.07%)</title><rect x="905.9" y="149" width="284.0" height="15.0" fill="rgb(214,226,26)" rx="2" ry="2" />
<text  x="908.88" y="159.5" >transformers/models/opt/modeling_opt.p..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (1,353,122 us., 11.09%)</title><rect x="188.2" y="149" width="130.9" height="15.0" fill="rgb(245,0,33)" rx="2" ry="2" />
<text  x="191.22" y="159.5" >nn.Module:_Int8O..</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (6,881 us., 0.06%)</title><rect x="779.0" y="197" width="0.6" height="15.0" fill="rgb(228,47,15)" rx="2" ry="2" />
<text  x="781.95" y="207.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (3,577,342 us., 29.32%)</title><rect x="432.6" y="133" width="346.0" height="15.0" fill="rgb(228,110,30)" rx="2" ry="2" />
<text  x="435.61" y="143.5" >transformers/models/opt/modeling_opt.py(840):_..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (7,625 us., 0.06%)</title><rect x="187.3" y="165" width="0.8" height="15.0" fill="rgb(240,196,53)" rx="2" ry="2" />
<text  x="190.32" y="175.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (949,402 us., 7.78%)</title><rect x="320.2" y="181" width="91.8" height="15.0" fill="rgb(236,168,27)" rx="2" ry="2" />
<text  x="323.17" y="191.5" >torch_int/..</text>
</g>
<g >
<title>nn.Module:_DQ_Add_LayerNorm_Q (1,353,122 us., 11.09%)</title><rect x="188.2" y="213" width="130.9" height="15.0" fill="rgb(211,53,33)" rx="2" ry="2" />
<text  x="191.22" y="223.5" >nn.Module:_DQ_Ad..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (2,937,220 us., 24.07%)</title><rect x="905.9" y="165" width="284.0" height="15.0" fill="rgb(229,215,41)" rx="2" ry="2" />
<text  x="908.88" y="175.5" >nn.Module:_Int8OPTDecoder</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (1,353,122 us., 11.09%)</title><rect x="188.2" y="117" width="130.9" height="15.0" fill="rgb(222,128,14)" rx="2" ry="2" />
<text  x="191.22" y="127.5" >nn.Module:_Int8O..</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (7,625 us., 0.06%)</title><rect x="187.3" y="245" width="0.8" height="15.0" fill="rgb(250,106,47)" rx="2" ry="2" />
<text  x="190.32" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (15,500 us., 0.13%)</title><rect x="414.7" y="229" width="1.5" height="15.0" fill="rgb(236,201,21)" rx="2" ry="2" />
<text  x="417.71" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (169,625 us., 1.39%)</title><rect x="416.2" y="101" width="16.4" height="15.0" fill="rgb(246,159,29)" rx="2" ry="2" />
<text  x="419.20" y="111.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (5,658 us., 0.05%)</title><rect x="319.1" y="149" width="0.5" height="15.0" fill="rgb(223,131,16)" rx="2" ry="2" />
<text  x="322.09" y="159.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (28,118 us., 0.23%)</title><rect x="412.0" y="229" width="2.7" height="15.0" fill="rgb(208,42,33)" rx="2" ry="2" />
<text  x="414.99" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (1,353,122 us., 11.09%)</title><rect x="188.2" y="181" width="130.9" height="15.0" fill="rgb(246,153,48)" rx="2" ry="2" />
<text  x="191.22" y="191.5" >nn.Module:_Int8O..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (105,806 us., 0.87%)</title><rect x="791.5" y="229" width="10.3" height="15.0" fill="rgb(251,207,51)" rx="2" ry="2" />
<text  x="794.53" y="239.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (62,896 us., 0.52%)</title><rect x="785.4" y="197" width="6.1" height="15.0" fill="rgb(210,0,25)" rx="2" ry="2" />
<text  x="788.44" y="207.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (60,219 us., 0.49%)</title><rect x="779.6" y="197" width="5.8" height="15.0" fill="rgb(205,184,4)" rx="2" ry="2" />
<text  x="782.62" y="207.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (946,562 us., 7.76%)</title><rect x="812.6" y="245" width="91.6" height="15.0" fill="rgb(252,136,12)" rx="2" ry="2" />
<text  x="815.62" y="255.5" >torch_int/..</text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (3,577,342 us., 29.32%)</title><rect x="432.6" y="245" width="346.0" height="15.0" fill="rgb(235,181,24)" rx="2" ry="2" />
<text  x="435.61" y="255.5" >torch_int/nn/opt.py(46):_forward</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (2,937,220 us., 24.07%)</title><rect x="905.9" y="197" width="284.0" height="15.0" fill="rgb(207,221,53)" rx="2" ry="2" />
<text  x="908.88" y="207.5" >nn.Module:_Int8OPTDecoderLayer</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,833,447 us., 15.03%)</title><rect x="10.0" y="213" width="177.3" height="15.0" fill="rgb(254,44,27)" rx="2" ry="2" />
<text  x="13.00" y="223.5" >transformers/models/opt..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,530 us., 0.01%)</title><rect x="904.5" y="165" width="0.1" height="15.0" fill="rgb(215,152,7)" rx="2" ry="2" />
<text  x="907.50" y="175.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (2,937,220 us., 24.07%)</title><rect x="905.9" y="117" width="284.0" height="15.0" fill="rgb(234,27,31)" rx="2" ry="2" />
<text  x="908.88" y="127.5" >profiling/utils.py(18):_profile_model</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (112,292 us., 0.92%)</title><rect x="801.8" y="101" width="10.8" height="15.0" fill="rgb(236,59,31)" rx="2" ry="2" />
<text  x="804.76" y="111.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (3,507 us., 0.03%)</title><rect x="778.6" y="197" width="0.4" height="15.0" fill="rgb(251,135,8)" rx="2" ry="2" />
<text  x="781.62" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (5,658 us., 0.05%)</title><rect x="319.1" y="181" width="0.5" height="15.0" fill="rgb(205,124,30)" rx="2" ry="2" />
<text  x="322.09" y="191.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (15,500 us., 0.13%)</title><rect x="414.7" y="245" width="1.5" height="15.0" fill="rgb(225,116,44)" rx="2" ry="2" />
<text  x="417.71" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (2,499 us., 0.02%)</title><rect x="904.3" y="197" width="0.2" height="15.0" fill="rgb(250,99,32)" rx="2" ry="2" />
<text  x="907.26" y="207.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (1,353,122 us., 11.09%)</title><rect x="188.2" y="165" width="130.9" height="15.0" fill="rgb(241,143,43)" rx="2" ry="2" />
<text  x="191.22" y="175.5" >torch_int/nn/opt..</text>
</g>
<g >
<title>torch_int/nn/linear.py(62):_forward (123,115 us., 1.01%)</title><rect x="779.6" y="245" width="11.9" height="15.0" fill="rgb(247,155,44)" rx="2" ry="2" />
<text  x="782.62" y="255.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (2,499 us., 0.02%)</title><rect x="904.3" y="213" width="0.2" height="15.0" fill="rgb(246,194,30)" rx="2" ry="2" />
<text  x="907.26" y="223.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (62,896 us., 0.52%)</title><rect x="785.4" y="53" width="6.1" height="15.0" fill="rgb(223,195,34)" rx="2" ry="2" />
<text  x="788.44" y="63.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,353,122 us., 11.09%)</title><rect x="188.2" y="133" width="130.9" height="15.0" fill="rgb(227,186,27)" rx="2" ry="2" />
<text  x="191.22" y="143.5" >transformers/mod..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (60,219 us., 0.49%)</title><rect x="779.6" y="181" width="5.8" height="15.0" fill="rgb(207,83,49)" rx="2" ry="2" />
<text  x="782.62" y="191.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (105,806 us., 0.87%)</title><rect x="791.5" y="37" width="10.3" height="15.0" fill="rgb(239,204,3)" rx="2" ry="2" />
<text  x="794.53" y="47.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (123,115 us., 1.01%)</title><rect x="779.6" y="229" width="11.9" height="15.0" fill="rgb(224,34,0)" rx="2" ry="2" />
<text  x="782.62" y="239.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (3,507 us., 0.03%)</title><rect x="778.6" y="133" width="0.4" height="15.0" fill="rgb(211,12,1)" rx="2" ry="2" />
<text  x="781.62" y="143.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (169,625 us., 1.39%)</title><rect x="416.2" y="165" width="16.4" height="15.0" fill="rgb(224,227,3)" rx="2" ry="2" />
<text  x="419.20" y="175.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (2,937,220 us., 24.07%)</title><rect x="905.9" y="101" width="284.0" height="15.0" fill="rgb(250,79,17)" rx="2" ry="2" />
<text  x="908.88" y="111.5" >torch/autograd/grad_mode.py(27):_decor..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (112,292 us., 0.92%)</title><rect x="801.8" y="117" width="10.8" height="15.0" fill="rgb(222,151,23)" rx="2" ry="2" />
<text  x="804.76" y="127.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (6,881 us., 0.06%)</title><rect x="779.0" y="117" width="0.6" height="15.0" fill="rgb(240,94,26)" rx="2" ry="2" />
<text  x="781.95" y="127.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (5,658 us., 0.05%)</title><rect x="319.1" y="117" width="0.5" height="15.0" fill="rgb(211,153,32)" rx="2" ry="2" />
<text  x="322.09" y="127.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (112,292 us., 0.92%)</title><rect x="801.8" y="197" width="10.8" height="15.0" fill="rgb(237,136,43)" rx="2" ry="2" />
<text  x="804.76" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (5,521 us., 0.05%)</title><rect x="319.6" y="165" width="0.6" height="15.0" fill="rgb(238,160,2)" rx="2" ry="2" />
<text  x="322.63" y="175.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (112,292 us., 0.92%)</title><rect x="801.8" y="165" width="10.8" height="15.0" fill="rgb(208,10,44)" rx="2" ry="2" />
<text  x="804.76" y="175.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (2,937,220 us., 24.07%)</title><rect x="905.9" y="213" width="284.0" height="15.0" fill="rgb(224,82,23)" rx="2" ry="2" />
<text  x="908.88" y="223.5" >torch_int/nn/opt.py(183):_forward</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (28,118 us., 0.23%)</title><rect x="412.0" y="213" width="2.7" height="15.0" fill="rgb(254,120,8)" rx="2" ry="2" />
<text  x="414.99" y="223.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (3,577,342 us., 29.32%)</title><rect x="432.6" y="101" width="346.0" height="15.0" fill="rgb(240,108,43)" rx="2" ry="2" />
<text  x="435.61" y="111.5" >profiling/utils.py(18):_profile_model</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (946,562 us., 7.76%)</title><rect x="812.6" y="181" width="91.6" height="15.0" fill="rgb(230,82,19)" rx="2" ry="2" />
<text  x="815.62" y="191.5" >nn.Module:..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (12,676 us., 0.10%)</title><rect x="904.6" y="229" width="1.3" height="15.0" fill="rgb(239,151,32)" rx="2" ry="2" />
<text  x="907.65" y="239.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (12,676 us., 0.10%)</title><rect x="904.6" y="261" width="1.3" height="15.0" fill="rgb(208,37,46)" rx="2" ry="2" />
<text  x="907.65" y="271.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,353,122 us., 11.09%)</title><rect x="188.2" y="101" width="130.9" height="15.0" fill="rgb(243,25,4)" rx="2" ry="2" />
<text  x="191.22" y="111.5" >profiling/utils...</text>
</g>
<g >
<title>torch/nn/modules/linear.py(113):_forward (1,833,447 us., 15.03%)</title><rect x="10.0" y="245" width="177.3" height="15.0" fill="rgb(231,152,37)" rx="2" ry="2" />
<text  x="13.00" y="255.5" >torch/nn/modules/linear..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (15,500 us., 0.13%)</title><rect x="414.7" y="165" width="1.5" height="15.0" fill="rgb(235,19,36)" rx="2" ry="2" />
<text  x="417.71" y="175.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (946,562 us., 7.76%)</title><rect x="812.6" y="165" width="91.6" height="15.0" fill="rgb(220,168,39)" rx="2" ry="2" />
<text  x="815.62" y="175.5" >torch_int/..</text>
</g>
</g>
</svg>
