<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="326" onload="init(evt)" viewBox="0 0 1200 326" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="326.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >CUDA Time</text>
<text id="details" x="10.00" y="309" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="309" > </text>
<g id="frames">
<g >
<title>torch_int/functional/fused.py(24):_dq_add_layernorm_q_cpp (204,776 us., 6.91%)</title><rect x="183.6" y="245" width="81.6" height="15.0" fill="rgb(236,199,0)" rx="2" ry="2" />
<text  x="186.62" y="255.5" >torch_int..</text>
</g>
<g >
<title>torch/nn/functional.py(2488):_layer_norm (1,086 us., 0.04%)</title><rect x="751.4" y="245" width="0.5" height="15.0" fill="rgb(229,168,16)" rx="2" ry="2" />
<text  x="754.43" y="255.5" ></text>
</g>
<g >
<title>&lt;built-in_method_add_of_type_object_at_0x7f84e00129c0&gt; (1,808 us., 0.06%)</title><rect x="182.8" y="261" width="0.7" height="15.0" fill="rgb(211,80,2)" rx="2" ry="2" />
<text  x="185.78" y="271.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (3,345 us., 0.11%)</title><rect x="889.4" y="245" width="1.4" height="15.0" fill="rgb(208,71,0)" rx="2" ry="2" />
<text  x="892.43" y="255.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (750,903 us., 25.34%)</title><rect x="890.8" y="213" width="299.0" height="15.0" fill="rgb(243,47,31)" rx="2" ry="2" />
<text  x="893.76" y="223.5" >torch_int/nn/opt.py(183):_forward</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (306 us., 0.01%)</title><rect x="183.5" y="181" width="0.1" height="15.0" fill="rgb(226,49,51)" rx="2" ry="2" />
<text  x="186.50" y="191.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (433,917 us., 14.64%)</title><rect x="10.0" y="181" width="172.8" height="15.0" fill="rgb(248,209,11)" rx="2" ry="2" />
<text  x="13.00" y="191.5" >profiling/utils.py(18)..</text>
</g>
<g >
<title>nn.Module:_W8A8B8O8Linear (43,014 us., 1.45%)</title><rect x="763.5" y="213" width="17.1" height="15.0" fill="rgb(232,78,16)" rx="2" ry="2" />
<text  x="766.46" y="223.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (2,587 us., 0.09%)</title><rect x="364.2" y="213" width="1.1" height="15.0" fill="rgb(216,182,11)" rx="2" ry="2" />
<text  x="367.23" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_W8A8B8O8LinearReLU (31,334 us., 1.06%)</title><rect x="780.6" y="213" width="12.5" height="15.0" fill="rgb(242,30,50)" rx="2" ry="2" />
<text  x="783.59" y="223.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (598 us., 0.02%)</title><rect x="1189.8" y="261" width="0.2" height="15.0" fill="rgb(242,79,12)" rx="2" ry="2" />
<text  x="1192.76" y="271.5" ></text>
</g>
<g >
<title>&lt;built-in_function_linear&gt; (433,917 us., 14.64%)</title><rect x="10.0" y="261" width="172.8" height="15.0" fill="rgb(249,140,23)" rx="2" ry="2" />
<text  x="13.00" y="271.5" >&lt;built-in_function_lin..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (3,345 us., 0.11%)</title><rect x="889.4" y="229" width="1.4" height="15.0" fill="rgb(217,105,4)" rx="2" ry="2" />
<text  x="892.43" y="239.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (31,334 us., 1.06%)</title><rect x="780.6" y="197" width="12.5" height="15.0" fill="rgb(214,11,20)" rx="2" ry="2" />
<text  x="783.59" y="207.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (14,472 us., 0.49%)</title><rect x="757.7" y="85" width="5.8" height="15.0" fill="rgb(232,50,14)" rx="2" ry="2" />
<text  x="760.70" y="95.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (43,014 us., 1.45%)</title><rect x="763.5" y="85" width="17.1" height="15.0" fill="rgb(239,74,20)" rx="2" ry="2" />
<text  x="766.46" y="95.5" ></text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (306 us., 0.01%)</title><rect x="183.5" y="229" width="0.1" height="15.0" fill="rgb(214,24,6)" rx="2" ry="2" />
<text  x="186.50" y="239.5" ></text>
</g>
<g >
<title>&lt;built-in_method_encode_of_str_object_at_0x7f83ebb07450&gt; (1,217,936 us., 41.10%)</title><rect x="266.5" y="261" width="484.9" height="15.0" fill="rgb(250,21,5)" rx="2" ry="2" />
<text  x="269.46" y="271.5" >&lt;built-in_method_encode_of_str_object_at_0x7f83ebb07450&gt;</text>
</g>
<g >
<title>torch_int/nn/opt.py(300):__prepare_decoder_attention_mask (400 us., 0.01%)</title><rect x="889.3" y="261" width="0.1" height="15.0" fill="rgb(234,210,14)" rx="2" ry="2" />
<text  x="892.27" y="271.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (240,512 us., 8.12%)</title><rect x="793.1" y="181" width="95.7" height="15.0" fill="rgb(213,168,32)" rx="2" ry="2" />
<text  x="796.06" y="191.5" >nn.Module:_..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,705 us., 0.06%)</title><rect x="265.2" y="133" width="0.6" height="15.0" fill="rgb(238,197,21)" rx="2" ry="2" />
<text  x="268.16" y="143.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (14,472 us., 0.49%)</title><rect x="757.7" y="133" width="5.8" height="15.0" fill="rgb(229,62,30)" rx="2" ry="2" />
<text  x="760.70" y="143.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (31,334 us., 1.06%)</title><rect x="780.6" y="165" width="12.5" height="15.0" fill="rgb(228,133,20)" rx="2" ry="2" />
<text  x="783.59" y="175.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,808 us., 0.06%)</title><rect x="182.8" y="213" width="0.7" height="15.0" fill="rgb(230,34,18)" rx="2" ry="2" />
<text  x="185.78" y="223.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (241,457 us., 8.15%)</title><rect x="266.5" y="229" width="96.1" height="15.0" fill="rgb(228,35,43)" rx="2" ry="2" />
<text  x="269.46" y="239.5" >torch_int/n..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (14,472 us., 0.49%)</title><rect x="757.7" y="53" width="5.8" height="15.0" fill="rgb(215,25,8)" rx="2" ry="2" />
<text  x="760.70" y="63.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (698 us., 0.02%)</title><rect x="889.0" y="213" width="0.3" height="15.0" fill="rgb(251,81,8)" rx="2" ry="2" />
<text  x="891.99" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (240,512 us., 8.12%)</title><rect x="793.1" y="149" width="95.7" height="15.0" fill="rgb(228,196,53)" rx="2" ry="2" />
<text  x="796.06" y="159.5" >nn.Module:_..</text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (14,650 us., 0.49%)</title><rect x="751.9" y="197" width="5.8" height="15.0" fill="rgb(214,58,42)" rx="2" ry="2" />
<text  x="754.86" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (306 us., 0.01%)</title><rect x="183.5" y="197" width="0.1" height="15.0" fill="rgb(216,78,9)" rx="2" ry="2" />
<text  x="186.50" y="207.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (43,014 us., 1.45%)</title><rect x="763.5" y="229" width="17.1" height="15.0" fill="rgb(231,137,9)" rx="2" ry="2" />
<text  x="766.46" y="239.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (1,808 us., 0.06%)</title><rect x="182.8" y="245" width="0.7" height="15.0" fill="rgb(211,46,24)" rx="2" ry="2" />
<text  x="185.78" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (698 us., 0.02%)</title><rect x="889.0" y="229" width="0.3" height="15.0" fill="rgb(251,163,19)" rx="2" ry="2" />
<text  x="891.99" y="239.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (31,334 us., 1.06%)</title><rect x="780.6" y="133" width="12.5" height="15.0" fill="rgb(205,74,14)" rx="2" ry="2" />
<text  x="783.59" y="143.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (3,345 us., 0.11%)</title><rect x="889.4" y="213" width="1.4" height="15.0" fill="rgb(235,127,22)" rx="2" ry="2" />
<text  x="892.43" y="223.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (302 us., 0.01%)</title><rect x="750.8" y="149" width="0.1" height="15.0" fill="rgb(246,163,5)" rx="2" ry="2" />
<text  x="753.83" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_LayerNorm (1,086 us., 0.04%)</title><rect x="751.4" y="213" width="0.5" height="15.0" fill="rgb(230,54,50)" rx="2" ry="2" />
<text  x="754.43" y="223.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (31,334 us., 1.06%)</title><rect x="780.6" y="85" width="12.5" height="15.0" fill="rgb(242,64,30)" rx="2" ry="2" />
<text  x="783.59" y="95.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (922,725 us., 31.14%)</title><rect x="383.4" y="101" width="367.4" height="15.0" fill="rgb(206,225,40)" rx="2" ry="2" />
<text  x="386.41" y="111.5" >profiling/utils.py(18):_profile_model</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (3,345 us., 0.11%)</title><rect x="889.4" y="197" width="1.4" height="15.0" fill="rgb(242,213,49)" rx="2" ry="2" />
<text  x="892.43" y="207.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (29,122 us., 0.98%)</title><rect x="751.9" y="229" width="11.6" height="15.0" fill="rgb(205,65,9)" rx="2" ry="2" />
<text  x="754.86" y="239.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,086 us., 0.04%)</title><rect x="751.4" y="133" width="0.5" height="15.0" fill="rgb(248,28,25)" rx="2" ry="2" />
<text  x="754.43" y="143.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (3,345 us., 0.11%)</title><rect x="889.4" y="181" width="1.4" height="15.0" fill="rgb(225,110,16)" rx="2" ry="2" />
<text  x="892.43" y="191.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (204,776 us., 6.91%)</title><rect x="183.6" y="133" width="81.6" height="15.0" fill="rgb(241,79,21)" rx="2" ry="2" />
<text  x="186.62" y="143.5" >transform..</text>
</g>
<g >
<title>torch_int/nn/opt.py(300):__prepare_decoder_attention_mask (4,074 us., 0.14%)</title><rect x="362.6" y="245" width="1.6" height="15.0" fill="rgb(220,94,43)" rx="2" ry="2" />
<text  x="365.61" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (698 us., 0.02%)</title><rect x="889.0" y="197" width="0.3" height="15.0" fill="rgb(243,80,37)" rx="2" ry="2" />
<text  x="891.99" y="207.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (204,776 us., 6.91%)</title><rect x="183.6" y="101" width="81.6" height="15.0" fill="rgb(240,6,26)" rx="2" ry="2" />
<text  x="186.62" y="111.5" >profiling..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (45,582 us., 1.54%)</title><rect x="365.3" y="133" width="18.1" height="15.0" fill="rgb(228,65,30)" rx="2" ry="2" />
<text  x="368.26" y="143.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,705 us., 0.06%)</title><rect x="265.2" y="165" width="0.6" height="15.0" fill="rgb(247,193,10)" rx="2" ry="2" />
<text  x="268.16" y="175.5" ></text>
</g>
<g >
<title>torch_int/nn/linear.py(92):_forward (43,014 us., 1.45%)</title><rect x="763.5" y="245" width="17.1" height="15.0" fill="rgb(231,10,23)" rx="2" ry="2" />
<text  x="766.46" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (204,776 us., 6.91%)</title><rect x="183.6" y="149" width="81.6" height="15.0" fill="rgb(245,45,26)" rx="2" ry="2" />
<text  x="186.62" y="159.5" >nn.Module..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (14,472 us., 0.49%)</title><rect x="757.7" y="101" width="5.8" height="15.0" fill="rgb(230,156,44)" rx="2" ry="2" />
<text  x="760.70" y="111.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,705 us., 0.06%)</title><rect x="265.2" y="117" width="0.6" height="15.0" fill="rgb(252,156,7)" rx="2" ry="2" />
<text  x="268.16" y="127.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (240,512 us., 8.12%)</title><rect x="793.1" y="213" width="95.7" height="15.0" fill="rgb(212,226,28)" rx="2" ry="2" />
<text  x="796.06" y="223.5" >nn.Module:_..</text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (750,903 us., 25.34%)</title><rect x="890.8" y="261" width="299.0" height="15.0" fill="rgb(217,126,20)" rx="2" ry="2" />
<text  x="893.76" y="271.5" >torch_int/nn/opt.py(46):_forward</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (598 us., 0.02%)</title><rect x="1189.8" y="229" width="0.2" height="15.0" fill="rgb(228,178,2)" rx="2" ry="2" />
<text  x="1192.76" y="239.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,209 us., 0.04%)</title><rect x="750.9" y="133" width="0.5" height="15.0" fill="rgb(206,135,7)" rx="2" ry="2" />
<text  x="753.95" y="143.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (750,903 us., 25.34%)</title><rect x="890.8" y="181" width="299.0" height="15.0" fill="rgb(208,148,0)" rx="2" ry="2" />
<text  x="893.76" y="191.5" >torch_int/nn/opt.py(321):_forward</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (1,555 us., 0.05%)</title><rect x="265.8" y="181" width="0.7" height="15.0" fill="rgb(254,131,20)" rx="2" ry="2" />
<text  x="268.84" y="191.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (240,512 us., 8.12%)</title><rect x="793.1" y="85" width="95.7" height="15.0" fill="rgb(246,86,43)" rx="2" ry="2" />
<text  x="796.06" y="95.5" >torch/autog..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (45,582 us., 1.54%)</title><rect x="365.3" y="101" width="18.1" height="15.0" fill="rgb(206,36,6)" rx="2" ry="2" />
<text  x="368.26" y="111.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (3,345 us., 0.11%)</title><rect x="889.4" y="261" width="1.4" height="15.0" fill="rgb(241,159,38)" rx="2" ry="2" />
<text  x="892.43" y="271.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (306 us., 0.01%)</title><rect x="183.5" y="213" width="0.1" height="15.0" fill="rgb(236,190,28)" rx="2" ry="2" />
<text  x="186.50" y="223.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (2,587 us., 0.09%)</title><rect x="364.2" y="245" width="1.1" height="15.0" fill="rgb(251,26,10)" rx="2" ry="2" />
<text  x="367.23" y="255.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (45,582 us., 1.54%)</title><rect x="365.3" y="149" width="18.1" height="15.0" fill="rgb(207,66,6)" rx="2" ry="2" />
<text  x="368.26" y="159.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (922,725 us., 31.14%)</title><rect x="383.4" y="197" width="367.4" height="15.0" fill="rgb(237,49,0)" rx="2" ry="2" />
<text  x="386.41" y="207.5" >torch_int/nn/opt.py(183):_forward</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (31,334 us., 1.06%)</title><rect x="780.6" y="229" width="12.5" height="15.0" fill="rgb(244,75,54)" rx="2" ry="2" />
<text  x="783.59" y="239.5" ></text>
</g>
<g >
<title>torch_int/nn/linear.py(122):_forward (31,334 us., 1.06%)</title><rect x="780.6" y="245" width="12.5" height="15.0" fill="rgb(215,145,24)" rx="2" ry="2" />
<text  x="783.59" y="255.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,808 us., 0.06%)</title><rect x="182.8" y="165" width="0.7" height="15.0" fill="rgb(238,120,1)" rx="2" ry="2" />
<text  x="185.78" y="175.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (750,903 us., 25.34%)</title><rect x="890.8" y="117" width="299.0" height="15.0" fill="rgb(206,82,52)" rx="2" ry="2" />
<text  x="893.76" y="127.5" >profiling/utils.py(18):_profile_model</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (43,014 us., 1.45%)</title><rect x="763.5" y="133" width="17.1" height="15.0" fill="rgb(217,79,51)" rx="2" ry="2" />
<text  x="766.46" y="143.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (43,014 us., 1.45%)</title><rect x="763.5" y="37" width="17.1" height="15.0" fill="rgb(249,1,34)" rx="2" ry="2" />
<text  x="766.46" y="47.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (31,334 us., 1.06%)</title><rect x="780.6" y="117" width="12.5" height="15.0" fill="rgb(214,118,29)" rx="2" ry="2" />
<text  x="783.59" y="127.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (45,582 us., 1.54%)</title><rect x="365.3" y="181" width="18.1" height="15.0" fill="rgb(208,200,49)" rx="2" ry="2" />
<text  x="368.26" y="191.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (306 us., 0.01%)</title><rect x="183.5" y="149" width="0.1" height="15.0" fill="rgb(222,221,26)" rx="2" ry="2" />
<text  x="186.50" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (1,808 us., 0.06%)</title><rect x="182.8" y="229" width="0.7" height="15.0" fill="rgb(227,127,11)" rx="2" ry="2" />
<text  x="185.78" y="239.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (302 us., 0.01%)</title><rect x="750.8" y="181" width="0.1" height="15.0" fill="rgb(213,157,13)" rx="2" ry="2" />
<text  x="753.83" y="191.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (922,725 us., 31.14%)</title><rect x="383.4" y="165" width="367.4" height="15.0" fill="rgb(220,37,42)" rx="2" ry="2" />
<text  x="386.41" y="175.5" >torch_int/nn/opt.py(321):_forward</text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (240,512 us., 8.12%)</title><rect x="793.1" y="197" width="95.7" height="15.0" fill="rgb(221,201,19)" rx="2" ry="2" />
<text  x="796.06" y="207.5" >torch_int/n..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (302 us., 0.01%)</title><rect x="750.8" y="165" width="0.1" height="15.0" fill="rgb(218,71,25)" rx="2" ry="2" />
<text  x="753.83" y="175.5" ></text>
</g>
<g >
<title>&lt;built-in_method_embedding_of_type_object_at_0x7f84e00129c0&gt; (3,260 us., 0.11%)</title><rect x="265.2" y="261" width="1.3" height="15.0" fill="rgb(235,131,33)" rx="2" ry="2" />
<text  x="268.16" y="271.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (4,074 us., 0.14%)</title><rect x="362.6" y="197" width="1.6" height="15.0" fill="rgb(228,195,33)" rx="2" ry="2" />
<text  x="365.61" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (750,903 us., 25.34%)</title><rect x="890.8" y="133" width="299.0" height="15.0" fill="rgb(210,48,42)" rx="2" ry="2" />
<text  x="893.76" y="143.5" >nn.Module:_Int8OPTForCausalLM</text>
</g>
<g >
<title>torch/nn/modules/linear.py(113):_forward (433,917 us., 14.64%)</title><rect x="10.0" y="245" width="172.8" height="15.0" fill="rgb(247,152,42)" rx="2" ry="2" />
<text  x="13.00" y="255.5" >torch/nn/modules/linea..</text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (45,582 us., 1.54%)</title><rect x="365.3" y="229" width="18.1" height="15.0" fill="rgb(236,92,43)" rx="2" ry="2" />
<text  x="368.26" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (2,587 us., 0.09%)</title><rect x="364.2" y="229" width="1.1" height="15.0" fill="rgb(209,117,20)" rx="2" ry="2" />
<text  x="367.23" y="239.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (43,014 us., 1.45%)</title><rect x="763.5" y="149" width="17.1" height="15.0" fill="rgb(245,135,47)" rx="2" ry="2" />
<text  x="766.46" y="159.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (31,334 us., 1.06%)</title><rect x="780.6" y="101" width="12.5" height="15.0" fill="rgb(212,22,48)" rx="2" ry="2" />
<text  x="783.59" y="111.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (45,582 us., 1.54%)</title><rect x="365.3" y="213" width="18.1" height="15.0" fill="rgb(214,56,15)" rx="2" ry="2" />
<text  x="368.26" y="223.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (698 us., 0.02%)</title><rect x="889.0" y="181" width="0.3" height="15.0" fill="rgb(211,172,31)" rx="2" ry="2" />
<text  x="891.99" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Linear (433,917 us., 14.64%)</title><rect x="10.0" y="229" width="172.8" height="15.0" fill="rgb(233,180,21)" rx="2" ry="2" />
<text  x="13.00" y="239.5" >nn.Module:_Linear</text>
</g>
<g >
<title>all (2,963,416 us., 100%)</title><rect x="10.0" y="277" width="1180.0" height="15.0" fill="rgb(221,173,32)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>torch/nn/modules/sparse.py(157):_forward (3,260 us., 0.11%)</title><rect x="265.2" y="229" width="1.3" height="15.0" fill="rgb(238,182,52)" rx="2" ry="2" />
<text  x="268.16" y="239.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (14,650 us., 0.49%)</title><rect x="751.9" y="133" width="5.8" height="15.0" fill="rgb(227,55,54)" rx="2" ry="2" />
<text  x="754.86" y="143.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (240,512 us., 8.12%)</title><rect x="793.1" y="165" width="95.7" height="15.0" fill="rgb(237,128,53)" rx="2" ry="2" />
<text  x="796.06" y="175.5" >torch_int/n..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (433,917 us., 14.64%)</title><rect x="10.0" y="165" width="172.8" height="15.0" fill="rgb(218,114,53)" rx="2" ry="2" />
<text  x="13.00" y="175.5" >torch/autograd/grad_mo..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (400 us., 0.01%)</title><rect x="889.3" y="165" width="0.1" height="15.0" fill="rgb(239,43,19)" rx="2" ry="2" />
<text  x="892.27" y="175.5" ></text>
</g>
<g >
<title>&lt;built-in_method_dq_add_layernorm_q_of_PyCapsule_object_at_0x7f83eb4a4f30&gt; (204,776 us., 6.91%)</title><rect x="183.6" y="261" width="81.6" height="15.0" fill="rgb(238,227,52)" rx="2" ry="2" />
<text  x="186.62" y="271.5" >&lt;built-in..</text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (14,472 us., 0.49%)</title><rect x="757.7" y="149" width="5.8" height="15.0" fill="rgb(216,27,7)" rx="2" ry="2" />
<text  x="760.70" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (14,650 us., 0.49%)</title><rect x="751.9" y="149" width="5.8" height="15.0" fill="rgb(244,193,32)" rx="2" ry="2" />
<text  x="754.86" y="159.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (400 us., 0.01%)</title><rect x="889.3" y="213" width="0.1" height="15.0" fill="rgb(254,5,50)" rx="2" ry="2" />
<text  x="892.27" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (400 us., 0.01%)</title><rect x="889.3" y="229" width="0.1" height="15.0" fill="rgb(221,161,10)" rx="2" ry="2" />
<text  x="892.27" y="239.5" ></text>
</g>
<g >
<title>torch/nn/functional.py(1804):_softmax (241,457 us., 8.15%)</title><rect x="266.5" y="245" width="96.1" height="15.0" fill="rgb(242,16,9)" rx="2" ry="2" />
<text  x="269.46" y="255.5" >torch/nn/fu..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (302 us., 0.01%)</title><rect x="750.8" y="245" width="0.1" height="15.0" fill="rgb(245,42,27)" rx="2" ry="2" />
<text  x="753.83" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (45,582 us., 1.54%)</title><rect x="365.3" y="197" width="18.1" height="15.0" fill="rgb(249,159,7)" rx="2" ry="2" />
<text  x="368.26" y="207.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,209 us., 0.04%)</title><rect x="750.9" y="149" width="0.5" height="15.0" fill="rgb(225,173,18)" rx="2" ry="2" />
<text  x="753.95" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_W8A8B32O32LinearWithScaling (29,122 us., 0.98%)</title><rect x="751.9" y="213" width="11.6" height="15.0" fill="rgb(228,197,17)" rx="2" ry="2" />
<text  x="754.86" y="223.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(89):__expand_mask (1,209 us., 0.04%)</title><rect x="750.9" y="245" width="0.5" height="15.0" fill="rgb(234,91,33)" rx="2" ry="2" />
<text  x="753.95" y="255.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (306 us., 0.01%)</title><rect x="183.5" y="133" width="0.1" height="15.0" fill="rgb(225,35,14)" rx="2" ry="2" />
<text  x="186.50" y="143.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (598 us., 0.02%)</title><rect x="1189.8" y="149" width="0.2" height="15.0" fill="rgb(240,89,29)" rx="2" ry="2" />
<text  x="1192.76" y="159.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (14,472 us., 0.49%)</title><rect x="757.7" y="37" width="5.8" height="15.0" fill="rgb(227,220,7)" rx="2" ry="2" />
<text  x="760.70" y="47.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (45,582 us., 1.54%)</title><rect x="365.3" y="165" width="18.1" height="15.0" fill="rgb(218,111,37)" rx="2" ry="2" />
<text  x="368.26" y="175.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (4,074 us., 0.14%)</title><rect x="362.6" y="165" width="1.6" height="15.0" fill="rgb(229,161,31)" rx="2" ry="2" />
<text  x="365.61" y="175.5" ></text>
</g>
<g >
<title>&lt;built-in_method_linear_a8_w8_b8_o8_of_PyCapsule_object_at_0x7f83eb4a4f00&gt; (43,014 us., 1.45%)</title><rect x="763.5" y="261" width="17.1" height="15.0" fill="rgb(218,117,40)" rx="2" ry="2" />
<text  x="766.46" y="271.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (14,472 us., 0.49%)</title><rect x="757.7" y="197" width="5.8" height="15.0" fill="rgb(208,157,15)" rx="2" ry="2" />
<text  x="760.70" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_DQ_Add_LayerNorm_Q (204,776 us., 6.91%)</title><rect x="183.6" y="213" width="81.6" height="15.0" fill="rgb(217,71,33)" rx="2" ry="2" />
<text  x="186.62" y="223.5" >nn.Module..</text>
</g>
<g >
<title>torch_int/nn/opt.py(300):__prepare_decoder_attention_mask (1,209 us., 0.04%)</title><rect x="750.9" y="229" width="0.5" height="15.0" fill="rgb(227,206,39)" rx="2" ry="2" />
<text  x="753.95" y="239.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (204,776 us., 6.91%)</title><rect x="183.6" y="197" width="81.6" height="15.0" fill="rgb(243,84,46)" rx="2" ry="2" />
<text  x="186.62" y="207.5" >torch_int..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (302 us., 0.01%)</title><rect x="750.8" y="133" width="0.1" height="15.0" fill="rgb(212,199,46)" rx="2" ry="2" />
<text  x="753.83" y="143.5" ></text>
</g>
<g >
<title>&lt;built-in_method_zeros_like_of_type_object_at_0x7f84e00129c0&gt; (698 us., 0.02%)</title><rect x="889.0" y="261" width="0.3" height="15.0" fill="rgb(234,133,52)" rx="2" ry="2" />
<text  x="891.99" y="271.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (4,074 us., 0.14%)</title><rect x="362.6" y="181" width="1.6" height="15.0" fill="rgb(217,42,42)" rx="2" ry="2" />
<text  x="365.61" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (1,705 us., 0.06%)</title><rect x="265.2" y="149" width="0.6" height="15.0" fill="rgb(247,63,2)" rx="2" ry="2" />
<text  x="268.16" y="159.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (14,650 us., 0.49%)</title><rect x="751.9" y="101" width="5.8" height="15.0" fill="rgb(238,32,50)" rx="2" ry="2" />
<text  x="754.86" y="111.5" ></text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (1,555 us., 0.05%)</title><rect x="265.8" y="197" width="0.7" height="15.0" fill="rgb(208,215,23)" rx="2" ry="2" />
<text  x="268.84" y="207.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (241,457 us., 8.15%)</title><rect x="266.5" y="85" width="96.1" height="15.0" fill="rgb(249,48,33)" rx="2" ry="2" />
<text  x="269.46" y="95.5" >profiling/u..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (45,582 us., 1.54%)</title><rect x="365.3" y="69" width="18.1" height="15.0" fill="rgb(205,227,20)" rx="2" ry="2" />
<text  x="368.26" y="79.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (922,725 us., 31.14%)</title><rect x="383.4" y="133" width="367.4" height="15.0" fill="rgb(238,79,38)" rx="2" ry="2" />
<text  x="386.41" y="143.5" >transformers/models/opt/modeling_opt.py(840):_for..</text>
</g>
<g >
<title>torch_int/nn/opt.py(43):__shape (45,582 us., 1.54%)</title><rect x="365.3" y="245" width="18.1" height="15.0" fill="rgb(208,67,24)" rx="2" ry="2" />
<text  x="368.26" y="255.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (922,725 us., 31.14%)</title><rect x="383.4" y="229" width="367.4" height="15.0" fill="rgb(210,152,13)" rx="2" ry="2" />
<text  x="386.41" y="239.5" >torch/autograd/grad_mode.py(24):_decorate_context</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (241,457 us., 8.15%)</title><rect x="266.5" y="117" width="96.1" height="15.0" fill="rgb(208,203,24)" rx="2" ry="2" />
<text  x="269.46" y="127.5" >transformer..</text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (922,725 us., 31.14%)</title><rect x="383.4" y="213" width="367.4" height="15.0" fill="rgb(212,205,0)" rx="2" ry="2" />
<text  x="386.41" y="223.5" >nn.Module:_Int8OPTAttention</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (241,457 us., 8.15%)</title><rect x="266.5" y="101" width="96.1" height="15.0" fill="rgb(223,183,16)" rx="2" ry="2" />
<text  x="269.46" y="111.5" >nn.Module:_..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (433,917 us., 14.64%)</title><rect x="10.0" y="213" width="172.8" height="15.0" fill="rgb(247,179,5)" rx="2" ry="2" />
<text  x="13.00" y="223.5" >transformers/models/op..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (922,725 us., 31.14%)</title><rect x="383.4" y="85" width="367.4" height="15.0" fill="rgb(252,13,52)" rx="2" ry="2" />
<text  x="386.41" y="95.5" >torch/autograd/grad_mode.py(27):_decorate_context</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (2,587 us., 0.09%)</title><rect x="364.2" y="181" width="1.1" height="15.0" fill="rgb(254,47,3)" rx="2" ry="2" />
<text  x="367.23" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (306 us., 0.01%)</title><rect x="183.5" y="165" width="0.1" height="15.0" fill="rgb(210,225,32)" rx="2" ry="2" />
<text  x="186.50" y="175.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,086 us., 0.04%)</title><rect x="751.4" y="165" width="0.5" height="15.0" fill="rgb(222,82,10)" rx="2" ry="2" />
<text  x="754.43" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (31,334 us., 1.06%)</title><rect x="780.6" y="149" width="12.5" height="15.0" fill="rgb(246,178,45)" rx="2" ry="2" />
<text  x="783.59" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (31,334 us., 1.06%)</title><rect x="780.6" y="181" width="12.5" height="15.0" fill="rgb(212,164,48)" rx="2" ry="2" />
<text  x="783.59" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (922,725 us., 31.14%)</title><rect x="383.4" y="117" width="367.4" height="15.0" fill="rgb(208,216,5)" rx="2" ry="2" />
<text  x="386.41" y="127.5" >nn.Module:_Int8OPTForCausalLM</text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (43,014 us., 1.45%)</title><rect x="763.5" y="197" width="17.1" height="15.0" fill="rgb(245,36,44)" rx="2" ry="2" />
<text  x="766.46" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (302 us., 0.01%)</title><rect x="750.8" y="229" width="0.1" height="15.0" fill="rgb(236,41,0)" rx="2" ry="2" />
<text  x="753.83" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (14,472 us., 0.49%)</title><rect x="757.7" y="69" width="5.8" height="15.0" fill="rgb(238,98,6)" rx="2" ry="2" />
<text  x="760.70" y="79.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (302 us., 0.01%)</title><rect x="750.8" y="197" width="0.1" height="15.0" fill="rgb(249,181,50)" rx="2" ry="2" />
<text  x="753.83" y="207.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (14,650 us., 0.49%)</title><rect x="751.9" y="165" width="5.8" height="15.0" fill="rgb(247,101,46)" rx="2" ry="2" />
<text  x="754.86" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (2,587 us., 0.09%)</title><rect x="364.2" y="197" width="1.1" height="15.0" fill="rgb(219,8,10)" rx="2" ry="2" />
<text  x="367.23" y="207.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (598 us., 0.02%)</title><rect x="1189.8" y="197" width="0.2" height="15.0" fill="rgb(212,102,29)" rx="2" ry="2" />
<text  x="1192.76" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (750,903 us., 25.34%)</title><rect x="890.8" y="197" width="299.0" height="15.0" fill="rgb(211,199,38)" rx="2" ry="2" />
<text  x="893.76" y="207.5" >nn.Module:_Int8OPTDecoderLayer</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (241,457 us., 8.15%)</title><rect x="266.5" y="149" width="96.1" height="15.0" fill="rgb(254,191,36)" rx="2" ry="2" />
<text  x="269.46" y="159.5" >torch_int/n..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (1,808 us., 0.06%)</title><rect x="182.8" y="197" width="0.7" height="15.0" fill="rgb(230,171,9)" rx="2" ry="2" />
<text  x="185.78" y="207.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (302 us., 0.01%)</title><rect x="750.8" y="213" width="0.1" height="15.0" fill="rgb(244,119,31)" rx="2" ry="2" />
<text  x="753.83" y="223.5" ></text>
</g>
<g >
<title>torch_int/nn/fused.py(13):_forward (204,776 us., 6.91%)</title><rect x="183.6" y="229" width="81.6" height="15.0" fill="rgb(212,72,40)" rx="2" ry="2" />
<text  x="186.62" y="239.5" >torch_int..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (1,555 us., 0.05%)</title><rect x="265.8" y="165" width="0.7" height="15.0" fill="rgb(238,21,25)" rx="2" ry="2" />
<text  x="268.84" y="175.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (598 us., 0.02%)</title><rect x="1189.8" y="165" width="0.2" height="15.0" fill="rgb(226,224,1)" rx="2" ry="2" />
<text  x="1192.76" y="175.5" ></text>
</g>
<g >
<title>&lt;built-in_method_max_of_type_object_at_0x7f84e00129c0&gt; (240,512 us., 8.12%)</title><rect x="793.1" y="261" width="95.7" height="15.0" fill="rgb(241,165,30)" rx="2" ry="2" />
<text  x="796.06" y="271.5" >&lt;built-in_m..</text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (750,903 us., 25.34%)</title><rect x="890.8" y="229" width="299.0" height="15.0" fill="rgb(218,42,13)" rx="2" ry="2" />
<text  x="893.76" y="239.5" >nn.Module:_Int8OPTAttention</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (204,776 us., 6.91%)</title><rect x="183.6" y="165" width="81.6" height="15.0" fill="rgb(236,140,30)" rx="2" ry="2" />
<text  x="186.62" y="175.5" >torch_int..</text>
</g>
<g >
<title>&lt;built-in_method_linear_relu_a8_w8_b8_o8_of_PyCapsule_object_at_0x7f83eb4a4e70&gt; (31,334 us., 1.06%)</title><rect x="780.6" y="261" width="12.5" height="15.0" fill="rgb(230,216,5)" rx="2" ry="2" />
<text  x="783.59" y="271.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (1,086 us., 0.04%)</title><rect x="751.4" y="149" width="0.5" height="15.0" fill="rgb(251,220,24)" rx="2" ry="2" />
<text  x="754.43" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_Embedding (1,705 us., 0.06%)</title><rect x="265.2" y="213" width="0.6" height="15.0" fill="rgb(253,9,1)" rx="2" ry="2" />
<text  x="268.16" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (14,650 us., 0.49%)</title><rect x="751.9" y="181" width="5.8" height="15.0" fill="rgb(205,113,26)" rx="2" ry="2" />
<text  x="754.86" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (4,074 us., 0.14%)</title><rect x="362.6" y="213" width="1.6" height="15.0" fill="rgb(244,184,41)" rx="2" ry="2" />
<text  x="365.61" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (598 us., 0.02%)</title><rect x="1189.8" y="213" width="0.2" height="15.0" fill="rgb(221,88,19)" rx="2" ry="2" />
<text  x="1192.76" y="223.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (240,512 us., 8.12%)</title><rect x="793.1" y="229" width="95.7" height="15.0" fill="rgb(221,128,42)" rx="2" ry="2" />
<text  x="796.06" y="239.5" >torch/autog..</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (1,705 us., 0.06%)</title><rect x="265.2" y="197" width="0.6" height="15.0" fill="rgb(213,172,28)" rx="2" ry="2" />
<text  x="268.16" y="207.5" ></text>
</g>
<g >
<title>torch_int/nn/linear.py(62):_forward (29,122 us., 0.98%)</title><rect x="751.9" y="245" width="11.6" height="15.0" fill="rgb(215,199,15)" rx="2" ry="2" />
<text  x="754.86" y="255.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (1,086 us., 0.04%)</title><rect x="751.4" y="197" width="0.5" height="15.0" fill="rgb(249,196,14)" rx="2" ry="2" />
<text  x="754.43" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (241,457 us., 8.15%)</title><rect x="266.5" y="197" width="96.1" height="15.0" fill="rgb(224,104,30)" rx="2" ry="2" />
<text  x="269.46" y="207.5" >nn.Module:_..</text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (922,725 us., 31.14%)</title><rect x="383.4" y="245" width="367.4" height="15.0" fill="rgb(216,117,14)" rx="2" ry="2" />
<text  x="386.41" y="255.5" >torch_int/nn/opt.py(46):_forward</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (240,512 us., 8.12%)</title><rect x="793.1" y="133" width="95.7" height="15.0" fill="rgb(210,177,53)" rx="2" ry="2" />
<text  x="796.06" y="143.5" >transformer..</text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (598 us., 0.02%)</title><rect x="1189.8" y="245" width="0.2" height="15.0" fill="rgb(230,178,41)" rx="2" ry="2" />
<text  x="1192.76" y="255.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,555 us., 0.05%)</title><rect x="265.8" y="149" width="0.7" height="15.0" fill="rgb(253,135,4)" rx="2" ry="2" />
<text  x="268.84" y="159.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (14,472 us., 0.49%)</title><rect x="757.7" y="181" width="5.8" height="15.0" fill="rgb(250,177,14)" rx="2" ry="2" />
<text  x="760.70" y="191.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,086 us., 0.04%)</title><rect x="751.4" y="117" width="0.5" height="15.0" fill="rgb(253,28,38)" rx="2" ry="2" />
<text  x="754.43" y="127.5" ></text>
</g>
<g >
<title>&lt;built-in_method_linear_a8_w8_b32_o32_with_scaling_of_PyCapsule_object_at_0x7f83eb4a4ed0&gt; (29,122 us., 0.98%)</title><rect x="751.9" y="261" width="11.6" height="15.0" fill="rgb(224,153,53)" rx="2" ry="2" />
<text  x="754.86" y="271.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (204,776 us., 6.91%)</title><rect x="183.6" y="181" width="81.6" height="15.0" fill="rgb(250,170,18)" rx="2" ry="2" />
<text  x="186.62" y="191.5" >nn.Module..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,209 us., 0.04%)</title><rect x="750.9" y="181" width="0.5" height="15.0" fill="rgb(225,163,16)" rx="2" ry="2" />
<text  x="753.95" y="191.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (1,209 us., 0.04%)</title><rect x="750.9" y="213" width="0.5" height="15.0" fill="rgb(221,165,51)" rx="2" ry="2" />
<text  x="753.95" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (240,512 us., 8.12%)</title><rect x="793.1" y="117" width="95.7" height="15.0" fill="rgb(215,66,0)" rx="2" ry="2" />
<text  x="796.06" y="127.5" >nn.Module:_..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (43,014 us., 1.45%)</title><rect x="763.5" y="101" width="17.1" height="15.0" fill="rgb(226,79,40)" rx="2" ry="2" />
<text  x="766.46" y="111.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (204,776 us., 6.91%)</title><rect x="183.6" y="85" width="81.6" height="15.0" fill="rgb(254,69,12)" rx="2" ry="2" />
<text  x="186.62" y="95.5" >torch/aut..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (306 us., 0.01%)</title><rect x="183.5" y="245" width="0.1" height="15.0" fill="rgb(230,13,31)" rx="2" ry="2" />
<text  x="186.50" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (43,014 us., 1.45%)</title><rect x="763.5" y="165" width="17.1" height="15.0" fill="rgb(208,75,31)" rx="2" ry="2" />
<text  x="766.46" y="175.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (43,014 us., 1.45%)</title><rect x="763.5" y="117" width="17.1" height="15.0" fill="rgb(240,48,44)" rx="2" ry="2" />
<text  x="766.46" y="127.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (43,014 us., 1.45%)</title><rect x="763.5" y="53" width="17.1" height="15.0" fill="rgb(249,94,44)" rx="2" ry="2" />
<text  x="766.46" y="63.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,555 us., 0.05%)</title><rect x="265.8" y="117" width="0.7" height="15.0" fill="rgb(232,153,22)" rx="2" ry="2" />
<text  x="268.84" y="127.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (698 us., 0.02%)</title><rect x="889.0" y="245" width="0.3" height="15.0" fill="rgb(226,177,7)" rx="2" ry="2" />
<text  x="891.99" y="255.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (4,074 us., 0.14%)</title><rect x="362.6" y="149" width="1.6" height="15.0" fill="rgb(229,220,8)" rx="2" ry="2" />
<text  x="365.61" y="159.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (241,457 us., 8.15%)</title><rect x="266.5" y="213" width="96.1" height="15.0" fill="rgb(233,77,29)" rx="2" ry="2" />
<text  x="269.46" y="223.5" >torch/autog..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (14,650 us., 0.49%)</title><rect x="751.9" y="85" width="5.8" height="15.0" fill="rgb(218,77,6)" rx="2" ry="2" />
<text  x="754.86" y="95.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (240,512 us., 8.12%)</title><rect x="793.1" y="101" width="95.7" height="15.0" fill="rgb(254,143,9)" rx="2" ry="2" />
<text  x="796.06" y="111.5" >profiling/u..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (45,582 us., 1.54%)</title><rect x="365.3" y="85" width="18.1" height="15.0" fill="rgb(212,49,46)" rx="2" ry="2" />
<text  x="368.26" y="95.5" ></text>
</g>
<g >
<title>&lt;built-in_method_layer_norm_of_type_object_at_0x7f84e00129c0&gt; (1,086 us., 0.04%)</title><rect x="751.4" y="261" width="0.5" height="15.0" fill="rgb(223,181,21)" rx="2" ry="2" />
<text  x="754.43" y="271.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (43,014 us., 1.45%)</title><rect x="763.5" y="181" width="17.1" height="15.0" fill="rgb(214,37,29)" rx="2" ry="2" />
<text  x="766.46" y="191.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,555 us., 0.05%)</title><rect x="265.8" y="101" width="0.7" height="15.0" fill="rgb(235,100,3)" rx="2" ry="2" />
<text  x="268.84" y="111.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (750,903 us., 25.34%)</title><rect x="890.8" y="149" width="299.0" height="15.0" fill="rgb(251,115,23)" rx="2" ry="2" />
<text  x="893.76" y="159.5" >transformers/models/opt/modeling_opt.py(..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (400 us., 0.01%)</title><rect x="889.3" y="181" width="0.1" height="15.0" fill="rgb(207,29,52)" rx="2" ry="2" />
<text  x="892.27" y="191.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (698 us., 0.02%)</title><rect x="889.0" y="165" width="0.3" height="15.0" fill="rgb(211,117,26)" rx="2" ry="2" />
<text  x="891.99" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (1,086 us., 0.04%)</title><rect x="751.4" y="181" width="0.5" height="15.0" fill="rgb(252,61,14)" rx="2" ry="2" />
<text  x="754.43" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (204,776 us., 6.91%)</title><rect x="183.6" y="117" width="81.6" height="15.0" fill="rgb(240,76,27)" rx="2" ry="2" />
<text  x="186.62" y="127.5" >nn.Module..</text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (241,457 us., 8.15%)</title><rect x="266.5" y="181" width="96.1" height="15.0" fill="rgb(228,140,11)" rx="2" ry="2" />
<text  x="269.46" y="191.5" >torch_int/n..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (400 us., 0.01%)</title><rect x="889.3" y="197" width="0.1" height="15.0" fill="rgb(240,199,9)" rx="2" ry="2" />
<text  x="892.27" y="207.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (750,903 us., 25.34%)</title><rect x="890.8" y="245" width="299.0" height="15.0" fill="rgb(222,24,15)" rx="2" ry="2" />
<text  x="893.76" y="255.5" >torch/autograd/grad_mode.py(24):_decorat..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (750,903 us., 25.34%)</title><rect x="890.8" y="165" width="299.0" height="15.0" fill="rgb(242,184,9)" rx="2" ry="2" />
<text  x="893.76" y="175.5" >nn.Module:_Int8OPTDecoder</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (433,917 us., 14.64%)</title><rect x="10.0" y="197" width="172.8" height="15.0" fill="rgb(235,87,41)" rx="2" ry="2" />
<text  x="13.00" y="207.5" >nn.Module:_Int8OPTForC..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (1,705 us., 0.06%)</title><rect x="265.2" y="181" width="0.6" height="15.0" fill="rgb(229,201,47)" rx="2" ry="2" />
<text  x="268.16" y="191.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (240,512 us., 8.12%)</title><rect x="793.1" y="245" width="95.7" height="15.0" fill="rgb(249,100,48)" rx="2" ry="2" />
<text  x="796.06" y="255.5" >torch_int/n..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (43,014 us., 1.45%)</title><rect x="763.5" y="69" width="17.1" height="15.0" fill="rgb(205,203,5)" rx="2" ry="2" />
<text  x="766.46" y="79.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (922,725 us., 31.14%)</title><rect x="383.4" y="149" width="367.4" height="15.0" fill="rgb(235,182,53)" rx="2" ry="2" />
<text  x="386.41" y="159.5" >nn.Module:_Int8OPTDecoder</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (1,209 us., 0.04%)</title><rect x="750.9" y="165" width="0.5" height="15.0" fill="rgb(212,227,22)" rx="2" ry="2" />
<text  x="753.95" y="175.5" ></text>
</g>
<g >
<title>torch/nn/functional.py(2099):_embedding (3,260 us., 0.11%)</title><rect x="265.2" y="245" width="1.3" height="15.0" fill="rgb(247,153,15)" rx="2" ry="2" />
<text  x="268.16" y="255.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (4,074 us., 0.14%)</title><rect x="362.6" y="229" width="1.6" height="15.0" fill="rgb(230,57,49)" rx="2" ry="2" />
<text  x="365.61" y="239.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (241,457 us., 8.15%)</title><rect x="266.5" y="69" width="96.1" height="15.0" fill="rgb(214,153,28)" rx="2" ry="2" />
<text  x="269.46" y="79.5" >torch/autog..</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (400 us., 0.01%)</title><rect x="889.3" y="245" width="0.1" height="15.0" fill="rgb(236,65,22)" rx="2" ry="2" />
<text  x="892.27" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (598 us., 0.02%)</title><rect x="1189.8" y="181" width="0.2" height="15.0" fill="rgb(211,30,37)" rx="2" ry="2" />
<text  x="1192.76" y="191.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (1,555 us., 0.05%)</title><rect x="265.8" y="213" width="0.7" height="15.0" fill="rgb(242,105,49)" rx="2" ry="2" />
<text  x="268.84" y="223.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (45,582 us., 1.54%)</title><rect x="365.3" y="117" width="18.1" height="15.0" fill="rgb(226,23,0)" rx="2" ry="2" />
<text  x="368.26" y="127.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (922,725 us., 31.14%)</title><rect x="383.4" y="181" width="367.4" height="15.0" fill="rgb(230,86,52)" rx="2" ry="2" />
<text  x="386.41" y="191.5" >nn.Module:_Int8OPTDecoderLayer</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (2,587 us., 0.09%)</title><rect x="364.2" y="165" width="1.1" height="15.0" fill="rgb(229,154,10)" rx="2" ry="2" />
<text  x="367.23" y="175.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (14,472 us., 0.49%)</title><rect x="757.7" y="117" width="5.8" height="15.0" fill="rgb(212,180,42)" rx="2" ry="2" />
<text  x="760.70" y="127.5" ></text>
</g>
<g >
<title>torch/nn/modules/normalization.py(188):_forward (1,086 us., 0.04%)</title><rect x="751.4" y="229" width="0.5" height="15.0" fill="rgb(212,213,16)" rx="2" ry="2" />
<text  x="754.43" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (241,457 us., 8.15%)</title><rect x="266.5" y="165" width="96.1" height="15.0" fill="rgb(246,15,50)" rx="2" ry="2" />
<text  x="269.46" y="175.5" >nn.Module:_..</text>
</g>
<g >
<title>&lt;built-in_method_cumsum_of_type_object_at_0x7f84e00129c0&gt; (306 us., 0.01%)</title><rect x="183.5" y="261" width="0.1" height="15.0" fill="rgb(240,221,41)" rx="2" ry="2" />
<text  x="186.50" y="271.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (14,650 us., 0.49%)</title><rect x="751.9" y="117" width="5.8" height="15.0" fill="rgb(213,56,40)" rx="2" ry="2" />
<text  x="754.86" y="127.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (241,457 us., 8.15%)</title><rect x="266.5" y="133" width="96.1" height="15.0" fill="rgb(227,82,12)" rx="2" ry="2" />
<text  x="269.46" y="143.5" >nn.Module:_..</text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (14,472 us., 0.49%)</title><rect x="757.7" y="165" width="5.8" height="15.0" fill="rgb(215,48,50)" rx="2" ry="2" />
<text  x="760.70" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (1,555 us., 0.05%)</title><rect x="265.8" y="133" width="0.7" height="15.0" fill="rgb(229,216,19)" rx="2" ry="2" />
<text  x="268.84" y="143.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,808 us., 0.06%)</title><rect x="182.8" y="181" width="0.7" height="15.0" fill="rgb(213,97,23)" rx="2" ry="2" />
<text  x="185.78" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (1,209 us., 0.04%)</title><rect x="750.9" y="197" width="0.5" height="15.0" fill="rgb(238,131,13)" rx="2" ry="2" />
<text  x="753.95" y="207.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (750,903 us., 25.34%)</title><rect x="890.8" y="101" width="299.0" height="15.0" fill="rgb(237,31,35)" rx="2" ry="2" />
<text  x="893.76" y="111.5" >torch/autograd/grad_mode.py(27):_decorat..</text>
</g>
</g>
</svg>
