<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="294" onload="init(evt)" viewBox="0 0 1200 294" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="294.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >CUDA Time</text>
<text id="details" x="10.00" y="277" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="277" > </text>
<g id="frames">
<g >
<title>torch/nn/functional.py(2099):_embedding (9,649 us., 0.10%)</title><rect x="762.0" y="213" width="1.2" height="15.0" fill="rgb(212,132,15)" rx="2" ry="2" />
<text  x="765.01" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (174,922 us., 1.90%)</title><rect x="1167.0" y="149" width="22.4" height="15.0" fill="rgb(206,195,51)" rx="2" ry="2" />
<text  x="1170.02" y="159.5" >n..</text>
</g>
<g >
<title>nn.Module:_LayerNorm (158,552 us., 1.72%)</title><rect x="982.4" y="181" width="20.3" height="15.0" fill="rgb(252,220,33)" rx="2" ry="2" />
<text  x="985.39" y="191.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (2,517 us., 0.03%)</title><rect x="982.1" y="149" width="0.3" height="15.0" fill="rgb(225,179,4)" rx="2" ry="2" />
<text  x="985.07" y="159.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (1,885 us., 0.02%)</title><rect x="761.8" y="213" width="0.2" height="15.0" fill="rgb(227,193,34)" rx="2" ry="2" />
<text  x="764.77" y="223.5" ></text>
</g>
<g >
<title>&lt;built-in_method_bmm_of_type_object_at_0x7f37aa3239c0&gt; (682,302 us., 7.40%)</title><rect x="674.4" y="229" width="87.4" height="15.0" fill="rgb(239,41,10)" rx="2" ry="2" />
<text  x="677.45" y="239.5" >&lt;built-in_..</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (155,322 us., 1.68%)</title><rect x="982.4" y="85" width="19.9" height="15.0" fill="rgb(219,90,3)" rx="2" ry="2" />
<text  x="985.39" y="95.5" ></text>
</g>
<g >
<title>&lt;built-in_function_linear&gt; (5,191,898 us., 56.31%)</title><rect x="10.0" y="229" width="664.4" height="15.0" fill="rgb(238,84,53)" rx="2" ry="2" />
<text  x="13.00" y="239.5" >&lt;built-in_function_linear&gt;</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (774,526 us., 8.40%)</title><rect x="881.9" y="69" width="99.1" height="15.0" fill="rgb(236,61,36)" rx="2" ry="2" />
<text  x="884.90" y="79.5" >torch/autogr..</text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (717,180 us., 7.78%)</title><rect x="763.2" y="149" width="91.8" height="15.0" fill="rgb(233,69,29)" rx="2" ry="2" />
<text  x="766.24" y="159.5" >nn.Module:..</text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (4,618 us., 0.05%)</title><rect x="762.7" y="165" width="0.5" height="15.0" fill="rgb(238,24,52)" rx="2" ry="2" />
<text  x="765.65" y="175.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (1,827,130 us., 19.82%)</title><rect x="10.0" y="117" width="233.8" height="15.0" fill="rgb(241,79,25)" rx="2" ry="2" />
<text  x="13.00" y="127.5" >transformers/models/opt/modelin..</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (8,169 us., 0.09%)</title><rect x="981.0" y="149" width="1.1" height="15.0" fill="rgb(223,185,26)" rx="2" ry="2" />
<text  x="984.03" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (3,034,286 us., 32.91%)</title><rect x="243.8" y="165" width="388.4" height="15.0" fill="rgb(218,123,32)" rx="2" ry="2" />
<text  x="246.83" y="175.5" >nn.Module:_OPTDecoderLayer</text>
</g>
<g >
<title>nn.Module:_OPTAttention (682,302 us., 7.40%)</title><rect x="674.4" y="197" width="87.4" height="15.0" fill="rgb(239,4,20)" rx="2" ry="2" />
<text  x="677.45" y="207.5" >nn.Module:..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,885 us., 0.02%)</title><rect x="761.8" y="117" width="0.2" height="15.0" fill="rgb(238,15,48)" rx="2" ry="2" />
<text  x="764.77" y="127.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoder (3,034,286 us., 32.91%)</title><rect x="243.8" y="133" width="388.4" height="15.0" fill="rgb(254,23,17)" rx="2" ry="2" />
<text  x="246.83" y="143.5" >nn.Module:_OPTDecoder</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (174,922 us., 1.90%)</title><rect x="1167.0" y="197" width="22.4" height="15.0" fill="rgb(223,188,15)" rx="2" ry="2" />
<text  x="1170.02" y="207.5" >t..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (682,302 us., 7.40%)</title><rect x="674.4" y="117" width="87.4" height="15.0" fill="rgb(209,213,47)" rx="2" ry="2" />
<text  x="677.45" y="127.5" >transforme..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (1,827,130 us., 19.82%)</title><rect x="10.0" y="149" width="233.8" height="15.0" fill="rgb(221,63,34)" rx="2" ry="2" />
<text  x="13.00" y="159.5" >transformers/models/opt/modelin..</text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (241,110 us., 2.61%)</title><rect x="1063.9" y="149" width="30.9" height="15.0" fill="rgb(243,147,13)" rx="2" ry="2" />
<text  x="1066.90" y="159.5" >nn..</text>
</g>
<g >
<title>torch/nn/functional.py(1804):_softmax (717,180 us., 7.78%)</title><rect x="763.2" y="213" width="91.8" height="15.0" fill="rgb(237,28,23)" rx="2" ry="2" />
<text  x="766.24" y="223.5" >torch/nn/f..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (330,482 us., 3.58%)</title><rect x="632.2" y="149" width="42.2" height="15.0" fill="rgb(232,160,18)" rx="2" ry="2" />
<text  x="635.15" y="159.5" >pro..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (3,034,286 us., 32.91%)</title><rect x="243.8" y="85" width="388.4" height="15.0" fill="rgb(222,41,10)" rx="2" ry="2" />
<text  x="246.83" y="95.5" >profiling/utils.py(18):_profile_model</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(160):_forward (1,827,130 us., 19.82%)</title><rect x="10.0" y="181" width="233.8" height="15.0" fill="rgb(237,133,52)" rx="2" ry="2" />
<text  x="13.00" y="191.5" >transformers/models/opt/modelin..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (563,690 us., 6.11%)</title><rect x="1094.9" y="133" width="72.1" height="15.0" fill="rgb(232,107,13)" rx="2" ry="2" />
<text  x="1097.88" y="143.5" >transfor..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(89):__expand_mask (2,517 us., 0.03%)</title><rect x="982.1" y="213" width="0.3" height="15.0" fill="rgb(214,6,7)" rx="2" ry="2" />
<text  x="985.07" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Embedding (5,031 us., 0.05%)</title><rect x="762.0" y="181" width="0.7" height="15.0" fill="rgb(235,22,3)" rx="2" ry="2" />
<text  x="765.01" y="191.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (241,110 us., 2.61%)</title><rect x="1063.9" y="101" width="30.9" height="15.0" fill="rgb(206,19,49)" rx="2" ry="2" />
<text  x="1066.90" y="111.5" >tr..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (8,169 us., 0.09%)</title><rect x="981.0" y="181" width="1.1" height="15.0" fill="rgb(242,114,15)" rx="2" ry="2" />
<text  x="984.03" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_OPTAttention (774,526 us., 8.40%)</title><rect x="881.9" y="197" width="99.1" height="15.0" fill="rgb(226,93,2)" rx="2" ry="2" />
<text  x="884.90" y="207.5" >nn.Module:_O..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (717,180 us., 7.78%)</title><rect x="763.2" y="53" width="91.8" height="15.0" fill="rgb(252,204,11)" rx="2" ry="2" />
<text  x="766.24" y="63.5" >torch/auto..</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (5,031 us., 0.05%)</title><rect x="762.0" y="117" width="0.7" height="15.0" fill="rgb(252,31,50)" rx="2" ry="2" />
<text  x="765.01" y="127.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoder (241,110 us., 2.61%)</title><rect x="1063.9" y="117" width="30.9" height="15.0" fill="rgb(223,118,20)" rx="2" ry="2" />
<text  x="1066.90" y="127.5" >nn..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (3,942 us., 0.04%)</title><rect x="1189.5" y="165" width="0.5" height="15.0" fill="rgb(226,149,52)" rx="2" ry="2" />
<text  x="1192.50" y="175.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (3,230 us., 0.04%)</title><rect x="1002.3" y="165" width="0.4" height="15.0" fill="rgb(217,108,15)" rx="2" ry="2" />
<text  x="1005.27" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoder (2,517 us., 0.03%)</title><rect x="982.1" y="165" width="0.3" height="15.0" fill="rgb(250,185,54)" rx="2" ry="2" />
<text  x="985.07" y="175.5" ></text>
</g>
<g >
<title>torch/nn/modules/linear.py(113):_forward (5,191,898 us., 56.31%)</title><rect x="10.0" y="213" width="664.4" height="15.0" fill="rgb(236,24,2)" rx="2" ry="2" />
<text  x="13.00" y="223.5" >torch/nn/modules/linear.py(113):_forward</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (3,230 us., 0.04%)</title><rect x="1002.3" y="117" width="0.4" height="15.0" fill="rgb(245,112,19)" rx="2" ry="2" />
<text  x="1005.27" y="127.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (717,180 us., 7.78%)</title><rect x="763.2" y="69" width="91.8" height="15.0" fill="rgb(244,215,43)" rx="2" ry="2" />
<text  x="766.24" y="79.5" >profiling/..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (209,622 us., 2.27%)</title><rect x="855.1" y="53" width="26.8" height="15.0" fill="rgb(234,137,3)" rx="2" ry="2" />
<text  x="858.08" y="63.5" >t..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (3,230 us., 0.04%)</title><rect x="1002.3" y="133" width="0.4" height="15.0" fill="rgb(225,130,38)" rx="2" ry="2" />
<text  x="1005.27" y="143.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (8,169 us., 0.09%)</title><rect x="981.0" y="117" width="1.1" height="15.0" fill="rgb(209,207,3)" rx="2" ry="2" />
<text  x="984.03" y="127.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (155,322 us., 1.68%)</title><rect x="982.4" y="69" width="19.9" height="15.0" fill="rgb(230,75,9)" rx="2" ry="2" />
<text  x="985.39" y="79.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,827,130 us., 19.82%)</title><rect x="10.0" y="85" width="233.8" height="15.0" fill="rgb(216,107,11)" rx="2" ry="2" />
<text  x="13.00" y="95.5" >transformers/models/opt/modelin..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (5,031 us., 0.05%)</title><rect x="762.0" y="165" width="0.7" height="15.0" fill="rgb(240,122,41)" rx="2" ry="2" />
<text  x="765.01" y="175.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(160):_forward (478,114 us., 5.19%)</title><rect x="1002.7" y="213" width="61.2" height="15.0" fill="rgb(242,119,41)" rx="2" ry="2" />
<text  x="1005.68" y="223.5" >transf..</text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (563,690 us., 6.11%)</title><rect x="1094.9" y="181" width="72.1" height="15.0" fill="rgb(224,119,15)" rx="2" ry="2" />
<text  x="1097.88" y="191.5" >nn.Modul..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (717,180 us., 7.78%)</title><rect x="763.2" y="117" width="91.8" height="15.0" fill="rgb(246,82,51)" rx="2" ry="2" />
<text  x="766.24" y="127.5" >nn.Module:..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (241,110 us., 2.61%)</title><rect x="1063.9" y="165" width="30.9" height="15.0" fill="rgb(238,51,13)" rx="2" ry="2" />
<text  x="1066.90" y="175.5" >tr..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (155,322 us., 1.68%)</title><rect x="982.4" y="165" width="19.9" height="15.0" fill="rgb(220,176,31)" rx="2" ry="2" />
<text  x="985.39" y="175.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(160):_forward (209,622 us., 2.27%)</title><rect x="855.1" y="197" width="26.8" height="15.0" fill="rgb(207,227,42)" rx="2" ry="2" />
<text  x="858.08" y="207.5" >t..</text>
</g>
<g >
<title>all (9,220,356 us., 100%)</title><rect x="10.0" y="245" width="1180.0" height="15.0" fill="rgb(227,16,46)" rx="2" ry="2" />
<text  x="13.00" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoder (5,031 us., 0.05%)</title><rect x="762.0" y="149" width="0.7" height="15.0" fill="rgb(241,88,34)" rx="2" ry="2" />
<text  x="765.01" y="159.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (478,114 us., 5.19%)</title><rect x="1002.7" y="69" width="61.2" height="15.0" fill="rgb(208,188,52)" rx="2" ry="2" />
<text  x="1005.68" y="79.5" >torch/..</text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (1,827,130 us., 19.82%)</title><rect x="10.0" y="133" width="233.8" height="15.0" fill="rgb(220,7,12)" rx="2" ry="2" />
<text  x="13.00" y="143.5" >nn.Module:_OPTDecoderLayer</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (774,526 us., 8.40%)</title><rect x="881.9" y="149" width="99.1" height="15.0" fill="rgb(241,192,1)" rx="2" ry="2" />
<text  x="884.90" y="159.5" >transformers..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (4,618 us., 0.05%)</title><rect x="762.7" y="117" width="0.5" height="15.0" fill="rgb(216,226,13)" rx="2" ry="2" />
<text  x="765.65" y="127.5" ></text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (717,180 us., 7.78%)</title><rect x="763.2" y="85" width="91.8" height="15.0" fill="rgb(224,12,36)" rx="2" ry="2" />
<text  x="766.24" y="95.5" >nn.Module:..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (774,526 us., 8.40%)</title><rect x="881.9" y="133" width="99.1" height="15.0" fill="rgb(219,201,2)" rx="2" ry="2" />
<text  x="884.90" y="143.5" >nn.Module:_O..</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (1,885 us., 0.02%)</title><rect x="761.8" y="133" width="0.2" height="15.0" fill="rgb(217,38,40)" rx="2" ry="2" />
<text  x="764.77" y="143.5" ></text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (774,526 us., 8.40%)</title><rect x="881.9" y="101" width="99.1" height="15.0" fill="rgb(213,77,3)" rx="2" ry="2" />
<text  x="884.90" y="111.5" >nn.Module:_O..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (241,110 us., 2.61%)</title><rect x="1063.9" y="133" width="30.9" height="15.0" fill="rgb(250,67,53)" rx="2" ry="2" />
<text  x="1066.90" y="143.5" >tr..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,885 us., 0.02%)</title><rect x="761.8" y="101" width="0.2" height="15.0" fill="rgb(250,165,23)" rx="2" ry="2" />
<text  x="764.77" y="111.5" ></text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (2,517 us., 0.03%)</title><rect x="982.1" y="133" width="0.3" height="15.0" fill="rgb(213,167,35)" rx="2" ry="2" />
<text  x="985.07" y="143.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (682,302 us., 7.40%)</title><rect x="674.4" y="181" width="87.4" height="15.0" fill="rgb(239,53,36)" rx="2" ry="2" />
<text  x="677.45" y="191.5" >transforme..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (5,031 us., 0.05%)</title><rect x="762.0" y="133" width="0.7" height="15.0" fill="rgb(228,220,8)" rx="2" ry="2" />
<text  x="765.01" y="143.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (174,922 us., 1.90%)</title><rect x="1167.0" y="229" width="22.4" height="15.0" fill="rgb(249,91,34)" rx="2" ry="2" />
<text  x="1170.02" y="239.5" >t..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(160):_forward (717,180 us., 7.78%)</title><rect x="763.2" y="197" width="91.8" height="15.0" fill="rgb(205,173,14)" rx="2" ry="2" />
<text  x="766.24" y="207.5" >transforme..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (3,942 us., 0.04%)</title><rect x="1189.5" y="197" width="0.5" height="15.0" fill="rgb(248,184,29)" rx="2" ry="2" />
<text  x="1192.50" y="207.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (682,302 us., 7.40%)</title><rect x="674.4" y="149" width="87.4" height="15.0" fill="rgb(254,62,31)" rx="2" ry="2" />
<text  x="677.45" y="159.5" >transforme..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,885 us., 0.02%)</title><rect x="761.8" y="149" width="0.2" height="15.0" fill="rgb(232,143,32)" rx="2" ry="2" />
<text  x="764.77" y="159.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (5,031 us., 0.05%)</title><rect x="762.0" y="101" width="0.7" height="15.0" fill="rgb(231,94,29)" rx="2" ry="2" />
<text  x="765.01" y="111.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (3,942 us., 0.04%)</title><rect x="1189.5" y="229" width="0.5" height="15.0" fill="rgb(239,197,54)" rx="2" ry="2" />
<text  x="1192.50" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_ReLU (241,110 us., 2.61%)</title><rect x="1063.9" y="181" width="30.9" height="15.0" fill="rgb(209,156,46)" rx="2" ry="2" />
<text  x="1066.90" y="191.5" >nn..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(160):_forward (774,526 us., 8.40%)</title><rect x="881.9" y="213" width="99.1" height="15.0" fill="rgb(228,147,2)" rx="2" ry="2" />
<text  x="884.90" y="223.5" >transformers..</text>
</g>
<g >
<title>&lt;built-in_method_cumsum_of_type_object_at_0x7f37aa3239c0&gt; (1,885 us., 0.02%)</title><rect x="761.8" y="229" width="0.2" height="15.0" fill="rgb(251,180,10)" rx="2" ry="2" />
<text  x="764.77" y="239.5" ></text>
</g>
<g >
<title>torch/nn/modules/sparse.py(157):_forward (9,649 us., 0.10%)</title><rect x="762.0" y="197" width="1.2" height="15.0" fill="rgb(213,121,42)" rx="2" ry="2" />
<text  x="765.01" y="207.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (717,180 us., 7.78%)</title><rect x="763.2" y="133" width="91.8" height="15.0" fill="rgb(241,227,12)" rx="2" ry="2" />
<text  x="766.24" y="143.5" >transforme..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (563,690 us., 6.11%)</title><rect x="1094.9" y="165" width="72.1" height="15.0" fill="rgb(243,60,14)" rx="2" ry="2" />
<text  x="1097.88" y="175.5" >transfor..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (2,517 us., 0.03%)</title><rect x="982.1" y="181" width="0.3" height="15.0" fill="rgb(254,75,10)" rx="2" ry="2" />
<text  x="985.07" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (3,034,286 us., 32.91%)</title><rect x="243.8" y="101" width="388.4" height="15.0" fill="rgb(246,70,18)" rx="2" ry="2" />
<text  x="246.83" y="111.5" >nn.Module:_OPTForCausalLM</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (3,942 us., 0.04%)</title><rect x="1189.5" y="181" width="0.5" height="15.0" fill="rgb(229,214,22)" rx="2" ry="2" />
<text  x="1192.50" y="191.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (3,034,286 us., 32.91%)</title><rect x="243.8" y="149" width="388.4" height="15.0" fill="rgb(224,112,25)" rx="2" ry="2" />
<text  x="246.83" y="159.5" >transformers/models/opt/modeling_opt.py(553):_forward</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (155,322 us., 1.68%)</title><rect x="982.4" y="53" width="19.9" height="15.0" fill="rgb(227,183,3)" rx="2" ry="2" />
<text  x="985.39" y="63.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoder (1,827,130 us., 19.82%)</title><rect x="10.0" y="101" width="233.8" height="15.0" fill="rgb(238,95,44)" rx="2" ry="2" />
<text  x="13.00" y="111.5" >nn.Module:_OPTDecoder</text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (155,322 us., 1.68%)</title><rect x="982.4" y="149" width="19.9" height="15.0" fill="rgb(245,64,53)" rx="2" ry="2" />
<text  x="985.39" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (1,827,130 us., 19.82%)</title><rect x="10.0" y="69" width="233.8" height="15.0" fill="rgb(224,80,45)" rx="2" ry="2" />
<text  x="13.00" y="79.5" >nn.Module:_OPTForCausalLM</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (478,114 us., 5.19%)</title><rect x="1002.7" y="181" width="61.2" height="15.0" fill="rgb(239,93,43)" rx="2" ry="2" />
<text  x="1005.68" y="191.5" >transf..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (209,622 us., 2.27%)</title><rect x="855.1" y="69" width="26.8" height="15.0" fill="rgb(252,198,53)" rx="2" ry="2" />
<text  x="858.08" y="79.5" >p..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (155,322 us., 1.68%)</title><rect x="982.4" y="117" width="19.9" height="15.0" fill="rgb(233,199,29)" rx="2" ry="2" />
<text  x="985.39" y="127.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(160):_forward (563,690 us., 6.11%)</title><rect x="1094.9" y="229" width="72.1" height="15.0" fill="rgb(232,68,21)" rx="2" ry="2" />
<text  x="1097.88" y="239.5" >transfor..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (8,169 us., 0.09%)</title><rect x="981.0" y="133" width="1.1" height="15.0" fill="rgb(248,174,7)" rx="2" ry="2" />
<text  x="984.03" y="143.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (155,322 us., 1.68%)</title><rect x="982.4" y="101" width="19.9" height="15.0" fill="rgb(215,202,22)" rx="2" ry="2" />
<text  x="985.39" y="111.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (717,180 us., 7.78%)</title><rect x="763.2" y="101" width="91.8" height="15.0" fill="rgb(237,220,54)" rx="2" ry="2" />
<text  x="766.24" y="111.5" >transforme..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (5,031 us., 0.05%)</title><rect x="762.0" y="85" width="0.7" height="15.0" fill="rgb(247,144,10)" rx="2" ry="2" />
<text  x="765.01" y="95.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (4,618 us., 0.05%)</title><rect x="762.7" y="69" width="0.5" height="15.0" fill="rgb(229,83,39)" rx="2" ry="2" />
<text  x="765.65" y="79.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (209,622 us., 2.27%)</title><rect x="855.1" y="101" width="26.8" height="15.0" fill="rgb(251,85,26)" rx="2" ry="2" />
<text  x="858.08" y="111.5" >t..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (478,114 us., 5.19%)</title><rect x="1002.7" y="133" width="61.2" height="15.0" fill="rgb(238,88,15)" rx="2" ry="2" />
<text  x="1005.68" y="143.5" >nn.Mod..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (241,110 us., 2.61%)</title><rect x="1063.9" y="69" width="30.9" height="15.0" fill="rgb(249,211,37)" rx="2" ry="2" />
<text  x="1066.90" y="79.5" >pr..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (241,110 us., 2.61%)</title><rect x="1063.9" y="53" width="30.9" height="15.0" fill="rgb(220,68,19)" rx="2" ry="2" />
<text  x="1066.90" y="63.5" >to..</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (478,114 us., 5.19%)</title><rect x="1002.7" y="101" width="61.2" height="15.0" fill="rgb(254,69,43)" rx="2" ry="2" />
<text  x="1005.68" y="111.5" >nn.Mod..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (563,690 us., 6.11%)</title><rect x="1094.9" y="149" width="72.1" height="15.0" fill="rgb(232,61,53)" rx="2" ry="2" />
<text  x="1097.88" y="159.5" >nn.Modul..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (478,114 us., 5.19%)</title><rect x="1002.7" y="85" width="61.2" height="15.0" fill="rgb(209,131,26)" rx="2" ry="2" />
<text  x="1005.68" y="95.5" >profil..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (478,114 us., 5.19%)</title><rect x="1002.7" y="149" width="61.2" height="15.0" fill="rgb(208,154,47)" rx="2" ry="2" />
<text  x="1005.68" y="159.5" >transf..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,827,130 us., 19.82%)</title><rect x="10.0" y="37" width="233.8" height="15.0" fill="rgb(215,166,22)" rx="2" ry="2" />
<text  x="13.00" y="47.5" >torch/autograd/grad_mode.py(27)..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (1,885 us., 0.02%)</title><rect x="761.8" y="181" width="0.2" height="15.0" fill="rgb(227,62,11)" rx="2" ry="2" />
<text  x="764.77" y="191.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,827,130 us., 19.82%)</title><rect x="10.0" y="53" width="233.8" height="15.0" fill="rgb(209,71,37)" rx="2" ry="2" />
<text  x="13.00" y="63.5" >profiling/utils.py(18):_profile..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (774,526 us., 8.40%)</title><rect x="881.9" y="85" width="99.1" height="15.0" fill="rgb(211,81,36)" rx="2" ry="2" />
<text  x="884.90" y="95.5" >profiling/ut..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (3,034,286 us., 32.91%)</title><rect x="243.8" y="181" width="388.4" height="15.0" fill="rgb(243,81,54)" rx="2" ry="2" />
<text  x="246.83" y="191.5" >transformers/models/opt/modeling_opt.py(298):_forward</text>
</g>
<g >
<title>&lt;built-in_method_encode_of_str_object_at_0x7f36b5e1a450&gt; (1,712,408 us., 18.57%)</title><rect x="763.2" y="229" width="219.2" height="15.0" fill="rgb(242,122,16)" rx="2" ry="2" />
<text  x="766.24" y="239.5" >&lt;built-in_method_encode_of_s..</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (241,110 us., 2.61%)</title><rect x="1063.9" y="85" width="30.9" height="15.0" fill="rgb(251,213,7)" rx="2" ry="2" />
<text  x="1066.90" y="95.5" >nn..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(533):__prepare_decoder_attention_mask (2,517 us., 0.03%)</title><rect x="982.1" y="197" width="0.3" height="15.0" fill="rgb(249,229,25)" rx="2" ry="2" />
<text  x="985.07" y="207.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (174,922 us., 1.90%)</title><rect x="1167.0" y="133" width="22.4" height="15.0" fill="rgb(239,28,32)" rx="2" ry="2" />
<text  x="1170.02" y="143.5" >p..</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (4,618 us., 0.05%)</title><rect x="762.7" y="101" width="0.5" height="15.0" fill="rgb(221,24,2)" rx="2" ry="2" />
<text  x="765.65" y="111.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (682,302 us., 7.40%)</title><rect x="674.4" y="85" width="87.4" height="15.0" fill="rgb(240,8,11)" rx="2" ry="2" />
<text  x="677.45" y="95.5" >profiling/..</text>
</g>
<g >
<title>nn.Module:_OPTAttention (563,690 us., 6.11%)</title><rect x="1094.9" y="213" width="72.1" height="15.0" fill="rgb(214,227,37)" rx="2" ry="2" />
<text  x="1097.88" y="223.5" >nn.Modul..</text>
</g>
<g >
<title>torch/nn/functional.py(2488):_layer_norm (158,552 us., 1.72%)</title><rect x="982.4" y="213" width="20.3" height="15.0" fill="rgb(229,66,0)" rx="2" ry="2" />
<text  x="985.39" y="223.5" ></text>
</g>
<g >
<title>torch/nn/modules/normalization.py(188):_forward (158,552 us., 1.72%)</title><rect x="982.4" y="197" width="20.3" height="15.0" fill="rgb(250,25,27)" rx="2" ry="2" />
<text  x="985.39" y="207.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (174,922 us., 1.90%)</title><rect x="1167.0" y="117" width="22.4" height="15.0" fill="rgb(242,151,0)" rx="2" ry="2" />
<text  x="1170.02" y="127.5" >t..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (209,622 us., 2.27%)</title><rect x="855.1" y="165" width="26.8" height="15.0" fill="rgb(235,56,40)" rx="2" ry="2" />
<text  x="858.08" y="175.5" >t..</text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (682,302 us., 7.40%)</title><rect x="674.4" y="165" width="87.4" height="15.0" fill="rgb(226,89,9)" rx="2" ry="2" />
<text  x="677.45" y="175.5" >nn.Module:..</text>
</g>
<g >
<title>nn.Module:_OPTAttention (478,114 us., 5.19%)</title><rect x="1002.7" y="197" width="61.2" height="15.0" fill="rgb(238,64,33)" rx="2" ry="2" />
<text  x="1005.68" y="207.5" >nn.Mod..</text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (774,526 us., 8.40%)</title><rect x="881.9" y="165" width="99.1" height="15.0" fill="rgb(242,45,26)" rx="2" ry="2" />
<text  x="884.90" y="175.5" >nn.Module:_O..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (4,618 us., 0.05%)</title><rect x="762.7" y="149" width="0.5" height="15.0" fill="rgb(234,69,19)" rx="2" ry="2" />
<text  x="765.65" y="159.5" ></text>
</g>
<g >
<title>&lt;built-in_method_max_of_type_object_at_0x7f37aa3239c0&gt; (478,114 us., 5.19%)</title><rect x="1002.7" y="229" width="61.2" height="15.0" fill="rgb(246,189,13)" rx="2" ry="2" />
<text  x="1005.68" y="239.5" >&lt;built..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (2,517 us., 0.03%)</title><rect x="982.1" y="101" width="0.3" height="15.0" fill="rgb(229,66,44)" rx="2" ry="2" />
<text  x="985.07" y="111.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(160):_forward (682,302 us., 7.40%)</title><rect x="674.4" y="213" width="87.4" height="15.0" fill="rgb(224,153,41)" rx="2" ry="2" />
<text  x="677.45" y="223.5" >transforme..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (478,114 us., 5.19%)</title><rect x="1002.7" y="117" width="61.2" height="15.0" fill="rgb(253,5,31)" rx="2" ry="2" />
<text  x="1005.68" y="127.5" >transf..</text>
</g>
<g >
<title>torch/nn/functional.py(1446):_relu (241,110 us., 2.61%)</title><rect x="1063.9" y="213" width="30.9" height="15.0" fill="rgb(249,114,44)" rx="2" ry="2" />
<text  x="1066.90" y="223.5" >to..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (3,942 us., 0.04%)</title><rect x="1189.5" y="213" width="0.5" height="15.0" fill="rgb(236,172,45)" rx="2" ry="2" />
<text  x="1192.50" y="223.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (330,482 us., 3.58%)</title><rect x="632.2" y="133" width="42.2" height="15.0" fill="rgb(242,38,53)" rx="2" ry="2" />
<text  x="635.15" y="143.5" >tor..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (3,230 us., 0.04%)</title><rect x="1002.3" y="149" width="0.4" height="15.0" fill="rgb(244,99,38)" rx="2" ry="2" />
<text  x="1005.27" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_OPTAttention (717,180 us., 7.78%)</title><rect x="763.2" y="181" width="91.8" height="15.0" fill="rgb(247,159,0)" rx="2" ry="2" />
<text  x="766.24" y="191.5" >nn.Module:..</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (563,690 us., 6.11%)</title><rect x="1094.9" y="117" width="72.1" height="15.0" fill="rgb(242,182,31)" rx="2" ry="2" />
<text  x="1097.88" y="127.5" >nn.Modul..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (8,169 us., 0.09%)</title><rect x="981.0" y="197" width="1.1" height="15.0" fill="rgb(250,211,19)" rx="2" ry="2" />
<text  x="984.03" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (682,302 us., 7.40%)</title><rect x="674.4" y="101" width="87.4" height="15.0" fill="rgb(242,225,15)" rx="2" ry="2" />
<text  x="677.45" y="111.5" >nn.Module:..</text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (478,114 us., 5.19%)</title><rect x="1002.7" y="165" width="61.2" height="15.0" fill="rgb(238,205,9)" rx="2" ry="2" />
<text  x="1005.68" y="175.5" >nn.Mod..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (682,302 us., 7.40%)</title><rect x="674.4" y="133" width="87.4" height="15.0" fill="rgb(238,180,8)" rx="2" ry="2" />
<text  x="677.45" y="143.5" >nn.Module:..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (3,034,286 us., 32.91%)</title><rect x="243.8" y="117" width="388.4" height="15.0" fill="rgb(245,76,19)" rx="2" ry="2" />
<text  x="246.83" y="127.5" >transformers/models/opt/modeling_opt.py(840):_forward</text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (209,622 us., 2.27%)</title><rect x="855.1" y="149" width="26.8" height="15.0" fill="rgb(221,127,1)" rx="2" ry="2" />
<text  x="858.08" y="159.5" >n..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (4,618 us., 0.05%)</title><rect x="762.7" y="85" width="0.5" height="15.0" fill="rgb(232,146,13)" rx="2" ry="2" />
<text  x="765.65" y="95.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (3,034,286 us., 32.91%)</title><rect x="243.8" y="69" width="388.4" height="15.0" fill="rgb(246,8,3)" rx="2" ry="2" />
<text  x="246.83" y="79.5" >torch/autograd/grad_mode.py(27):_decorate_context</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (330,482 us., 3.58%)</title><rect x="632.2" y="181" width="42.2" height="15.0" fill="rgb(246,31,7)" rx="2" ry="2" />
<text  x="635.15" y="191.5" >tra..</text>
</g>
<g >
<title>nn.Module:_OPTAttention (209,622 us., 2.27%)</title><rect x="855.1" y="181" width="26.8" height="15.0" fill="rgb(210,105,43)" rx="2" ry="2" />
<text  x="858.08" y="191.5" >n..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (4,618 us., 0.05%)</title><rect x="762.7" y="133" width="0.5" height="15.0" fill="rgb(248,69,35)" rx="2" ry="2" />
<text  x="765.65" y="143.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (717,180 us., 7.78%)</title><rect x="763.2" y="165" width="91.8" height="15.0" fill="rgb(248,206,4)" rx="2" ry="2" />
<text  x="766.24" y="175.5" >transforme..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (174,922 us., 1.90%)</title><rect x="1167.0" y="165" width="22.4" height="15.0" fill="rgb(223,134,32)" rx="2" ry="2" />
<text  x="1170.02" y="175.5" >t..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (3,942 us., 0.04%)</title><rect x="1189.5" y="149" width="0.5" height="15.0" fill="rgb(242,214,49)" rx="2" ry="2" />
<text  x="1192.50" y="159.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (3,230 us., 0.04%)</title><rect x="1002.3" y="85" width="0.4" height="15.0" fill="rgb(210,73,4)" rx="2" ry="2" />
<text  x="1005.27" y="95.5" ></text>
</g>
<g >
<title>torch/nn/modules/activation.py(97):_forward (241,110 us., 2.61%)</title><rect x="1063.9" y="197" width="30.9" height="15.0" fill="rgb(225,32,26)" rx="2" ry="2" />
<text  x="1066.90" y="207.5" >to..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (563,690 us., 6.11%)</title><rect x="1094.9" y="85" width="72.1" height="15.0" fill="rgb(226,47,54)" rx="2" ry="2" />
<text  x="1097.88" y="95.5" >torch/au..</text>
</g>
<g >
<title>&lt;built-in_method_embedding_of_type_object_at_0x7f37aa3239c0&gt; (9,649 us., 0.10%)</title><rect x="762.0" y="229" width="1.2" height="15.0" fill="rgb(239,58,44)" rx="2" ry="2" />
<text  x="765.01" y="239.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (8,169 us., 0.09%)</title><rect x="981.0" y="165" width="1.1" height="15.0" fill="rgb(213,75,12)" rx="2" ry="2" />
<text  x="984.03" y="175.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (774,526 us., 8.40%)</title><rect x="881.9" y="181" width="99.1" height="15.0" fill="rgb(232,192,12)" rx="2" ry="2" />
<text  x="884.90" y="191.5" >transformers..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(157):__shape (209,622 us., 2.27%)</title><rect x="855.1" y="213" width="26.8" height="15.0" fill="rgb(248,186,23)" rx="2" ry="2" />
<text  x="858.08" y="223.5" >t..</text>
</g>
<g >
<title>&lt;built-in_method_layer_norm_of_type_object_at_0x7f37aa3239c0&gt; (158,552 us., 1.72%)</title><rect x="982.4" y="229" width="20.3" height="15.0" fill="rgb(205,156,48)" rx="2" ry="2" />
<text  x="985.39" y="239.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (682,302 us., 7.40%)</title><rect x="674.4" y="69" width="87.4" height="15.0" fill="rgb(228,102,40)" rx="2" ry="2" />
<text  x="677.45" y="79.5" >torch/auto..</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (209,622 us., 2.27%)</title><rect x="855.1" y="85" width="26.8" height="15.0" fill="rgb(240,43,14)" rx="2" ry="2" />
<text  x="858.08" y="95.5" >n..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (209,622 us., 2.27%)</title><rect x="855.1" y="117" width="26.8" height="15.0" fill="rgb(229,121,0)" rx="2" ry="2" />
<text  x="858.08" y="127.5" >n..</text>
</g>
<g >
<title>nn.Module:_Linear (5,191,898 us., 56.31%)</title><rect x="10.0" y="197" width="664.4" height="15.0" fill="rgb(251,124,10)" rx="2" ry="2" />
<text  x="13.00" y="207.5" >nn.Module:_Linear</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (330,482 us., 3.58%)</title><rect x="632.2" y="165" width="42.2" height="15.0" fill="rgb(221,92,43)" rx="2" ry="2" />
<text  x="635.15" y="175.5" >nn...</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (563,690 us., 6.11%)</title><rect x="1094.9" y="197" width="72.1" height="15.0" fill="rgb(242,108,18)" rx="2" ry="2" />
<text  x="1097.88" y="207.5" >transfor..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (1,885 us., 0.02%)</title><rect x="761.8" y="165" width="0.2" height="15.0" fill="rgb(205,213,18)" rx="2" ry="2" />
<text  x="764.77" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (1,885 us., 0.02%)</title><rect x="761.8" y="197" width="0.2" height="15.0" fill="rgb(243,91,13)" rx="2" ry="2" />
<text  x="764.77" y="207.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(533):__prepare_decoder_attention_mask (8,169 us., 0.09%)</title><rect x="981.0" y="213" width="1.1" height="15.0" fill="rgb(227,71,53)" rx="2" ry="2" />
<text  x="984.03" y="223.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (209,622 us., 2.27%)</title><rect x="855.1" y="133" width="26.8" height="15.0" fill="rgb(238,10,2)" rx="2" ry="2" />
<text  x="858.08" y="143.5" >t..</text>
</g>
<g >
<title>nn.Module:_OPTAttention (1,827,130 us., 19.82%)</title><rect x="10.0" y="165" width="233.8" height="15.0" fill="rgb(208,89,26)" rx="2" ry="2" />
<text  x="13.00" y="175.5" >nn.Module:_OPTAttention</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (4,618 us., 0.05%)</title><rect x="762.7" y="181" width="0.5" height="15.0" fill="rgb(216,163,20)" rx="2" ry="2" />
<text  x="765.65" y="191.5" ></text>
</g>
<g >
<title>&lt;built-in_method_relu_of_type_object_at_0x7f37aa3239c0&gt; (241,110 us., 2.61%)</title><rect x="1063.9" y="229" width="30.9" height="15.0" fill="rgb(240,111,21)" rx="2" ry="2" />
<text  x="1066.90" y="239.5" >&lt;b..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (563,690 us., 6.11%)</title><rect x="1094.9" y="101" width="72.1" height="15.0" fill="rgb(224,192,42)" rx="2" ry="2" />
<text  x="1097.88" y="111.5" >profilin..</text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (174,922 us., 1.90%)</title><rect x="1167.0" y="213" width="22.4" height="15.0" fill="rgb(244,26,1)" rx="2" ry="2" />
<text  x="1170.02" y="223.5" >n..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (774,526 us., 8.40%)</title><rect x="881.9" y="117" width="99.1" height="15.0" fill="rgb(242,186,10)" rx="2" ry="2" />
<text  x="884.90" y="127.5" >transformers..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (2,517 us., 0.03%)</title><rect x="982.1" y="117" width="0.3" height="15.0" fill="rgb(246,2,7)" rx="2" ry="2" />
<text  x="985.07" y="127.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoder (174,922 us., 1.90%)</title><rect x="1167.0" y="181" width="22.4" height="15.0" fill="rgb(209,98,32)" rx="2" ry="2" />
<text  x="1170.02" y="191.5" >n..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (3,230 us., 0.04%)</title><rect x="1002.3" y="101" width="0.4" height="15.0" fill="rgb(221,21,43)" rx="2" ry="2" />
<text  x="1005.27" y="111.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (155,322 us., 1.68%)</title><rect x="982.4" y="133" width="19.9" height="15.0" fill="rgb(225,193,21)" rx="2" ry="2" />
<text  x="985.39" y="143.5" ></text>
</g>
</g>
</svg>
