<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="326" onload="init(evt)" viewBox="0 0 1200 326" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="326.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >CUDA Time</text>
<text id="details" x="10.00" y="309" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="309" > </text>
<g id="frames">
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (946,477 us., 9.52%)</title><rect x="735.0" y="133" width="112.3" height="15.0" fill="rgb(227,131,49)" rx="2" ry="2" />
<text  x="737.96" y="143.5" >transformers/..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (3,570,012 us., 35.92%)</title><rect x="271.6" y="133" width="423.8" height="15.0" fill="rgb(233,194,20)" rx="2" ry="2" />
<text  x="274.57" y="143.5" >transformers/models/opt/modeling_opt.py(840):_forward</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,604 us., 0.02%)</title><rect x="45.6" y="181" width="0.2" height="15.0" fill="rgb(221,188,3)" rx="2" ry="2" />
<text  x="48.59" y="191.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (161,629 us., 1.63%)</title><rect x="252.4" y="69" width="19.2" height="15.0" fill="rgb(234,153,15)" rx="2" ry="2" />
<text  x="255.38" y="79.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(300):__prepare_decoder_attention_mask (2,118 us., 0.02%)</title><rect x="695.4" y="229" width="0.3" height="15.0" fill="rgb(252,14,45)" rx="2" ry="2" />
<text  x="698.44" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (4,645 us., 0.05%)</title><rect x="136.9" y="149" width="0.5" height="15.0" fill="rgb(250,159,9)" rx="2" ry="2" />
<text  x="139.87" y="159.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(300):__prepare_decoder_attention_mask (8,166 us., 0.08%)</title><rect x="250.3" y="245" width="1.0" height="15.0" fill="rgb(207,208,22)" rx="2" ry="2" />
<text  x="253.31" y="255.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (3,570,012 us., 35.92%)</title><rect x="271.6" y="165" width="423.8" height="15.0" fill="rgb(236,183,5)" rx="2" ry="2" />
<text  x="274.57" y="175.5" >torch_int/nn/opt.py(321):_forward</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (946,695 us., 9.52%)</title><rect x="137.9" y="101" width="112.4" height="15.0" fill="rgb(243,61,52)" rx="2" ry="2" />
<text  x="140.91" y="111.5" >nn.Module:_In..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (6,641 us., 0.07%)</title><rect x="847.6" y="245" width="0.8" height="15.0" fill="rgb(221,53,51)" rx="2" ry="2" />
<text  x="850.61" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (100,013 us., 1.01%)</title><rect x="710.6" y="133" width="11.8" height="15.0" fill="rgb(213,175,13)" rx="2" ry="2" />
<text  x="713.57" y="143.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (3,208 us., 0.03%)</title><rect x="695.7" y="181" width="0.4" height="15.0" fill="rgb(244,189,10)" rx="2" ry="2" />
<text  x="698.69" y="191.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (105,382 us., 1.06%)</title><rect x="722.4" y="101" width="12.6" height="15.0" fill="rgb(248,148,0)" rx="2" ry="2" />
<text  x="725.45" y="111.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (946,477 us., 9.52%)</title><rect x="735.0" y="197" width="112.3" height="15.0" fill="rgb(249,147,25)" rx="2" ry="2" />
<text  x="737.96" y="207.5" >torch_int/nn/..</text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (946,477 us., 9.52%)</title><rect x="735.0" y="213" width="112.3" height="15.0" fill="rgb(209,149,22)" rx="2" ry="2" />
<text  x="737.96" y="223.5" >nn.Module:_In..</text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (2,876,730 us., 28.94%)</title><rect x="848.4" y="229" width="341.5" height="15.0" fill="rgb(225,226,12)" rx="2" ry="2" />
<text  x="851.40" y="239.5" >nn.Module:_Int8OPTAttention</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (59,568 us., 0.60%)</title><rect x="696.1" y="149" width="7.0" height="15.0" fill="rgb(233,17,34)" rx="2" ry="2" />
<text  x="699.07" y="159.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (2,876,730 us., 28.94%)</title><rect x="848.4" y="245" width="341.5" height="15.0" fill="rgb(231,164,38)" rx="2" ry="2" />
<text  x="851.40" y="255.5" >torch/autograd/grad_mode.py(24):_decorate_cont..</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (1,247 us., 0.01%)</title><rect x="847.4" y="245" width="0.1" height="15.0" fill="rgb(240,205,40)" rx="2" ry="2" />
<text  x="850.38" y="255.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (105,382 us., 1.06%)</title><rect x="722.4" y="133" width="12.6" height="15.0" fill="rgb(220,23,14)" rx="2" ry="2" />
<text  x="725.45" y="143.5" ></text>
</g>
<g >
<title>&lt;built-in_method_layer_norm_of_type_object_at_0x7fb03fa229c0&gt; (3,208 us., 0.03%)</title><rect x="695.7" y="261" width="0.4" height="15.0" fill="rgb(247,17,36)" rx="2" ry="2" />
<text  x="698.69" y="271.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (5,000 us., 0.05%)</title><rect x="45.0" y="229" width="0.6" height="15.0" fill="rgb(252,16,9)" rx="2" ry="2" />
<text  x="47.99" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (1,604 us., 0.02%)</title><rect x="45.6" y="229" width="0.2" height="15.0" fill="rgb(213,132,49)" rx="2" ry="2" />
<text  x="48.59" y="239.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (161,629 us., 1.63%)</title><rect x="252.4" y="85" width="19.2" height="15.0" fill="rgb(215,36,19)" rx="2" ry="2" />
<text  x="255.38" y="95.5" ></text>
</g>
<g >
<title>all (9,939,305 us., 100%)</title><rect x="10.0" y="277" width="1180.0" height="15.0" fill="rgb(251,85,35)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (4,129 us., 0.04%)</title><rect x="137.4" y="197" width="0.5" height="15.0" fill="rgb(245,174,16)" rx="2" ry="2" />
<text  x="140.42" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (946,477 us., 9.52%)</title><rect x="735.0" y="149" width="112.3" height="15.0" fill="rgb(216,36,33)" rx="2" ry="2" />
<text  x="737.96" y="159.5" >nn.Module:_In..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (5,000 us., 0.05%)</title><rect x="45.0" y="165" width="0.6" height="15.0" fill="rgb(228,226,32)" rx="2" ry="2" />
<text  x="47.99" y="175.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (59,568 us., 0.60%)</title><rect x="696.1" y="165" width="7.0" height="15.0" fill="rgb(224,19,45)" rx="2" ry="2" />
<text  x="699.07" y="175.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(43):__shape (161,629 us., 1.63%)</title><rect x="252.4" y="245" width="19.2" height="15.0" fill="rgb(231,148,6)" rx="2" ry="2" />
<text  x="255.38" y="255.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (767,298 us., 7.72%)</title><rect x="45.8" y="197" width="91.1" height="15.0" fill="rgb(239,47,30)" rx="2" ry="2" />
<text  x="48.78" y="207.5" >torch_int/..</text>
</g>
<g >
<title>torch/nn/modules/sparse.py(157):_forward (8,774 us., 0.09%)</title><rect x="136.9" y="229" width="1.0" height="15.0" fill="rgb(222,163,29)" rx="2" ry="2" />
<text  x="139.87" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (6,641 us., 0.07%)</title><rect x="847.6" y="213" width="0.8" height="15.0" fill="rgb(233,34,9)" rx="2" ry="2" />
<text  x="850.61" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (767,298 us., 7.72%)</title><rect x="45.8" y="149" width="91.1" height="15.0" fill="rgb(232,22,46)" rx="2" ry="2" />
<text  x="48.78" y="159.5" >nn.Module:..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (2,876,730 us., 28.94%)</title><rect x="848.4" y="197" width="341.5" height="15.0" fill="rgb(231,33,17)" rx="2" ry="2" />
<text  x="851.40" y="207.5" >nn.Module:_Int8OPTDecoderLayer</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (62,567 us., 0.63%)</title><rect x="703.1" y="101" width="7.5" height="15.0" fill="rgb(226,202,49)" rx="2" ry="2" />
<text  x="706.15" y="111.5" ></text>
</g>
<g >
<title>torch/nn/functional.py(1804):_softmax (946,695 us., 9.52%)</title><rect x="137.9" y="245" width="112.4" height="15.0" fill="rgb(209,55,35)" rx="2" ry="2" />
<text  x="140.91" y="255.5" >torch/nn/func..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (100,013 us., 1.01%)</title><rect x="710.6" y="37" width="11.8" height="15.0" fill="rgb(207,120,43)" rx="2" ry="2" />
<text  x="713.57" y="47.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(89):__expand_mask (2,118 us., 0.02%)</title><rect x="695.4" y="245" width="0.3" height="15.0" fill="rgb(215,209,51)" rx="2" ry="2" />
<text  x="698.44" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (59,568 us., 0.60%)</title><rect x="696.1" y="181" width="7.0" height="15.0" fill="rgb(229,44,53)" rx="2" ry="2" />
<text  x="699.07" y="191.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (9,321 us., 0.09%)</title><rect x="251.3" y="181" width="1.1" height="15.0" fill="rgb(251,110,43)" rx="2" ry="2" />
<text  x="254.28" y="191.5" ></text>
</g>
<g >
<title>&lt;built-in_method_cumsum_of_type_object_at_0x7fb03fa229c0&gt; (1,604 us., 0.02%)</title><rect x="45.6" y="261" width="0.2" height="15.0" fill="rgb(206,114,4)" rx="2" ry="2" />
<text  x="48.59" y="271.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (4,645 us., 0.05%)</title><rect x="136.9" y="165" width="0.5" height="15.0" fill="rgb(218,177,41)" rx="2" ry="2" />
<text  x="139.87" y="175.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (62,567 us., 0.63%)</title><rect x="703.1" y="53" width="7.5" height="15.0" fill="rgb(216,93,27)" rx="2" ry="2" />
<text  x="706.15" y="63.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (100,013 us., 1.01%)</title><rect x="710.6" y="149" width="11.8" height="15.0" fill="rgb(251,226,5)" rx="2" ry="2" />
<text  x="713.57" y="159.5" ></text>
</g>
<g >
<title>&lt;built-in_method_linear_a8_w8_b8_o8_of_PyCapsule_object_at_0x7faf4aeb5f00&gt; (100,013 us., 1.01%)</title><rect x="710.6" y="261" width="11.8" height="15.0" fill="rgb(220,77,3)" rx="2" ry="2" />
<text  x="713.57" y="271.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (3,570,012 us., 35.92%)</title><rect x="271.6" y="101" width="423.8" height="15.0" fill="rgb(207,43,9)" rx="2" ry="2" />
<text  x="274.57" y="111.5" >profiling/utils.py(18):_profile_model</text>
</g>
<g >
<title>&lt;built-in_method_linear_a8_w8_b32_o32_with_scaling_of_PyCapsule_object_at_0x7faf4aeb5ed0&gt; (122,135 us., 1.23%)</title><rect x="696.1" y="261" width="14.5" height="15.0" fill="rgb(220,94,29)" rx="2" ry="2" />
<text  x="699.07" y="271.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (4,129 us., 0.04%)</title><rect x="137.4" y="181" width="0.5" height="15.0" fill="rgb(240,127,41)" rx="2" ry="2" />
<text  x="140.42" y="191.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (62,567 us., 0.63%)</title><rect x="703.1" y="197" width="7.5" height="15.0" fill="rgb(245,31,13)" rx="2" ry="2" />
<text  x="706.15" y="207.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (2,876,730 us., 28.94%)</title><rect x="848.4" y="117" width="341.5" height="15.0" fill="rgb(243,161,27)" rx="2" ry="2" />
<text  x="851.40" y="127.5" >profiling/utils.py(18):_profile_model</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (946,477 us., 9.52%)</title><rect x="735.0" y="229" width="112.3" height="15.0" fill="rgb(220,164,15)" rx="2" ry="2" />
<text  x="737.96" y="239.5" >torch/autogra..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (6,641 us., 0.07%)</title><rect x="847.6" y="229" width="0.8" height="15.0" fill="rgb(218,206,42)" rx="2" ry="2" />
<text  x="850.61" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (767,298 us., 7.72%)</title><rect x="45.8" y="117" width="91.1" height="15.0" fill="rgb(237,166,10)" rx="2" ry="2" />
<text  x="48.78" y="127.5" >nn.Module:..</text>
</g>
<g >
<title>nn.Module:_Linear (294,767 us., 2.97%)</title><rect x="10.0" y="229" width="35.0" height="15.0" fill="rgb(228,152,2)" rx="2" ry="2" />
<text  x="13.00" y="239.5" >nn..</text>
</g>
<g >
<title>&lt;built-in_method_linear_relu_a8_w8_b8_o8_of_PyCapsule_object_at_0x7faf4aeb5e70&gt; (105,382 us., 1.06%)</title><rect x="722.4" y="261" width="12.6" height="15.0" fill="rgb(211,86,37)" rx="2" ry="2" />
<text  x="725.45" y="271.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (946,477 us., 9.52%)</title><rect x="735.0" y="245" width="112.3" height="15.0" fill="rgb(235,32,32)" rx="2" ry="2" />
<text  x="737.96" y="255.5" >torch_int/nn/..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (946,477 us., 9.52%)</title><rect x="735.0" y="181" width="112.3" height="15.0" fill="rgb(237,42,10)" rx="2" ry="2" />
<text  x="737.96" y="191.5" >nn.Module:_In..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (62,567 us., 0.63%)</title><rect x="703.1" y="69" width="7.5" height="15.0" fill="rgb(222,173,22)" rx="2" ry="2" />
<text  x="706.15" y="79.5" ></text>
</g>
<g >
<title>nn.Module:_LayerNorm (3,208 us., 0.03%)</title><rect x="695.7" y="213" width="0.4" height="15.0" fill="rgb(229,91,5)" rx="2" ry="2" />
<text  x="698.69" y="223.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (62,567 us., 0.63%)</title><rect x="703.1" y="181" width="7.5" height="15.0" fill="rgb(242,197,45)" rx="2" ry="2" />
<text  x="706.15" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (4,129 us., 0.04%)</title><rect x="137.4" y="165" width="0.5" height="15.0" fill="rgb(231,21,45)" rx="2" ry="2" />
<text  x="140.42" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_W8A8B8O8LinearReLU (105,382 us., 1.06%)</title><rect x="722.4" y="213" width="12.6" height="15.0" fill="rgb(205,72,51)" rx="2" ry="2" />
<text  x="725.45" y="223.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (4,645 us., 0.05%)</title><rect x="136.9" y="117" width="0.5" height="15.0" fill="rgb(220,19,7)" rx="2" ry="2" />
<text  x="139.87" y="127.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (6,641 us., 0.07%)</title><rect x="847.6" y="197" width="0.8" height="15.0" fill="rgb(240,167,7)" rx="2" ry="2" />
<text  x="850.61" y="207.5" ></text>
</g>
<g >
<title>&lt;built-in_method_dq_add_layernorm_q_of_PyCapsule_object_at_0x7faf4aeb5f30&gt; (767,298 us., 7.72%)</title><rect x="45.8" y="261" width="91.1" height="15.0" fill="rgb(254,112,51)" rx="2" ry="2" />
<text  x="48.78" y="271.5" >&lt;built-in_..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (62,567 us., 0.63%)</title><rect x="703.1" y="133" width="7.5" height="15.0" fill="rgb(207,203,38)" rx="2" ry="2" />
<text  x="706.15" y="143.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,247 us., 0.01%)</title><rect x="847.4" y="181" width="0.1" height="15.0" fill="rgb(213,123,49)" rx="2" ry="2" />
<text  x="850.38" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (3,208 us., 0.03%)</title><rect x="695.7" y="149" width="0.4" height="15.0" fill="rgb(220,202,18)" rx="2" ry="2" />
<text  x="698.69" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (8,166 us., 0.08%)</title><rect x="250.3" y="213" width="1.0" height="15.0" fill="rgb(223,219,37)" rx="2" ry="2" />
<text  x="253.31" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (946,695 us., 9.52%)</title><rect x="137.9" y="197" width="112.4" height="15.0" fill="rgb(249,181,47)" rx="2" ry="2" />
<text  x="140.91" y="207.5" >nn.Module:_In..</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (2,118 us., 0.02%)</title><rect x="695.4" y="213" width="0.3" height="15.0" fill="rgb(211,169,49)" rx="2" ry="2" />
<text  x="698.44" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (3,570,012 us., 35.92%)</title><rect x="271.6" y="213" width="423.8" height="15.0" fill="rgb(238,206,13)" rx="2" ry="2" />
<text  x="274.57" y="223.5" >nn.Module:_Int8OPTAttention</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (105,382 us., 1.06%)</title><rect x="722.4" y="149" width="12.6" height="15.0" fill="rgb(243,197,13)" rx="2" ry="2" />
<text  x="725.45" y="159.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (100,013 us., 1.01%)</title><rect x="710.6" y="117" width="11.8" height="15.0" fill="rgb(250,61,12)" rx="2" ry="2" />
<text  x="713.57" y="127.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (8,166 us., 0.08%)</title><rect x="250.3" y="149" width="1.0" height="15.0" fill="rgb(245,141,19)" rx="2" ry="2" />
<text  x="253.31" y="159.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (8,166 us., 0.08%)</title><rect x="250.3" y="165" width="1.0" height="15.0" fill="rgb(241,124,10)" rx="2" ry="2" />
<text  x="253.31" y="175.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (946,477 us., 9.52%)</title><rect x="735.0" y="165" width="112.3" height="15.0" fill="rgb(245,54,46)" rx="2" ry="2" />
<text  x="737.96" y="175.5" >torch_int/nn/..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (2,118 us., 0.02%)</title><rect x="695.4" y="181" width="0.3" height="15.0" fill="rgb(247,67,7)" rx="2" ry="2" />
<text  x="698.44" y="191.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (946,695 us., 9.52%)</title><rect x="137.9" y="213" width="112.4" height="15.0" fill="rgb(242,119,33)" rx="2" ry="2" />
<text  x="140.91" y="223.5" >torch/autogra..</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (2,876,730 us., 28.94%)</title><rect x="848.4" y="181" width="341.5" height="15.0" fill="rgb(224,146,19)" rx="2" ry="2" />
<text  x="851.40" y="191.5" >torch_int/nn/opt.py(321):_forward</text>
</g>
<g >
<title>nn.Module:_Embedding (4,645 us., 0.05%)</title><rect x="136.9" y="213" width="0.5" height="15.0" fill="rgb(231,190,44)" rx="2" ry="2" />
<text  x="139.87" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (161,629 us., 1.63%)</title><rect x="252.4" y="197" width="19.2" height="15.0" fill="rgb(223,45,41)" rx="2" ry="2" />
<text  x="255.38" y="207.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (100,013 us., 1.01%)</title><rect x="710.6" y="197" width="11.8" height="15.0" fill="rgb(217,181,3)" rx="2" ry="2" />
<text  x="713.57" y="207.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (8,166 us., 0.08%)</title><rect x="250.3" y="229" width="1.0" height="15.0" fill="rgb(227,130,42)" rx="2" ry="2" />
<text  x="253.31" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (294,767 us., 2.97%)</title><rect x="10.0" y="197" width="35.0" height="15.0" fill="rgb(241,174,35)" rx="2" ry="2" />
<text  x="13.00" y="207.5" >nn..</text>
</g>
<g >
<title>torch_int/nn/linear.py(92):_forward (100,013 us., 1.01%)</title><rect x="710.6" y="245" width="11.8" height="15.0" fill="rgb(247,171,49)" rx="2" ry="2" />
<text  x="713.57" y="255.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (3,208 us., 0.03%)</title><rect x="695.7" y="197" width="0.4" height="15.0" fill="rgb(245,131,2)" rx="2" ry="2" />
<text  x="698.69" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (1,247 us., 0.01%)</title><rect x="847.4" y="197" width="0.1" height="15.0" fill="rgb(238,156,35)" rx="2" ry="2" />
<text  x="850.38" y="207.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (122,135 us., 1.23%)</title><rect x="696.1" y="229" width="14.5" height="15.0" fill="rgb(245,141,35)" rx="2" ry="2" />
<text  x="699.07" y="239.5" ></text>
</g>
<g >
<title>torch_int/nn/linear.py(62):_forward (122,135 us., 1.23%)</title><rect x="696.1" y="245" width="14.5" height="15.0" fill="rgb(209,118,54)" rx="2" ry="2" />
<text  x="699.07" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (100,013 us., 1.01%)</title><rect x="710.6" y="101" width="11.8" height="15.0" fill="rgb(220,177,38)" rx="2" ry="2" />
<text  x="713.57" y="111.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (100,013 us., 1.01%)</title><rect x="710.6" y="85" width="11.8" height="15.0" fill="rgb(240,138,0)" rx="2" ry="2" />
<text  x="713.57" y="95.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (59,568 us., 0.60%)</title><rect x="696.1" y="101" width="7.0" height="15.0" fill="rgb(226,66,1)" rx="2" ry="2" />
<text  x="699.07" y="111.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (1,604 us., 0.02%)</title><rect x="45.6" y="165" width="0.2" height="15.0" fill="rgb(222,132,27)" rx="2" ry="2" />
<text  x="48.59" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (161,629 us., 1.63%)</title><rect x="252.4" y="101" width="19.2" height="15.0" fill="rgb(238,226,10)" rx="2" ry="2" />
<text  x="255.38" y="111.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (294,767 us., 2.97%)</title><rect x="10.0" y="165" width="35.0" height="15.0" fill="rgb(224,178,37)" rx="2" ry="2" />
<text  x="13.00" y="175.5" >to..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (3,570,012 us., 35.92%)</title><rect x="271.6" y="181" width="423.8" height="15.0" fill="rgb(212,120,11)" rx="2" ry="2" />
<text  x="274.57" y="191.5" >nn.Module:_Int8OPTDecoderLayer</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (2,118 us., 0.02%)</title><rect x="695.4" y="133" width="0.3" height="15.0" fill="rgb(244,66,34)" rx="2" ry="2" />
<text  x="698.44" y="143.5" ></text>
</g>
<g >
<title>torch_int/functional/fused.py(24):_dq_add_layernorm_q_cpp (767,298 us., 7.72%)</title><rect x="45.8" y="245" width="91.1" height="15.0" fill="rgb(253,10,26)" rx="2" ry="2" />
<text  x="48.78" y="255.5" >torch_int/..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (767,298 us., 7.72%)</title><rect x="45.8" y="181" width="91.1" height="15.0" fill="rgb(246,87,31)" rx="2" ry="2" />
<text  x="48.78" y="191.5" >nn.Module:..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (294,767 us., 2.97%)</title><rect x="10.0" y="213" width="35.0" height="15.0" fill="rgb(247,163,11)" rx="2" ry="2" />
<text  x="13.00" y="223.5" >tr..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (59,568 us., 0.60%)</title><rect x="696.1" y="85" width="7.0" height="15.0" fill="rgb(226,144,16)" rx="2" ry="2" />
<text  x="699.07" y="95.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (2,118 us., 0.02%)</title><rect x="695.4" y="165" width="0.3" height="15.0" fill="rgb(245,157,22)" rx="2" ry="2" />
<text  x="698.44" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (3,570,012 us., 35.92%)</title><rect x="271.6" y="149" width="423.8" height="15.0" fill="rgb(206,134,50)" rx="2" ry="2" />
<text  x="274.57" y="159.5" >nn.Module:_Int8OPTDecoder</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (5,000 us., 0.05%)</title><rect x="45.0" y="197" width="0.6" height="15.0" fill="rgb(248,30,51)" rx="2" ry="2" />
<text  x="47.99" y="207.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (8,166 us., 0.08%)</title><rect x="250.3" y="197" width="1.0" height="15.0" fill="rgb(245,100,1)" rx="2" ry="2" />
<text  x="253.31" y="207.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (105,382 us., 1.06%)</title><rect x="722.4" y="165" width="12.6" height="15.0" fill="rgb(237,149,36)" rx="2" ry="2" />
<text  x="725.45" y="175.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (1,604 us., 0.02%)</title><rect x="45.6" y="245" width="0.2" height="15.0" fill="rgb(211,75,20)" rx="2" ry="2" />
<text  x="48.59" y="255.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (3,570,012 us., 35.92%)</title><rect x="271.6" y="245" width="423.8" height="15.0" fill="rgb(206,228,1)" rx="2" ry="2" />
<text  x="274.57" y="255.5" >torch_int/nn/opt.py(46):_forward</text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (62,567 us., 0.63%)</title><rect x="703.1" y="165" width="7.5" height="15.0" fill="rgb(247,58,47)" rx="2" ry="2" />
<text  x="706.15" y="175.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (100,013 us., 1.01%)</title><rect x="710.6" y="229" width="11.8" height="15.0" fill="rgb(206,39,46)" rx="2" ry="2" />
<text  x="713.57" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (4,645 us., 0.05%)</title><rect x="136.9" y="181" width="0.5" height="15.0" fill="rgb(207,4,40)" rx="2" ry="2" />
<text  x="139.87" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_DQ_Add_LayerNorm_Q (767,298 us., 7.72%)</title><rect x="45.8" y="213" width="91.1" height="15.0" fill="rgb(211,54,32)" rx="2" ry="2" />
<text  x="48.78" y="223.5" >nn.Module:..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (105,382 us., 1.06%)</title><rect x="722.4" y="85" width="12.6" height="15.0" fill="rgb(245,13,39)" rx="2" ry="2" />
<text  x="725.45" y="95.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (2,876,730 us., 28.94%)</title><rect x="848.4" y="165" width="341.5" height="15.0" fill="rgb(217,201,3)" rx="2" ry="2" />
<text  x="851.40" y="175.5" >nn.Module:_Int8OPTDecoder</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (100,013 us., 1.01%)</title><rect x="710.6" y="69" width="11.8" height="15.0" fill="rgb(240,67,24)" rx="2" ry="2" />
<text  x="713.57" y="79.5" ></text>
</g>
<g >
<title>torch/nn/modules/normalization.py(188):_forward (3,208 us., 0.03%)</title><rect x="695.7" y="229" width="0.4" height="15.0" fill="rgb(249,44,1)" rx="2" ry="2" />
<text  x="698.69" y="239.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (946,695 us., 9.52%)</title><rect x="137.9" y="229" width="112.4" height="15.0" fill="rgb(222,152,42)" rx="2" ry="2" />
<text  x="140.91" y="239.5" >torch_int/nn/..</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (161,629 us., 1.63%)</title><rect x="252.4" y="149" width="19.2" height="15.0" fill="rgb(241,149,11)" rx="2" ry="2" />
<text  x="255.38" y="159.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (767,298 us., 7.72%)</title><rect x="45.8" y="133" width="91.1" height="15.0" fill="rgb(248,65,18)" rx="2" ry="2" />
<text  x="48.78" y="143.5" >transforme..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (5,000 us., 0.05%)</title><rect x="45.0" y="181" width="0.6" height="15.0" fill="rgb(241,194,10)" rx="2" ry="2" />
<text  x="47.99" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (2,118 us., 0.02%)</title><rect x="695.4" y="197" width="0.3" height="15.0" fill="rgb(236,199,52)" rx="2" ry="2" />
<text  x="698.44" y="207.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (62,567 us., 0.63%)</title><rect x="703.1" y="37" width="7.5" height="15.0" fill="rgb(213,85,18)" rx="2" ry="2" />
<text  x="706.15" y="47.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (161,629 us., 1.63%)</title><rect x="252.4" y="229" width="19.2" height="15.0" fill="rgb(226,91,39)" rx="2" ry="2" />
<text  x="255.38" y="239.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (2,118 us., 0.02%)</title><rect x="695.4" y="149" width="0.3" height="15.0" fill="rgb(253,4,41)" rx="2" ry="2" />
<text  x="698.44" y="159.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (4,129 us., 0.04%)</title><rect x="137.4" y="117" width="0.5" height="15.0" fill="rgb(206,72,10)" rx="2" ry="2" />
<text  x="140.42" y="127.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (2,876,730 us., 28.94%)</title><rect x="848.4" y="101" width="341.5" height="15.0" fill="rgb(229,215,20)" rx="2" ry="2" />
<text  x="851.40" y="111.5" >torch/autograd/grad_mode.py(27):_decorate_cont..</text>
</g>
<g >
<title>&lt;built-in_function_linear&gt; (294,767 us., 2.97%)</title><rect x="10.0" y="261" width="35.0" height="15.0" fill="rgb(252,58,22)" rx="2" ry="2" />
<text  x="13.00" y="271.5" >&lt;b..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (2,876,730 us., 28.94%)</title><rect x="848.4" y="149" width="341.5" height="15.0" fill="rgb(239,93,3)" rx="2" ry="2" />
<text  x="851.40" y="159.5" >transformers/models/opt/modeling_opt.py(840):_..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (1,247 us., 0.01%)</title><rect x="847.4" y="229" width="0.1" height="15.0" fill="rgb(213,96,18)" rx="2" ry="2" />
<text  x="850.38" y="239.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (161,629 us., 1.63%)</title><rect x="252.4" y="117" width="19.2" height="15.0" fill="rgb(216,19,19)" rx="2" ry="2" />
<text  x="255.38" y="127.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (2,876,730 us., 28.94%)</title><rect x="848.4" y="213" width="341.5" height="15.0" fill="rgb(240,1,54)" rx="2" ry="2" />
<text  x="851.40" y="223.5" >torch_int/nn/opt.py(183):_forward</text>
</g>
<g >
<title>&lt;built-in_method_add_of_type_object_at_0x7fb03fa229c0&gt; (5,000 us., 0.05%)</title><rect x="45.0" y="261" width="0.6" height="15.0" fill="rgb(220,19,14)" rx="2" ry="2" />
<text  x="47.99" y="271.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (9,321 us., 0.09%)</title><rect x="251.3" y="197" width="1.1" height="15.0" fill="rgb(219,186,39)" rx="2" ry="2" />
<text  x="254.28" y="207.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (105,382 us., 1.06%)</title><rect x="722.4" y="229" width="12.6" height="15.0" fill="rgb(234,177,22)" rx="2" ry="2" />
<text  x="725.45" y="239.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (62,567 us., 0.63%)</title><rect x="703.1" y="149" width="7.5" height="15.0" fill="rgb(228,164,18)" rx="2" ry="2" />
<text  x="706.15" y="159.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (3,208 us., 0.03%)</title><rect x="695.7" y="133" width="0.4" height="15.0" fill="rgb(254,185,23)" rx="2" ry="2" />
<text  x="698.69" y="143.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (5,000 us., 0.05%)</title><rect x="45.0" y="245" width="0.6" height="15.0" fill="rgb(253,64,5)" rx="2" ry="2" />
<text  x="47.99" y="255.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (767,298 us., 7.72%)</title><rect x="45.8" y="165" width="91.1" height="15.0" fill="rgb(221,41,28)" rx="2" ry="2" />
<text  x="48.78" y="175.5" >torch_int/..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (9,321 us., 0.09%)</title><rect x="251.3" y="165" width="1.1" height="15.0" fill="rgb(225,140,21)" rx="2" ry="2" />
<text  x="254.28" y="175.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (100,013 us., 1.01%)</title><rect x="710.6" y="53" width="11.8" height="15.0" fill="rgb(210,128,43)" rx="2" ry="2" />
<text  x="713.57" y="63.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (105,382 us., 1.06%)</title><rect x="722.4" y="117" width="12.6" height="15.0" fill="rgb(249,146,51)" rx="2" ry="2" />
<text  x="725.45" y="127.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (59,568 us., 0.60%)</title><rect x="696.1" y="133" width="7.0" height="15.0" fill="rgb(248,164,7)" rx="2" ry="2" />
<text  x="699.07" y="143.5" ></text>
</g>
<g >
<title>torch_int/nn/fused.py(13):_forward (767,298 us., 7.72%)</title><rect x="45.8" y="229" width="91.1" height="15.0" fill="rgb(249,1,21)" rx="2" ry="2" />
<text  x="48.78" y="239.5" >torch_int/..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (4,129 us., 0.04%)</title><rect x="137.4" y="213" width="0.5" height="15.0" fill="rgb(221,200,49)" rx="2" ry="2" />
<text  x="140.42" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (100,013 us., 1.01%)</title><rect x="710.6" y="165" width="11.8" height="15.0" fill="rgb(215,87,6)" rx="2" ry="2" />
<text  x="713.57" y="175.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,247 us., 0.01%)</title><rect x="847.4" y="213" width="0.1" height="15.0" fill="rgb(253,164,15)" rx="2" ry="2" />
<text  x="850.38" y="223.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (767,298 us., 7.72%)</title><rect x="45.8" y="85" width="91.1" height="15.0" fill="rgb(229,202,24)" rx="2" ry="2" />
<text  x="48.78" y="95.5" >torch/auto..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (9,321 us., 0.09%)</title><rect x="251.3" y="229" width="1.1" height="15.0" fill="rgb(215,183,8)" rx="2" ry="2" />
<text  x="254.28" y="239.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (946,477 us., 9.52%)</title><rect x="735.0" y="101" width="112.3" height="15.0" fill="rgb(225,127,12)" rx="2" ry="2" />
<text  x="737.96" y="111.5" >profiling/uti..</text>
</g>
<g >
<title>nn.Module:_W8A8B32O32LinearWithScaling (122,135 us., 1.23%)</title><rect x="696.1" y="213" width="14.5" height="15.0" fill="rgb(243,159,34)" rx="2" ry="2" />
<text  x="699.07" y="223.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (3,208 us., 0.03%)</title><rect x="695.7" y="165" width="0.4" height="15.0" fill="rgb(233,161,6)" rx="2" ry="2" />
<text  x="698.69" y="175.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (4,129 us., 0.04%)</title><rect x="137.4" y="101" width="0.5" height="15.0" fill="rgb(214,149,25)" rx="2" ry="2" />
<text  x="140.42" y="111.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (767,298 us., 7.72%)</title><rect x="45.8" y="101" width="91.1" height="15.0" fill="rgb(227,109,44)" rx="2" ry="2" />
<text  x="48.78" y="111.5" >profiling/..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (161,629 us., 1.63%)</title><rect x="252.4" y="165" width="19.2" height="15.0" fill="rgb(228,77,9)" rx="2" ry="2" />
<text  x="255.38" y="175.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (4,129 us., 0.04%)</title><rect x="137.4" y="149" width="0.5" height="15.0" fill="rgb(233,67,1)" rx="2" ry="2" />
<text  x="140.42" y="159.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (62,567 us., 0.63%)</title><rect x="703.1" y="117" width="7.5" height="15.0" fill="rgb(250,29,43)" rx="2" ry="2" />
<text  x="706.15" y="127.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (59,568 us., 0.60%)</title><rect x="696.1" y="197" width="7.0" height="15.0" fill="rgb(223,82,35)" rx="2" ry="2" />
<text  x="699.07" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (1,604 us., 0.02%)</title><rect x="45.6" y="197" width="0.2" height="15.0" fill="rgb(240,140,19)" rx="2" ry="2" />
<text  x="48.59" y="207.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (105,382 us., 1.06%)</title><rect x="722.4" y="197" width="12.6" height="15.0" fill="rgb(232,101,54)" rx="2" ry="2" />
<text  x="725.45" y="207.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,604 us., 0.02%)</title><rect x="45.6" y="133" width="0.2" height="15.0" fill="rgb(241,14,29)" rx="2" ry="2" />
<text  x="48.59" y="143.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (946,695 us., 9.52%)</title><rect x="137.9" y="117" width="112.4" height="15.0" fill="rgb(254,101,43)" rx="2" ry="2" />
<text  x="140.91" y="127.5" >transformers/..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (4,645 us., 0.05%)</title><rect x="136.9" y="133" width="0.5" height="15.0" fill="rgb(209,108,3)" rx="2" ry="2" />
<text  x="139.87" y="143.5" ></text>
</g>
<g >
<title>torch/nn/modules/linear.py(113):_forward (294,767 us., 2.97%)</title><rect x="10.0" y="245" width="35.0" height="15.0" fill="rgb(250,178,16)" rx="2" ry="2" />
<text  x="13.00" y="255.5" >to..</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (1,604 us., 0.02%)</title><rect x="45.6" y="213" width="0.2" height="15.0" fill="rgb(211,24,47)" rx="2" ry="2" />
<text  x="48.59" y="223.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (946,695 us., 9.52%)</title><rect x="137.9" y="149" width="112.4" height="15.0" fill="rgb(214,20,32)" rx="2" ry="2" />
<text  x="140.91" y="159.5" >torch_int/nn/..</text>
</g>
<g >
<title>&lt;built-in_method_embedding_of_type_object_at_0x7fb03fa229c0&gt; (8,774 us., 0.09%)</title><rect x="136.9" y="261" width="1.0" height="15.0" fill="rgb(234,193,38)" rx="2" ry="2" />
<text  x="139.87" y="271.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (946,695 us., 9.52%)</title><rect x="137.9" y="85" width="112.4" height="15.0" fill="rgb(210,174,49)" rx="2" ry="2" />
<text  x="140.91" y="95.5" >profiling/uti..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (9,321 us., 0.09%)</title><rect x="251.3" y="213" width="1.1" height="15.0" fill="rgb(217,59,17)" rx="2" ry="2" />
<text  x="254.28" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (59,568 us., 0.60%)</title><rect x="696.1" y="117" width="7.0" height="15.0" fill="rgb(253,176,0)" rx="2" ry="2" />
<text  x="699.07" y="127.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (161,629 us., 1.63%)</title><rect x="252.4" y="213" width="19.2" height="15.0" fill="rgb(238,176,10)" rx="2" ry="2" />
<text  x="255.38" y="223.5" ></text>
</g>
<g >
<title>torch/nn/functional.py(2099):_embedding (8,774 us., 0.09%)</title><rect x="136.9" y="245" width="1.0" height="15.0" fill="rgb(206,52,1)" rx="2" ry="2" />
<text  x="139.87" y="255.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (3,570,012 us., 35.92%)</title><rect x="271.6" y="197" width="423.8" height="15.0" fill="rgb(248,89,28)" rx="2" ry="2" />
<text  x="274.57" y="207.5" >torch_int/nn/opt.py(183):_forward</text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (2,876,730 us., 28.94%)</title><rect x="848.4" y="261" width="341.5" height="15.0" fill="rgb(221,127,24)" rx="2" ry="2" />
<text  x="851.40" y="271.5" >torch_int/nn/opt.py(46):_forward</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (62,567 us., 0.63%)</title><rect x="703.1" y="85" width="7.5" height="15.0" fill="rgb(219,133,5)" rx="2" ry="2" />
<text  x="706.15" y="95.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (5,000 us., 0.05%)</title><rect x="45.0" y="213" width="0.6" height="15.0" fill="rgb(239,103,22)" rx="2" ry="2" />
<text  x="47.99" y="223.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (3,208 us., 0.03%)</title><rect x="695.7" y="117" width="0.4" height="15.0" fill="rgb(248,133,23)" rx="2" ry="2" />
<text  x="698.69" y="127.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (3,570,012 us., 35.92%)</title><rect x="271.6" y="229" width="423.8" height="15.0" fill="rgb(243,122,33)" rx="2" ry="2" />
<text  x="274.57" y="239.5" >torch/autograd/grad_mode.py(24):_decorate_context</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (2,876,730 us., 28.94%)</title><rect x="848.4" y="133" width="341.5" height="15.0" fill="rgb(232,86,21)" rx="2" ry="2" />
<text  x="851.40" y="143.5" >nn.Module:_Int8OPTForCausalLM</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (946,695 us., 9.52%)</title><rect x="137.9" y="133" width="112.4" height="15.0" fill="rgb(240,88,50)" rx="2" ry="2" />
<text  x="140.91" y="143.5" >nn.Module:_In..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (3,570,012 us., 35.92%)</title><rect x="271.6" y="85" width="423.8" height="15.0" fill="rgb(218,140,32)" rx="2" ry="2" />
<text  x="274.57" y="95.5" >torch/autograd/grad_mode.py(27):_decorate_context</text>
</g>
<g >
<title>torch_int/nn/linear.py(122):_forward (105,382 us., 1.06%)</title><rect x="722.4" y="245" width="12.6" height="15.0" fill="rgb(206,115,12)" rx="2" ry="2" />
<text  x="725.45" y="255.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (6,641 us., 0.07%)</title><rect x="847.6" y="181" width="0.8" height="15.0" fill="rgb(221,40,11)" rx="2" ry="2" />
<text  x="850.61" y="191.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (946,695 us., 9.52%)</title><rect x="137.9" y="69" width="112.4" height="15.0" fill="rgb(223,56,33)" rx="2" ry="2" />
<text  x="140.91" y="79.5" >torch/autogra..</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (9,321 us., 0.09%)</title><rect x="251.3" y="245" width="1.1" height="15.0" fill="rgb(253,213,19)" rx="2" ry="2" />
<text  x="254.28" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (3,570,012 us., 35.92%)</title><rect x="271.6" y="117" width="423.8" height="15.0" fill="rgb(209,115,19)" rx="2" ry="2" />
<text  x="274.57" y="127.5" >nn.Module:_Int8OPTForCausalLM</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (100,013 us., 1.01%)</title><rect x="710.6" y="181" width="11.8" height="15.0" fill="rgb(206,132,47)" rx="2" ry="2" />
<text  x="713.57" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (946,477 us., 9.52%)</title><rect x="735.0" y="117" width="112.3" height="15.0" fill="rgb(244,68,47)" rx="2" ry="2" />
<text  x="737.96" y="127.5" >nn.Module:_In..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (8,166 us., 0.08%)</title><rect x="250.3" y="181" width="1.0" height="15.0" fill="rgb(245,174,22)" rx="2" ry="2" />
<text  x="253.31" y="191.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (946,477 us., 9.52%)</title><rect x="735.0" y="85" width="112.3" height="15.0" fill="rgb(247,76,39)" rx="2" ry="2" />
<text  x="737.96" y="95.5" >torch/autogra..</text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (946,695 us., 9.52%)</title><rect x="137.9" y="181" width="112.4" height="15.0" fill="rgb(246,41,51)" rx="2" ry="2" />
<text  x="140.91" y="191.5" >torch_int/nn/..</text>
</g>
<g >
<title>nn.Module:_W8A8B8O8Linear (100,013 us., 1.01%)</title><rect x="710.6" y="213" width="11.8" height="15.0" fill="rgb(250,180,15)" rx="2" ry="2" />
<text  x="713.57" y="223.5" ></text>
</g>
<g >
<title>&lt;built-in_method_encode_of_str_object_at_0x7faf4b518450&gt; (4,698,242 us., 47.27%)</title><rect x="137.9" y="261" width="557.8" height="15.0" fill="rgb(222,5,51)" rx="2" ry="2" />
<text  x="140.91" y="271.5" >&lt;built-in_method_encode_of_str_object_at_0x7faf4b518450&gt;</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (105,382 us., 1.06%)</title><rect x="722.4" y="181" width="12.6" height="15.0" fill="rgb(247,214,5)" rx="2" ry="2" />
<text  x="725.45" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (4,129 us., 0.04%)</title><rect x="137.4" y="133" width="0.5" height="15.0" fill="rgb(232,212,32)" rx="2" ry="2" />
<text  x="140.42" y="143.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,247 us., 0.01%)</title><rect x="847.4" y="165" width="0.1" height="15.0" fill="rgb(249,170,30)" rx="2" ry="2" />
<text  x="850.38" y="175.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (6,641 us., 0.07%)</title><rect x="847.6" y="261" width="0.8" height="15.0" fill="rgb(253,192,3)" rx="2" ry="2" />
<text  x="850.61" y="271.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (4,645 us., 0.05%)</title><rect x="136.9" y="197" width="0.5" height="15.0" fill="rgb(214,155,20)" rx="2" ry="2" />
<text  x="139.87" y="207.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (294,767 us., 2.97%)</title><rect x="10.0" y="181" width="35.0" height="15.0" fill="rgb(228,219,45)" rx="2" ry="2" />
<text  x="13.00" y="191.5" >pr..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (161,629 us., 1.63%)</title><rect x="252.4" y="133" width="19.2" height="15.0" fill="rgb(241,106,51)" rx="2" ry="2" />
<text  x="255.38" y="143.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (946,695 us., 9.52%)</title><rect x="137.9" y="165" width="112.4" height="15.0" fill="rgb(254,52,45)" rx="2" ry="2" />
<text  x="140.91" y="175.5" >nn.Module:_In..</text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (161,629 us., 1.63%)</title><rect x="252.4" y="181" width="19.2" height="15.0" fill="rgb(247,10,4)" rx="2" ry="2" />
<text  x="255.38" y="191.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,604 us., 0.02%)</title><rect x="45.6" y="149" width="0.2" height="15.0" fill="rgb(249,137,25)" rx="2" ry="2" />
<text  x="48.59" y="159.5" ></text>
</g>
<g >
<title>&lt;built-in_method_zeros_like_of_type_object_at_0x7fb03fa229c0&gt; (1,247 us., 0.01%)</title><rect x="847.4" y="261" width="0.1" height="15.0" fill="rgb(205,30,17)" rx="2" ry="2" />
<text  x="850.38" y="271.5" ></text>
</g>
<g >
<title>torch/nn/functional.py(2488):_layer_norm (3,208 us., 0.03%)</title><rect x="695.7" y="245" width="0.4" height="15.0" fill="rgb(233,18,13)" rx="2" ry="2" />
<text  x="698.69" y="255.5" ></text>
</g>
<g >
<title>&lt;built-in_method_max_of_type_object_at_0x7fb03fa229c0&gt; (946,477 us., 9.52%)</title><rect x="735.0" y="261" width="112.3" height="15.0" fill="rgb(216,184,1)" rx="2" ry="2" />
<text  x="737.96" y="271.5" >&lt;built-in_met..</text>
</g>
</g>
</svg>
