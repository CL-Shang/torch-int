<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="326" onload="init(evt)" viewBox="0 0 1200 326" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="326.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >CUDA Time</text>
<text id="details" x="10.00" y="309" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="309" > </text>
<g id="frames">
<g >
<title>nn.Module:_Int8OPTDecoder (298 us., 0.01%)</title><rect x="847.2" y="229" width="0.2" height="15.0" fill="rgb(236,137,26)" rx="2" ry="2" />
<text  x="850.25" y="239.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(89):__expand_mask (1,109 us., 0.04%)</title><rect x="686.7" y="245" width="0.5" height="15.0" fill="rgb(206,32,13)" rx="2" ry="2" />
<text  x="689.71" y="255.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (1,109 us., 0.04%)</title><rect x="686.7" y="213" width="0.5" height="15.0" fill="rgb(240,105,9)" rx="2" ry="2" />
<text  x="689.71" y="223.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (599 us., 0.02%)</title><rect x="1189.7" y="165" width="0.3" height="15.0" fill="rgb(241,147,11)" rx="2" ry="2" />
<text  x="1192.72" y="175.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (298 us., 0.01%)</title><rect x="847.1" y="181" width="0.1" height="15.0" fill="rgb(233,200,54)" rx="2" ry="2" />
<text  x="850.11" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (1,400 us., 0.05%)</title><rect x="123.0" y="181" width="0.7" height="15.0" fill="rgb(239,76,40)" rx="2" ry="2" />
<text  x="126.05" y="191.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (14,614 us., 0.57%)</title><rect x="687.6" y="101" width="6.7" height="15.0" fill="rgb(236,201,8)" rx="2" ry="2" />
<text  x="690.57" y="111.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (737,182 us., 28.95%)</title><rect x="848.1" y="165" width="341.6" height="15.0" fill="rgb(209,36,43)" rx="2" ry="2" />
<text  x="851.07" y="175.5" >nn.Module:_Int8OPTDecoder</text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (43,098 us., 1.69%)</title><rect x="701.0" y="165" width="20.0" height="15.0" fill="rgb(250,44,44)" rx="2" ry="2" />
<text  x="704.05" y="175.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,199 us., 0.05%)</title><rect x="51.6" y="165" width="0.5" height="15.0" fill="rgb(251,177,26)" rx="2" ry="2" />
<text  x="54.57" y="175.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (46,139 us., 1.81%)</title><rect x="237.8" y="213" width="21.4" height="15.0" fill="rgb(226,14,40)" rx="2" ry="2" />
<text  x="240.81" y="223.5" >t..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (14,614 us., 0.57%)</title><rect x="687.6" y="85" width="6.7" height="15.0" fill="rgb(207,171,36)" rx="2" ry="2" />
<text  x="690.57" y="95.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (1,400 us., 0.05%)</title><rect x="123.0" y="197" width="0.7" height="15.0" fill="rgb(231,95,47)" rx="2" ry="2" />
<text  x="126.05" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (1,199 us., 0.05%)</title><rect x="51.6" y="229" width="0.5" height="15.0" fill="rgb(232,145,33)" rx="2" ry="2" />
<text  x="54.57" y="239.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,470 us., 0.06%)</title><rect x="847.4" y="197" width="0.7" height="15.0" fill="rgb(222,41,11)" rx="2" ry="2" />
<text  x="850.39" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_LayerNorm (750 us., 0.03%)</title><rect x="687.2" y="213" width="0.4" height="15.0" fill="rgb(239,92,25)" rx="2" ry="2" />
<text  x="690.23" y="223.5" ></text>
</g>
<g >
<title>&lt;built-in_method_cumsum_of_type_object_at_0x7f34078d19c0&gt; (307 us., 0.01%)</title><rect x="52.1" y="261" width="0.2" height="15.0" fill="rgb(223,118,1)" rx="2" ry="2" />
<text  x="55.13" y="271.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (14,458 us., 0.57%)</title><rect x="694.3" y="37" width="6.7" height="15.0" fill="rgb(214,197,8)" rx="2" ry="2" />
<text  x="697.35" y="47.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (14,458 us., 0.57%)</title><rect x="694.3" y="85" width="6.7" height="15.0" fill="rgb(214,6,23)" rx="2" ry="2" />
<text  x="697.35" y="95.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (2,108 us., 0.08%)</title><rect x="236.2" y="149" width="1.0" height="15.0" fill="rgb(231,43,15)" rx="2" ry="2" />
<text  x="239.22" y="159.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,247 us., 0.05%)</title><rect x="123.7" y="101" width="0.6" height="15.0" fill="rgb(217,136,37)" rx="2" ry="2" />
<text  x="126.70" y="111.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (43,098 us., 1.69%)</title><rect x="701.0" y="101" width="20.0" height="15.0" fill="rgb(208,112,44)" rx="2" ry="2" />
<text  x="704.05" y="111.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (599 us., 0.02%)</title><rect x="1189.7" y="213" width="0.3" height="15.0" fill="rgb(253,55,33)" rx="2" ry="2" />
<text  x="1192.72" y="223.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (1,199 us., 0.05%)</title><rect x="51.6" y="245" width="0.5" height="15.0" fill="rgb(235,226,44)" rx="2" ry="2" />
<text  x="54.57" y="255.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,199 us., 0.05%)</title><rect x="51.6" y="181" width="0.5" height="15.0" fill="rgb(212,212,46)" rx="2" ry="2" />
<text  x="54.57" y="191.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (307 us., 0.01%)</title><rect x="52.1" y="181" width="0.2" height="15.0" fill="rgb(206,181,23)" rx="2" ry="2" />
<text  x="55.13" y="191.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (298 us., 0.01%)</title><rect x="847.2" y="181" width="0.2" height="15.0" fill="rgb(245,137,47)" rx="2" ry="2" />
<text  x="850.25" y="191.5" ></text>
</g>
<g >
<title>torch/nn/functional.py(2099):_embedding (2,647 us., 0.10%)</title><rect x="123.0" y="245" width="1.3" height="15.0" fill="rgb(235,76,9)" rx="2" ry="2" />
<text  x="126.05" y="255.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (241,542 us., 9.49%)</title><rect x="124.3" y="69" width="111.9" height="15.0" fill="rgb(205,69,41)" rx="2" ry="2" />
<text  x="127.28" y="79.5" >torch/autogra..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (46,139 us., 1.81%)</title><rect x="237.8" y="165" width="21.4" height="15.0" fill="rgb(209,149,14)" rx="2" ry="2" />
<text  x="240.81" y="175.5" >n..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,312 us., 0.05%)</title><rect x="237.2" y="165" width="0.6" height="15.0" fill="rgb(242,146,53)" rx="2" ry="2" />
<text  x="240.20" y="175.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,312 us., 0.05%)</title><rect x="237.2" y="213" width="0.6" height="15.0" fill="rgb(226,225,12)" rx="2" ry="2" />
<text  x="240.20" y="223.5" ></text>
</g>
<g >
<title>torch/nn/modules/sparse.py(157):_forward (2,647 us., 0.10%)</title><rect x="123.0" y="229" width="1.3" height="15.0" fill="rgb(215,68,2)" rx="2" ry="2" />
<text  x="126.05" y="239.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (599 us., 0.02%)</title><rect x="1189.7" y="261" width="0.3" height="15.0" fill="rgb(229,158,6)" rx="2" ry="2" />
<text  x="1192.72" y="271.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (240,378 us., 9.44%)</title><rect x="735.5" y="213" width="111.4" height="15.0" fill="rgb(245,103,28)" rx="2" ry="2" />
<text  x="738.52" y="223.5" >nn.Module:_In..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (14,614 us., 0.57%)</title><rect x="687.6" y="181" width="6.7" height="15.0" fill="rgb(252,229,29)" rx="2" ry="2" />
<text  x="690.57" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (1,312 us., 0.05%)</title><rect x="237.2" y="197" width="0.6" height="15.0" fill="rgb(220,167,29)" rx="2" ry="2" />
<text  x="240.20" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (1,400 us., 0.05%)</title><rect x="123.0" y="149" width="0.7" height="15.0" fill="rgb(250,152,12)" rx="2" ry="2" />
<text  x="126.05" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (152,716 us., 6.00%)</title><rect x="52.3" y="149" width="70.7" height="15.0" fill="rgb(251,145,4)" rx="2" ry="2" />
<text  x="55.27" y="159.5" >nn.Modu..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,109 us., 0.04%)</title><rect x="686.7" y="181" width="0.5" height="15.0" fill="rgb(214,110,48)" rx="2" ry="2" />
<text  x="689.71" y="191.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(300):__prepare_decoder_attention_mask (2,108 us., 0.08%)</title><rect x="236.2" y="245" width="1.0" height="15.0" fill="rgb(227,136,3)" rx="2" ry="2" />
<text  x="239.22" y="255.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (240,378 us., 9.44%)</title><rect x="735.5" y="197" width="111.4" height="15.0" fill="rgb(218,198,46)" rx="2" ry="2" />
<text  x="738.52" y="207.5" >torch_int/nn/..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,470 us., 0.06%)</title><rect x="847.4" y="181" width="0.7" height="15.0" fill="rgb(205,117,17)" rx="2" ry="2" />
<text  x="850.39" y="191.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (240,378 us., 9.44%)</title><rect x="735.5" y="245" width="111.4" height="15.0" fill="rgb(208,82,44)" rx="2" ry="2" />
<text  x="738.52" y="255.5" >torch_int/nn/..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (241,542 us., 9.49%)</title><rect x="124.3" y="133" width="111.9" height="15.0" fill="rgb(225,118,50)" rx="2" ry="2" />
<text  x="127.28" y="143.5" >nn.Module:_In..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,247 us., 0.05%)</title><rect x="123.7" y="149" width="0.6" height="15.0" fill="rgb(214,108,5)" rx="2" ry="2" />
<text  x="126.70" y="159.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (43,098 us., 1.69%)</title><rect x="701.0" y="229" width="20.0" height="15.0" fill="rgb(229,145,6)" rx="2" ry="2" />
<text  x="704.05" y="239.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (298 us., 0.01%)</title><rect x="847.2" y="245" width="0.2" height="15.0" fill="rgb(243,66,9)" rx="2" ry="2" />
<text  x="850.25" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (31,282 us., 1.23%)</title><rect x="721.0" y="181" width="14.5" height="15.0" fill="rgb(222,8,51)" rx="2" ry="2" />
<text  x="724.02" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (89,703 us., 3.52%)</title><rect x="10.0" y="197" width="41.6" height="15.0" fill="rgb(238,173,3)" rx="2" ry="2" />
<text  x="13.00" y="207.5" >nn...</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (14,458 us., 0.57%)</title><rect x="694.3" y="69" width="6.7" height="15.0" fill="rgb(223,113,31)" rx="2" ry="2" />
<text  x="697.35" y="79.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (240,378 us., 9.44%)</title><rect x="735.5" y="117" width="111.4" height="15.0" fill="rgb(231,208,40)" rx="2" ry="2" />
<text  x="738.52" y="127.5" >nn.Module:_In..</text>
</g>
<g >
<title>&lt;built-in_method_add_of_type_object_at_0x7f34078d19c0&gt; (1,199 us., 0.05%)</title><rect x="51.6" y="261" width="0.5" height="15.0" fill="rgb(219,30,31)" rx="2" ry="2" />
<text  x="54.57" y="271.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (152,716 us., 6.00%)</title><rect x="52.3" y="197" width="70.7" height="15.0" fill="rgb(242,140,29)" rx="2" ry="2" />
<text  x="55.27" y="207.5" >torch_i..</text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (737,182 us., 28.95%)</title><rect x="848.1" y="229" width="341.6" height="15.0" fill="rgb(223,56,23)" rx="2" ry="2" />
<text  x="851.07" y="239.5" >nn.Module:_Int8OPTAttention</text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (307 us., 0.01%)</title><rect x="52.1" y="229" width="0.2" height="15.0" fill="rgb(213,112,52)" rx="2" ry="2" />
<text  x="55.13" y="239.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (2,108 us., 0.08%)</title><rect x="236.2" y="165" width="1.0" height="15.0" fill="rgb(250,157,30)" rx="2" ry="2" />
<text  x="239.22" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (241,542 us., 9.49%)</title><rect x="124.3" y="101" width="111.9" height="15.0" fill="rgb(211,41,14)" rx="2" ry="2" />
<text  x="127.28" y="111.5" >nn.Module:_In..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (300 us., 0.01%)</title><rect x="686.6" y="133" width="0.1" height="15.0" fill="rgb(231,99,11)" rx="2" ry="2" />
<text  x="689.57" y="143.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (750 us., 0.03%)</title><rect x="687.2" y="149" width="0.4" height="15.0" fill="rgb(227,224,45)" rx="2" ry="2" />
<text  x="690.23" y="159.5" ></text>
</g>
<g >
<title>&lt;built-in_method_linear_relu_a8_w8_b8_o8_of_PyCapsule_object_at_0x7f3312d64e70&gt; (31,282 us., 1.23%)</title><rect x="721.0" y="261" width="14.5" height="15.0" fill="rgb(244,40,32)" rx="2" ry="2" />
<text  x="724.02" y="271.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (2,108 us., 0.08%)</title><rect x="236.2" y="213" width="1.0" height="15.0" fill="rgb(247,124,34)" rx="2" ry="2" />
<text  x="239.22" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_W8A8B8O8Linear (43,098 us., 1.69%)</title><rect x="701.0" y="213" width="20.0" height="15.0" fill="rgb(207,155,3)" rx="2" ry="2" />
<text  x="704.05" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (750 us., 0.03%)</title><rect x="687.2" y="181" width="0.4" height="15.0" fill="rgb(226,207,12)" rx="2" ry="2" />
<text  x="690.23" y="191.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (89,703 us., 3.52%)</title><rect x="10.0" y="213" width="41.6" height="15.0" fill="rgb(207,161,8)" rx="2" ry="2" />
<text  x="13.00" y="223.5" >tra..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (14,614 us., 0.57%)</title><rect x="687.6" y="117" width="6.7" height="15.0" fill="rgb(224,144,37)" rx="2" ry="2" />
<text  x="690.57" y="127.5" ></text>
</g>
<g >
<title>&lt;built-in_method_linear_a8_w8_b8_o8_of_PyCapsule_object_at_0x7f3312d64f00&gt; (43,098 us., 1.69%)</title><rect x="701.0" y="261" width="20.0" height="15.0" fill="rgb(232,184,22)" rx="2" ry="2" />
<text  x="704.05" y="271.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (298 us., 0.01%)</title><rect x="847.1" y="229" width="0.1" height="15.0" fill="rgb(230,95,38)" rx="2" ry="2" />
<text  x="850.11" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (737,182 us., 28.95%)</title><rect x="848.1" y="197" width="341.6" height="15.0" fill="rgb(239,76,24)" rx="2" ry="2" />
<text  x="851.07" y="207.5" >nn.Module:_Int8OPTDecoderLayer</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (14,458 us., 0.57%)</title><rect x="694.3" y="53" width="6.7" height="15.0" fill="rgb(236,150,35)" rx="2" ry="2" />
<text  x="697.35" y="63.5" ></text>
</g>
<g >
<title>nn.Module:_Embedding (1,400 us., 0.05%)</title><rect x="123.0" y="213" width="0.7" height="15.0" fill="rgb(252,35,26)" rx="2" ry="2" />
<text  x="126.05" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (300 us., 0.01%)</title><rect x="686.6" y="197" width="0.1" height="15.0" fill="rgb(217,194,16)" rx="2" ry="2" />
<text  x="689.57" y="207.5" ></text>
</g>
<g >
<title>&lt;built-in_method_embedding_of_type_object_at_0x7f34078d19c0&gt; (2,647 us., 0.10%)</title><rect x="123.0" y="261" width="1.3" height="15.0" fill="rgb(208,197,49)" rx="2" ry="2" />
<text  x="126.05" y="271.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (43,098 us., 1.69%)</title><rect x="701.0" y="181" width="20.0" height="15.0" fill="rgb(250,39,0)" rx="2" ry="2" />
<text  x="704.05" y="191.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (43,098 us., 1.69%)</title><rect x="701.0" y="37" width="20.0" height="15.0" fill="rgb(228,160,30)" rx="2" ry="2" />
<text  x="704.05" y="47.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (14,614 us., 0.57%)</title><rect x="687.6" y="165" width="6.7" height="15.0" fill="rgb(247,29,44)" rx="2" ry="2" />
<text  x="690.57" y="175.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (46,139 us., 1.81%)</title><rect x="237.8" y="117" width="21.4" height="15.0" fill="rgb(227,210,28)" rx="2" ry="2" />
<text  x="240.81" y="127.5" >t..</text>
</g>
<g >
<title>&lt;built-in_method_linear_a8_w8_b32_o32_with_scaling_of_PyCapsule_object_at_0x7f3312d64ed0&gt; (29,072 us., 1.14%)</title><rect x="687.6" y="261" width="13.4" height="15.0" fill="rgb(251,40,27)" rx="2" ry="2" />
<text  x="690.57" y="271.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (14,614 us., 0.57%)</title><rect x="687.6" y="133" width="6.7" height="15.0" fill="rgb(231,217,43)" rx="2" ry="2" />
<text  x="690.57" y="143.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (1,199 us., 0.05%)</title><rect x="51.6" y="197" width="0.5" height="15.0" fill="rgb(227,144,20)" rx="2" ry="2" />
<text  x="54.57" y="207.5" ></text>
</g>
<g >
<title>&lt;built-in_method_layer_norm_of_type_object_at_0x7f34078d19c0&gt; (750 us., 0.03%)</title><rect x="687.2" y="261" width="0.4" height="15.0" fill="rgb(222,222,45)" rx="2" ry="2" />
<text  x="690.23" y="271.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (31,282 us., 1.23%)</title><rect x="721.0" y="149" width="14.5" height="15.0" fill="rgb(232,194,39)" rx="2" ry="2" />
<text  x="724.02" y="159.5" ></text>
</g>
<g >
<title>torch/nn/modules/linear.py(113):_forward (89,703 us., 3.52%)</title><rect x="10.0" y="245" width="41.6" height="15.0" fill="rgb(236,206,7)" rx="2" ry="2" />
<text  x="13.00" y="255.5" >tor..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (737,182 us., 28.95%)</title><rect x="848.1" y="101" width="341.6" height="15.0" fill="rgb(213,223,42)" rx="2" ry="2" />
<text  x="851.07" y="111.5" >torch/autograd/grad_mode.py(27):_decorate_cont..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (922,153 us., 36.22%)</title><rect x="259.2" y="85" width="427.4" height="15.0" fill="rgb(207,135,23)" rx="2" ry="2" />
<text  x="262.19" y="95.5" >torch/autograd/grad_mode.py(27):_decorate_context</text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (241,542 us., 9.49%)</title><rect x="124.3" y="229" width="111.9" height="15.0" fill="rgb(206,67,39)" rx="2" ry="2" />
<text  x="127.28" y="239.5" >torch_int/nn/..</text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (922,153 us., 36.22%)</title><rect x="259.2" y="245" width="427.4" height="15.0" fill="rgb(253,145,52)" rx="2" ry="2" />
<text  x="262.19" y="255.5" >torch_int/nn/opt.py(46):_forward</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (1,470 us., 0.06%)</title><rect x="847.4" y="213" width="0.7" height="15.0" fill="rgb(223,18,53)" rx="2" ry="2" />
<text  x="850.39" y="223.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (599 us., 0.02%)</title><rect x="1189.7" y="197" width="0.3" height="15.0" fill="rgb(212,80,44)" rx="2" ry="2" />
<text  x="1192.72" y="207.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (14,458 us., 0.57%)</title><rect x="694.3" y="149" width="6.7" height="15.0" fill="rgb(237,57,27)" rx="2" ry="2" />
<text  x="697.35" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (241,542 us., 9.49%)</title><rect x="124.3" y="165" width="111.9" height="15.0" fill="rgb(245,87,21)" rx="2" ry="2" />
<text  x="127.28" y="175.5" >nn.Module:_In..</text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (300 us., 0.01%)</title><rect x="686.6" y="229" width="0.1" height="15.0" fill="rgb(249,58,34)" rx="2" ry="2" />
<text  x="689.57" y="239.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (1,247 us., 0.05%)</title><rect x="123.7" y="181" width="0.6" height="15.0" fill="rgb(224,61,33)" rx="2" ry="2" />
<text  x="126.70" y="191.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (152,716 us., 6.00%)</title><rect x="52.3" y="165" width="70.7" height="15.0" fill="rgb(221,191,51)" rx="2" ry="2" />
<text  x="55.27" y="175.5" >torch_i..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (14,458 us., 0.57%)</title><rect x="694.3" y="133" width="6.7" height="15.0" fill="rgb(240,11,37)" rx="2" ry="2" />
<text  x="697.35" y="143.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (298 us., 0.01%)</title><rect x="847.2" y="213" width="0.2" height="15.0" fill="rgb(229,46,18)" rx="2" ry="2" />
<text  x="850.25" y="223.5" ></text>
</g>
<g >
<title>torch_int/nn/linear.py(92):_forward (43,098 us., 1.69%)</title><rect x="701.0" y="245" width="20.0" height="15.0" fill="rgb(249,52,41)" rx="2" ry="2" />
<text  x="704.05" y="255.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (240,378 us., 9.44%)</title><rect x="735.5" y="133" width="111.4" height="15.0" fill="rgb(239,129,30)" rx="2" ry="2" />
<text  x="738.52" y="143.5" >transformers/..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (31,282 us., 1.23%)</title><rect x="721.0" y="101" width="14.5" height="15.0" fill="rgb(208,31,53)" rx="2" ry="2" />
<text  x="724.02" y="111.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (307 us., 0.01%)</title><rect x="52.1" y="197" width="0.2" height="15.0" fill="rgb(250,135,22)" rx="2" ry="2" />
<text  x="55.13" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (1,312 us., 0.05%)</title><rect x="237.2" y="229" width="0.6" height="15.0" fill="rgb(230,91,14)" rx="2" ry="2" />
<text  x="240.20" y="239.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (307 us., 0.01%)</title><rect x="52.1" y="149" width="0.2" height="15.0" fill="rgb(222,4,43)" rx="2" ry="2" />
<text  x="55.13" y="159.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,247 us., 0.05%)</title><rect x="123.7" y="117" width="0.6" height="15.0" fill="rgb(235,65,2)" rx="2" ry="2" />
<text  x="126.70" y="127.5" ></text>
</g>
<g >
<title>&lt;built-in_method_dq_add_layernorm_q_of_PyCapsule_object_at_0x7f3312d64f30&gt; (152,716 us., 6.00%)</title><rect x="52.3" y="261" width="70.7" height="15.0" fill="rgb(241,154,27)" rx="2" ry="2" />
<text  x="55.27" y="271.5" >&lt;built-..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (922,153 us., 36.22%)</title><rect x="259.2" y="149" width="427.4" height="15.0" fill="rgb(246,170,38)" rx="2" ry="2" />
<text  x="262.19" y="159.5" >nn.Module:_Int8OPTDecoder</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (750 us., 0.03%)</title><rect x="687.2" y="133" width="0.4" height="15.0" fill="rgb(233,83,18)" rx="2" ry="2" />
<text  x="690.23" y="143.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (298 us., 0.01%)</title><rect x="847.1" y="245" width="0.1" height="15.0" fill="rgb(229,219,14)" rx="2" ry="2" />
<text  x="850.11" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (241,542 us., 9.49%)</title><rect x="124.3" y="197" width="111.9" height="15.0" fill="rgb(236,68,46)" rx="2" ry="2" />
<text  x="127.28" y="207.5" >nn.Module:_In..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (300 us., 0.01%)</title><rect x="686.6" y="245" width="0.1" height="15.0" fill="rgb(248,159,23)" rx="2" ry="2" />
<text  x="689.57" y="255.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (241,542 us., 9.49%)</title><rect x="124.3" y="181" width="111.9" height="15.0" fill="rgb(242,27,12)" rx="2" ry="2" />
<text  x="127.28" y="191.5" >torch_int/nn/..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (46,139 us., 1.81%)</title><rect x="237.8" y="85" width="21.4" height="15.0" fill="rgb(212,211,7)" rx="2" ry="2" />
<text  x="240.81" y="95.5" >p..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,400 us., 0.05%)</title><rect x="123.0" y="133" width="0.7" height="15.0" fill="rgb(206,47,6)" rx="2" ry="2" />
<text  x="126.05" y="143.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (240,378 us., 9.44%)</title><rect x="735.5" y="149" width="111.4" height="15.0" fill="rgb(234,101,30)" rx="2" ry="2" />
<text  x="738.52" y="159.5" >nn.Module:_In..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (46,139 us., 1.81%)</title><rect x="237.8" y="69" width="21.4" height="15.0" fill="rgb(225,40,48)" rx="2" ry="2" />
<text  x="240.81" y="79.5" >t..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (750 us., 0.03%)</title><rect x="687.2" y="117" width="0.4" height="15.0" fill="rgb(254,186,28)" rx="2" ry="2" />
<text  x="690.23" y="127.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (152,716 us., 6.00%)</title><rect x="52.3" y="85" width="70.7" height="15.0" fill="rgb(230,165,49)" rx="2" ry="2" />
<text  x="55.27" y="95.5" >torch/a..</text>
</g>
<g >
<title>all (2,546,061 us., 100%)</title><rect x="10.0" y="277" width="1180.0" height="15.0" fill="rgb(205,227,22)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (240,378 us., 9.44%)</title><rect x="735.5" y="181" width="111.4" height="15.0" fill="rgb(235,9,41)" rx="2" ry="2" />
<text  x="738.52" y="191.5" >nn.Module:_In..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (737,182 us., 28.95%)</title><rect x="848.1" y="245" width="341.6" height="15.0" fill="rgb(248,117,31)" rx="2" ry="2" />
<text  x="851.07" y="255.5" >torch/autograd/grad_mode.py(24):_decorate_cont..</text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (43,098 us., 1.69%)</title><rect x="701.0" y="197" width="20.0" height="15.0" fill="rgb(226,71,3)" rx="2" ry="2" />
<text  x="704.05" y="207.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (241,542 us., 9.49%)</title><rect x="124.3" y="117" width="111.9" height="15.0" fill="rgb(214,93,27)" rx="2" ry="2" />
<text  x="127.28" y="127.5" >transformers/..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (46,139 us., 1.81%)</title><rect x="237.8" y="101" width="21.4" height="15.0" fill="rgb(252,32,52)" rx="2" ry="2" />
<text  x="240.81" y="111.5" >n..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (922,153 us., 36.22%)</title><rect x="259.2" y="229" width="427.4" height="15.0" fill="rgb(218,113,53)" rx="2" ry="2" />
<text  x="262.19" y="239.5" >torch/autograd/grad_mode.py(24):_decorate_context</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,109 us., 0.04%)</title><rect x="686.7" y="133" width="0.5" height="15.0" fill="rgb(243,223,16)" rx="2" ry="2" />
<text  x="689.71" y="143.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (31,282 us., 1.23%)</title><rect x="721.0" y="85" width="14.5" height="15.0" fill="rgb(247,51,17)" rx="2" ry="2" />
<text  x="724.02" y="95.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (300 us., 0.01%)</title><rect x="686.6" y="213" width="0.1" height="15.0" fill="rgb(207,120,52)" rx="2" ry="2" />
<text  x="689.57" y="223.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (922,153 us., 36.22%)</title><rect x="259.2" y="133" width="427.4" height="15.0" fill="rgb(249,18,34)" rx="2" ry="2" />
<text  x="262.19" y="143.5" >transformers/models/opt/modeling_opt.py(840):_forward</text>
</g>
<g >
<title>nn.Module:_Linear (89,703 us., 3.52%)</title><rect x="10.0" y="229" width="41.6" height="15.0" fill="rgb(213,191,19)" rx="2" ry="2" />
<text  x="13.00" y="239.5" >nn...</text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (14,614 us., 0.57%)</title><rect x="687.6" y="197" width="6.7" height="15.0" fill="rgb(222,178,25)" rx="2" ry="2" />
<text  x="690.57" y="207.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (241,542 us., 9.49%)</title><rect x="124.3" y="213" width="111.9" height="15.0" fill="rgb(238,184,11)" rx="2" ry="2" />
<text  x="127.28" y="223.5" >torch/autogra..</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (599 us., 0.02%)</title><rect x="1189.7" y="229" width="0.3" height="15.0" fill="rgb(252,209,11)" rx="2" ry="2" />
<text  x="1192.72" y="239.5" ></text>
</g>
<g >
<title>torch_int/nn/fused.py(13):_forward (152,716 us., 6.00%)</title><rect x="52.3" y="229" width="70.7" height="15.0" fill="rgb(251,112,49)" rx="2" ry="2" />
<text  x="55.27" y="239.5" >torch_i..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (922,153 us., 36.22%)</title><rect x="259.2" y="117" width="427.4" height="15.0" fill="rgb(229,118,32)" rx="2" ry="2" />
<text  x="262.19" y="127.5" >nn.Module:_Int8OPTForCausalLM</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (14,458 us., 0.57%)</title><rect x="694.3" y="101" width="6.7" height="15.0" fill="rgb(228,4,1)" rx="2" ry="2" />
<text  x="697.35" y="111.5" ></text>
</g>
<g >
<title>nn.Module:_W8A8B8O8LinearReLU (31,282 us., 1.23%)</title><rect x="721.0" y="213" width="14.5" height="15.0" fill="rgb(251,36,46)" rx="2" ry="2" />
<text  x="724.02" y="223.5" ></text>
</g>
<g >
<title>&lt;built-in_method_max_of_type_object_at_0x7f34078d19c0&gt; (240,378 us., 9.44%)</title><rect x="735.5" y="261" width="111.4" height="15.0" fill="rgb(250,197,14)" rx="2" ry="2" />
<text  x="738.52" y="271.5" >&lt;built-in_met..</text>
</g>
<g >
<title>&lt;built-in_method_encode_of_str_object_at_0x7f33133c7450&gt; (1,214,663 us., 47.71%)</title><rect x="124.3" y="261" width="562.9" height="15.0" fill="rgb(214,29,43)" rx="2" ry="2" />
<text  x="127.28" y="271.5" >&lt;built-in_method_encode_of_str_object_at_0x7f33133c7450&gt;</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (43,098 us., 1.69%)</title><rect x="701.0" y="53" width="20.0" height="15.0" fill="rgb(221,178,48)" rx="2" ry="2" />
<text  x="704.05" y="63.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (298 us., 0.01%)</title><rect x="847.2" y="197" width="0.2" height="15.0" fill="rgb(205,91,50)" rx="2" ry="2" />
<text  x="850.25" y="207.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (922,153 us., 36.22%)</title><rect x="259.2" y="101" width="427.4" height="15.0" fill="rgb(207,130,12)" rx="2" ry="2" />
<text  x="262.19" y="111.5" >profiling/utils.py(18):_profile_model</text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (737,182 us., 28.95%)</title><rect x="848.1" y="213" width="341.6" height="15.0" fill="rgb(221,45,2)" rx="2" ry="2" />
<text  x="851.07" y="223.5" >torch_int/nn/opt.py(183):_forward</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (241,542 us., 9.49%)</title><rect x="124.3" y="149" width="111.9" height="15.0" fill="rgb(206,225,35)" rx="2" ry="2" />
<text  x="127.28" y="159.5" >torch_int/nn/..</text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (46,139 us., 1.81%)</title><rect x="237.8" y="197" width="21.4" height="15.0" fill="rgb(230,144,4)" rx="2" ry="2" />
<text  x="240.81" y="207.5" >n..</text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (599 us., 0.02%)</title><rect x="1189.7" y="245" width="0.3" height="15.0" fill="rgb(213,64,50)" rx="2" ry="2" />
<text  x="1192.72" y="255.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (1,247 us., 0.05%)</title><rect x="123.7" y="213" width="0.6" height="15.0" fill="rgb(253,49,4)" rx="2" ry="2" />
<text  x="126.70" y="223.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (14,458 us., 0.57%)</title><rect x="694.3" y="181" width="6.7" height="15.0" fill="rgb(212,199,23)" rx="2" ry="2" />
<text  x="697.35" y="191.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (46,139 us., 1.81%)</title><rect x="237.8" y="181" width="21.4" height="15.0" fill="rgb(218,48,38)" rx="2" ry="2" />
<text  x="240.81" y="191.5" >t..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (307 us., 0.01%)</title><rect x="52.1" y="133" width="0.2" height="15.0" fill="rgb(253,158,5)" rx="2" ry="2" />
<text  x="55.13" y="143.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (89,703 us., 3.52%)</title><rect x="10.0" y="181" width="41.6" height="15.0" fill="rgb(239,221,34)" rx="2" ry="2" />
<text  x="13.00" y="191.5" >pro..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,312 us., 0.05%)</title><rect x="237.2" y="181" width="0.6" height="15.0" fill="rgb(238,20,23)" rx="2" ry="2" />
<text  x="240.20" y="191.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (2,108 us., 0.08%)</title><rect x="236.2" y="229" width="1.0" height="15.0" fill="rgb(233,61,52)" rx="2" ry="2" />
<text  x="239.22" y="239.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (2,108 us., 0.08%)</title><rect x="236.2" y="197" width="1.0" height="15.0" fill="rgb(253,216,1)" rx="2" ry="2" />
<text  x="239.22" y="207.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (922,153 us., 36.22%)</title><rect x="259.2" y="197" width="427.4" height="15.0" fill="rgb(248,182,17)" rx="2" ry="2" />
<text  x="262.19" y="207.5" >torch_int/nn/opt.py(183):_forward</text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (1,247 us., 0.05%)</title><rect x="123.7" y="197" width="0.6" height="15.0" fill="rgb(238,225,34)" rx="2" ry="2" />
<text  x="126.70" y="207.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (31,282 us., 1.23%)</title><rect x="721.0" y="165" width="14.5" height="15.0" fill="rgb(249,18,25)" rx="2" ry="2" />
<text  x="724.02" y="175.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(300):__prepare_decoder_attention_mask (1,109 us., 0.04%)</title><rect x="686.7" y="229" width="0.5" height="15.0" fill="rgb(208,186,40)" rx="2" ry="2" />
<text  x="689.71" y="239.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (31,282 us., 1.23%)</title><rect x="721.0" y="133" width="14.5" height="15.0" fill="rgb(239,152,53)" rx="2" ry="2" />
<text  x="724.02" y="143.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(43):__shape (46,139 us., 1.81%)</title><rect x="237.8" y="245" width="21.4" height="15.0" fill="rgb(231,159,5)" rx="2" ry="2" />
<text  x="240.81" y="255.5" >t..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (1,247 us., 0.05%)</title><rect x="123.7" y="133" width="0.6" height="15.0" fill="rgb(239,140,22)" rx="2" ry="2" />
<text  x="126.70" y="143.5" ></text>
</g>
<g >
<title>torch/nn/functional.py(2488):_layer_norm (750 us., 0.03%)</title><rect x="687.2" y="245" width="0.4" height="15.0" fill="rgb(249,200,8)" rx="2" ry="2" />
<text  x="690.23" y="255.5" ></text>
</g>
<g >
<title>torch/nn/functional.py(1804):_softmax (241,542 us., 9.49%)</title><rect x="124.3" y="245" width="111.9" height="15.0" fill="rgb(246,132,0)" rx="2" ry="2" />
<text  x="127.28" y="255.5" >torch/nn/func..</text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (922,153 us., 36.22%)</title><rect x="259.2" y="213" width="427.4" height="15.0" fill="rgb(211,84,41)" rx="2" ry="2" />
<text  x="262.19" y="223.5" >nn.Module:_Int8OPTAttention</text>
</g>
<g >
<title>nn.Module:_DQ_Add_LayerNorm_Q (152,716 us., 6.00%)</title><rect x="52.3" y="213" width="70.7" height="15.0" fill="rgb(213,152,41)" rx="2" ry="2" />
<text  x="55.27" y="223.5" >nn.Modu..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (1,470 us., 0.06%)</title><rect x="847.4" y="245" width="0.7" height="15.0" fill="rgb(205,49,11)" rx="2" ry="2" />
<text  x="850.39" y="255.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (922,153 us., 36.22%)</title><rect x="259.2" y="165" width="427.4" height="15.0" fill="rgb(216,4,0)" rx="2" ry="2" />
<text  x="262.19" y="175.5" >torch_int/nn/opt.py(321):_forward</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (14,458 us., 0.57%)</title><rect x="694.3" y="117" width="6.7" height="15.0" fill="rgb(248,155,43)" rx="2" ry="2" />
<text  x="697.35" y="127.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (29,072 us., 1.14%)</title><rect x="687.6" y="229" width="13.4" height="15.0" fill="rgb(213,66,54)" rx="2" ry="2" />
<text  x="690.57" y="239.5" ></text>
</g>
<g >
<title>&lt;built-in_function_linear&gt; (89,703 us., 3.52%)</title><rect x="10.0" y="261" width="41.6" height="15.0" fill="rgb(213,94,12)" rx="2" ry="2" />
<text  x="13.00" y="271.5" >&lt;bu..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (152,716 us., 6.00%)</title><rect x="52.3" y="117" width="70.7" height="15.0" fill="rgb(217,38,18)" rx="2" ry="2" />
<text  x="55.27" y="127.5" >nn.Modu..</text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (31,282 us., 1.23%)</title><rect x="721.0" y="197" width="14.5" height="15.0" fill="rgb(240,148,4)" rx="2" ry="2" />
<text  x="724.02" y="207.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (750 us., 0.03%)</title><rect x="687.2" y="165" width="0.4" height="15.0" fill="rgb(234,33,27)" rx="2" ry="2" />
<text  x="690.23" y="175.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (240,378 us., 9.44%)</title><rect x="735.5" y="229" width="111.4" height="15.0" fill="rgb(208,125,28)" rx="2" ry="2" />
<text  x="738.52" y="239.5" >torch/autogra..</text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (737,182 us., 28.95%)</title><rect x="848.1" y="261" width="341.6" height="15.0" fill="rgb(239,74,43)" rx="2" ry="2" />
<text  x="851.07" y="271.5" >torch_int/nn/opt.py(46):_forward</text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (43,098 us., 1.69%)</title><rect x="701.0" y="149" width="20.0" height="15.0" fill="rgb(250,217,19)" rx="2" ry="2" />
<text  x="704.05" y="159.5" ></text>
</g>
<g >
<title>torch_int/nn/linear.py(62):_forward (29,072 us., 1.14%)</title><rect x="687.6" y="245" width="13.4" height="15.0" fill="rgb(218,158,4)" rx="2" ry="2" />
<text  x="690.57" y="255.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (307 us., 0.01%)</title><rect x="52.1" y="245" width="0.2" height="15.0" fill="rgb(248,46,0)" rx="2" ry="2" />
<text  x="55.13" y="255.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (300 us., 0.01%)</title><rect x="686.6" y="181" width="0.1" height="15.0" fill="rgb(208,134,6)" rx="2" ry="2" />
<text  x="689.57" y="191.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (240,378 us., 9.44%)</title><rect x="735.5" y="85" width="111.4" height="15.0" fill="rgb(238,84,34)" rx="2" ry="2" />
<text  x="738.52" y="95.5" >torch/autogra..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (46,139 us., 1.81%)</title><rect x="237.8" y="133" width="21.4" height="15.0" fill="rgb(221,79,30)" rx="2" ry="2" />
<text  x="240.81" y="143.5" >n..</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (43,098 us., 1.69%)</title><rect x="701.0" y="117" width="20.0" height="15.0" fill="rgb(235,167,2)" rx="2" ry="2" />
<text  x="704.05" y="127.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (599 us., 0.02%)</title><rect x="1189.7" y="181" width="0.3" height="15.0" fill="rgb(215,88,32)" rx="2" ry="2" />
<text  x="1192.72" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_W8A8B32O32LinearWithScaling (29,072 us., 1.14%)</title><rect x="687.6" y="213" width="13.4" height="15.0" fill="rgb(244,220,13)" rx="2" ry="2" />
<text  x="690.57" y="223.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (46,139 us., 1.81%)</title><rect x="237.8" y="229" width="21.4" height="15.0" fill="rgb(212,56,9)" rx="2" ry="2" />
<text  x="240.81" y="239.5" >t..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (31,282 us., 1.23%)</title><rect x="721.0" y="229" width="14.5" height="15.0" fill="rgb(209,23,8)" rx="2" ry="2" />
<text  x="724.02" y="239.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (307 us., 0.01%)</title><rect x="52.1" y="213" width="0.2" height="15.0" fill="rgb(220,7,10)" rx="2" ry="2" />
<text  x="55.13" y="223.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (1,470 us., 0.06%)</title><rect x="847.4" y="261" width="0.7" height="15.0" fill="rgb(232,3,38)" rx="2" ry="2" />
<text  x="850.39" y="271.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (298 us., 0.01%)</title><rect x="847.1" y="197" width="0.1" height="15.0" fill="rgb(235,213,34)" rx="2" ry="2" />
<text  x="850.11" y="207.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (241,542 us., 9.49%)</title><rect x="124.3" y="85" width="111.9" height="15.0" fill="rgb(217,49,19)" rx="2" ry="2" />
<text  x="127.28" y="95.5" >profiling/uti..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (43,098 us., 1.69%)</title><rect x="701.0" y="69" width="20.0" height="15.0" fill="rgb(230,37,35)" rx="2" ry="2" />
<text  x="704.05" y="79.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (152,716 us., 6.00%)</title><rect x="52.3" y="181" width="70.7" height="15.0" fill="rgb(214,162,20)" rx="2" ry="2" />
<text  x="55.27" y="191.5" >nn.Modu..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (599 us., 0.02%)</title><rect x="1189.7" y="149" width="0.3" height="15.0" fill="rgb(228,60,39)" rx="2" ry="2" />
<text  x="1192.72" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (1,109 us., 0.04%)</title><rect x="686.7" y="165" width="0.5" height="15.0" fill="rgb(234,209,33)" rx="2" ry="2" />
<text  x="689.71" y="175.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (1,312 us., 0.05%)</title><rect x="237.2" y="245" width="0.6" height="15.0" fill="rgb(221,3,13)" rx="2" ry="2" />
<text  x="240.20" y="255.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,400 us., 0.05%)</title><rect x="123.0" y="117" width="0.7" height="15.0" fill="rgb(247,205,31)" rx="2" ry="2" />
<text  x="126.05" y="127.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (43,098 us., 1.69%)</title><rect x="701.0" y="133" width="20.0" height="15.0" fill="rgb(233,82,27)" rx="2" ry="2" />
<text  x="704.05" y="143.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(300):__prepare_decoder_attention_mask (298 us., 0.01%)</title><rect x="847.2" y="261" width="0.2" height="15.0" fill="rgb(233,179,44)" rx="2" ry="2" />
<text  x="850.25" y="271.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (922,153 us., 36.22%)</title><rect x="259.2" y="181" width="427.4" height="15.0" fill="rgb(243,66,27)" rx="2" ry="2" />
<text  x="262.19" y="191.5" >nn.Module:_Int8OPTDecoderLayer</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (240,378 us., 9.44%)</title><rect x="735.5" y="165" width="111.4" height="15.0" fill="rgb(242,1,32)" rx="2" ry="2" />
<text  x="738.52" y="175.5" >torch_int/nn/..</text>
</g>
<g >
<title>torch/nn/modules/normalization.py(188):_forward (750 us., 0.03%)</title><rect x="687.2" y="229" width="0.4" height="15.0" fill="rgb(205,149,26)" rx="2" ry="2" />
<text  x="690.23" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (307 us., 0.01%)</title><rect x="52.1" y="165" width="0.2" height="15.0" fill="rgb(223,129,49)" rx="2" ry="2" />
<text  x="55.13" y="175.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (298 us., 0.01%)</title><rect x="847.2" y="165" width="0.2" height="15.0" fill="rgb(247,70,25)" rx="2" ry="2" />
<text  x="850.25" y="175.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (152,716 us., 6.00%)</title><rect x="52.3" y="133" width="70.7" height="15.0" fill="rgb(229,127,54)" rx="2" ry="2" />
<text  x="55.27" y="143.5" >transfo..</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (750 us., 0.03%)</title><rect x="687.2" y="197" width="0.4" height="15.0" fill="rgb(213,107,47)" rx="2" ry="2" />
<text  x="690.23" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (1,247 us., 0.05%)</title><rect x="123.7" y="165" width="0.6" height="15.0" fill="rgb(254,104,40)" rx="2" ry="2" />
<text  x="126.70" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (2,108 us., 0.08%)</title><rect x="236.2" y="181" width="1.0" height="15.0" fill="rgb(221,23,23)" rx="2" ry="2" />
<text  x="239.22" y="191.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (300 us., 0.01%)</title><rect x="686.6" y="149" width="0.1" height="15.0" fill="rgb(251,75,32)" rx="2" ry="2" />
<text  x="689.57" y="159.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (43,098 us., 1.69%)</title><rect x="701.0" y="85" width="20.0" height="15.0" fill="rgb(247,93,4)" rx="2" ry="2" />
<text  x="704.05" y="95.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (46,139 us., 1.81%)</title><rect x="237.8" y="149" width="21.4" height="15.0" fill="rgb(214,207,0)" rx="2" ry="2" />
<text  x="240.81" y="159.5" >t..</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (737,182 us., 28.95%)</title><rect x="848.1" y="181" width="341.6" height="15.0" fill="rgb(228,0,3)" rx="2" ry="2" />
<text  x="851.07" y="191.5" >torch_int/nn/opt.py(321):_forward</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (737,182 us., 28.95%)</title><rect x="848.1" y="117" width="341.6" height="15.0" fill="rgb(229,77,54)" rx="2" ry="2" />
<text  x="851.07" y="127.5" >profiling/utils.py(18):_profile_model</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,400 us., 0.05%)</title><rect x="123.0" y="165" width="0.7" height="15.0" fill="rgb(243,103,8)" rx="2" ry="2" />
<text  x="126.05" y="175.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,470 us., 0.06%)</title><rect x="847.4" y="229" width="0.7" height="15.0" fill="rgb(250,169,10)" rx="2" ry="2" />
<text  x="850.39" y="239.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (14,458 us., 0.57%)</title><rect x="694.3" y="197" width="6.7" height="15.0" fill="rgb(250,45,50)" rx="2" ry="2" />
<text  x="697.35" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (14,458 us., 0.57%)</title><rect x="694.3" y="165" width="6.7" height="15.0" fill="rgb(243,185,42)" rx="2" ry="2" />
<text  x="697.35" y="175.5" ></text>
</g>
<g >
<title>torch_int/functional/fused.py(24):_dq_add_layernorm_q_cpp (152,716 us., 6.00%)</title><rect x="52.3" y="245" width="70.7" height="15.0" fill="rgb(221,35,34)" rx="2" ry="2" />
<text  x="55.27" y="255.5" >torch_i..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (737,182 us., 28.95%)</title><rect x="848.1" y="149" width="341.6" height="15.0" fill="rgb(236,176,8)" rx="2" ry="2" />
<text  x="851.07" y="159.5" >transformers/models/opt/modeling_opt.py(840):_..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (298 us., 0.01%)</title><rect x="847.1" y="213" width="0.1" height="15.0" fill="rgb(205,218,16)" rx="2" ry="2" />
<text  x="850.11" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (300 us., 0.01%)</title><rect x="686.6" y="165" width="0.1" height="15.0" fill="rgb(228,177,53)" rx="2" ry="2" />
<text  x="689.57" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (31,282 us., 1.23%)</title><rect x="721.0" y="117" width="14.5" height="15.0" fill="rgb(218,60,0)" rx="2" ry="2" />
<text  x="724.02" y="127.5" ></text>
</g>
<g >
<title>torch_int/nn/linear.py(122):_forward (31,282 us., 1.23%)</title><rect x="721.0" y="245" width="14.5" height="15.0" fill="rgb(234,58,19)" rx="2" ry="2" />
<text  x="724.02" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (14,614 us., 0.57%)</title><rect x="687.6" y="149" width="6.7" height="15.0" fill="rgb(252,70,50)" rx="2" ry="2" />
<text  x="690.57" y="159.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (298 us., 0.01%)</title><rect x="847.1" y="165" width="0.1" height="15.0" fill="rgb(210,146,6)" rx="2" ry="2" />
<text  x="850.11" y="175.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (152,716 us., 6.00%)</title><rect x="52.3" y="101" width="70.7" height="15.0" fill="rgb(230,80,15)" rx="2" ry="2" />
<text  x="55.27" y="111.5" >profili..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,199 us., 0.05%)</title><rect x="51.6" y="213" width="0.5" height="15.0" fill="rgb(241,14,34)" rx="2" ry="2" />
<text  x="54.57" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (737,182 us., 28.95%)</title><rect x="848.1" y="133" width="341.6" height="15.0" fill="rgb(224,224,33)" rx="2" ry="2" />
<text  x="851.07" y="143.5" >nn.Module:_Int8OPTForCausalLM</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (1,109 us., 0.04%)</title><rect x="686.7" y="197" width="0.5" height="15.0" fill="rgb(241,201,16)" rx="2" ry="2" />
<text  x="689.71" y="207.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (240,378 us., 9.44%)</title><rect x="735.5" y="101" width="111.4" height="15.0" fill="rgb(227,72,38)" rx="2" ry="2" />
<text  x="738.52" y="111.5" >profiling/uti..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (89,703 us., 3.52%)</title><rect x="10.0" y="165" width="41.6" height="15.0" fill="rgb(241,37,16)" rx="2" ry="2" />
<text  x="13.00" y="175.5" >tor..</text>
</g>
<g >
<title>&lt;built-in_method_zeros_like_of_type_object_at_0x7f34078d19c0&gt; (298 us., 0.01%)</title><rect x="847.1" y="261" width="0.1" height="15.0" fill="rgb(235,223,37)" rx="2" ry="2" />
<text  x="850.11" y="271.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,109 us., 0.04%)</title><rect x="686.7" y="149" width="0.5" height="15.0" fill="rgb(243,199,34)" rx="2" ry="2" />
<text  x="689.71" y="159.5" ></text>
</g>
</g>
</svg>
