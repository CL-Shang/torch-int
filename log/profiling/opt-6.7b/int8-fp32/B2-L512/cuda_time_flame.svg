<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="326" onload="init(evt)" viewBox="0 0 1200 326" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="326.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >CUDA Time</text>
<text id="details" x="10.00" y="309" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="309" > </text>
<g id="frames">
<g >
<title>nn.Module:_Int8OPTDecoder (2,519,285 us., 24.70%)</title><rect x="540.3" y="149" width="291.4" height="15.0" fill="rgb(252,129,20)" rx="2" ry="2" />
<text  x="543.26" y="159.5" >nn.Module:_Int8OPTDecoder</text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (2,519,285 us., 24.70%)</title><rect x="540.3" y="197" width="291.4" height="15.0" fill="rgb(231,6,12)" rx="2" ry="2" />
<text  x="543.26" y="207.5" >torch_int/nn/opt.py(183):_forward</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (228,483 us., 2.24%)</title><rect x="513.8" y="213" width="26.5" height="15.0" fill="rgb(222,216,54)" rx="2" ry="2" />
<text  x="516.83" y="223.5" >t..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (84,591 us., 0.83%)</title><rect x="842.0" y="85" width="9.8" height="15.0" fill="rgb(217,51,21)" rx="2" ry="2" />
<text  x="845.04" y="95.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (5,641 us., 0.06%)</title><rect x="435.9" y="117" width="0.6" height="15.0" fill="rgb(243,87,28)" rx="2" ry="2" />
<text  x="438.89" y="127.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (79,876 us., 0.78%)</title><rect x="832.8" y="133" width="9.2" height="15.0" fill="rgb(222,66,20)" rx="2" ry="2" />
<text  x="835.80" y="143.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (1,975,956 us., 19.37%)</title><rect x="961.4" y="165" width="228.5" height="15.0" fill="rgb(253,54,40)" rx="2" ry="2" />
<text  x="964.36" y="175.5" >nn.Module:_Int8OPTDecoder</text>
</g>
<g >
<title>&lt;built-in_method_cumsum_of_type_object_at_0x7f086732a9c0&gt; (1,752 us., 0.02%)</title><rect x="222.5" y="261" width="0.2" height="15.0" fill="rgb(230,64,53)" rx="2" ry="2" />
<text  x="225.50" y="271.5" ></text>
</g>
<g >
<title>&lt;built-in_method_layer_norm_of_type_object_at_0x7f086732a9c0&gt; (7,462 us., 0.07%)</title><rect x="831.9" y="261" width="0.9" height="15.0" fill="rgb(214,221,10)" rx="2" ry="2" />
<text  x="834.93" y="271.5" ></text>
</g>
<g >
<title>&lt;built-in_method_dq_add_layernorm_q_of_PyCapsule_object_at_0x7f07727bdf30&gt; (1,842,999 us., 18.07%)</title><rect x="222.7" y="261" width="213.2" height="15.0" fill="rgb(236,193,35)" rx="2" ry="2" />
<text  x="225.70" y="271.5" >&lt;built-in_method_dq_add_laye..</text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (638,880 us., 6.26%)</title><rect x="437.2" y="229" width="73.9" height="15.0" fill="rgb(222,156,11)" rx="2" ry="2" />
<text  x="440.20" y="239.5" >torch_in..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (7,604 us., 0.07%)</title><rect x="221.6" y="181" width="0.9" height="15.0" fill="rgb(226,196,53)" rx="2" ry="2" />
<text  x="224.62" y="191.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (79,876 us., 0.78%)</title><rect x="832.8" y="197" width="9.2" height="15.0" fill="rgb(252,190,17)" rx="2" ry="2" />
<text  x="835.80" y="207.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (634,689 us., 6.22%)</title><rect x="886.0" y="101" width="73.5" height="15.0" fill="rgb(222,56,6)" rx="2" ry="2" />
<text  x="889.04" y="111.5" >profilin..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (8,162 us., 0.08%)</title><rect x="511.1" y="149" width="0.9" height="15.0" fill="rgb(215,99,9)" rx="2" ry="2" />
<text  x="514.10" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (5,639 us., 0.06%)</title><rect x="436.5" y="197" width="0.7" height="15.0" fill="rgb(242,88,5)" rx="2" ry="2" />
<text  x="439.55" y="207.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,829,354 us., 17.93%)</title><rect x="10.0" y="213" width="211.6" height="15.0" fill="rgb(213,116,31)" rx="2" ry="2" />
<text  x="13.00" y="223.5" >transformers/models/opt/mod..</text>
</g>
<g >
<title>all (10,200,703 us., 100%)</title><rect x="10.0" y="277" width="1180.0" height="15.0" fill="rgb(251,130,11)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (152,777 us., 1.50%)</title><rect x="868.4" y="117" width="17.6" height="15.0" fill="rgb(234,12,37)" rx="2" ry="2" />
<text  x="871.37" y="127.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (638,880 us., 6.26%)</title><rect x="437.2" y="101" width="73.9" height="15.0" fill="rgb(205,49,21)" rx="2" ry="2" />
<text  x="440.20" y="111.5" >nn.Modul..</text>
</g>
<g >
<title>torch_int/nn/linear.py(92):_forward (143,008 us., 1.40%)</title><rect x="851.8" y="245" width="16.6" height="15.0" fill="rgb(241,99,10)" rx="2" ry="2" />
<text  x="854.82" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (1,842,999 us., 18.07%)</title><rect x="222.7" y="117" width="213.2" height="15.0" fill="rgb(209,206,31)" rx="2" ry="2" />
<text  x="225.70" y="127.5" >nn.Module:_Int8OPTForCausalLM</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (15,423 us., 0.15%)</title><rect x="512.0" y="165" width="1.8" height="15.0" fill="rgb(247,102,16)" rx="2" ry="2" />
<text  x="515.05" y="175.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (228,483 us., 2.24%)</title><rect x="513.8" y="149" width="26.5" height="15.0" fill="rgb(232,223,21)" rx="2" ry="2" />
<text  x="516.83" y="159.5" >t..</text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (638,880 us., 6.26%)</title><rect x="437.2" y="197" width="73.9" height="15.0" fill="rgb(242,147,45)" rx="2" ry="2" />
<text  x="440.20" y="207.5" >nn.Modul..</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (5,639 us., 0.06%)</title><rect x="436.5" y="181" width="0.7" height="15.0" fill="rgb(214,102,27)" rx="2" ry="2" />
<text  x="439.55" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (5,641 us., 0.06%)</title><rect x="435.9" y="181" width="0.6" height="15.0" fill="rgb(240,156,47)" rx="2" ry="2" />
<text  x="438.89" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (7,462 us., 0.07%)</title><rect x="831.9" y="149" width="0.9" height="15.0" fill="rgb(246,163,45)" rx="2" ry="2" />
<text  x="834.93" y="159.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(89):__expand_mask (1,784 us., 0.02%)</title><rect x="831.7" y="245" width="0.2" height="15.0" fill="rgb(225,118,38)" rx="2" ry="2" />
<text  x="834.73" y="255.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (15,423 us., 0.15%)</title><rect x="512.0" y="181" width="1.8" height="15.0" fill="rgb(226,148,44)" rx="2" ry="2" />
<text  x="515.05" y="191.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (2,519,285 us., 24.70%)</title><rect x="540.3" y="101" width="291.4" height="15.0" fill="rgb(208,201,12)" rx="2" ry="2" />
<text  x="543.26" y="111.5" >profiling/utils.py(18):_profile_model</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (5,639 us., 0.06%)</title><rect x="436.5" y="101" width="0.7" height="15.0" fill="rgb(229,124,20)" rx="2" ry="2" />
<text  x="439.55" y="111.5" ></text>
</g>
<g >
<title>&lt;built-in_method_zeros_like_of_type_object_at_0x7f086732a9c0&gt; (2,499 us., 0.02%)</title><rect x="959.5" y="261" width="0.3" height="15.0" fill="rgb(219,34,10)" rx="2" ry="2" />
<text  x="962.52" y="271.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (1,975,956 us., 19.37%)</title><rect x="961.4" y="229" width="228.5" height="15.0" fill="rgb(235,158,17)" rx="2" ry="2" />
<text  x="964.36" y="239.5" >nn.Module:_Int8OPTAttention</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (152,777 us., 1.50%)</title><rect x="868.4" y="133" width="17.6" height="15.0" fill="rgb(227,5,1)" rx="2" ry="2" />
<text  x="871.37" y="143.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (12,696 us., 0.12%)</title><rect x="959.9" y="229" width="1.5" height="15.0" fill="rgb(241,132,46)" rx="2" ry="2" />
<text  x="962.89" y="239.5" ></text>
</g>
<g >
<title>&lt;built-in_method_linear_relu_a8_w8_b8_o8_of_PyCapsule_object_at_0x7f07727bde70&gt; (152,777 us., 1.50%)</title><rect x="868.4" y="261" width="17.6" height="15.0" fill="rgb(226,170,32)" rx="2" ry="2" />
<text  x="871.37" y="271.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (7,604 us., 0.07%)</title><rect x="221.6" y="165" width="0.9" height="15.0" fill="rgb(231,38,53)" rx="2" ry="2" />
<text  x="224.62" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (634,689 us., 6.22%)</title><rect x="886.0" y="149" width="73.5" height="15.0" fill="rgb(235,155,25)" rx="2" ry="2" />
<text  x="889.04" y="159.5" >nn.Modul..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (228,483 us., 2.24%)</title><rect x="513.8" y="85" width="26.5" height="15.0" fill="rgb(231,46,43)" rx="2" ry="2" />
<text  x="516.83" y="95.5" >p..</text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (143,008 us., 1.40%)</title><rect x="851.8" y="149" width="16.6" height="15.0" fill="rgb(217,35,48)" rx="2" ry="2" />
<text  x="854.82" y="159.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (5,639 us., 0.06%)</title><rect x="436.5" y="213" width="0.7" height="15.0" fill="rgb(207,94,14)" rx="2" ry="2" />
<text  x="439.55" y="223.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (7,462 us., 0.07%)</title><rect x="831.9" y="197" width="0.9" height="15.0" fill="rgb(231,165,22)" rx="2" ry="2" />
<text  x="834.93" y="207.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (2,499 us., 0.02%)</title><rect x="959.5" y="181" width="0.3" height="15.0" fill="rgb(235,55,44)" rx="2" ry="2" />
<text  x="962.52" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (7,604 us., 0.07%)</title><rect x="221.6" y="197" width="0.9" height="15.0" fill="rgb(224,175,38)" rx="2" ry="2" />
<text  x="224.62" y="207.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,842,999 us., 18.07%)</title><rect x="222.7" y="85" width="213.2" height="15.0" fill="rgb(217,125,38)" rx="2" ry="2" />
<text  x="225.70" y="95.5" >torch/autograd/grad_mode.py(..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (2,519,285 us., 24.70%)</title><rect x="540.3" y="133" width="291.4" height="15.0" fill="rgb(254,25,37)" rx="2" ry="2" />
<text  x="543.26" y="143.5" >transformers/models/opt/modeling_opt.py..</text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (84,591 us., 0.83%)</title><rect x="842.0" y="165" width="9.8" height="15.0" fill="rgb(208,206,29)" rx="2" ry="2" />
<text  x="845.04" y="175.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (164,467 us., 1.61%)</title><rect x="832.8" y="229" width="19.0" height="15.0" fill="rgb(224,200,37)" rx="2" ry="2" />
<text  x="835.80" y="239.5" ></text>
</g>
<g >
<title>&lt;built-in_method_linear_a8_w8_b32_o32_with_scaling_of_PyCapsule_object_at_0x7f07727bded0&gt; (164,467 us., 1.61%)</title><rect x="832.8" y="261" width="19.0" height="15.0" fill="rgb(240,28,18)" rx="2" ry="2" />
<text  x="835.80" y="271.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (634,689 us., 6.22%)</title><rect x="886.0" y="133" width="73.5" height="15.0" fill="rgb(213,142,33)" rx="2" ry="2" />
<text  x="889.04" y="143.5" >transfor..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,829,354 us., 17.93%)</title><rect x="10.0" y="165" width="211.6" height="15.0" fill="rgb(212,193,32)" rx="2" ry="2" />
<text  x="13.00" y="175.5" >torch/autograd/grad_mode.py..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (7,462 us., 0.07%)</title><rect x="831.9" y="165" width="0.9" height="15.0" fill="rgb(232,29,40)" rx="2" ry="2" />
<text  x="834.93" y="175.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (84,591 us., 0.83%)</title><rect x="842.0" y="197" width="9.8" height="15.0" fill="rgb(229,209,35)" rx="2" ry="2" />
<text  x="845.04" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (143,008 us., 1.40%)</title><rect x="851.8" y="165" width="16.6" height="15.0" fill="rgb(216,72,52)" rx="2" ry="2" />
<text  x="854.82" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (8,162 us., 0.08%)</title><rect x="511.1" y="181" width="0.9" height="15.0" fill="rgb(229,105,19)" rx="2" ry="2" />
<text  x="514.10" y="191.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (634,689 us., 6.22%)</title><rect x="886.0" y="165" width="73.5" height="15.0" fill="rgb(210,146,24)" rx="2" ry="2" />
<text  x="889.04" y="175.5" >torch_in..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (228,483 us., 2.24%)</title><rect x="513.8" y="133" width="26.5" height="15.0" fill="rgb(251,96,35)" rx="2" ry="2" />
<text  x="516.83" y="143.5" >n..</text>
</g>
<g >
<title>&lt;built-in_function_linear&gt; (1,829,354 us., 17.93%)</title><rect x="10.0" y="261" width="211.6" height="15.0" fill="rgb(207,186,15)" rx="2" ry="2" />
<text  x="13.00" y="271.5" >&lt;built-in_function_linear&gt;</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (7,604 us., 0.07%)</title><rect x="221.6" y="245" width="0.9" height="15.0" fill="rgb(248,43,30)" rx="2" ry="2" />
<text  x="224.62" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (143,008 us., 1.40%)</title><rect x="851.8" y="133" width="16.6" height="15.0" fill="rgb(227,9,23)" rx="2" ry="2" />
<text  x="854.82" y="143.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (143,008 us., 1.40%)</title><rect x="851.8" y="197" width="16.6" height="15.0" fill="rgb(254,73,12)" rx="2" ry="2" />
<text  x="854.82" y="207.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (2,519,285 us., 24.70%)</title><rect x="540.3" y="245" width="291.4" height="15.0" fill="rgb(252,47,41)" rx="2" ry="2" />
<text  x="543.26" y="255.5" >torch_int/nn/opt.py(46):_forward</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (634,689 us., 6.22%)</title><rect x="886.0" y="229" width="73.5" height="15.0" fill="rgb(244,126,6)" rx="2" ry="2" />
<text  x="889.04" y="239.5" >torch/au..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (152,777 us., 1.50%)</title><rect x="868.4" y="101" width="17.6" height="15.0" fill="rgb(227,156,19)" rx="2" ry="2" />
<text  x="871.37" y="111.5" ></text>
</g>
<g >
<title>&lt;built-in_method_embedding_of_type_object_at_0x7f086732a9c0&gt; (11,280 us., 0.11%)</title><rect x="435.9" y="261" width="1.3" height="15.0" fill="rgb(206,186,30)" rx="2" ry="2" />
<text  x="438.89" y="271.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (228,483 us., 2.24%)</title><rect x="513.8" y="117" width="26.5" height="15.0" fill="rgb(234,56,22)" rx="2" ry="2" />
<text  x="516.83" y="127.5" >t..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (5,641 us., 0.06%)</title><rect x="435.9" y="133" width="0.6" height="15.0" fill="rgb(230,225,16)" rx="2" ry="2" />
<text  x="438.89" y="143.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,752 us., 0.02%)</title><rect x="222.5" y="133" width="0.2" height="15.0" fill="rgb(228,194,2)" rx="2" ry="2" />
<text  x="225.50" y="143.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (79,876 us., 0.78%)</title><rect x="832.8" y="101" width="9.2" height="15.0" fill="rgb(211,55,43)" rx="2" ry="2" />
<text  x="835.80" y="111.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (2,519,285 us., 24.70%)</title><rect x="540.3" y="85" width="291.4" height="15.0" fill="rgb(216,88,12)" rx="2" ry="2" />
<text  x="543.26" y="95.5" >torch/autograd/grad_mode.py(27):_decora..</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (1,752 us., 0.02%)</title><rect x="222.5" y="213" width="0.2" height="15.0" fill="rgb(232,222,21)" rx="2" ry="2" />
<text  x="225.50" y="223.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (5,641 us., 0.06%)</title><rect x="435.9" y="165" width="0.6" height="15.0" fill="rgb(253,35,43)" rx="2" ry="2" />
<text  x="438.89" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (1,784 us., 0.02%)</title><rect x="831.7" y="165" width="0.2" height="15.0" fill="rgb(212,29,53)" rx="2" ry="2" />
<text  x="834.73" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (228,483 us., 2.24%)</title><rect x="513.8" y="197" width="26.5" height="15.0" fill="rgb(251,96,29)" rx="2" ry="2" />
<text  x="516.83" y="207.5" >n..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (5,639 us., 0.06%)</title><rect x="436.5" y="133" width="0.7" height="15.0" fill="rgb(234,188,49)" rx="2" ry="2" />
<text  x="439.55" y="143.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (638,880 us., 6.26%)</title><rect x="437.2" y="117" width="73.9" height="15.0" fill="rgb(211,15,16)" rx="2" ry="2" />
<text  x="440.20" y="127.5" >transfor..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (1,975,956 us., 19.37%)</title><rect x="961.4" y="133" width="228.5" height="15.0" fill="rgb(227,222,37)" rx="2" ry="2" />
<text  x="964.36" y="143.5" >nn.Module:_Int8OPTForCausalLM</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (143,008 us., 1.40%)</title><rect x="851.8" y="85" width="16.6" height="15.0" fill="rgb(217,153,47)" rx="2" ry="2" />
<text  x="854.82" y="95.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (638,880 us., 6.26%)</title><rect x="437.2" y="69" width="73.9" height="15.0" fill="rgb(254,132,29)" rx="2" ry="2" />
<text  x="440.20" y="79.5" >torch/au..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (1,752 us., 0.02%)</title><rect x="222.5" y="165" width="0.2" height="15.0" fill="rgb(253,7,49)" rx="2" ry="2" />
<text  x="225.50" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (634,689 us., 6.22%)</title><rect x="886.0" y="213" width="73.5" height="15.0" fill="rgb(224,91,4)" rx="2" ry="2" />
<text  x="889.04" y="223.5" >nn.Modul..</text>
</g>
<g >
<title>torch/nn/modules/sparse.py(157):_forward (11,280 us., 0.11%)</title><rect x="435.9" y="229" width="1.3" height="15.0" fill="rgb(248,213,23)" rx="2" ry="2" />
<text  x="438.89" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (12,696 us., 0.12%)</title><rect x="959.9" y="245" width="1.5" height="15.0" fill="rgb(246,146,46)" rx="2" ry="2" />
<text  x="962.89" y="255.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (1,975,956 us., 19.37%)</title><rect x="961.4" y="181" width="228.5" height="15.0" fill="rgb(223,144,16)" rx="2" ry="2" />
<text  x="964.36" y="191.5" >torch_int/nn/opt.py(321):_forw..</text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (634,689 us., 6.22%)</title><rect x="886.0" y="245" width="73.5" height="15.0" fill="rgb(241,50,33)" rx="2" ry="2" />
<text  x="889.04" y="255.5" >torch_in..</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (8,162 us., 0.08%)</title><rect x="511.1" y="229" width="0.9" height="15.0" fill="rgb(229,194,17)" rx="2" ry="2" />
<text  x="514.10" y="239.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (8,162 us., 0.08%)</title><rect x="511.1" y="165" width="0.9" height="15.0" fill="rgb(244,92,38)" rx="2" ry="2" />
<text  x="514.10" y="175.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,842,999 us., 18.07%)</title><rect x="222.7" y="133" width="213.2" height="15.0" fill="rgb(246,24,3)" rx="2" ry="2" />
<text  x="225.70" y="143.5" >transformers/models/opt/mode..</text>
</g>
<g >
<title>&lt;built-in_method_linear_a8_w8_b8_o8_of_PyCapsule_object_at_0x7f07727bdf00&gt; (143,008 us., 1.40%)</title><rect x="851.8" y="261" width="16.6" height="15.0" fill="rgb(230,217,20)" rx="2" ry="2" />
<text  x="854.82" y="271.5" ></text>
</g>
<g >
<title>nn.Module:_W8A8B8O8Linear (143,008 us., 1.40%)</title><rect x="851.8" y="213" width="16.6" height="15.0" fill="rgb(226,112,0)" rx="2" ry="2" />
<text  x="854.82" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (1,784 us., 0.02%)</title><rect x="831.7" y="197" width="0.2" height="15.0" fill="rgb(253,152,34)" rx="2" ry="2" />
<text  x="834.73" y="207.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (12,696 us., 0.12%)</title><rect x="959.9" y="197" width="1.5" height="15.0" fill="rgb(227,54,31)" rx="2" ry="2" />
<text  x="962.89" y="207.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (143,008 us., 1.40%)</title><rect x="851.8" y="229" width="16.6" height="15.0" fill="rgb(218,82,39)" rx="2" ry="2" />
<text  x="854.82" y="239.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (1,752 us., 0.02%)</title><rect x="222.5" y="245" width="0.2" height="15.0" fill="rgb(238,35,36)" rx="2" ry="2" />
<text  x="225.50" y="255.5" ></text>
</g>
<g >
<title>&lt;built-in_method_max_of_type_object_at_0x7f086732a9c0&gt; (634,689 us., 6.22%)</title><rect x="886.0" y="261" width="73.5" height="15.0" fill="rgb(223,168,32)" rx="2" ry="2" />
<text  x="889.04" y="271.5" >&lt;built-i..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (5,639 us., 0.06%)</title><rect x="436.5" y="149" width="0.7" height="15.0" fill="rgb(243,197,26)" rx="2" ry="2" />
<text  x="439.55" y="159.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (2,499 us., 0.02%)</title><rect x="959.5" y="245" width="0.3" height="15.0" fill="rgb(252,209,20)" rx="2" ry="2" />
<text  x="962.52" y="255.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (7,462 us., 0.07%)</title><rect x="831.9" y="117" width="0.9" height="15.0" fill="rgb(213,62,34)" rx="2" ry="2" />
<text  x="834.93" y="127.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (1,975,956 us., 19.37%)</title><rect x="961.4" y="197" width="228.5" height="15.0" fill="rgb(253,182,0)" rx="2" ry="2" />
<text  x="964.36" y="207.5" >nn.Module:_Int8OPTDecoderLayer</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (5,639 us., 0.06%)</title><rect x="436.5" y="165" width="0.7" height="15.0" fill="rgb(241,44,29)" rx="2" ry="2" />
<text  x="439.55" y="175.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (634,689 us., 6.22%)</title><rect x="886.0" y="85" width="73.5" height="15.0" fill="rgb(221,143,51)" rx="2" ry="2" />
<text  x="889.04" y="95.5" >torch/au..</text>
</g>
<g >
<title>torch_int/nn/opt.py(300):__prepare_decoder_attention_mask (8,162 us., 0.08%)</title><rect x="511.1" y="245" width="0.9" height="15.0" fill="rgb(232,170,33)" rx="2" ry="2" />
<text  x="514.10" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (638,880 us., 6.26%)</title><rect x="437.2" y="165" width="73.9" height="15.0" fill="rgb(224,32,15)" rx="2" ry="2" />
<text  x="440.20" y="175.5" >nn.Modul..</text>
</g>
<g >
<title>nn.Module:_Linear (1,829,354 us., 17.93%)</title><rect x="10.0" y="229" width="211.6" height="15.0" fill="rgb(253,228,49)" rx="2" ry="2" />
<text  x="13.00" y="239.5" >nn.Module:_Linear</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (1,829,354 us., 17.93%)</title><rect x="10.0" y="197" width="211.6" height="15.0" fill="rgb(242,128,50)" rx="2" ry="2" />
<text  x="13.00" y="207.5" >nn.Module:_Int8OPTForCausalLM</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (7,462 us., 0.07%)</title><rect x="831.9" y="133" width="0.9" height="15.0" fill="rgb(230,31,45)" rx="2" ry="2" />
<text  x="834.93" y="143.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,784 us., 0.02%)</title><rect x="831.7" y="181" width="0.2" height="15.0" fill="rgb(229,113,54)" rx="2" ry="2" />
<text  x="834.73" y="191.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (1,842,999 us., 18.07%)</title><rect x="222.7" y="165" width="213.2" height="15.0" fill="rgb(225,138,0)" rx="2" ry="2" />
<text  x="225.70" y="175.5" >torch_int/nn/opt.py(321):_fo..</text>
</g>
<g >
<title>&lt;built-in_method_encode_of_str_object_at_0x7f0772e20450&gt; (3,412,357 us., 33.45%)</title><rect x="437.2" y="261" width="394.7" height="15.0" fill="rgb(235,65,42)" rx="2" ry="2" />
<text  x="440.20" y="271.5" >&lt;built-in_method_encode_of_str_object_at_0x7f0772e204..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (228,483 us., 2.24%)</title><rect x="513.8" y="69" width="26.5" height="15.0" fill="rgb(229,98,29)" rx="2" ry="2" />
<text  x="516.83" y="79.5" >t..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (638,880 us., 6.26%)</title><rect x="437.2" y="213" width="73.9" height="15.0" fill="rgb(215,83,11)" rx="2" ry="2" />
<text  x="440.20" y="223.5" >torch/au..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,829,354 us., 17.93%)</title><rect x="10.0" y="181" width="211.6" height="15.0" fill="rgb(238,93,41)" rx="2" ry="2" />
<text  x="13.00" y="191.5" >profiling/utils.py(18):_pro..</text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (228,483 us., 2.24%)</title><rect x="513.8" y="181" width="26.5" height="15.0" fill="rgb(241,80,54)" rx="2" ry="2" />
<text  x="516.83" y="191.5" >t..</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (12,696 us., 0.12%)</title><rect x="959.9" y="261" width="1.5" height="15.0" fill="rgb(254,132,54)" rx="2" ry="2" />
<text  x="962.89" y="271.5" ></text>
</g>
<g >
<title>torch/nn/modules/normalization.py(188):_forward (7,462 us., 0.07%)</title><rect x="831.9" y="229" width="0.9" height="15.0" fill="rgb(254,138,7)" rx="2" ry="2" />
<text  x="834.93" y="239.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(300):__prepare_decoder_attention_mask (1,784 us., 0.02%)</title><rect x="831.7" y="229" width="0.2" height="15.0" fill="rgb(237,171,11)" rx="2" ry="2" />
<text  x="834.73" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (84,591 us., 0.83%)</title><rect x="842.0" y="133" width="9.8" height="15.0" fill="rgb(215,166,7)" rx="2" ry="2" />
<text  x="845.04" y="143.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,784 us., 0.02%)</title><rect x="831.7" y="149" width="0.2" height="15.0" fill="rgb(229,154,38)" rx="2" ry="2" />
<text  x="834.73" y="159.5" ></text>
</g>
<g >
<title>&lt;built-in_method_add_of_type_object_at_0x7f086732a9c0&gt; (7,604 us., 0.07%)</title><rect x="221.6" y="261" width="0.9" height="15.0" fill="rgb(210,119,32)" rx="2" ry="2" />
<text  x="224.62" y="271.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (152,777 us., 1.50%)</title><rect x="868.4" y="149" width="17.6" height="15.0" fill="rgb(241,191,10)" rx="2" ry="2" />
<text  x="871.37" y="159.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (2,499 us., 0.02%)</title><rect x="959.5" y="213" width="0.3" height="15.0" fill="rgb(226,18,15)" rx="2" ry="2" />
<text  x="962.52" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (15,423 us., 0.15%)</title><rect x="512.0" y="229" width="1.8" height="15.0" fill="rgb(241,184,1)" rx="2" ry="2" />
<text  x="515.05" y="239.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,975,956 us., 19.37%)</title><rect x="961.4" y="101" width="228.5" height="15.0" fill="rgb(251,137,16)" rx="2" ry="2" />
<text  x="964.36" y="111.5" >torch/autograd/grad_mode.py(27..</text>
</g>
<g >
<title>torch/nn/modules/linear.py(113):_forward (1,829,354 us., 17.93%)</title><rect x="10.0" y="245" width="211.6" height="15.0" fill="rgb(229,124,44)" rx="2" ry="2" />
<text  x="13.00" y="255.5" >torch/nn/modules/linear.py(..</text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (1,842,999 us., 18.07%)</title><rect x="222.7" y="197" width="213.2" height="15.0" fill="rgb(230,36,17)" rx="2" ry="2" />
<text  x="225.70" y="207.5" >torch_int/nn/opt.py(183):_fo..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,975,956 us., 19.37%)</title><rect x="961.4" y="117" width="228.5" height="15.0" fill="rgb(214,131,38)" rx="2" ry="2" />
<text  x="964.36" y="127.5" >profiling/utils.py(18):_profil..</text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (84,591 us., 0.83%)</title><rect x="842.0" y="149" width="9.8" height="15.0" fill="rgb(212,42,34)" rx="2" ry="2" />
<text  x="845.04" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (2,519,285 us., 24.70%)</title><rect x="540.3" y="117" width="291.4" height="15.0" fill="rgb(221,200,46)" rx="2" ry="2" />
<text  x="543.26" y="127.5" >nn.Module:_Int8OPTForCausalLM</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (1,842,999 us., 18.07%)</title><rect x="222.7" y="181" width="213.2" height="15.0" fill="rgb(245,44,0)" rx="2" ry="2" />
<text  x="225.70" y="191.5" >nn.Module:_Int8OPTDecoderLayer</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (152,777 us., 1.50%)</title><rect x="868.4" y="229" width="17.6" height="15.0" fill="rgb(208,134,6)" rx="2" ry="2" />
<text  x="871.37" y="239.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (5,641 us., 0.06%)</title><rect x="435.9" y="197" width="0.6" height="15.0" fill="rgb(245,147,39)" rx="2" ry="2" />
<text  x="438.89" y="207.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (1,975,956 us., 19.37%)</title><rect x="961.4" y="213" width="228.5" height="15.0" fill="rgb(253,35,46)" rx="2" ry="2" />
<text  x="964.36" y="223.5" >torch_int/nn/opt.py(183):_forw..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (1,752 us., 0.02%)</title><rect x="222.5" y="197" width="0.2" height="15.0" fill="rgb(211,226,54)" rx="2" ry="2" />
<text  x="225.50" y="207.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (84,591 us., 0.83%)</title><rect x="842.0" y="53" width="9.8" height="15.0" fill="rgb(222,95,32)" rx="2" ry="2" />
<text  x="845.04" y="63.5" ></text>
</g>
<g >
<title>nn.Module:_W8A8B8O8LinearReLU (152,777 us., 1.50%)</title><rect x="868.4" y="213" width="17.6" height="15.0" fill="rgb(245,181,12)" rx="2" ry="2" />
<text  x="871.37" y="223.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (15,423 us., 0.15%)</title><rect x="512.0" y="245" width="1.8" height="15.0" fill="rgb(215,191,11)" rx="2" ry="2" />
<text  x="515.05" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (5,641 us., 0.06%)</title><rect x="435.9" y="149" width="0.6" height="15.0" fill="rgb(211,217,52)" rx="2" ry="2" />
<text  x="438.89" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (79,876 us., 0.78%)</title><rect x="832.8" y="149" width="9.2" height="15.0" fill="rgb(229,5,5)" rx="2" ry="2" />
<text  x="835.80" y="159.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (84,591 us., 0.83%)</title><rect x="842.0" y="117" width="9.8" height="15.0" fill="rgb(250,139,52)" rx="2" ry="2" />
<text  x="845.04" y="127.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (634,689 us., 6.22%)</title><rect x="886.0" y="181" width="73.5" height="15.0" fill="rgb(250,113,20)" rx="2" ry="2" />
<text  x="889.04" y="191.5" >nn.Modul..</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (143,008 us., 1.40%)</title><rect x="851.8" y="117" width="16.6" height="15.0" fill="rgb(242,135,32)" rx="2" ry="2" />
<text  x="854.82" y="127.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (1,975,956 us., 19.37%)</title><rect x="961.4" y="245" width="228.5" height="15.0" fill="rgb(234,1,28)" rx="2" ry="2" />
<text  x="964.36" y="255.5" >torch/autograd/grad_mode.py(24..</text>
</g>
<g >
<title>nn.Module:_DQ_Add_LayerNorm_Q (1,842,999 us., 18.07%)</title><rect x="222.7" y="213" width="213.2" height="15.0" fill="rgb(244,153,4)" rx="2" ry="2" />
<text  x="225.70" y="223.5" >nn.Module:_DQ_Add_LayerNorm_Q</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (143,008 us., 1.40%)</title><rect x="851.8" y="181" width="16.6" height="15.0" fill="rgb(252,6,49)" rx="2" ry="2" />
<text  x="854.82" y="191.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (2,499 us., 0.02%)</title><rect x="959.5" y="165" width="0.3" height="15.0" fill="rgb(243,229,38)" rx="2" ry="2" />
<text  x="962.52" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_LayerNorm (7,462 us., 0.07%)</title><rect x="831.9" y="213" width="0.9" height="15.0" fill="rgb(235,131,35)" rx="2" ry="2" />
<text  x="834.93" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (8,162 us., 0.08%)</title><rect x="511.1" y="213" width="0.9" height="15.0" fill="rgb(254,211,0)" rx="2" ry="2" />
<text  x="514.10" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (7,462 us., 0.07%)</title><rect x="831.9" y="181" width="0.9" height="15.0" fill="rgb(205,203,40)" rx="2" ry="2" />
<text  x="834.93" y="191.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (2,519,285 us., 24.70%)</title><rect x="540.3" y="165" width="291.4" height="15.0" fill="rgb(240,18,16)" rx="2" ry="2" />
<text  x="543.26" y="175.5" >torch_int/nn/opt.py(321):_forward</text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (228,483 us., 2.24%)</title><rect x="513.8" y="229" width="26.5" height="15.0" fill="rgb(231,163,37)" rx="2" ry="2" />
<text  x="516.83" y="239.5" >t..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (5,639 us., 0.06%)</title><rect x="436.5" y="117" width="0.7" height="15.0" fill="rgb(226,166,48)" rx="2" ry="2" />
<text  x="439.55" y="127.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,842,999 us., 18.07%)</title><rect x="222.7" y="101" width="213.2" height="15.0" fill="rgb(215,8,11)" rx="2" ry="2" />
<text  x="225.70" y="111.5" >profiling/utils.py(18):_prof..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (2,519,285 us., 24.70%)</title><rect x="540.3" y="181" width="291.4" height="15.0" fill="rgb(232,195,9)" rx="2" ry="2" />
<text  x="543.26" y="191.5" >nn.Module:_Int8OPTDecoderLayer</text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (638,880 us., 6.26%)</title><rect x="437.2" y="181" width="73.9" height="15.0" fill="rgb(217,20,12)" rx="2" ry="2" />
<text  x="440.20" y="191.5" >torch_in..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (84,591 us., 0.83%)</title><rect x="842.0" y="101" width="9.8" height="15.0" fill="rgb(235,76,54)" rx="2" ry="2" />
<text  x="845.04" y="111.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (1,784 us., 0.02%)</title><rect x="831.7" y="213" width="0.2" height="15.0" fill="rgb(210,81,28)" rx="2" ry="2" />
<text  x="834.73" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (84,591 us., 0.83%)</title><rect x="842.0" y="69" width="9.8" height="15.0" fill="rgb(249,48,41)" rx="2" ry="2" />
<text  x="845.04" y="79.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (15,423 us., 0.15%)</title><rect x="512.0" y="197" width="1.8" height="15.0" fill="rgb(224,192,12)" rx="2" ry="2" />
<text  x="515.05" y="207.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (634,689 us., 6.22%)</title><rect x="886.0" y="197" width="73.5" height="15.0" fill="rgb(205,34,4)" rx="2" ry="2" />
<text  x="889.04" y="207.5" >torch_in..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,752 us., 0.02%)</title><rect x="222.5" y="149" width="0.2" height="15.0" fill="rgb(210,50,45)" rx="2" ry="2" />
<text  x="225.50" y="159.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (1,975,956 us., 19.37%)</title><rect x="961.4" y="261" width="228.5" height="15.0" fill="rgb(233,138,19)" rx="2" ry="2" />
<text  x="964.36" y="271.5" >torch_int/nn/opt.py(46):_forward</text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (2,519,285 us., 24.70%)</title><rect x="540.3" y="213" width="291.4" height="15.0" fill="rgb(232,173,51)" rx="2" ry="2" />
<text  x="543.26" y="223.5" >nn.Module:_Int8OPTAttention</text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (152,777 us., 1.50%)</title><rect x="868.4" y="197" width="17.6" height="15.0" fill="rgb(223,65,0)" rx="2" ry="2" />
<text  x="871.37" y="207.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (152,777 us., 1.50%)</title><rect x="868.4" y="85" width="17.6" height="15.0" fill="rgb(244,194,38)" rx="2" ry="2" />
<text  x="871.37" y="95.5" ></text>
</g>
<g >
<title>torch_int/nn/fused.py(13):_forward (1,842,999 us., 18.07%)</title><rect x="222.7" y="229" width="213.2" height="15.0" fill="rgb(211,171,39)" rx="2" ry="2" />
<text  x="225.70" y="239.5" >torch_int/nn/fused.py(13):_f..</text>
</g>
<g >
<title>nn.Module:_W8A8B32O32LinearWithScaling (164,467 us., 1.61%)</title><rect x="832.8" y="213" width="19.0" height="15.0" fill="rgb(240,102,10)" rx="2" ry="2" />
<text  x="835.80" y="223.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(43):__shape (228,483 us., 2.24%)</title><rect x="513.8" y="245" width="26.5" height="15.0" fill="rgb(230,15,52)" rx="2" ry="2" />
<text  x="516.83" y="255.5" >t..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (1,842,999 us., 18.07%)</title><rect x="222.7" y="149" width="213.2" height="15.0" fill="rgb(222,26,31)" rx="2" ry="2" />
<text  x="225.70" y="159.5" >nn.Module:_Int8OPTDecoder</text>
</g>
<g >
<title>nn.Module:_Embedding (5,641 us., 0.06%)</title><rect x="435.9" y="213" width="0.6" height="15.0" fill="rgb(252,98,15)" rx="2" ry="2" />
<text  x="438.89" y="223.5" ></text>
</g>
<g >
<title>torch/nn/functional.py(2099):_embedding (11,280 us., 0.11%)</title><rect x="435.9" y="245" width="1.3" height="15.0" fill="rgb(239,52,44)" rx="2" ry="2" />
<text  x="438.89" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (634,689 us., 6.22%)</title><rect x="886.0" y="117" width="73.5" height="15.0" fill="rgb(238,101,44)" rx="2" ry="2" />
<text  x="889.04" y="127.5" >nn.Modul..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (7,604 us., 0.07%)</title><rect x="221.6" y="213" width="0.9" height="15.0" fill="rgb(232,97,1)" rx="2" ry="2" />
<text  x="224.62" y="223.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (12,696 us., 0.12%)</title><rect x="959.9" y="181" width="1.5" height="15.0" fill="rgb(238,109,1)" rx="2" ry="2" />
<text  x="962.89" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (1,752 us., 0.02%)</title><rect x="222.5" y="229" width="0.2" height="15.0" fill="rgb(208,125,10)" rx="2" ry="2" />
<text  x="225.50" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (79,876 us., 0.78%)</title><rect x="832.8" y="117" width="9.2" height="15.0" fill="rgb(213,229,25)" rx="2" ry="2" />
<text  x="835.80" y="127.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (143,008 us., 1.40%)</title><rect x="851.8" y="101" width="16.6" height="15.0" fill="rgb(248,107,34)" rx="2" ry="2" />
<text  x="854.82" y="111.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (143,008 us., 1.40%)</title><rect x="851.8" y="37" width="16.6" height="15.0" fill="rgb(234,159,14)" rx="2" ry="2" />
<text  x="854.82" y="47.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (84,591 us., 0.83%)</title><rect x="842.0" y="181" width="9.8" height="15.0" fill="rgb(250,47,36)" rx="2" ry="2" />
<text  x="845.04" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (228,483 us., 2.24%)</title><rect x="513.8" y="165" width="26.5" height="15.0" fill="rgb(243,23,35)" rx="2" ry="2" />
<text  x="516.83" y="175.5" >n..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (7,604 us., 0.07%)</title><rect x="221.6" y="229" width="0.9" height="15.0" fill="rgb(232,162,31)" rx="2" ry="2" />
<text  x="224.62" y="239.5" ></text>
</g>
<g >
<title>torch_int/nn/linear.py(122):_forward (152,777 us., 1.50%)</title><rect x="868.4" y="245" width="17.6" height="15.0" fill="rgb(229,48,49)" rx="2" ry="2" />
<text  x="871.37" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (12,696 us., 0.12%)</title><rect x="959.9" y="213" width="1.5" height="15.0" fill="rgb(227,193,11)" rx="2" ry="2" />
<text  x="962.89" y="223.5" ></text>
</g>
<g >
<title>torch_int/functional/fused.py(24):_dq_add_layernorm_q_cpp (1,842,999 us., 18.07%)</title><rect x="222.7" y="245" width="213.2" height="15.0" fill="rgb(219,68,51)" rx="2" ry="2" />
<text  x="225.70" y="255.5" >torch_int/functional/fused.p..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (638,880 us., 6.26%)</title><rect x="437.2" y="133" width="73.9" height="15.0" fill="rgb(250,117,36)" rx="2" ry="2" />
<text  x="440.20" y="143.5" >nn.Modul..</text>
</g>
<g >
<title>torch/nn/functional.py(1804):_softmax (638,880 us., 6.26%)</title><rect x="437.2" y="245" width="73.9" height="15.0" fill="rgb(240,95,54)" rx="2" ry="2" />
<text  x="440.20" y="255.5" >torch/nn..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (15,423 us., 0.15%)</title><rect x="512.0" y="213" width="1.8" height="15.0" fill="rgb(213,36,42)" rx="2" ry="2" />
<text  x="515.05" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (143,008 us., 1.40%)</title><rect x="851.8" y="69" width="16.6" height="15.0" fill="rgb(224,220,35)" rx="2" ry="2" />
<text  x="854.82" y="79.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (143,008 us., 1.40%)</title><rect x="851.8" y="53" width="16.6" height="15.0" fill="rgb(252,7,52)" rx="2" ry="2" />
<text  x="854.82" y="63.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,784 us., 0.02%)</title><rect x="831.7" y="133" width="0.2" height="15.0" fill="rgb(225,65,15)" rx="2" ry="2" />
<text  x="834.73" y="143.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (8,162 us., 0.08%)</title><rect x="511.1" y="197" width="0.9" height="15.0" fill="rgb(222,21,46)" rx="2" ry="2" />
<text  x="514.10" y="207.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (2,519,285 us., 24.70%)</title><rect x="540.3" y="229" width="291.4" height="15.0" fill="rgb(218,85,50)" rx="2" ry="2" />
<text  x="543.26" y="239.5" >torch/autograd/grad_mode.py(24):_decora..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (84,591 us., 0.83%)</title><rect x="842.0" y="37" width="9.8" height="15.0" fill="rgb(235,133,52)" rx="2" ry="2" />
<text  x="845.04" y="47.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (79,876 us., 0.78%)</title><rect x="832.8" y="181" width="9.2" height="15.0" fill="rgb(210,152,31)" rx="2" ry="2" />
<text  x="835.80" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (228,483 us., 2.24%)</title><rect x="513.8" y="101" width="26.5" height="15.0" fill="rgb(240,179,20)" rx="2" ry="2" />
<text  x="516.83" y="111.5" >n..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,752 us., 0.02%)</title><rect x="222.5" y="181" width="0.2" height="15.0" fill="rgb(253,87,50)" rx="2" ry="2" />
<text  x="225.50" y="191.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,975,956 us., 19.37%)</title><rect x="961.4" y="149" width="228.5" height="15.0" fill="rgb(220,97,13)" rx="2" ry="2" />
<text  x="964.36" y="159.5" >transformers/models/opt/modeli..</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (79,876 us., 0.78%)</title><rect x="832.8" y="165" width="9.2" height="15.0" fill="rgb(212,77,49)" rx="2" ry="2" />
<text  x="835.80" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (2,499 us., 0.02%)</title><rect x="959.5" y="229" width="0.3" height="15.0" fill="rgb(207,78,18)" rx="2" ry="2" />
<text  x="962.52" y="239.5" ></text>
</g>
<g >
<title>torch_int/nn/linear.py(62):_forward (164,467 us., 1.61%)</title><rect x="832.8" y="245" width="19.0" height="15.0" fill="rgb(245,83,51)" rx="2" ry="2" />
<text  x="835.80" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (2,499 us., 0.02%)</title><rect x="959.5" y="197" width="0.3" height="15.0" fill="rgb(242,129,40)" rx="2" ry="2" />
<text  x="962.52" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (152,777 us., 1.50%)</title><rect x="868.4" y="181" width="17.6" height="15.0" fill="rgb(212,115,40)" rx="2" ry="2" />
<text  x="871.37" y="191.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (79,876 us., 0.78%)</title><rect x="832.8" y="85" width="9.2" height="15.0" fill="rgb(224,11,9)" rx="2" ry="2" />
<text  x="835.80" y="95.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (638,880 us., 6.26%)</title><rect x="437.2" y="149" width="73.9" height="15.0" fill="rgb(205,197,9)" rx="2" ry="2" />
<text  x="440.20" y="159.5" >torch_in..</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (152,777 us., 1.50%)</title><rect x="868.4" y="165" width="17.6" height="15.0" fill="rgb(240,44,46)" rx="2" ry="2" />
<text  x="871.37" y="175.5" ></text>
</g>
<g >
<title>torch/nn/functional.py(2488):_layer_norm (7,462 us., 0.07%)</title><rect x="831.9" y="245" width="0.9" height="15.0" fill="rgb(234,151,33)" rx="2" ry="2" />
<text  x="834.93" y="255.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (638,880 us., 6.26%)</title><rect x="437.2" y="85" width="73.9" height="15.0" fill="rgb(208,203,22)" rx="2" ry="2" />
<text  x="440.20" y="95.5" >profilin..</text>
</g>
</g>
</svg>
