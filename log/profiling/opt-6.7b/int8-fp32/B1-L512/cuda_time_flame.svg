<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="326" onload="init(evt)" viewBox="0 0 1200 326" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="326.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >CUDA Time</text>
<text id="details" x="10.00" y="309" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="309" > </text>
<g id="frames">
<g >
<title>torch_int/nn/opt.py(321):_forward (856,061 us., 17.00%)</title><rect x="215.0" y="165" width="200.5" height="15.0" fill="rgb(227,40,40)" rx="2" ry="2" />
<text  x="217.98" y="175.5" >torch_int/nn/opt.py(321):_..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (44,814 us., 0.89%)</title><rect x="819.8" y="149" width="10.5" height="15.0" fill="rgb(219,197,43)" rx="2" ry="2" />
<text  x="822.83" y="159.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (322,523 us., 6.40%)</title><rect x="416.9" y="69" width="75.6" height="15.0" fill="rgb(237,205,16)" rx="2" ry="2" />
<text  x="419.90" y="79.5" >torch/au..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (44,767 us., 0.89%)</title><rect x="830.3" y="53" width="10.5" height="15.0" fill="rgb(205,155,18)" rx="2" ry="2" />
<text  x="833.33" y="63.5" ></text>
</g>
<g >
<title>nn.Module:_W8A8B8O8LinearReLU (77,089 us., 1.53%)</title><rect x="860.4" y="213" width="18.0" height="15.0" fill="rgb(250,90,15)" rx="2" ry="2" />
<text  x="863.37" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (4,069 us., 0.08%)</title><rect x="492.5" y="181" width="0.9" height="15.0" fill="rgb(250,168,28)" rx="2" ry="2" />
<text  x="495.46" y="191.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (2,842 us., 0.06%)</title><rect x="416.2" y="101" width="0.7" height="15.0" fill="rgb(252,206,8)" rx="2" ry="2" />
<text  x="419.23" y="111.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (1,000,131 us., 19.86%)</title><rect x="955.6" y="261" width="234.3" height="15.0" fill="rgb(230,22,19)" rx="2" ry="2" />
<text  x="958.55" y="271.5" >torch_int/nn/opt.py(46):_forward</text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (83,449 us., 1.66%)</title><rect x="840.8" y="165" width="19.6" height="15.0" fill="rgb(217,171,11)" rx="2" ry="2" />
<text  x="843.82" y="175.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (44,814 us., 0.89%)</title><rect x="819.8" y="85" width="10.5" height="15.0" fill="rgb(209,40,25)" rx="2" ry="2" />
<text  x="822.83" y="95.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (77,089 us., 1.53%)</title><rect x="860.4" y="165" width="18.0" height="15.0" fill="rgb(249,131,42)" rx="2" ry="2" />
<text  x="863.37" y="175.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (44,767 us., 0.89%)</title><rect x="830.3" y="197" width="10.5" height="15.0" fill="rgb(210,142,4)" rx="2" ry="2" />
<text  x="833.33" y="207.5" ></text>
</g>
<g >
<title>torch_int/nn/linear.py(62):_forward (89,581 us., 1.78%)</title><rect x="819.8" y="245" width="21.0" height="15.0" fill="rgb(221,110,41)" rx="2" ry="2" />
<text  x="822.83" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (322,523 us., 6.40%)</title><rect x="416.9" y="197" width="75.6" height="15.0" fill="rgb(221,103,47)" rx="2" ry="2" />
<text  x="419.90" y="207.5" >nn.Modul..</text>
</g>
<g >
<title>nn.Module:_DQ_Add_LayerNorm_Q (856,061 us., 17.00%)</title><rect x="215.0" y="213" width="200.5" height="15.0" fill="rgb(215,186,51)" rx="2" ry="2" />
<text  x="217.98" y="223.5" >nn.Module:_DQ_Add_LayerNor..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (83,449 us., 1.66%)</title><rect x="840.8" y="37" width="19.6" height="15.0" fill="rgb(223,169,27)" rx="2" ry="2" />
<text  x="843.82" y="47.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (6,473 us., 0.13%)</title><rect x="954.0" y="245" width="1.6" height="15.0" fill="rgb(238,38,36)" rx="2" ry="2" />
<text  x="957.04" y="255.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (4,069 us., 0.08%)</title><rect x="492.5" y="165" width="0.9" height="15.0" fill="rgb(207,4,8)" rx="2" ry="2" />
<text  x="495.46" y="175.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (2,842 us., 0.06%)</title><rect x="416.2" y="149" width="0.7" height="15.0" fill="rgb(228,4,7)" rx="2" ry="2" />
<text  x="419.23" y="159.5" ></text>
</g>
<g >
<title>torch_int/nn/fused.py(13):_forward (856,061 us., 17.00%)</title><rect x="215.0" y="229" width="200.5" height="15.0" fill="rgb(240,145,36)" rx="2" ry="2" />
<text  x="217.98" y="239.5" >torch_int/nn/fused.py(13):..</text>
</g>
<g >
<title>&lt;built-in_method_layer_norm_of_type_object_at_0x7f2f1b4979c0&gt; (3,218 us., 0.06%)</title><rect x="819.1" y="261" width="0.7" height="15.0" fill="rgb(239,57,50)" rx="2" ry="2" />
<text  x="822.08" y="271.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (320,653 us., 6.37%)</title><rect x="878.4" y="85" width="75.1" height="15.0" fill="rgb(221,41,41)" rx="2" ry="2" />
<text  x="881.43" y="95.5" >torch/au..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (1,000,131 us., 19.86%)</title><rect x="955.6" y="165" width="234.3" height="15.0" fill="rgb(207,119,6)" rx="2" ry="2" />
<text  x="958.55" y="175.5" >nn.Module:_Int8OPTDecoder</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (83,449 us., 1.66%)</title><rect x="840.8" y="181" width="19.6" height="15.0" fill="rgb(237,132,9)" rx="2" ry="2" />
<text  x="843.82" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_W8A8B32O32LinearWithScaling (89,581 us., 1.78%)</title><rect x="819.8" y="213" width="21.0" height="15.0" fill="rgb(239,134,6)" rx="2" ry="2" />
<text  x="822.83" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (597 us., 0.01%)</title><rect x="1189.9" y="213" width="0.1" height="15.0" fill="rgb(234,152,11)" rx="2" ry="2" />
<text  x="1192.86" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (44,814 us., 0.89%)</title><rect x="819.8" y="117" width="10.5" height="15.0" fill="rgb(241,103,4)" rx="2" ry="2" />
<text  x="822.83" y="127.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (1,210 us., 0.02%)</title><rect x="818.8" y="197" width="0.3" height="15.0" fill="rgb(222,160,50)" rx="2" ry="2" />
<text  x="821.79" y="207.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (3,764 us., 0.07%)</title><rect x="214.0" y="245" width="0.9" height="15.0" fill="rgb(213,132,3)" rx="2" ry="2" />
<text  x="217.02" y="255.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (1,297 us., 0.03%)</title><rect x="953.6" y="245" width="0.3" height="15.0" fill="rgb(220,98,51)" rx="2" ry="2" />
<text  x="956.64" y="255.5" ></text>
</g>
<g >
<title>torch/nn/modules/linear.py(113):_forward (870,870 us., 17.29%)</title><rect x="10.0" y="245" width="204.0" height="15.0" fill="rgb(244,174,27)" rx="2" ry="2" />
<text  x="13.00" y="255.5" >torch/nn/modules/linear.py..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (3,218 us., 0.06%)</title><rect x="819.1" y="133" width="0.7" height="15.0" fill="rgb(212,151,49)" rx="2" ry="2" />
<text  x="822.08" y="143.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,000,131 us., 19.86%)</title><rect x="955.6" y="101" width="234.3" height="15.0" fill="rgb(239,220,52)" rx="2" ry="2" />
<text  x="958.55" y="111.5" >torch/autograd/grad_mode.py(27)..</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (1,210 us., 0.02%)</title><rect x="818.8" y="213" width="0.3" height="15.0" fill="rgb(238,6,22)" rx="2" ry="2" />
<text  x="821.79" y="223.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (3,764 us., 0.07%)</title><rect x="214.0" y="165" width="0.9" height="15.0" fill="rgb(212,109,53)" rx="2" ry="2" />
<text  x="217.02" y="175.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (320,653 us., 6.37%)</title><rect x="878.4" y="133" width="75.1" height="15.0" fill="rgb(207,205,15)" rx="2" ry="2" />
<text  x="881.43" y="143.5" >transfor..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (3,218 us., 0.06%)</title><rect x="819.1" y="149" width="0.7" height="15.0" fill="rgb(218,186,40)" rx="2" ry="2" />
<text  x="822.08" y="159.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (44,767 us., 0.89%)</title><rect x="830.3" y="149" width="10.5" height="15.0" fill="rgb(235,7,26)" rx="2" ry="2" />
<text  x="833.33" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (320,653 us., 6.37%)</title><rect x="878.4" y="149" width="75.1" height="15.0" fill="rgb(247,150,19)" rx="2" ry="2" />
<text  x="881.43" y="159.5" >nn.Modul..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (320,653 us., 6.37%)</title><rect x="878.4" y="229" width="75.1" height="15.0" fill="rgb(246,85,23)" rx="2" ry="2" />
<text  x="881.43" y="239.5" >torch/au..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (322,523 us., 6.40%)</title><rect x="416.9" y="165" width="75.6" height="15.0" fill="rgb(230,121,54)" rx="2" ry="2" />
<text  x="419.90" y="175.5" >nn.Modul..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (77,089 us., 1.53%)</title><rect x="860.4" y="181" width="18.0" height="15.0" fill="rgb(242,228,44)" rx="2" ry="2" />
<text  x="863.37" y="191.5" ></text>
</g>
<g >
<title>&lt;built-in_method_dq_add_layernorm_q_of_PyCapsule_object_at_0x7f2e2692af30&gt; (856,061 us., 17.00%)</title><rect x="215.0" y="261" width="200.5" height="15.0" fill="rgb(219,110,2)" rx="2" ry="2" />
<text  x="217.98" y="271.5" >&lt;built-in_method_dq_add_la..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,279,690 us., 25.41%)</title><rect x="518.9" y="133" width="299.8" height="15.0" fill="rgb(227,61,4)" rx="2" ry="2" />
<text  x="521.92" y="143.5" >transformers/models/opt/modeling_opt.py(..</text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (77,089 us., 1.53%)</title><rect x="860.4" y="197" width="18.0" height="15.0" fill="rgb(214,23,0)" rx="2" ry="2" />
<text  x="863.37" y="207.5" ></text>
</g>
<g >
<title>torch_int/functional/fused.py(24):_dq_add_layernorm_q_cpp (856,061 us., 17.00%)</title><rect x="215.0" y="245" width="200.5" height="15.0" fill="rgb(246,202,33)" rx="2" ry="2" />
<text  x="217.98" y="255.5" >torch_int/functional/fused..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (77,089 us., 1.53%)</title><rect x="860.4" y="85" width="18.0" height="15.0" fill="rgb(210,212,28)" rx="2" ry="2" />
<text  x="863.37" y="95.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (856,061 us., 17.00%)</title><rect x="215.0" y="197" width="200.5" height="15.0" fill="rgb(248,81,46)" rx="2" ry="2" />
<text  x="217.98" y="207.5" >torch_int/nn/opt.py(183):_..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (322,523 us., 6.40%)</title><rect x="416.9" y="117" width="75.6" height="15.0" fill="rgb(219,101,27)" rx="2" ry="2" />
<text  x="419.90" y="127.5" >transfor..</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (100,804 us., 2.00%)</title><rect x="495.3" y="149" width="23.6" height="15.0" fill="rgb(231,158,50)" rx="2" ry="2" />
<text  x="498.31" y="159.5" >t..</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (83,449 us., 1.66%)</title><rect x="840.8" y="117" width="19.6" height="15.0" fill="rgb(241,46,26)" rx="2" ry="2" />
<text  x="843.82" y="127.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (1,279,690 us., 25.41%)</title><rect x="518.9" y="149" width="299.8" height="15.0" fill="rgb(246,71,26)" rx="2" ry="2" />
<text  x="521.92" y="159.5" >nn.Module:_Int8OPTDecoder</text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (83,449 us., 1.66%)</title><rect x="840.8" y="149" width="19.6" height="15.0" fill="rgb(228,111,46)" rx="2" ry="2" />
<text  x="843.82" y="159.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (6,473 us., 0.13%)</title><rect x="954.0" y="181" width="1.6" height="15.0" fill="rgb(241,152,12)" rx="2" ry="2" />
<text  x="957.04" y="191.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (597 us., 0.01%)</title><rect x="1189.9" y="197" width="0.1" height="15.0" fill="rgb(220,66,29)" rx="2" ry="2" />
<text  x="1192.86" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (856,061 us., 17.00%)</title><rect x="215.0" y="117" width="200.5" height="15.0" fill="rgb(253,191,40)" rx="2" ry="2" />
<text  x="217.98" y="127.5" >nn.Module:_Int8OPTForCausa..</text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (1,000,131 us., 19.86%)</title><rect x="955.6" y="213" width="234.3" height="15.0" fill="rgb(216,54,40)" rx="2" ry="2" />
<text  x="958.55" y="223.5" >torch_int/nn/opt.py(183):_forward</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (1,297 us., 0.03%)</title><rect x="953.6" y="197" width="0.3" height="15.0" fill="rgb(243,141,35)" rx="2" ry="2" />
<text  x="956.64" y="207.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,210 us., 0.02%)</title><rect x="818.8" y="133" width="0.3" height="15.0" fill="rgb(245,187,10)" rx="2" ry="2" />
<text  x="821.79" y="143.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,000,131 us., 19.86%)</title><rect x="955.6" y="149" width="234.3" height="15.0" fill="rgb(253,98,14)" rx="2" ry="2" />
<text  x="958.55" y="159.5" >transformers/models/opt/modelin..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (320,653 us., 6.37%)</title><rect x="878.4" y="181" width="75.1" height="15.0" fill="rgb(212,70,36)" rx="2" ry="2" />
<text  x="881.43" y="191.5" >nn.Modul..</text>
</g>
<g >
<title>torch_int/nn/opt.py(300):__prepare_decoder_attention_mask (4,069 us., 0.08%)</title><rect x="492.5" y="245" width="0.9" height="15.0" fill="rgb(250,86,0)" rx="2" ry="2" />
<text  x="495.46" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (44,814 us., 0.89%)</title><rect x="819.8" y="181" width="10.5" height="15.0" fill="rgb(222,147,4)" rx="2" ry="2" />
<text  x="822.83" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (2,987 us., 0.06%)</title><rect x="415.5" y="149" width="0.7" height="15.0" fill="rgb(254,60,28)" rx="2" ry="2" />
<text  x="418.53" y="159.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (320,653 us., 6.37%)</title><rect x="878.4" y="101" width="75.1" height="15.0" fill="rgb(222,119,36)" rx="2" ry="2" />
<text  x="881.43" y="111.5" >profilin..</text>
</g>
<g >
<title>all (5,036,818 us., 100%)</title><rect x="10.0" y="277" width="1180.0" height="15.0" fill="rgb(207,65,5)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (1,000,131 us., 19.86%)</title><rect x="955.6" y="229" width="234.3" height="15.0" fill="rgb(230,19,35)" rx="2" ry="2" />
<text  x="958.55" y="239.5" >nn.Module:_Int8OPTAttention</text>
</g>
<g >
<title>torch/nn/functional.py(2488):_layer_norm (3,218 us., 0.06%)</title><rect x="819.1" y="245" width="0.7" height="15.0" fill="rgb(253,30,47)" rx="2" ry="2" />
<text  x="822.08" y="255.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (3,764 us., 0.07%)</title><rect x="214.0" y="181" width="0.9" height="15.0" fill="rgb(222,202,22)" rx="2" ry="2" />
<text  x="217.02" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (83,449 us., 1.66%)</title><rect x="840.8" y="133" width="19.6" height="15.0" fill="rgb(214,207,31)" rx="2" ry="2" />
<text  x="843.82" y="143.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (8,102 us., 0.16%)</title><rect x="493.4" y="197" width="1.9" height="15.0" fill="rgb(247,173,50)" rx="2" ry="2" />
<text  x="496.41" y="207.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (100,804 us., 2.00%)</title><rect x="495.3" y="213" width="23.6" height="15.0" fill="rgb(231,204,34)" rx="2" ry="2" />
<text  x="498.31" y="223.5" >t..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (870,870 us., 17.29%)</title><rect x="10.0" y="181" width="204.0" height="15.0" fill="rgb(233,96,47)" rx="2" ry="2" />
<text  x="13.00" y="191.5" >profiling/utils.py(18):_pr..</text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (100,804 us., 2.00%)</title><rect x="495.3" y="197" width="23.6" height="15.0" fill="rgb(231,229,0)" rx="2" ry="2" />
<text  x="498.31" y="207.5" >n..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,297 us., 0.03%)</title><rect x="953.6" y="181" width="0.3" height="15.0" fill="rgb(215,27,19)" rx="2" ry="2" />
<text  x="956.64" y="191.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (4,069 us., 0.08%)</title><rect x="492.5" y="197" width="0.9" height="15.0" fill="rgb(234,124,25)" rx="2" ry="2" />
<text  x="495.46" y="207.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (1,000,131 us., 19.86%)</title><rect x="955.6" y="245" width="234.3" height="15.0" fill="rgb(211,46,44)" rx="2" ry="2" />
<text  x="958.55" y="255.5" >torch/autograd/grad_mode.py(24)..</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (8,102 us., 0.16%)</title><rect x="493.4" y="245" width="1.9" height="15.0" fill="rgb(209,7,45)" rx="2" ry="2" />
<text  x="496.41" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (44,767 us., 0.89%)</title><rect x="830.3" y="69" width="10.5" height="15.0" fill="rgb(248,27,8)" rx="2" ry="2" />
<text  x="833.33" y="79.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (44,767 us., 0.89%)</title><rect x="830.3" y="133" width="10.5" height="15.0" fill="rgb(214,93,30)" rx="2" ry="2" />
<text  x="833.33" y="143.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,297 us., 0.03%)</title><rect x="953.6" y="213" width="0.3" height="15.0" fill="rgb(252,97,27)" rx="2" ry="2" />
<text  x="956.64" y="223.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (322,523 us., 6.40%)</title><rect x="416.9" y="85" width="75.6" height="15.0" fill="rgb(225,137,9)" rx="2" ry="2" />
<text  x="419.90" y="95.5" >profilin..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,279,690 us., 25.41%)</title><rect x="518.9" y="101" width="299.8" height="15.0" fill="rgb(214,104,50)" rx="2" ry="2" />
<text  x="521.92" y="111.5" >profiling/utils.py(18):_profile_model</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (8,102 us., 0.16%)</title><rect x="493.4" y="213" width="1.9" height="15.0" fill="rgb(211,179,8)" rx="2" ry="2" />
<text  x="496.41" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (856,061 us., 17.00%)</title><rect x="215.0" y="149" width="200.5" height="15.0" fill="rgb(247,77,0)" rx="2" ry="2" />
<text  x="217.98" y="159.5" >nn.Module:_Int8OPTDecoder</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (2,987 us., 0.06%)</title><rect x="415.5" y="165" width="0.7" height="15.0" fill="rgb(222,44,23)" rx="2" ry="2" />
<text  x="418.53" y="175.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (44,767 us., 0.89%)</title><rect x="830.3" y="181" width="10.5" height="15.0" fill="rgb(248,115,35)" rx="2" ry="2" />
<text  x="833.33" y="191.5" ></text>
</g>
<g >
<title>&lt;built-in_method_embedding_of_type_object_at_0x7f2f1b4979c0&gt; (5,829 us., 0.12%)</title><rect x="415.5" y="261" width="1.4" height="15.0" fill="rgb(247,63,27)" rx="2" ry="2" />
<text  x="418.53" y="271.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (597 us., 0.01%)</title><rect x="1189.9" y="229" width="0.1" height="15.0" fill="rgb(207,176,45)" rx="2" ry="2" />
<text  x="1192.86" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (597 us., 0.01%)</title><rect x="1189.9" y="245" width="0.1" height="15.0" fill="rgb(208,207,37)" rx="2" ry="2" />
<text  x="1192.86" y="255.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (1,000,131 us., 19.86%)</title><rect x="955.6" y="181" width="234.3" height="15.0" fill="rgb(254,28,15)" rx="2" ry="2" />
<text  x="958.55" y="191.5" >torch_int/nn/opt.py(321):_forward</text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (320,653 us., 6.37%)</title><rect x="878.4" y="213" width="75.1" height="15.0" fill="rgb(205,104,20)" rx="2" ry="2" />
<text  x="881.43" y="223.5" >nn.Modul..</text>
</g>
<g >
<title>&lt;built-in_method_encode_of_str_object_at_0x7f2e26f8d450&gt; (1,716,701 us., 34.08%)</title><rect x="416.9" y="261" width="402.2" height="15.0" fill="rgb(231,111,47)" rx="2" ry="2" />
<text  x="419.90" y="271.5" >&lt;built-in_method_encode_of_str_object_at_0x7f2e26f8d450&gt;</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (856,061 us., 17.00%)</title><rect x="215.0" y="181" width="200.5" height="15.0" fill="rgb(217,57,9)" rx="2" ry="2" />
<text  x="217.98" y="191.5" >nn.Module:_Int8OPTDecoderL..</text>
</g>
<g >
<title>torch_int/nn/opt.py(300):__prepare_decoder_attention_mask (1,210 us., 0.02%)</title><rect x="818.8" y="229" width="0.3" height="15.0" fill="rgb(241,157,48)" rx="2" ry="2" />
<text  x="821.79" y="239.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (2,987 us., 0.06%)</title><rect x="415.5" y="133" width="0.7" height="15.0" fill="rgb(212,134,5)" rx="2" ry="2" />
<text  x="418.53" y="143.5" ></text>
</g>
<g >
<title>&lt;built-in_method_add_of_type_object_at_0x7f2f1b4979c0&gt; (3,764 us., 0.07%)</title><rect x="214.0" y="261" width="0.9" height="15.0" fill="rgb(240,57,12)" rx="2" ry="2" />
<text  x="217.02" y="271.5" ></text>
</g>
<g >
<title>&lt;built-in_method_zeros_like_of_type_object_at_0x7f2f1b4979c0&gt; (1,297 us., 0.03%)</title><rect x="953.6" y="261" width="0.3" height="15.0" fill="rgb(235,20,13)" rx="2" ry="2" />
<text  x="956.64" y="271.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (44,814 us., 0.89%)</title><rect x="819.8" y="197" width="10.5" height="15.0" fill="rgb(213,124,29)" rx="2" ry="2" />
<text  x="822.83" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (2,842 us., 0.06%)</title><rect x="416.2" y="165" width="0.7" height="15.0" fill="rgb(223,224,23)" rx="2" ry="2" />
<text  x="419.23" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (100,804 us., 2.00%)</title><rect x="495.3" y="165" width="23.6" height="15.0" fill="rgb(243,215,4)" rx="2" ry="2" />
<text  x="498.31" y="175.5" >n..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (870,870 us., 17.29%)</title><rect x="10.0" y="165" width="204.0" height="15.0" fill="rgb(231,200,13)" rx="2" ry="2" />
<text  x="13.00" y="175.5" >torch/autograd/grad_mode.p..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,210 us., 0.02%)</title><rect x="818.8" y="181" width="0.3" height="15.0" fill="rgb(221,175,48)" rx="2" ry="2" />
<text  x="821.79" y="191.5" ></text>
</g>
<g >
<title>torch_int/nn/linear.py(122):_forward (77,089 us., 1.53%)</title><rect x="860.4" y="245" width="18.0" height="15.0" fill="rgb(238,64,42)" rx="2" ry="2" />
<text  x="863.37" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (320,653 us., 6.37%)</title><rect x="878.4" y="117" width="75.1" height="15.0" fill="rgb(222,41,53)" rx="2" ry="2" />
<text  x="881.43" y="127.5" >nn.Modul..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (44,767 us., 0.89%)</title><rect x="830.3" y="37" width="10.5" height="15.0" fill="rgb(223,89,39)" rx="2" ry="2" />
<text  x="833.33" y="47.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (1,279,690 us., 25.41%)</title><rect x="518.9" y="117" width="299.8" height="15.0" fill="rgb(237,181,40)" rx="2" ry="2" />
<text  x="521.92" y="127.5" >nn.Module:_Int8OPTForCausalLM</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (6,473 us., 0.13%)</title><rect x="954.0" y="229" width="1.6" height="15.0" fill="rgb(228,224,18)" rx="2" ry="2" />
<text  x="957.04" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (1,297 us., 0.03%)</title><rect x="953.6" y="229" width="0.3" height="15.0" fill="rgb(254,0,4)" rx="2" ry="2" />
<text  x="956.64" y="239.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (322,523 us., 6.40%)</title><rect x="416.9" y="229" width="75.6" height="15.0" fill="rgb(245,61,32)" rx="2" ry="2" />
<text  x="419.90" y="239.5" >torch_in..</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (2,842 us., 0.06%)</title><rect x="416.2" y="181" width="0.7" height="15.0" fill="rgb(215,43,39)" rx="2" ry="2" />
<text  x="419.23" y="191.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (83,449 us., 1.66%)</title><rect x="840.8" y="85" width="19.6" height="15.0" fill="rgb(221,181,49)" rx="2" ry="2" />
<text  x="843.82" y="95.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (597 us., 0.01%)</title><rect x="1189.9" y="181" width="0.1" height="15.0" fill="rgb(252,64,43)" rx="2" ry="2" />
<text  x="1192.86" y="191.5" ></text>
</g>
<g >
<title>&lt;built-in_method_max_of_type_object_at_0x7f2f1b4979c0&gt; (320,653 us., 6.37%)</title><rect x="878.4" y="261" width="75.1" height="15.0" fill="rgb(220,226,28)" rx="2" ry="2" />
<text  x="881.43" y="271.5" >&lt;built-i..</text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (322,523 us., 6.40%)</title><rect x="416.9" y="181" width="75.6" height="15.0" fill="rgb(218,22,15)" rx="2" ry="2" />
<text  x="419.90" y="191.5" >torch_in..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (89,581 us., 1.78%)</title><rect x="819.8" y="229" width="21.0" height="15.0" fill="rgb(206,19,15)" rx="2" ry="2" />
<text  x="822.83" y="239.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (320,653 us., 6.37%)</title><rect x="878.4" y="165" width="75.1" height="15.0" fill="rgb(235,117,34)" rx="2" ry="2" />
<text  x="881.43" y="175.5" >torch_in..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(89):__expand_mask (1,210 us., 0.02%)</title><rect x="818.8" y="245" width="0.3" height="15.0" fill="rgb(207,95,24)" rx="2" ry="2" />
<text  x="821.79" y="255.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (100,804 us., 2.00%)</title><rect x="495.3" y="229" width="23.6" height="15.0" fill="rgb(222,120,23)" rx="2" ry="2" />
<text  x="498.31" y="239.5" >t..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (83,449 us., 1.66%)</title><rect x="840.8" y="229" width="19.6" height="15.0" fill="rgb(222,113,33)" rx="2" ry="2" />
<text  x="843.82" y="239.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (856,061 us., 17.00%)</title><rect x="215.0" y="85" width="200.5" height="15.0" fill="rgb(244,169,48)" rx="2" ry="2" />
<text  x="217.98" y="95.5" >torch/autograd/grad_mode.p..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (2,842 us., 0.06%)</title><rect x="416.2" y="133" width="0.7" height="15.0" fill="rgb(247,117,26)" rx="2" ry="2" />
<text  x="419.23" y="143.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (44,767 us., 0.89%)</title><rect x="830.3" y="165" width="10.5" height="15.0" fill="rgb(217,225,30)" rx="2" ry="2" />
<text  x="833.33" y="175.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (1,279,690 us., 25.41%)</title><rect x="518.9" y="165" width="299.8" height="15.0" fill="rgb(222,155,22)" rx="2" ry="2" />
<text  x="521.92" y="175.5" >torch_int/nn/opt.py(321):_forward</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (2,987 us., 0.06%)</title><rect x="415.5" y="117" width="0.7" height="15.0" fill="rgb(229,221,4)" rx="2" ry="2" />
<text  x="418.53" y="127.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (44,814 us., 0.89%)</title><rect x="819.8" y="133" width="10.5" height="15.0" fill="rgb(228,80,48)" rx="2" ry="2" />
<text  x="822.83" y="143.5" ></text>
</g>
<g >
<title>torch/nn/modules/normalization.py(188):_forward (3,218 us., 0.06%)</title><rect x="819.1" y="229" width="0.7" height="15.0" fill="rgb(212,176,54)" rx="2" ry="2" />
<text  x="822.08" y="239.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (2,842 us., 0.06%)</title><rect x="416.2" y="117" width="0.7" height="15.0" fill="rgb(213,112,9)" rx="2" ry="2" />
<text  x="419.23" y="127.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (597 us., 0.01%)</title><rect x="1189.9" y="149" width="0.1" height="15.0" fill="rgb(205,33,16)" rx="2" ry="2" />
<text  x="1192.86" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (322,523 us., 6.40%)</title><rect x="416.9" y="133" width="75.6" height="15.0" fill="rgb(234,59,12)" rx="2" ry="2" />
<text  x="419.90" y="143.5" >nn.Modul..</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (6,473 us., 0.13%)</title><rect x="954.0" y="261" width="1.6" height="15.0" fill="rgb(214,144,21)" rx="2" ry="2" />
<text  x="957.04" y="271.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (322,523 us., 6.40%)</title><rect x="416.9" y="101" width="75.6" height="15.0" fill="rgb(244,204,50)" rx="2" ry="2" />
<text  x="419.90" y="111.5" >nn.Modul..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (8,102 us., 0.16%)</title><rect x="493.4" y="229" width="1.9" height="15.0" fill="rgb(213,70,12)" rx="2" ry="2" />
<text  x="496.41" y="239.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (1,279,690 us., 25.41%)</title><rect x="518.9" y="229" width="299.8" height="15.0" fill="rgb(251,151,36)" rx="2" ry="2" />
<text  x="521.92" y="239.5" >torch/autograd/grad_mode.py(24):_decorat..</text>
</g>
<g >
<title>torch_int/nn/linear.py(92):_forward (83,449 us., 1.66%)</title><rect x="840.8" y="245" width="19.6" height="15.0" fill="rgb(249,150,11)" rx="2" ry="2" />
<text  x="843.82" y="255.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (8,102 us., 0.16%)</title><rect x="493.4" y="165" width="1.9" height="15.0" fill="rgb(239,64,9)" rx="2" ry="2" />
<text  x="496.41" y="175.5" ></text>
</g>
<g >
<title>torch/nn/functional.py(2099):_embedding (5,829 us., 0.12%)</title><rect x="415.5" y="245" width="1.4" height="15.0" fill="rgb(215,187,4)" rx="2" ry="2" />
<text  x="418.53" y="255.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (83,449 us., 1.66%)</title><rect x="840.8" y="53" width="19.6" height="15.0" fill="rgb(210,151,23)" rx="2" ry="2" />
<text  x="843.82" y="63.5" ></text>
</g>
<g >
<title>torch/nn/functional.py(1804):_softmax (322,523 us., 6.40%)</title><rect x="416.9" y="245" width="75.6" height="15.0" fill="rgb(205,165,32)" rx="2" ry="2" />
<text  x="419.90" y="255.5" >torch/nn..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (1,000,131 us., 19.86%)</title><rect x="955.6" y="133" width="234.3" height="15.0" fill="rgb(212,40,0)" rx="2" ry="2" />
<text  x="958.55" y="143.5" >nn.Module:_Int8OPTForCausalLM</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (100,804 us., 2.00%)</title><rect x="495.3" y="101" width="23.6" height="15.0" fill="rgb(209,26,54)" rx="2" ry="2" />
<text  x="498.31" y="111.5" >n..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (856,061 us., 17.00%)</title><rect x="215.0" y="133" width="200.5" height="15.0" fill="rgb(242,201,5)" rx="2" ry="2" />
<text  x="217.98" y="143.5" >transformers/models/opt/mo..</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (4,069 us., 0.08%)</title><rect x="492.5" y="229" width="0.9" height="15.0" fill="rgb(223,74,40)" rx="2" ry="2" />
<text  x="495.46" y="239.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (77,089 us., 1.53%)</title><rect x="860.4" y="101" width="18.0" height="15.0" fill="rgb(218,116,36)" rx="2" ry="2" />
<text  x="863.37" y="111.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (77,089 us., 1.53%)</title><rect x="860.4" y="133" width="18.0" height="15.0" fill="rgb(227,213,9)" rx="2" ry="2" />
<text  x="863.37" y="143.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (8,102 us., 0.16%)</title><rect x="493.4" y="181" width="1.9" height="15.0" fill="rgb(249,177,42)" rx="2" ry="2" />
<text  x="496.41" y="191.5" ></text>
</g>
<g >
<title>torch/nn/modules/sparse.py(157):_forward (5,829 us., 0.12%)</title><rect x="415.5" y="229" width="1.4" height="15.0" fill="rgb(217,229,31)" rx="2" ry="2" />
<text  x="418.53" y="239.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (3,218 us., 0.06%)</title><rect x="819.1" y="197" width="0.7" height="15.0" fill="rgb(206,16,12)" rx="2" ry="2" />
<text  x="822.08" y="207.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (44,814 us., 0.89%)</title><rect x="819.8" y="165" width="10.5" height="15.0" fill="rgb(245,98,25)" rx="2" ry="2" />
<text  x="822.83" y="175.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (597 us., 0.01%)</title><rect x="1189.9" y="261" width="0.1" height="15.0" fill="rgb(243,75,53)" rx="2" ry="2" />
<text  x="1192.86" y="271.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (2,987 us., 0.06%)</title><rect x="415.5" y="197" width="0.7" height="15.0" fill="rgb(248,35,46)" rx="2" ry="2" />
<text  x="418.53" y="207.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,279,690 us., 25.41%)</title><rect x="518.9" y="85" width="299.8" height="15.0" fill="rgb(232,202,53)" rx="2" ry="2" />
<text  x="521.92" y="95.5" >torch/autograd/grad_mode.py(27):_decorat..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (100,804 us., 2.00%)</title><rect x="495.3" y="117" width="23.6" height="15.0" fill="rgb(244,64,50)" rx="2" ry="2" />
<text  x="498.31" y="127.5" >t..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,210 us., 0.02%)</title><rect x="818.8" y="149" width="0.3" height="15.0" fill="rgb(226,9,29)" rx="2" ry="2" />
<text  x="821.79" y="159.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (44,767 us., 0.89%)</title><rect x="830.3" y="85" width="10.5" height="15.0" fill="rgb(211,81,35)" rx="2" ry="2" />
<text  x="833.33" y="95.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (83,449 us., 1.66%)</title><rect x="840.8" y="69" width="19.6" height="15.0" fill="rgb(240,116,47)" rx="2" ry="2" />
<text  x="843.82" y="79.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (320,653 us., 6.37%)</title><rect x="878.4" y="197" width="75.1" height="15.0" fill="rgb(245,159,9)" rx="2" ry="2" />
<text  x="881.43" y="207.5" >torch_in..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (83,449 us., 1.66%)</title><rect x="840.8" y="101" width="19.6" height="15.0" fill="rgb(220,153,26)" rx="2" ry="2" />
<text  x="843.82" y="111.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (44,814 us., 0.89%)</title><rect x="819.8" y="101" width="10.5" height="15.0" fill="rgb(249,95,44)" rx="2" ry="2" />
<text  x="822.83" y="111.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (83,449 us., 1.66%)</title><rect x="840.8" y="197" width="19.6" height="15.0" fill="rgb(212,143,24)" rx="2" ry="2" />
<text  x="843.82" y="207.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (870,870 us., 17.29%)</title><rect x="10.0" y="213" width="204.0" height="15.0" fill="rgb(227,152,15)" rx="2" ry="2" />
<text  x="13.00" y="223.5" >transformers/models/opt/mo..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (3,764 us., 0.07%)</title><rect x="214.0" y="229" width="0.9" height="15.0" fill="rgb(220,216,7)" rx="2" ry="2" />
<text  x="217.02" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (2,987 us., 0.06%)</title><rect x="415.5" y="181" width="0.7" height="15.0" fill="rgb(209,75,12)" rx="2" ry="2" />
<text  x="418.53" y="191.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,297 us., 0.03%)</title><rect x="953.6" y="165" width="0.3" height="15.0" fill="rgb(252,27,15)" rx="2" ry="2" />
<text  x="956.64" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (77,089 us., 1.53%)</title><rect x="860.4" y="149" width="18.0" height="15.0" fill="rgb(212,42,50)" rx="2" ry="2" />
<text  x="863.37" y="159.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(43):__shape (100,804 us., 2.00%)</title><rect x="495.3" y="245" width="23.6" height="15.0" fill="rgb(252,82,8)" rx="2" ry="2" />
<text  x="498.31" y="255.5" >t..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (100,804 us., 2.00%)</title><rect x="495.3" y="133" width="23.6" height="15.0" fill="rgb(230,206,32)" rx="2" ry="2" />
<text  x="498.31" y="143.5" >n..</text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (2,842 us., 0.06%)</title><rect x="416.2" y="197" width="0.7" height="15.0" fill="rgb(242,81,4)" rx="2" ry="2" />
<text  x="419.23" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (6,473 us., 0.13%)</title><rect x="954.0" y="213" width="1.6" height="15.0" fill="rgb(220,170,25)" rx="2" ry="2" />
<text  x="957.04" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (870,870 us., 17.29%)</title><rect x="10.0" y="197" width="204.0" height="15.0" fill="rgb(241,189,7)" rx="2" ry="2" />
<text  x="13.00" y="207.5" >nn.Module:_Int8OPTForCausa..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (3,218 us., 0.06%)</title><rect x="819.1" y="181" width="0.7" height="15.0" fill="rgb(226,58,21)" rx="2" ry="2" />
<text  x="822.08" y="191.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (6,473 us., 0.13%)</title><rect x="954.0" y="197" width="1.6" height="15.0" fill="rgb(233,67,11)" rx="2" ry="2" />
<text  x="957.04" y="207.5" ></text>
</g>
<g >
<title>&lt;built-in_method_linear_a8_w8_b8_o8_of_PyCapsule_object_at_0x7f2e2692af00&gt; (83,449 us., 1.66%)</title><rect x="840.8" y="261" width="19.6" height="15.0" fill="rgb(210,192,21)" rx="2" ry="2" />
<text  x="843.82" y="271.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (856,061 us., 17.00%)</title><rect x="215.0" y="101" width="200.5" height="15.0" fill="rgb(208,63,49)" rx="2" ry="2" />
<text  x="217.98" y="111.5" >profiling/utils.py(18):_pr..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (3,218 us., 0.06%)</title><rect x="819.1" y="165" width="0.7" height="15.0" fill="rgb(219,90,48)" rx="2" ry="2" />
<text  x="822.08" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_W8A8B8O8Linear (83,449 us., 1.66%)</title><rect x="840.8" y="213" width="19.6" height="15.0" fill="rgb(254,61,27)" rx="2" ry="2" />
<text  x="843.82" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (77,089 us., 1.53%)</title><rect x="860.4" y="117" width="18.0" height="15.0" fill="rgb(221,217,44)" rx="2" ry="2" />
<text  x="863.37" y="127.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (597 us., 0.01%)</title><rect x="1189.9" y="165" width="0.1" height="15.0" fill="rgb(222,193,15)" rx="2" ry="2" />
<text  x="1192.86" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (1,000,131 us., 19.86%)</title><rect x="955.6" y="197" width="234.3" height="15.0" fill="rgb(238,96,19)" rx="2" ry="2" />
<text  x="958.55" y="207.5" >nn.Module:_Int8OPTDecoderLayer</text>
</g>
<g >
<title>&lt;built-in_function_linear&gt; (870,870 us., 17.29%)</title><rect x="10.0" y="261" width="204.0" height="15.0" fill="rgb(244,123,2)" rx="2" ry="2" />
<text  x="13.00" y="271.5" >&lt;built-in_function_linear&gt;</text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (320,653 us., 6.37%)</title><rect x="878.4" y="245" width="75.1" height="15.0" fill="rgb(210,206,21)" rx="2" ry="2" />
<text  x="881.43" y="255.5" >torch_in..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (322,523 us., 6.40%)</title><rect x="416.9" y="213" width="75.6" height="15.0" fill="rgb(230,195,23)" rx="2" ry="2" />
<text  x="419.90" y="223.5" >torch/au..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (4,069 us., 0.08%)</title><rect x="492.5" y="149" width="0.9" height="15.0" fill="rgb(221,60,45)" rx="2" ry="2" />
<text  x="495.46" y="159.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (100,804 us., 2.00%)</title><rect x="495.3" y="85" width="23.6" height="15.0" fill="rgb(240,193,3)" rx="2" ry="2" />
<text  x="498.31" y="95.5" >p..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (44,767 us., 0.89%)</title><rect x="830.3" y="101" width="10.5" height="15.0" fill="rgb(244,50,37)" rx="2" ry="2" />
<text  x="833.33" y="111.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (4,069 us., 0.08%)</title><rect x="492.5" y="213" width="0.9" height="15.0" fill="rgb(240,190,36)" rx="2" ry="2" />
<text  x="495.46" y="223.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (3,764 us., 0.07%)</title><rect x="214.0" y="213" width="0.9" height="15.0" fill="rgb(216,190,9)" rx="2" ry="2" />
<text  x="217.02" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (1,279,690 us., 25.41%)</title><rect x="518.9" y="181" width="299.8" height="15.0" fill="rgb(244,169,47)" rx="2" ry="2" />
<text  x="521.92" y="191.5" >nn.Module:_Int8OPTDecoderLayer</text>
</g>
<g >
<title>nn.Module:_Linear (870,870 us., 17.29%)</title><rect x="10.0" y="229" width="204.0" height="15.0" fill="rgb(229,164,23)" rx="2" ry="2" />
<text  x="13.00" y="239.5" >nn.Module:_Linear</text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (1,279,690 us., 25.41%)</title><rect x="518.9" y="197" width="299.8" height="15.0" fill="rgb(250,27,54)" rx="2" ry="2" />
<text  x="521.92" y="207.5" >torch_int/nn/opt.py(183):_forward</text>
</g>
<g >
<title>&lt;built-in_method_linear_relu_a8_w8_b8_o8_of_PyCapsule_object_at_0x7f2e2692ae70&gt; (77,089 us., 1.53%)</title><rect x="860.4" y="261" width="18.0" height="15.0" fill="rgb(233,13,32)" rx="2" ry="2" />
<text  x="863.37" y="271.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (77,089 us., 1.53%)</title><rect x="860.4" y="229" width="18.0" height="15.0" fill="rgb(218,173,43)" rx="2" ry="2" />
<text  x="863.37" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (1,210 us., 0.02%)</title><rect x="818.8" y="165" width="0.3" height="15.0" fill="rgb(250,123,17)" rx="2" ry="2" />
<text  x="821.79" y="175.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (100,804 us., 2.00%)</title><rect x="495.3" y="181" width="23.6" height="15.0" fill="rgb(237,118,29)" rx="2" ry="2" />
<text  x="498.31" y="191.5" >t..</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (44,767 us., 0.89%)</title><rect x="830.3" y="117" width="10.5" height="15.0" fill="rgb(226,41,48)" rx="2" ry="2" />
<text  x="833.33" y="127.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,000,131 us., 19.86%)</title><rect x="955.6" y="117" width="234.3" height="15.0" fill="rgb(218,98,53)" rx="2" ry="2" />
<text  x="958.55" y="127.5" >profiling/utils.py(18):_profile..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (3,764 us., 0.07%)</title><rect x="214.0" y="197" width="0.9" height="15.0" fill="rgb(253,214,14)" rx="2" ry="2" />
<text  x="217.02" y="207.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (100,804 us., 2.00%)</title><rect x="495.3" y="69" width="23.6" height="15.0" fill="rgb(254,159,15)" rx="2" ry="2" />
<text  x="498.31" y="79.5" >t..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (2,842 us., 0.06%)</title><rect x="416.2" y="213" width="0.7" height="15.0" fill="rgb(239,129,12)" rx="2" ry="2" />
<text  x="419.23" y="223.5" ></text>
</g>
<g >
<title>&lt;built-in_method_linear_a8_w8_b32_o32_with_scaling_of_PyCapsule_object_at_0x7f2e2692aed0&gt; (89,581 us., 1.78%)</title><rect x="819.8" y="261" width="21.0" height="15.0" fill="rgb(211,187,43)" rx="2" ry="2" />
<text  x="822.83" y="271.5" ></text>
</g>
<g >
<title>nn.Module:_Embedding (2,987 us., 0.06%)</title><rect x="415.5" y="213" width="0.7" height="15.0" fill="rgb(239,176,51)" rx="2" ry="2" />
<text  x="418.53" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_LayerNorm (3,218 us., 0.06%)</title><rect x="819.1" y="213" width="0.7" height="15.0" fill="rgb(208,200,31)" rx="2" ry="2" />
<text  x="822.08" y="223.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (3,218 us., 0.06%)</title><rect x="819.1" y="117" width="0.7" height="15.0" fill="rgb(236,3,7)" rx="2" ry="2" />
<text  x="822.08" y="127.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (322,523 us., 6.40%)</title><rect x="416.9" y="149" width="75.6" height="15.0" fill="rgb(237,163,13)" rx="2" ry="2" />
<text  x="419.90" y="159.5" >torch_in..</text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (1,279,690 us., 25.41%)</title><rect x="518.9" y="245" width="299.8" height="15.0" fill="rgb(225,162,0)" rx="2" ry="2" />
<text  x="521.92" y="255.5" >torch_int/nn/opt.py(46):_forward</text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (1,279,690 us., 25.41%)</title><rect x="518.9" y="213" width="299.8" height="15.0" fill="rgb(252,148,15)" rx="2" ry="2" />
<text  x="521.92" y="223.5" >nn.Module:_Int8OPTAttention</text>
</g>
</g>
</svg>
