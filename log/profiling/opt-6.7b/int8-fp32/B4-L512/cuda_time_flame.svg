<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="326" onload="init(evt)" viewBox="0 0 1200 326" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="326.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >CUDA Time</text>
<text id="details" x="10.00" y="309" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="309" > </text>
<g id="frames">
<g >
<title>torch_int/nn/opt.py(321):_forward (431,095 us., 2.12%)</title><rect x="522.0" y="149" width="25.1" height="15.0" fill="rgb(245,90,21)" rx="2" ry="2" />
<text  x="525.01" y="159.5" >t..</text>
</g>
<g >
<title>nn.Module:_Embedding (11,646 us., 0.06%)</title><rect x="443.6" y="213" width="0.7" height="15.0" fill="rgb(223,46,29)" rx="2" ry="2" />
<text  x="446.63" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (4,979,213 us., 24.52%)</title><rect x="547.1" y="181" width="289.3" height="15.0" fill="rgb(254,40,51)" rx="2" ry="2" />
<text  x="550.06" y="191.5" >nn.Module:_Int8OPTDecoderLayer</text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (431,095 us., 2.12%)</title><rect x="522.0" y="229" width="25.1" height="15.0" fill="rgb(245,140,10)" rx="2" ry="2" />
<text  x="525.01" y="239.5" >t..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (3,916,546 us., 19.28%)</title><rect x="962.4" y="149" width="227.6" height="15.0" fill="rgb(219,161,1)" rx="2" ry="2" />
<text  x="965.41" y="159.5" >transformers/models/opt/modeli..</text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (1,262,347 us., 6.22%)</title><rect x="887.2" y="213" width="73.3" height="15.0" fill="rgb(207,45,26)" rx="2" ry="2" />
<text  x="890.18" y="223.5" >nn.Modul..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (1,265,957 us., 6.23%)</title><rect x="445.0" y="133" width="73.5" height="15.0" fill="rgb(209,145,25)" rx="2" ry="2" />
<text  x="447.99" y="143.5" >nn.Modul..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (3,851,415 us., 18.96%)</title><rect x="10.0" y="165" width="223.8" height="15.0" fill="rgb(246,159,24)" rx="2" ry="2" />
<text  x="13.00" y="175.5" >torch/autograd/grad_mode.py(2..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (431,095 us., 2.12%)</title><rect x="522.0" y="101" width="25.1" height="15.0" fill="rgb(227,73,34)" rx="2" ry="2" />
<text  x="525.01" y="111.5" >n..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (431,095 us., 2.12%)</title><rect x="522.0" y="117" width="25.1" height="15.0" fill="rgb(228,180,3)" rx="2" ry="2" />
<text  x="525.01" y="127.5" >t..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (3,595,122 us., 17.70%)</title><rect x="234.8" y="85" width="208.8" height="15.0" fill="rgb(212,27,15)" rx="2" ry="2" />
<text  x="237.75" y="95.5" >torch/autograd/grad_mode.py..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (3,916,546 us., 19.28%)</title><rect x="962.4" y="245" width="227.6" height="15.0" fill="rgb(210,224,4)" rx="2" ry="2" />
<text  x="965.41" y="255.5" >torch/autograd/grad_mode.py(24..</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (25,014 us., 0.12%)</title><rect x="961.0" y="261" width="1.4" height="15.0" fill="rgb(213,63,14)" rx="2" ry="2" />
<text  x="963.96" y="271.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (3,916,546 us., 19.28%)</title><rect x="962.4" y="261" width="227.6" height="15.0" fill="rgb(222,86,48)" rx="2" ry="2" />
<text  x="965.41" y="271.5" >torch_int/nn/opt.py(46):_forward</text>
</g>
<g >
<title>&lt;built-in_method_cumsum_of_type_object_at_0x7f6a5ba889c0&gt; (2,165 us., 0.01%)</title><rect x="234.6" y="261" width="0.2" height="15.0" fill="rgb(207,5,26)" rx="2" ry="2" />
<text  x="237.63" y="271.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (160,624 us., 0.79%)</title><rect x="846.5" y="133" width="9.4" height="15.0" fill="rgb(254,206,5)" rx="2" ry="2" />
<text  x="849.53" y="143.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (160,624 us., 0.79%)</title><rect x="846.5" y="69" width="9.4" height="15.0" fill="rgb(212,181,21)" rx="2" ry="2" />
<text  x="849.53" y="79.5" ></text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (11,680 us., 0.06%)</title><rect x="444.3" y="197" width="0.7" height="15.0" fill="rgb(234,111,25)" rx="2" ry="2" />
<text  x="447.31" y="207.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,262,347 us., 6.22%)</title><rect x="887.2" y="133" width="73.3" height="15.0" fill="rgb(229,207,23)" rx="2" ry="2" />
<text  x="890.18" y="143.5" >transfor..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (11,680 us., 0.06%)</title><rect x="444.3" y="101" width="0.7" height="15.0" fill="rgb(207,176,20)" rx="2" ry="2" />
<text  x="447.31" y="111.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (4,979,213 us., 24.52%)</title><rect x="547.1" y="245" width="289.3" height="15.0" fill="rgb(227,154,48)" rx="2" ry="2" />
<text  x="550.06" y="255.5" >torch_int/nn/opt.py(46):_forward</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (289,863 us., 1.43%)</title><rect x="870.3" y="181" width="16.9" height="15.0" fill="rgb(218,34,49)" rx="2" ry="2" />
<text  x="873.34" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (160,624 us., 0.79%)</title><rect x="846.5" y="101" width="9.4" height="15.0" fill="rgb(241,196,32)" rx="2" ry="2" />
<text  x="849.53" y="111.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (1,265,957 us., 6.23%)</title><rect x="445.0" y="165" width="73.5" height="15.0" fill="rgb(205,154,22)" rx="2" ry="2" />
<text  x="447.99" y="175.5" >nn.Modul..</text>
</g>
<g >
<title>&lt;built-in_method_encode_of_str_object_at_0x7f696757e450&gt; (6,740,430 us., 33.19%)</title><rect x="445.0" y="261" width="391.6" height="15.0" fill="rgb(241,205,12)" rx="2" ry="2" />
<text  x="447.99" y="271.5" >&lt;built-in_method_encode_of_str_object_at_0x7f696757e4..</text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (1,265,957 us., 6.23%)</title><rect x="445.0" y="197" width="73.5" height="15.0" fill="rgb(236,183,9)" rx="2" ry="2" />
<text  x="447.99" y="207.5" >nn.Modul..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (3,595,122 us., 17.70%)</title><rect x="234.8" y="133" width="208.8" height="15.0" fill="rgb(243,36,37)" rx="2" ry="2" />
<text  x="237.75" y="143.5" >transformers/models/opt/mod..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (3,916,546 us., 19.28%)</title><rect x="962.4" y="101" width="227.6" height="15.0" fill="rgb(221,37,50)" rx="2" ry="2" />
<text  x="965.41" y="111.5" >torch/autograd/grad_mode.py(27..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (3,916,546 us., 19.28%)</title><rect x="962.4" y="117" width="227.6" height="15.0" fill="rgb(216,138,38)" rx="2" ry="2" />
<text  x="965.41" y="127.5" >profiling/utils.py(18):_profil..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (30,265 us., 0.15%)</title><rect x="520.3" y="229" width="1.7" height="15.0" fill="rgb(215,9,22)" rx="2" ry="2" />
<text  x="523.25" y="239.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (1,265,957 us., 6.23%)</title><rect x="445.0" y="181" width="73.5" height="15.0" fill="rgb(234,90,34)" rx="2" ry="2" />
<text  x="447.99" y="191.5" >torch_in..</text>
</g>
<g >
<title>nn.Module:_W8A8B8O8LinearReLU (289,863 us., 1.43%)</title><rect x="870.3" y="213" width="16.9" height="15.0" fill="rgb(205,41,52)" rx="2" ry="2" />
<text  x="873.34" y="223.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (4,882 us., 0.02%)</title><rect x="960.6" y="181" width="0.3" height="15.0" fill="rgb(227,29,53)" rx="2" ry="2" />
<text  x="963.58" y="191.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (4,003 us., 0.02%)</title><rect x="836.4" y="181" width="0.2" height="15.0" fill="rgb(207,168,14)" rx="2" ry="2" />
<text  x="839.38" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (11,680 us., 0.06%)</title><rect x="444.3" y="165" width="0.7" height="15.0" fill="rgb(236,176,36)" rx="2" ry="2" />
<text  x="447.31" y="175.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (11,680 us., 0.06%)</title><rect x="444.3" y="117" width="0.7" height="15.0" fill="rgb(252,63,40)" rx="2" ry="2" />
<text  x="447.31" y="127.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (1,262,347 us., 6.22%)</title><rect x="887.2" y="181" width="73.3" height="15.0" fill="rgb(208,81,39)" rx="2" ry="2" />
<text  x="890.18" y="191.5" >nn.Modul..</text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (431,095 us., 2.12%)</title><rect x="522.0" y="181" width="25.1" height="15.0" fill="rgb(241,7,52)" rx="2" ry="2" />
<text  x="525.01" y="191.5" >t..</text>
</g>
<g >
<title>torch_int/nn/linear.py(62):_forward (316,565 us., 1.56%)</title><rect x="837.5" y="245" width="18.4" height="15.0" fill="rgb(231,186,48)" rx="2" ry="2" />
<text  x="840.47" y="255.5" ></text>
</g>
<g >
<title>&lt;built-in_function_linear&gt; (3,851,415 us., 18.96%)</title><rect x="10.0" y="261" width="223.8" height="15.0" fill="rgb(233,218,21)" rx="2" ry="2" />
<text  x="13.00" y="271.5" >&lt;built-in_function_linear&gt;</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (431,095 us., 2.12%)</title><rect x="522.0" y="213" width="25.1" height="15.0" fill="rgb(206,158,3)" rx="2" ry="2" />
<text  x="525.01" y="223.5" >t..</text>
</g>
<g >
<title>&lt;built-in_method_zeros_like_of_type_object_at_0x7f6a5ba889c0&gt; (4,882 us., 0.02%)</title><rect x="960.6" y="261" width="0.3" height="15.0" fill="rgb(234,4,18)" rx="2" ry="2" />
<text  x="963.58" y="271.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (249,077 us., 1.23%)</title><rect x="855.9" y="133" width="14.4" height="15.0" fill="rgb(245,98,31)" rx="2" ry="2" />
<text  x="858.87" y="143.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (3,916,546 us., 19.28%)</title><rect x="962.4" y="229" width="227.6" height="15.0" fill="rgb(230,184,35)" rx="2" ry="2" />
<text  x="965.41" y="239.5" >nn.Module:_Int8OPTAttention</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (30,265 us., 0.15%)</title><rect x="520.3" y="181" width="1.7" height="15.0" fill="rgb(254,150,12)" rx="2" ry="2" />
<text  x="523.25" y="191.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (30,265 us., 0.15%)</title><rect x="520.3" y="165" width="1.7" height="15.0" fill="rgb(217,213,16)" rx="2" ry="2" />
<text  x="523.25" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (160,624 us., 0.79%)</title><rect x="846.5" y="165" width="9.4" height="15.0" fill="rgb(228,79,2)" rx="2" ry="2" />
<text  x="849.53" y="175.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (4,882 us., 0.02%)</title><rect x="960.6" y="245" width="0.3" height="15.0" fill="rgb(239,75,38)" rx="2" ry="2" />
<text  x="963.58" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (4,003 us., 0.02%)</title><rect x="836.4" y="165" width="0.2" height="15.0" fill="rgb(250,101,18)" rx="2" ry="2" />
<text  x="839.38" y="175.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,262,347 us., 6.22%)</title><rect x="887.2" y="85" width="73.3" height="15.0" fill="rgb(253,188,21)" rx="2" ry="2" />
<text  x="890.18" y="95.5" >torch/au..</text>
</g>
<g >
<title>nn.Module:_LayerNorm (14,900 us., 0.07%)</title><rect x="836.6" y="213" width="0.9" height="15.0" fill="rgb(249,216,53)" rx="2" ry="2" />
<text  x="839.61" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (289,863 us., 1.43%)</title><rect x="870.3" y="149" width="16.9" height="15.0" fill="rgb(216,169,15)" rx="2" ry="2" />
<text  x="873.34" y="159.5" ></text>
</g>
<g >
<title>torch/nn/modules/normalization.py(188):_forward (14,900 us., 0.07%)</title><rect x="836.6" y="229" width="0.9" height="15.0" fill="rgb(221,191,52)" rx="2" ry="2" />
<text  x="839.61" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (29,501 us., 0.15%)</title><rect x="518.5" y="213" width="1.8" height="15.0" fill="rgb(235,61,25)" rx="2" ry="2" />
<text  x="521.54" y="223.5" ></text>
</g>
<g >
<title>torch_int/functional/fused.py(24):_dq_add_layernorm_q_cpp (3,595,122 us., 17.70%)</title><rect x="234.8" y="245" width="208.8" height="15.0" fill="rgb(218,31,44)" rx="2" ry="2" />
<text  x="237.75" y="255.5" >torch_int/functional/fused...</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (14,900 us., 0.07%)</title><rect x="836.6" y="149" width="0.9" height="15.0" fill="rgb(252,182,5)" rx="2" ry="2" />
<text  x="839.61" y="159.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (4,882 us., 0.02%)</title><rect x="960.6" y="165" width="0.3" height="15.0" fill="rgb(207,45,48)" rx="2" ry="2" />
<text  x="963.58" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (4,882 us., 0.02%)</title><rect x="960.6" y="197" width="0.3" height="15.0" fill="rgb(213,160,38)" rx="2" ry="2" />
<text  x="963.58" y="207.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (160,624 us., 0.79%)</title><rect x="846.5" y="85" width="9.4" height="15.0" fill="rgb(227,116,33)" rx="2" ry="2" />
<text  x="849.53" y="95.5" ></text>
</g>
<g >
<title>nn.Module:_DQ_Add_LayerNorm_Q (3,595,122 us., 17.70%)</title><rect x="234.8" y="213" width="208.8" height="15.0" fill="rgb(213,145,14)" rx="2" ry="2" />
<text  x="237.75" y="223.5" >nn.Module:_DQ_Add_LayerNorm_Q</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (155,941 us., 0.77%)</title><rect x="837.5" y="101" width="9.0" height="15.0" fill="rgb(235,193,20)" rx="2" ry="2" />
<text  x="840.47" y="111.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (249,077 us., 1.23%)</title><rect x="855.9" y="101" width="14.4" height="15.0" fill="rgb(206,103,23)" rx="2" ry="2" />
<text  x="858.87" y="111.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (3,595,122 us., 17.70%)</title><rect x="234.8" y="101" width="208.8" height="15.0" fill="rgb(211,86,3)" rx="2" ry="2" />
<text  x="237.75" y="111.5" >profiling/utils.py(18):_pro..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (1,262,347 us., 6.22%)</title><rect x="887.2" y="229" width="73.3" height="15.0" fill="rgb(212,34,31)" rx="2" ry="2" />
<text  x="890.18" y="239.5" >torch/au..</text>
</g>
<g >
<title>torch_int/nn/fused.py(13):_forward (3,595,122 us., 17.70%)</title><rect x="234.8" y="229" width="208.8" height="15.0" fill="rgb(254,176,22)" rx="2" ry="2" />
<text  x="237.75" y="239.5" >torch_int/nn/fused.py(13):_..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (4,979,213 us., 24.52%)</title><rect x="547.1" y="133" width="289.3" height="15.0" fill="rgb(217,158,13)" rx="2" ry="2" />
<text  x="550.06" y="143.5" >transformers/models/opt/modeling_opt.p..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (155,941 us., 0.77%)</title><rect x="837.5" y="85" width="9.0" height="15.0" fill="rgb(239,133,0)" rx="2" ry="2" />
<text  x="840.47" y="95.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (11,646 us., 0.06%)</title><rect x="443.6" y="165" width="0.7" height="15.0" fill="rgb(253,10,12)" rx="2" ry="2" />
<text  x="446.63" y="175.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (2,165 us., 0.01%)</title><rect x="234.6" y="245" width="0.2" height="15.0" fill="rgb(224,224,23)" rx="2" ry="2" />
<text  x="237.63" y="255.5" ></text>
</g>
<g >
<title>&lt;built-in_method_linear_relu_a8_w8_b8_o8_of_PyCapsule_object_at_0x7f6966f1be70&gt; (289,863 us., 1.43%)</title><rect x="870.3" y="261" width="16.9" height="15.0" fill="rgb(220,103,44)" rx="2" ry="2" />
<text  x="873.34" y="271.5" ></text>
</g>
<g >
<title>&lt;built-in_method_max_of_type_object_at_0x7f6a5ba889c0&gt; (1,262,347 us., 6.22%)</title><rect x="887.2" y="261" width="73.3" height="15.0" fill="rgb(237,106,25)" rx="2" ry="2" />
<text  x="890.18" y="271.5" >&lt;built-i..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (160,624 us., 0.79%)</title><rect x="846.5" y="37" width="9.4" height="15.0" fill="rgb(235,17,39)" rx="2" ry="2" />
<text  x="849.53" y="47.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (3,595,122 us., 17.70%)</title><rect x="234.8" y="181" width="208.8" height="15.0" fill="rgb(210,46,27)" rx="2" ry="2" />
<text  x="237.75" y="191.5" >nn.Module:_Int8OPTDecoderLa..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (14,810 us., 0.07%)</title><rect x="233.8" y="229" width="0.8" height="15.0" fill="rgb(237,216,16)" rx="2" ry="2" />
<text  x="236.77" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (289,863 us., 1.43%)</title><rect x="870.3" y="117" width="16.9" height="15.0" fill="rgb(234,188,53)" rx="2" ry="2" />
<text  x="873.34" y="127.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (155,941 us., 0.77%)</title><rect x="837.5" y="197" width="9.0" height="15.0" fill="rgb(232,183,18)" rx="2" ry="2" />
<text  x="840.47" y="207.5" ></text>
</g>
<g >
<title>&lt;built-in_method_dq_add_layernorm_q_of_PyCapsule_object_at_0x7f6966f1bf30&gt; (3,595,122 us., 17.70%)</title><rect x="234.8" y="261" width="208.8" height="15.0" fill="rgb(239,43,44)" rx="2" ry="2" />
<text  x="237.75" y="271.5" >&lt;built-in_method_dq_add_lay..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (25,014 us., 0.12%)</title><rect x="961.0" y="197" width="1.4" height="15.0" fill="rgb(229,117,51)" rx="2" ry="2" />
<text  x="963.96" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (11,680 us., 0.06%)</title><rect x="444.3" y="133" width="0.7" height="15.0" fill="rgb(243,180,13)" rx="2" ry="2" />
<text  x="447.31" y="143.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (1,262,347 us., 6.22%)</title><rect x="887.2" y="197" width="73.3" height="15.0" fill="rgb(229,72,2)" rx="2" ry="2" />
<text  x="890.18" y="207.5" >torch_in..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (155,941 us., 0.77%)</title><rect x="837.5" y="181" width="9.0" height="15.0" fill="rgb(207,224,20)" rx="2" ry="2" />
<text  x="840.47" y="191.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (1,265,957 us., 6.23%)</title><rect x="445.0" y="149" width="73.5" height="15.0" fill="rgb(231,199,17)" rx="2" ry="2" />
<text  x="447.99" y="159.5" >torch_in..</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (160,624 us., 0.79%)</title><rect x="846.5" y="117" width="9.4" height="15.0" fill="rgb(212,198,19)" rx="2" ry="2" />
<text  x="849.53" y="127.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (14,900 us., 0.07%)</title><rect x="836.6" y="197" width="0.9" height="15.0" fill="rgb(248,151,20)" rx="2" ry="2" />
<text  x="839.61" y="207.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (30,265 us., 0.15%)</title><rect x="520.3" y="213" width="1.7" height="15.0" fill="rgb(238,121,4)" rx="2" ry="2" />
<text  x="523.25" y="223.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (3,916,546 us., 19.28%)</title><rect x="962.4" y="213" width="227.6" height="15.0" fill="rgb(217,226,38)" rx="2" ry="2" />
<text  x="965.41" y="223.5" >torch_int/nn/opt.py(183):_forw..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (29,501 us., 0.15%)</title><rect x="518.5" y="197" width="1.8" height="15.0" fill="rgb(212,168,22)" rx="2" ry="2" />
<text  x="521.54" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_W8A8B8O8Linear (249,077 us., 1.23%)</title><rect x="855.9" y="213" width="14.4" height="15.0" fill="rgb(245,0,17)" rx="2" ry="2" />
<text  x="858.87" y="223.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,262,347 us., 6.22%)</title><rect x="887.2" y="101" width="73.3" height="15.0" fill="rgb(218,45,28)" rx="2" ry="2" />
<text  x="890.18" y="111.5" >profilin..</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (14,810 us., 0.07%)</title><rect x="233.8" y="245" width="0.8" height="15.0" fill="rgb(238,109,20)" rx="2" ry="2" />
<text  x="236.77" y="255.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (1,265,957 us., 6.23%)</title><rect x="445.0" y="229" width="73.5" height="15.0" fill="rgb(213,147,25)" rx="2" ry="2" />
<text  x="447.99" y="239.5" >torch_in..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (155,941 us., 0.77%)</title><rect x="837.5" y="133" width="9.0" height="15.0" fill="rgb(252,128,40)" rx="2" ry="2" />
<text  x="840.47" y="143.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (4,882 us., 0.02%)</title><rect x="960.6" y="213" width="0.3" height="15.0" fill="rgb(236,182,52)" rx="2" ry="2" />
<text  x="963.58" y="223.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,265,957 us., 6.23%)</title><rect x="445.0" y="117" width="73.5" height="15.0" fill="rgb(222,180,38)" rx="2" ry="2" />
<text  x="447.99" y="127.5" >transfor..</text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (4,979,213 us., 24.52%)</title><rect x="547.1" y="197" width="289.3" height="15.0" fill="rgb(225,93,8)" rx="2" ry="2" />
<text  x="550.06" y="207.5" >torch_int/nn/opt.py(183):_forward</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (11,646 us., 0.06%)</title><rect x="443.6" y="133" width="0.7" height="15.0" fill="rgb(253,8,23)" rx="2" ry="2" />
<text  x="446.63" y="143.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (3,851,415 us., 18.96%)</title><rect x="10.0" y="213" width="223.8" height="15.0" fill="rgb(210,177,40)" rx="2" ry="2" />
<text  x="13.00" y="223.5" >transformers/models/opt/model..</text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (249,077 us., 1.23%)</title><rect x="855.9" y="197" width="14.4" height="15.0" fill="rgb(244,33,51)" rx="2" ry="2" />
<text  x="858.87" y="207.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (4,979,213 us., 24.52%)</title><rect x="547.1" y="229" width="289.3" height="15.0" fill="rgb(245,209,19)" rx="2" ry="2" />
<text  x="550.06" y="239.5" >torch/autograd/grad_mode.py(24):_decor..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (249,077 us., 1.23%)</title><rect x="855.9" y="53" width="14.4" height="15.0" fill="rgb(223,52,43)" rx="2" ry="2" />
<text  x="858.87" y="63.5" ></text>
</g>
<g >
<title>torch/nn/modules/linear.py(113):_forward (3,851,415 us., 18.96%)</title><rect x="10.0" y="245" width="223.8" height="15.0" fill="rgb(216,133,2)" rx="2" ry="2" />
<text  x="13.00" y="255.5" >torch/nn/modules/linear.py(11..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (3,851,415 us., 18.96%)</title><rect x="10.0" y="197" width="223.8" height="15.0" fill="rgb(226,204,49)" rx="2" ry="2" />
<text  x="13.00" y="207.5" >nn.Module:_Int8OPTForCausalLM</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (11,646 us., 0.06%)</title><rect x="443.6" y="181" width="0.7" height="15.0" fill="rgb(214,81,20)" rx="2" ry="2" />
<text  x="446.63" y="191.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (14,900 us., 0.07%)</title><rect x="836.6" y="133" width="0.9" height="15.0" fill="rgb(240,79,30)" rx="2" ry="2" />
<text  x="839.61" y="143.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (1,265,957 us., 6.23%)</title><rect x="445.0" y="213" width="73.5" height="15.0" fill="rgb(214,34,49)" rx="2" ry="2" />
<text  x="447.99" y="223.5" >torch/au..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (155,941 us., 0.77%)</title><rect x="837.5" y="149" width="9.0" height="15.0" fill="rgb(239,43,29)" rx="2" ry="2" />
<text  x="840.47" y="159.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (14,900 us., 0.07%)</title><rect x="836.6" y="165" width="0.9" height="15.0" fill="rgb(214,181,2)" rx="2" ry="2" />
<text  x="839.61" y="175.5" ></text>
</g>
<g >
<title>&lt;built-in_method_add_of_type_object_at_0x7f6a5ba889c0&gt; (14,810 us., 0.07%)</title><rect x="233.8" y="261" width="0.8" height="15.0" fill="rgb(249,72,13)" rx="2" ry="2" />
<text  x="236.77" y="271.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (11,646 us., 0.06%)</title><rect x="443.6" y="197" width="0.7" height="15.0" fill="rgb(215,174,32)" rx="2" ry="2" />
<text  x="446.63" y="207.5" ></text>
</g>
<g >
<title>torch/nn/functional.py(1804):_softmax (1,265,957 us., 6.23%)</title><rect x="445.0" y="245" width="73.5" height="15.0" fill="rgb(238,167,40)" rx="2" ry="2" />
<text  x="447.99" y="255.5" >torch/nn..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (14,810 us., 0.07%)</title><rect x="233.8" y="181" width="0.8" height="15.0" fill="rgb(252,127,54)" rx="2" ry="2" />
<text  x="236.77" y="191.5" ></text>
</g>
<g >
<title>&lt;built-in_method_layer_norm_of_type_object_at_0x7f6a5ba889c0&gt; (14,900 us., 0.07%)</title><rect x="836.6" y="261" width="0.9" height="15.0" fill="rgb(225,0,23)" rx="2" ry="2" />
<text  x="839.61" y="271.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (289,863 us., 1.43%)</title><rect x="870.3" y="165" width="16.9" height="15.0" fill="rgb(239,130,24)" rx="2" ry="2" />
<text  x="873.34" y="175.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (2,165 us., 0.01%)</title><rect x="234.6" y="149" width="0.2" height="15.0" fill="rgb(239,38,44)" rx="2" ry="2" />
<text  x="237.63" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (14,810 us., 0.07%)</title><rect x="233.8" y="197" width="0.8" height="15.0" fill="rgb(248,210,15)" rx="2" ry="2" />
<text  x="236.77" y="207.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (155,941 us., 0.77%)</title><rect x="837.5" y="165" width="9.0" height="15.0" fill="rgb(253,109,28)" rx="2" ry="2" />
<text  x="840.47" y="175.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (2,165 us., 0.01%)</title><rect x="234.6" y="213" width="0.2" height="15.0" fill="rgb(209,19,41)" rx="2" ry="2" />
<text  x="237.63" y="223.5" ></text>
</g>
<g >
<title>&lt;built-in_method_linear_a8_w8_b32_o32_with_scaling_of_PyCapsule_object_at_0x7f6966f1bed0&gt; (316,565 us., 1.56%)</title><rect x="837.5" y="261" width="18.4" height="15.0" fill="rgb(206,122,3)" rx="2" ry="2" />
<text  x="840.47" y="271.5" ></text>
</g>
<g >
<title>torch/nn/functional.py(2099):_embedding (23,326 us., 0.11%)</title><rect x="443.6" y="245" width="1.4" height="15.0" fill="rgb(216,151,14)" rx="2" ry="2" />
<text  x="446.63" y="255.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(43):__shape (431,095 us., 2.12%)</title><rect x="522.0" y="245" width="25.1" height="15.0" fill="rgb(254,165,49)" rx="2" ry="2" />
<text  x="525.01" y="255.5" >t..</text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (2,165 us., 0.01%)</title><rect x="234.6" y="229" width="0.2" height="15.0" fill="rgb(209,214,36)" rx="2" ry="2" />
<text  x="237.63" y="239.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (2,165 us., 0.01%)</title><rect x="234.6" y="133" width="0.2" height="15.0" fill="rgb(247,61,17)" rx="2" ry="2" />
<text  x="237.63" y="143.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (160,624 us., 0.79%)</title><rect x="846.5" y="197" width="9.4" height="15.0" fill="rgb(235,182,28)" rx="2" ry="2" />
<text  x="849.53" y="207.5" ></text>
</g>
<g >
<title>&lt;built-in_method_linear_a8_w8_b8_o8_of_PyCapsule_object_at_0x7f6966f1bf00&gt; (249,077 us., 1.23%)</title><rect x="855.9" y="261" width="14.4" height="15.0" fill="rgb(206,196,54)" rx="2" ry="2" />
<text  x="858.87" y="271.5" ></text>
</g>
<g >
<title>torch_int/nn/linear.py(122):_forward (289,863 us., 1.43%)</title><rect x="870.3" y="245" width="16.9" height="15.0" fill="rgb(207,209,45)" rx="2" ry="2" />
<text  x="873.34" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (155,941 us., 0.77%)</title><rect x="837.5" y="117" width="9.0" height="15.0" fill="rgb(222,66,28)" rx="2" ry="2" />
<text  x="840.47" y="127.5" ></text>
</g>
<g >
<title>torch_int/nn/linear.py(92):_forward (249,077 us., 1.23%)</title><rect x="855.9" y="245" width="14.4" height="15.0" fill="rgb(249,53,37)" rx="2" ry="2" />
<text  x="858.87" y="255.5" ></text>
</g>
<g >
<title>all (20,309,699 us., 100%)</title><rect x="10.0" y="277" width="1180.0" height="15.0" fill="rgb(243,32,27)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (4,979,213 us., 24.52%)</title><rect x="547.1" y="165" width="289.3" height="15.0" fill="rgb(221,21,39)" rx="2" ry="2" />
<text  x="550.06" y="175.5" >torch_int/nn/opt.py(321):_forward</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (14,810 us., 0.07%)</title><rect x="233.8" y="213" width="0.8" height="15.0" fill="rgb(247,208,32)" rx="2" ry="2" />
<text  x="236.77" y="223.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (160,624 us., 0.79%)</title><rect x="846.5" y="149" width="9.4" height="15.0" fill="rgb(212,203,50)" rx="2" ry="2" />
<text  x="849.53" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (249,077 us., 1.23%)</title><rect x="855.9" y="165" width="14.4" height="15.0" fill="rgb(250,92,5)" rx="2" ry="2" />
<text  x="858.87" y="175.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (249,077 us., 1.23%)</title><rect x="855.9" y="85" width="14.4" height="15.0" fill="rgb(227,10,29)" rx="2" ry="2" />
<text  x="858.87" y="95.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (11,646 us., 0.06%)</title><rect x="443.6" y="117" width="0.7" height="15.0" fill="rgb(232,81,34)" rx="2" ry="2" />
<text  x="446.63" y="127.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (249,077 us., 1.23%)</title><rect x="855.9" y="149" width="14.4" height="15.0" fill="rgb(252,125,10)" rx="2" ry="2" />
<text  x="858.87" y="159.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (11,680 us., 0.06%)</title><rect x="444.3" y="149" width="0.7" height="15.0" fill="rgb(222,121,18)" rx="2" ry="2" />
<text  x="447.31" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (431,095 us., 2.12%)</title><rect x="522.0" y="133" width="25.1" height="15.0" fill="rgb(212,222,10)" rx="2" ry="2" />
<text  x="525.01" y="143.5" >n..</text>
</g>
<g >
<title>nn.Module:_W8A8B32O32LinearWithScaling (316,565 us., 1.56%)</title><rect x="837.5" y="213" width="18.4" height="15.0" fill="rgb(214,21,25)" rx="2" ry="2" />
<text  x="840.47" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (14,900 us., 0.07%)</title><rect x="836.6" y="181" width="0.9" height="15.0" fill="rgb(234,146,53)" rx="2" ry="2" />
<text  x="839.61" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (3,595,122 us., 17.70%)</title><rect x="234.8" y="149" width="208.8" height="15.0" fill="rgb(241,37,35)" rx="2" ry="2" />
<text  x="237.75" y="159.5" >nn.Module:_Int8OPTDecoder</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (3,595,122 us., 17.70%)</title><rect x="234.8" y="165" width="208.8" height="15.0" fill="rgb(248,115,46)" rx="2" ry="2" />
<text  x="237.75" y="175.5" >torch_int/nn/opt.py(321):_f..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (3,595,122 us., 17.70%)</title><rect x="234.8" y="117" width="208.8" height="15.0" fill="rgb(244,113,31)" rx="2" ry="2" />
<text  x="237.75" y="127.5" >nn.Module:_Int8OPTForCausalLM</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(89):__expand_mask (4,003 us., 0.02%)</title><rect x="836.4" y="245" width="0.2" height="15.0" fill="rgb(226,36,9)" rx="2" ry="2" />
<text  x="839.38" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (11,646 us., 0.06%)</title><rect x="443.6" y="149" width="0.7" height="15.0" fill="rgb(247,2,26)" rx="2" ry="2" />
<text  x="446.63" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (3,916,546 us., 19.28%)</title><rect x="962.4" y="197" width="227.6" height="15.0" fill="rgb(238,7,37)" rx="2" ry="2" />
<text  x="965.41" y="207.5" >nn.Module:_Int8OPTDecoderLayer</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (4,003 us., 0.02%)</title><rect x="836.4" y="197" width="0.2" height="15.0" fill="rgb(217,71,27)" rx="2" ry="2" />
<text  x="839.38" y="207.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (4,003 us., 0.02%)</title><rect x="836.4" y="213" width="0.2" height="15.0" fill="rgb(223,170,50)" rx="2" ry="2" />
<text  x="839.38" y="223.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (29,501 us., 0.15%)</title><rect x="518.5" y="229" width="1.8" height="15.0" fill="rgb(252,75,10)" rx="2" ry="2" />
<text  x="521.54" y="239.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (30,265 us., 0.15%)</title><rect x="520.3" y="245" width="1.7" height="15.0" fill="rgb(222,97,24)" rx="2" ry="2" />
<text  x="523.25" y="255.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (3,851,415 us., 18.96%)</title><rect x="10.0" y="181" width="223.8" height="15.0" fill="rgb(215,203,22)" rx="2" ry="2" />
<text  x="13.00" y="191.5" >profiling/utils.py(18):_profi..</text>
</g>
<g >
<title>torch/nn/modules/sparse.py(157):_forward (23,326 us., 0.11%)</title><rect x="443.6" y="229" width="1.4" height="15.0" fill="rgb(246,53,31)" rx="2" ry="2" />
<text  x="446.63" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (4,979,213 us., 24.52%)</title><rect x="547.1" y="149" width="289.3" height="15.0" fill="rgb(223,129,18)" rx="2" ry="2" />
<text  x="550.06" y="159.5" >nn.Module:_Int8OPTDecoder</text>
</g>
<g >
<title>torch/nn/functional.py(2488):_layer_norm (14,900 us., 0.07%)</title><rect x="836.6" y="245" width="0.9" height="15.0" fill="rgb(244,205,33)" rx="2" ry="2" />
<text  x="839.61" y="255.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (25,014 us., 0.12%)</title><rect x="961.0" y="229" width="1.4" height="15.0" fill="rgb(243,42,45)" rx="2" ry="2" />
<text  x="963.96" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (249,077 us., 1.23%)</title><rect x="855.9" y="69" width="14.4" height="15.0" fill="rgb(243,101,1)" rx="2" ry="2" />
<text  x="858.87" y="79.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,265,957 us., 6.23%)</title><rect x="445.0" y="69" width="73.5" height="15.0" fill="rgb(246,69,46)" rx="2" ry="2" />
<text  x="447.99" y="79.5" >torch/au..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (30,265 us., 0.15%)</title><rect x="520.3" y="197" width="1.7" height="15.0" fill="rgb(205,141,4)" rx="2" ry="2" />
<text  x="523.25" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (1,265,957 us., 6.23%)</title><rect x="445.0" y="101" width="73.5" height="15.0" fill="rgb(211,62,47)" rx="2" ry="2" />
<text  x="447.99" y="111.5" >nn.Modul..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (249,077 us., 1.23%)</title><rect x="855.9" y="229" width="14.4" height="15.0" fill="rgb(254,27,6)" rx="2" ry="2" />
<text  x="858.87" y="239.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (4,979,213 us., 24.52%)</title><rect x="547.1" y="85" width="289.3" height="15.0" fill="rgb(238,209,44)" rx="2" ry="2" />
<text  x="550.06" y="95.5" >torch/autograd/grad_mode.py(27):_decor..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,265,957 us., 6.23%)</title><rect x="445.0" y="85" width="73.5" height="15.0" fill="rgb(254,1,8)" rx="2" ry="2" />
<text  x="447.99" y="95.5" >profilin..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (431,095 us., 2.12%)</title><rect x="522.0" y="85" width="25.1" height="15.0" fill="rgb(208,110,6)" rx="2" ry="2" />
<text  x="525.01" y="95.5" >p..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (289,863 us., 1.43%)</title><rect x="870.3" y="85" width="16.9" height="15.0" fill="rgb(217,164,32)" rx="2" ry="2" />
<text  x="873.34" y="95.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (160,624 us., 0.79%)</title><rect x="846.5" y="181" width="9.4" height="15.0" fill="rgb(205,65,32)" rx="2" ry="2" />
<text  x="849.53" y="191.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (289,863 us., 1.43%)</title><rect x="870.3" y="197" width="16.9" height="15.0" fill="rgb(247,2,47)" rx="2" ry="2" />
<text  x="873.34" y="207.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (4,979,213 us., 24.52%)</title><rect x="547.1" y="101" width="289.3" height="15.0" fill="rgb(240,135,25)" rx="2" ry="2" />
<text  x="550.06" y="111.5" >profiling/utils.py(18):_profile_model</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (431,095 us., 2.12%)</title><rect x="522.0" y="69" width="25.1" height="15.0" fill="rgb(254,108,26)" rx="2" ry="2" />
<text  x="525.01" y="79.5" >t..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (4,003 us., 0.02%)</title><rect x="836.4" y="133" width="0.2" height="15.0" fill="rgb(211,109,23)" rx="2" ry="2" />
<text  x="839.38" y="143.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (29,501 us., 0.15%)</title><rect x="518.5" y="181" width="1.8" height="15.0" fill="rgb(231,80,9)" rx="2" ry="2" />
<text  x="521.54" y="191.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (4,003 us., 0.02%)</title><rect x="836.4" y="149" width="0.2" height="15.0" fill="rgb(206,199,43)" rx="2" ry="2" />
<text  x="839.38" y="159.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (14,810 us., 0.07%)</title><rect x="233.8" y="165" width="0.8" height="15.0" fill="rgb(224,148,27)" rx="2" ry="2" />
<text  x="236.77" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (4,882 us., 0.02%)</title><rect x="960.6" y="229" width="0.3" height="15.0" fill="rgb(227,14,54)" rx="2" ry="2" />
<text  x="963.58" y="239.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (14,900 us., 0.07%)</title><rect x="836.6" y="117" width="0.9" height="15.0" fill="rgb(214,26,48)" rx="2" ry="2" />
<text  x="839.61" y="127.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (431,095 us., 2.12%)</title><rect x="522.0" y="165" width="25.1" height="15.0" fill="rgb(233,53,35)" rx="2" ry="2" />
<text  x="525.01" y="175.5" >n..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (25,014 us., 0.12%)</title><rect x="961.0" y="181" width="1.4" height="15.0" fill="rgb(215,146,13)" rx="2" ry="2" />
<text  x="963.96" y="191.5" ></text>
</g>
<g >
<title>&lt;built-in_method_embedding_of_type_object_at_0x7f6a5ba889c0&gt; (23,326 us., 0.11%)</title><rect x="443.6" y="261" width="1.4" height="15.0" fill="rgb(233,10,34)" rx="2" ry="2" />
<text  x="446.63" y="271.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (3,916,546 us., 19.28%)</title><rect x="962.4" y="181" width="227.6" height="15.0" fill="rgb(228,160,47)" rx="2" ry="2" />
<text  x="965.41" y="191.5" >torch_int/nn/opt.py(321):_forw..</text>
</g>
<g >
<title>torch_int/nn/opt.py(300):__prepare_decoder_attention_mask (29,501 us., 0.15%)</title><rect x="518.5" y="245" width="1.8" height="15.0" fill="rgb(251,54,25)" rx="2" ry="2" />
<text  x="521.54" y="255.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(300):__prepare_decoder_attention_mask (4,003 us., 0.02%)</title><rect x="836.4" y="229" width="0.2" height="15.0" fill="rgb(210,62,20)" rx="2" ry="2" />
<text  x="839.38" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (2,165 us., 0.01%)</title><rect x="234.6" y="197" width="0.2" height="15.0" fill="rgb(247,157,23)" rx="2" ry="2" />
<text  x="237.63" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (2,165 us., 0.01%)</title><rect x="234.6" y="165" width="0.2" height="15.0" fill="rgb(238,166,4)" rx="2" ry="2" />
<text  x="237.63" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (3,916,546 us., 19.28%)</title><rect x="962.4" y="133" width="227.6" height="15.0" fill="rgb(229,69,14)" rx="2" ry="2" />
<text  x="965.41" y="143.5" >nn.Module:_Int8OPTForCausalLM</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (29,501 us., 0.15%)</title><rect x="518.5" y="165" width="1.8" height="15.0" fill="rgb(246,164,45)" rx="2" ry="2" />
<text  x="521.54" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_Linear (3,851,415 us., 18.96%)</title><rect x="10.0" y="229" width="223.8" height="15.0" fill="rgb(219,118,34)" rx="2" ry="2" />
<text  x="13.00" y="239.5" >nn.Module:_Linear</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (1,262,347 us., 6.22%)</title><rect x="887.2" y="165" width="73.3" height="15.0" fill="rgb(251,30,49)" rx="2" ry="2" />
<text  x="890.18" y="175.5" >torch_in..</text>
</g>
<g >
<title>torch_int/nn/opt.py(183):_forward (3,595,122 us., 17.70%)</title><rect x="234.8" y="197" width="208.8" height="15.0" fill="rgb(227,104,21)" rx="2" ry="2" />
<text  x="237.75" y="207.5" >torch_int/nn/opt.py(183):_f..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (289,863 us., 1.43%)</title><rect x="870.3" y="101" width="16.9" height="15.0" fill="rgb(238,125,26)" rx="2" ry="2" />
<text  x="873.34" y="111.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (25,014 us., 0.12%)</title><rect x="961.0" y="245" width="1.4" height="15.0" fill="rgb(220,106,36)" rx="2" ry="2" />
<text  x="963.96" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (1,262,347 us., 6.22%)</title><rect x="887.2" y="117" width="73.3" height="15.0" fill="rgb(245,63,37)" rx="2" ry="2" />
<text  x="890.18" y="127.5" >nn.Modul..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (4,979,213 us., 24.52%)</title><rect x="547.1" y="117" width="289.3" height="15.0" fill="rgb(240,75,15)" rx="2" ry="2" />
<text  x="550.06" y="127.5" >nn.Module:_Int8OPTForCausalLM</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (11,680 us., 0.06%)</title><rect x="444.3" y="181" width="0.7" height="15.0" fill="rgb(220,24,8)" rx="2" ry="2" />
<text  x="447.31" y="191.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (29,501 us., 0.15%)</title><rect x="518.5" y="149" width="1.8" height="15.0" fill="rgb(224,67,22)" rx="2" ry="2" />
<text  x="521.54" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (3,916,546 us., 19.28%)</title><rect x="962.4" y="165" width="227.6" height="15.0" fill="rgb(253,217,2)" rx="2" ry="2" />
<text  x="965.41" y="175.5" >nn.Module:_Int8OPTDecoder</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (289,863 us., 1.43%)</title><rect x="870.3" y="133" width="16.9" height="15.0" fill="rgb(208,225,38)" rx="2" ry="2" />
<text  x="873.34" y="143.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (11,680 us., 0.06%)</title><rect x="444.3" y="213" width="0.7" height="15.0" fill="rgb(228,8,27)" rx="2" ry="2" />
<text  x="447.31" y="223.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (316,565 us., 1.56%)</title><rect x="837.5" y="229" width="18.4" height="15.0" fill="rgb(208,111,11)" rx="2" ry="2" />
<text  x="840.47" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (4,979,213 us., 24.52%)</title><rect x="547.1" y="213" width="289.3" height="15.0" fill="rgb(237,33,18)" rx="2" ry="2" />
<text  x="550.06" y="223.5" >nn.Module:_Int8OPTAttention</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (1,262,347 us., 6.22%)</title><rect x="887.2" y="149" width="73.3" height="15.0" fill="rgb(214,82,0)" rx="2" ry="2" />
<text  x="890.18" y="159.5" >nn.Modul..</text>
</g>
<g >
<title>torch_int/nn/opt.py(321):_forward (249,077 us., 1.23%)</title><rect x="855.9" y="117" width="14.4" height="15.0" fill="rgb(245,5,42)" rx="2" ry="2" />
<text  x="858.87" y="127.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (249,077 us., 1.23%)</title><rect x="855.9" y="181" width="14.4" height="15.0" fill="rgb(213,65,51)" rx="2" ry="2" />
<text  x="858.87" y="191.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (249,077 us., 1.23%)</title><rect x="855.9" y="37" width="14.4" height="15.0" fill="rgb(232,68,31)" rx="2" ry="2" />
<text  x="858.87" y="47.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (160,624 us., 0.79%)</title><rect x="846.5" y="53" width="9.4" height="15.0" fill="rgb(221,19,46)" rx="2" ry="2" />
<text  x="849.53" y="63.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(46):_forward (1,262,347 us., 6.22%)</title><rect x="887.2" y="245" width="73.3" height="15.0" fill="rgb(235,59,10)" rx="2" ry="2" />
<text  x="890.18" y="255.5" >torch_in..</text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (431,095 us., 2.12%)</title><rect x="522.0" y="197" width="25.1" height="15.0" fill="rgb(249,77,13)" rx="2" ry="2" />
<text  x="525.01" y="207.5" >n..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (2,165 us., 0.01%)</title><rect x="234.6" y="181" width="0.2" height="15.0" fill="rgb(216,97,16)" rx="2" ry="2" />
<text  x="237.63" y="191.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (289,863 us., 1.43%)</title><rect x="870.3" y="229" width="16.9" height="15.0" fill="rgb(215,113,39)" rx="2" ry="2" />
<text  x="873.34" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (25,014 us., 0.12%)</title><rect x="961.0" y="213" width="1.4" height="15.0" fill="rgb(253,164,7)" rx="2" ry="2" />
<text  x="963.96" y="223.5" ></text>
</g>
</g>
</svg>
