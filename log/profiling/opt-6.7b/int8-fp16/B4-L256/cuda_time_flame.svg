<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="326" onload="init(evt)" viewBox="0 0 1200 326" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="326.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >CUDA Time</text>
<text id="details" x="10.00" y="309" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="309" > </text>
<g id="frames">
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (600 us., 0.01%)</title><rect x="1189.9" y="245" width="0.1" height="15.0" fill="rgb(214,42,7)" rx="2" ry="2" />
<text  x="1192.85" y="255.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (897 us., 0.02%)</title><rect x="83.1" y="149" width="0.3" height="15.0" fill="rgb(234,187,39)" rx="2" ry="2" />
<text  x="86.15" y="159.5" ></text>
</g>
<g >
<title>torch_int/nn/linear.py(225):_forward (162,196 us., 3.36%)</title><rect x="877.3" y="245" width="39.6" height="15.0" fill="rgb(238,208,12)" rx="2" ry="2" />
<text  x="880.26" y="255.5" >tor..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (492,947 us., 10.20%)</title><rect x="283.7" y="165" width="120.4" height="15.0" fill="rgb(220,78,33)" rx="2" ry="2" />
<text  x="286.74" y="175.5" >nn.Module:_Int8..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (83,742 us., 1.73%)</title><rect x="896.4" y="133" width="20.5" height="15.0" fill="rgb(206,73,35)" rx="2" ry="2" />
<text  x="899.42" y="143.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(213):_forward (322,467 us., 6.67%)</title><rect x="85.4" y="181" width="78.8" height="15.0" fill="rgb(249,162,22)" rx="2" ry="2" />
<text  x="88.44" y="191.5" >torch_int..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (3,359 us., 0.07%)</title><rect x="791.2" y="149" width="0.8" height="15.0" fill="rgb(232,119,9)" rx="2" ry="2" />
<text  x="794.23" y="159.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (897 us., 0.02%)</title><rect x="83.1" y="213" width="0.3" height="15.0" fill="rgb(250,133,45)" rx="2" ry="2" />
<text  x="86.15" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (83,742 us., 1.73%)</title><rect x="896.4" y="101" width="20.5" height="15.0" fill="rgb(238,203,44)" rx="2" ry="2" />
<text  x="899.42" y="111.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (897 us., 0.02%)</title><rect x="83.1" y="133" width="0.3" height="15.0" fill="rgb(234,32,12)" rx="2" ry="2" />
<text  x="86.15" y="143.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (139,765 us., 2.89%)</title><rect x="916.9" y="149" width="34.1" height="15.0" fill="rgb(223,120,31)" rx="2" ry="2" />
<text  x="919.88" y="159.5" >nn..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (320,687 us., 6.64%)</title><rect x="951.0" y="85" width="78.3" height="15.0" fill="rgb(227,90,23)" rx="2" ry="2" />
<text  x="954.01" y="95.5" >torch/aut..</text>
</g>
<g >
<title>torch_int/nn/opt.py(72):_forward (133,613 us., 2.77%)</title><rect x="844.6" y="197" width="32.7" height="15.0" fill="rgb(214,51,9)" rx="2" ry="2" />
<text  x="847.63" y="207.5" >to..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (3,830 us., 0.08%)</title><rect x="1029.5" y="181" width="0.9" height="15.0" fill="rgb(249,221,47)" rx="2" ry="2" />
<text  x="1032.50" y="191.5" ></text>
</g>
<g >
<title>&lt;built-in_method_layer_norm_of_type_object_at_0x7fdb4edaa9c0&gt; (218,656 us., 4.53%)</title><rect x="791.2" y="261" width="53.4" height="15.0" fill="rgb(242,157,8)" rx="2" ry="2" />
<text  x="794.23" y="271.5" >&lt;buil..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (78,454 us., 1.62%)</title><rect x="877.3" y="133" width="19.1" height="15.0" fill="rgb(250,170,18)" rx="2" ry="2" />
<text  x="880.26" y="143.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (83,742 us., 1.73%)</title><rect x="896.4" y="181" width="20.5" height="15.0" fill="rgb(211,115,36)" rx="2" ry="2" />
<text  x="899.42" y="191.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (3,359 us., 0.07%)</title><rect x="791.2" y="133" width="0.8" height="15.0" fill="rgb(230,9,18)" rx="2" ry="2" />
<text  x="794.23" y="143.5" ></text>
</g>
<g >
<title>torch/nn/modules/normalization.py(188):_forward (3,359 us., 0.07%)</title><rect x="791.2" y="229" width="0.8" height="15.0" fill="rgb(236,11,4)" rx="2" ry="2" />
<text  x="794.23" y="239.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(213):_forward (1,370,062 us., 28.36%)</title><rect x="456.2" y="197" width="334.7" height="15.0" fill="rgb(222,217,24)" rx="2" ry="2" />
<text  x="459.24" y="207.5" >torch_int/nn/opt.py(213):_forward</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (215,297 us., 4.46%)</title><rect x="792.0" y="181" width="52.6" height="15.0" fill="rgb(221,135,19)" rx="2" ry="2" />
<text  x="795.05" y="191.5" >nn.Mo..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (652,731 us., 13.51%)</title><rect x="1030.4" y="197" width="159.5" height="15.0" fill="rgb(254,110,42)" rx="2" ry="2" />
<text  x="1033.43" y="207.5" >nn.Module:_Int8OPTDe..</text>
</g>
<g >
<title>torch_int/nn/opt.py(213):_forward (492,947 us., 10.20%)</title><rect x="283.7" y="245" width="120.4" height="15.0" fill="rgb(220,183,31)" rx="2" ry="2" />
<text  x="286.74" y="255.5" >torch_int/nn/op..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (83,742 us., 1.73%)</title><rect x="896.4" y="53" width="20.5" height="15.0" fill="rgb(214,167,37)" rx="2" ry="2" />
<text  x="899.42" y="63.5" ></text>
</g>
<g >
<title>torch/nn/modules/sparse.py(157):_forward (8,488 us., 0.18%)</title><rect x="83.4" y="229" width="2.0" height="15.0" fill="rgb(243,197,5)" rx="2" ry="2" />
<text  x="86.37" y="239.5" ></text>
</g>
<g >
<title>torch/nn/modules/linear.py(113):_forward (299,497 us., 6.20%)</title><rect x="10.0" y="245" width="73.1" height="15.0" fill="rgb(237,106,6)" rx="2" ry="2" />
<text  x="13.00" y="255.5" >torch/nn..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (3,359 us., 0.07%)</title><rect x="791.2" y="181" width="0.8" height="15.0" fill="rgb(211,133,2)" rx="2" ry="2" />
<text  x="794.23" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (320,687 us., 6.64%)</title><rect x="951.0" y="213" width="78.3" height="15.0" fill="rgb(205,148,50)" rx="2" ry="2" />
<text  x="954.01" y="223.5" >nn.Module..</text>
</g>
<g >
<title>torch_int/nn/opt.py(213):_forward (652,731 us., 13.51%)</title><rect x="1030.4" y="213" width="159.5" height="15.0" fill="rgb(205,193,24)" rx="2" ry="2" />
<text  x="1033.43" y="223.5" >torch_int/nn/opt.py(..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (133,613 us., 2.77%)</title><rect x="844.6" y="69" width="32.7" height="15.0" fill="rgb(244,220,21)" rx="2" ry="2" />
<text  x="847.63" y="79.5" >nn..</text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (211,240 us., 4.37%)</title><rect x="404.6" y="197" width="51.6" height="15.0" fill="rgb(245,139,1)" rx="2" ry="2" />
<text  x="407.65" y="207.5" >nn.Mo..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (320,687 us., 6.64%)</title><rect x="951.0" y="117" width="78.3" height="15.0" fill="rgb(234,199,7)" rx="2" ry="2" />
<text  x="954.01" y="127.5" >nn.Module..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (133,613 us., 2.77%)</title><rect x="844.6" y="37" width="32.7" height="15.0" fill="rgb(241,193,12)" rx="2" ry="2" />
<text  x="847.63" y="47.5" >to..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (652,731 us., 13.51%)</title><rect x="1030.4" y="165" width="159.5" height="15.0" fill="rgb(222,135,48)" rx="2" ry="2" />
<text  x="1033.43" y="175.5" >nn.Module:_Int8OPTDe..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (600 us., 0.01%)</title><rect x="1189.9" y="197" width="0.1" height="15.0" fill="rgb(236,75,46)" rx="2" ry="2" />
<text  x="1192.85" y="207.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (78,454 us., 1.62%)</title><rect x="877.3" y="165" width="19.1" height="15.0" fill="rgb(211,120,37)" rx="2" ry="2" />
<text  x="880.26" y="175.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(213):_forward (83,742 us., 1.73%)</title><rect x="896.4" y="149" width="20.5" height="15.0" fill="rgb(228,97,12)" rx="2" ry="2" />
<text  x="899.42" y="159.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (211,240 us., 4.37%)</title><rect x="404.6" y="213" width="51.6" height="15.0" fill="rgb(218,9,8)" rx="2" ry="2" />
<text  x="407.65" y="223.5" >torch..</text>
</g>
<g >
<title>torch/nn/functional.py(1804):_softmax (322,467 us., 6.67%)</title><rect x="85.4" y="245" width="78.8" height="15.0" fill="rgb(225,205,28)" rx="2" ry="2" />
<text  x="88.44" y="255.5" >torch/nn/..</text>
</g>
<g >
<title>nn.Module:_LayerNorm (3,359 us., 0.07%)</title><rect x="791.2" y="213" width="0.8" height="15.0" fill="rgb(216,203,15)" rx="2" ry="2" />
<text  x="794.23" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (4,512 us., 0.09%)</title><rect x="83.4" y="181" width="1.1" height="15.0" fill="rgb(213,121,27)" rx="2" ry="2" />
<text  x="86.37" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (489,439 us., 10.13%)</title><rect x="164.2" y="133" width="119.5" height="15.0" fill="rgb(240,121,52)" rx="2" ry="2" />
<text  x="167.20" y="143.5" >nn.Module:_Int..</text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (320,687 us., 6.64%)</title><rect x="951.0" y="165" width="78.3" height="15.0" fill="rgb(217,98,27)" rx="2" ry="2" />
<text  x="954.01" y="175.5" >torch_int..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (1,370,062 us., 28.36%)</title><rect x="456.2" y="117" width="334.7" height="15.0" fill="rgb(218,61,13)" rx="2" ry="2" />
<text  x="459.24" y="127.5" >nn.Module:_Int8OPTForCausalLM</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (3,976 us., 0.08%)</title><rect x="84.5" y="149" width="0.9" height="15.0" fill="rgb(209,210,24)" rx="2" ry="2" />
<text  x="87.47" y="159.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(72):_forward (83,742 us., 1.73%)</title><rect x="896.4" y="197" width="20.5" height="15.0" fill="rgb(225,13,26)" rx="2" ry="2" />
<text  x="899.42" y="207.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (492,947 us., 10.20%)</title><rect x="283.7" y="181" width="120.4" height="15.0" fill="rgb(248,67,22)" rx="2" ry="2" />
<text  x="286.74" y="191.5" >transformers/mo..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (322,467 us., 6.67%)</title><rect x="85.4" y="69" width="78.8" height="15.0" fill="rgb(215,207,5)" rx="2" ry="2" />
<text  x="88.44" y="79.5" >torch/aut..</text>
</g>
<g >
<title>nn.Module:_W8A8B8O8LinearReLU (139,765 us., 2.89%)</title><rect x="916.9" y="213" width="34.1" height="15.0" fill="rgb(232,163,40)" rx="2" ry="2" />
<text  x="919.88" y="223.5" >nn..</text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (133,613 us., 2.77%)</title><rect x="844.6" y="117" width="32.7" height="15.0" fill="rgb(205,56,14)" rx="2" ry="2" />
<text  x="847.63" y="127.5" >to..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (139,765 us., 2.89%)</title><rect x="916.9" y="229" width="34.1" height="15.0" fill="rgb(207,59,7)" rx="2" ry="2" />
<text  x="919.88" y="239.5" >to..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (2,097 us., 0.04%)</title><rect x="404.1" y="181" width="0.5" height="15.0" fill="rgb(218,87,44)" rx="2" ry="2" />
<text  x="407.14" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (600 us., 0.01%)</title><rect x="1189.9" y="213" width="0.1" height="15.0" fill="rgb(232,26,53)" rx="2" ry="2" />
<text  x="1192.85" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (3,976 us., 0.08%)</title><rect x="84.5" y="197" width="0.9" height="15.0" fill="rgb(225,0,48)" rx="2" ry="2" />
<text  x="87.47" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (492,947 us., 10.20%)</title><rect x="283.7" y="229" width="120.4" height="15.0" fill="rgb(238,116,40)" rx="2" ry="2" />
<text  x="286.74" y="239.5" >nn.Module:_Int8..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (652,731 us., 13.51%)</title><rect x="1030.4" y="101" width="159.5" height="15.0" fill="rgb(251,11,21)" rx="2" ry="2" />
<text  x="1033.43" y="111.5" >torch/autograd/grad_..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (3,976 us., 0.08%)</title><rect x="84.5" y="101" width="0.9" height="15.0" fill="rgb(247,116,49)" rx="2" ry="2" />
<text  x="87.47" y="111.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (320,687 us., 6.64%)</title><rect x="951.0" y="133" width="78.3" height="15.0" fill="rgb(235,119,40)" rx="2" ry="2" />
<text  x="954.01" y="143.5" >transform..</text>
</g>
<g >
<title>&lt;built-in_method_embedding_of_type_object_at_0x7fdb4edaa9c0&gt; (8,488 us., 0.18%)</title><rect x="83.4" y="261" width="2.0" height="15.0" fill="rgb(241,108,31)" rx="2" ry="2" />
<text  x="86.37" y="271.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (492,947 us., 10.20%)</title><rect x="283.7" y="149" width="120.4" height="15.0" fill="rgb(239,137,23)" rx="2" ry="2" />
<text  x="286.74" y="159.5" >profiling/utils..</text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (897 us., 0.02%)</title><rect x="83.1" y="229" width="0.3" height="15.0" fill="rgb(239,174,47)" rx="2" ry="2" />
<text  x="86.15" y="239.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(325):__prepare_decoder_attention_mask (1,171 us., 0.02%)</title><rect x="790.9" y="229" width="0.3" height="15.0" fill="rgb(211,123,29)" rx="2" ry="2" />
<text  x="793.94" y="239.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (215,297 us., 4.46%)</title><rect x="792.0" y="85" width="52.6" height="15.0" fill="rgb(220,131,47)" rx="2" ry="2" />
<text  x="795.05" y="95.5" >torch..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (3,830 us., 0.08%)</title><rect x="1029.5" y="213" width="0.9" height="15.0" fill="rgb(253,161,25)" rx="2" ry="2" />
<text  x="1032.50" y="223.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (4,512 us., 0.09%)</title><rect x="83.4" y="117" width="1.1" height="15.0" fill="rgb(217,107,3)" rx="2" ry="2" />
<text  x="86.37" y="127.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (322,467 us., 6.67%)</title><rect x="85.4" y="197" width="78.8" height="15.0" fill="rgb(210,165,46)" rx="2" ry="2" />
<text  x="88.44" y="207.5" >nn.Module..</text>
</g>
<g >
<title>nn.Module:_W8A8BFP32OFP32Linear (162,196 us., 3.36%)</title><rect x="877.3" y="213" width="39.6" height="15.0" fill="rgb(232,83,7)" rx="2" ry="2" />
<text  x="880.26" y="223.5" >nn...</text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (3,830 us., 0.08%)</title><rect x="1029.5" y="261" width="0.9" height="15.0" fill="rgb(231,53,35)" rx="2" ry="2" />
<text  x="1032.50" y="271.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (78,454 us., 1.62%)</title><rect x="877.3" y="117" width="19.1" height="15.0" fill="rgb(209,157,40)" rx="2" ry="2" />
<text  x="880.26" y="127.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(72):_forward (652,731 us., 13.51%)</title><rect x="1030.4" y="261" width="159.5" height="15.0" fill="rgb(223,69,24)" rx="2" ry="2" />
<text  x="1033.43" y="271.5" >torch_int/nn/opt.py(..</text>
</g>
<g >
<title>&lt;built-in_method_linear_a8_w8_b8_o8_of_PyCapsule_object_at_0x7fda5a245810&gt; (133,613 us., 2.77%)</title><rect x="844.6" y="261" width="32.7" height="15.0" fill="rgb(211,210,12)" rx="2" ry="2" />
<text  x="847.63" y="271.5" >&lt;b..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (3,359 us., 0.07%)</title><rect x="791.2" y="165" width="0.8" height="15.0" fill="rgb(213,180,4)" rx="2" ry="2" />
<text  x="794.23" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (215,297 us., 4.46%)</title><rect x="792.0" y="117" width="52.6" height="15.0" fill="rgb(220,153,9)" rx="2" ry="2" />
<text  x="795.05" y="127.5" >nn.Mo..</text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (139,765 us., 2.89%)</title><rect x="916.9" y="165" width="34.1" height="15.0" fill="rgb(230,216,8)" rx="2" ry="2" />
<text  x="919.88" y="175.5" >to..</text>
</g>
<g >
<title>torch_int/nn/opt.py(72):_forward (322,467 us., 6.67%)</title><rect x="85.4" y="229" width="78.8" height="15.0" fill="rgb(236,18,19)" rx="2" ry="2" />
<text  x="88.44" y="239.5" >torch_int..</text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (489,439 us., 10.13%)</title><rect x="164.2" y="181" width="119.5" height="15.0" fill="rgb(239,30,20)" rx="2" ry="2" />
<text  x="167.20" y="191.5" >torch_int/nn/o..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (320,687 us., 6.64%)</title><rect x="951.0" y="229" width="78.3" height="15.0" fill="rgb(206,78,10)" rx="2" ry="2" />
<text  x="954.01" y="239.5" >torch/aut..</text>
</g>
<g >
<title>&lt;built-in_method_linear_relu_a8_w8_b8_o8_of_PyCapsule_object_at_0x7fda5a245750&gt; (139,765 us., 2.89%)</title><rect x="916.9" y="261" width="34.1" height="15.0" fill="rgb(227,219,53)" rx="2" ry="2" />
<text  x="919.88" y="271.5" >&lt;b..</text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (1,171 us., 0.02%)</title><rect x="790.9" y="213" width="0.3" height="15.0" fill="rgb(236,175,15)" rx="2" ry="2" />
<text  x="793.94" y="223.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (1,370,062 us., 28.36%)</title><rect x="456.2" y="229" width="334.7" height="15.0" fill="rgb(236,124,27)" rx="2" ry="2" />
<text  x="459.24" y="239.5" >torch/autograd/grad_mode.py(24):_decorate_con..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(89):__expand_mask (1,171 us., 0.02%)</title><rect x="790.9" y="245" width="0.3" height="15.0" fill="rgb(227,95,46)" rx="2" ry="2" />
<text  x="793.94" y="255.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (4,512 us., 0.09%)</title><rect x="83.4" y="165" width="1.1" height="15.0" fill="rgb(231,87,52)" rx="2" ry="2" />
<text  x="86.37" y="175.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(213):_forward (133,613 us., 2.77%)</title><rect x="844.6" y="149" width="32.7" height="15.0" fill="rgb(250,97,28)" rx="2" ry="2" />
<text  x="847.63" y="159.5" >to..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (600 us., 0.01%)</title><rect x="1189.9" y="149" width="0.1" height="15.0" fill="rgb(215,169,6)" rx="2" ry="2" />
<text  x="1192.85" y="159.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(72):_forward (1,370,062 us., 28.36%)</title><rect x="456.2" y="245" width="334.7" height="15.0" fill="rgb(226,39,5)" rx="2" ry="2" />
<text  x="459.24" y="255.5" >torch_int/nn/opt.py(72):_forward</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (78,454 us., 1.62%)</title><rect x="877.3" y="101" width="19.1" height="15.0" fill="rgb(220,24,30)" rx="2" ry="2" />
<text  x="880.26" y="111.5" ></text>
</g>
<g >
<title>nn.Module:_Embedding (4,512 us., 0.09%)</title><rect x="83.4" y="213" width="1.1" height="15.0" fill="rgb(211,123,13)" rx="2" ry="2" />
<text  x="86.37" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (320,687 us., 6.64%)</title><rect x="951.0" y="149" width="78.3" height="15.0" fill="rgb(254,31,14)" rx="2" ry="2" />
<text  x="954.01" y="159.5" >nn.Module..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,171 us., 0.02%)</title><rect x="790.9" y="133" width="0.3" height="15.0" fill="rgb(206,191,3)" rx="2" ry="2" />
<text  x="793.94" y="143.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (211,240 us., 4.37%)</title><rect x="404.6" y="165" width="51.6" height="15.0" fill="rgb(250,145,0)" rx="2" ry="2" />
<text  x="407.65" y="175.5" >nn.Mo..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (83,742 us., 1.73%)</title><rect x="896.4" y="69" width="20.5" height="15.0" fill="rgb(235,201,38)" rx="2" ry="2" />
<text  x="899.42" y="79.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (299,497 us., 6.20%)</title><rect x="10.0" y="213" width="73.1" height="15.0" fill="rgb(228,112,48)" rx="2" ry="2" />
<text  x="13.00" y="223.5" >transfor..</text>
</g>
<g >
<title>torch_int/nn/opt.py(72):_forward (211,240 us., 4.37%)</title><rect x="404.6" y="229" width="51.6" height="15.0" fill="rgb(249,226,32)" rx="2" ry="2" />
<text  x="407.65" y="239.5" >torch..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (215,297 us., 4.46%)</title><rect x="792.0" y="101" width="52.6" height="15.0" fill="rgb(223,148,48)" rx="2" ry="2" />
<text  x="795.05" y="111.5" >profi..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (211,240 us., 4.37%)</title><rect x="404.6" y="117" width="51.6" height="15.0" fill="rgb(249,158,5)" rx="2" ry="2" />
<text  x="407.65" y="127.5" >trans..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (320,687 us., 6.64%)</title><rect x="951.0" y="101" width="78.3" height="15.0" fill="rgb(210,14,25)" rx="2" ry="2" />
<text  x="954.01" y="111.5" >profiling..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (3,359 us., 0.07%)</title><rect x="791.2" y="117" width="0.8" height="15.0" fill="rgb(246,10,41)" rx="2" ry="2" />
<text  x="794.23" y="127.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (162,196 us., 3.36%)</title><rect x="877.3" y="229" width="39.6" height="15.0" fill="rgb(212,47,39)" rx="2" ry="2" />
<text  x="880.26" y="239.5" >tor..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (83,742 us., 1.73%)</title><rect x="896.4" y="85" width="20.5" height="15.0" fill="rgb(206,159,24)" rx="2" ry="2" />
<text  x="899.42" y="95.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (133,613 us., 2.77%)</title><rect x="844.6" y="85" width="32.7" height="15.0" fill="rgb(235,83,5)" rx="2" ry="2" />
<text  x="847.63" y="95.5" >tr..</text>
</g>
<g >
<title>torch/nn/functional.py(2099):_embedding (8,488 us., 0.18%)</title><rect x="83.4" y="245" width="2.0" height="15.0" fill="rgb(231,92,21)" rx="2" ry="2" />
<text  x="86.37" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (652,731 us., 13.51%)</title><rect x="1030.4" y="133" width="159.5" height="15.0" fill="rgb(229,191,0)" rx="2" ry="2" />
<text  x="1033.43" y="143.5" >nn.Module:_Int8OPTFo..</text>
</g>
<g >
<title>nn.Module:_LayerNormQ (489,439 us., 10.13%)</title><rect x="164.2" y="229" width="119.5" height="15.0" fill="rgb(246,73,17)" rx="2" ry="2" />
<text  x="167.20" y="239.5" >nn.Module:_Lay..</text>
</g>
<g >
<title>nn.Module:_W8A8B8O8Linear (133,613 us., 2.77%)</title><rect x="844.6" y="213" width="32.7" height="15.0" fill="rgb(246,43,40)" rx="2" ry="2" />
<text  x="847.63" y="223.5" >nn..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (211,240 us., 4.37%)</title><rect x="404.6" y="85" width="51.6" height="15.0" fill="rgb(233,179,2)" rx="2" ry="2" />
<text  x="407.65" y="95.5" >profi..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (652,731 us., 13.51%)</title><rect x="1030.4" y="117" width="159.5" height="15.0" fill="rgb(230,126,31)" rx="2" ry="2" />
<text  x="1033.43" y="127.5" >profiling/utils.py(1..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (133,613 us., 2.77%)</title><rect x="844.6" y="53" width="32.7" height="15.0" fill="rgb(219,150,1)" rx="2" ry="2" />
<text  x="847.63" y="63.5" >pr..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (3,830 us., 0.08%)</title><rect x="1029.5" y="197" width="0.9" height="15.0" fill="rgb(211,151,24)" rx="2" ry="2" />
<text  x="1032.50" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (78,454 us., 1.62%)</title><rect x="877.3" y="181" width="19.1" height="15.0" fill="rgb(225,133,43)" rx="2" ry="2" />
<text  x="880.26" y="191.5" ></text>
</g>
<g >
<title>torch_int/nn/fused.py(13):_forward (215,297 us., 4.46%)</title><rect x="792.0" y="229" width="52.6" height="15.0" fill="rgb(229,5,42)" rx="2" ry="2" />
<text  x="795.05" y="239.5" >torch..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (322,467 us., 6.67%)</title><rect x="85.4" y="85" width="78.8" height="15.0" fill="rgb(249,189,4)" rx="2" ry="2" />
<text  x="88.44" y="95.5" >profiling..</text>
</g>
<g >
<title>&lt;built-in_method_encode_of_str_object_at_0x7fda5a8a24b0&gt; (2,889,723 us., 59.81%)</title><rect x="85.4" y="261" width="705.8" height="15.0" fill="rgb(252,97,24)" rx="2" ry="2" />
<text  x="88.44" y="271.5" >&lt;built-in_method_encode_of_str_object_at_0x7fda5a8a24b0&gt;</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (489,439 us., 10.13%)</title><rect x="164.2" y="117" width="119.5" height="15.0" fill="rgb(207,36,50)" rx="2" ry="2" />
<text  x="167.20" y="127.5" >profiling/util..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (2,097 us., 0.04%)</title><rect x="404.1" y="165" width="0.5" height="15.0" fill="rgb(226,140,53)" rx="2" ry="2" />
<text  x="407.14" y="175.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (3,976 us., 0.08%)</title><rect x="84.5" y="213" width="0.9" height="15.0" fill="rgb(231,58,5)" rx="2" ry="2" />
<text  x="87.47" y="223.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(72):_forward (320,687 us., 6.64%)</title><rect x="951.0" y="245" width="78.3" height="15.0" fill="rgb(231,117,18)" rx="2" ry="2" />
<text  x="954.01" y="255.5" >torch_int..</text>
</g>
<g >
<title>torch_int/nn/opt.py(213):_forward (320,687 us., 6.64%)</title><rect x="951.0" y="197" width="78.3" height="15.0" fill="rgb(222,166,0)" rx="2" ry="2" />
<text  x="954.01" y="207.5" >torch_int..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (3,830 us., 0.08%)</title><rect x="1029.5" y="245" width="0.9" height="15.0" fill="rgb(210,35,49)" rx="2" ry="2" />
<text  x="1032.50" y="255.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (83,742 us., 1.73%)</title><rect x="896.4" y="117" width="20.5" height="15.0" fill="rgb(224,109,26)" rx="2" ry="2" />
<text  x="899.42" y="127.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (3,830 us., 0.08%)</title><rect x="1029.5" y="229" width="0.9" height="15.0" fill="rgb(225,118,34)" rx="2" ry="2" />
<text  x="1032.50" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (133,613 us., 2.77%)</title><rect x="844.6" y="101" width="32.7" height="15.0" fill="rgb(237,210,17)" rx="2" ry="2" />
<text  x="847.63" y="111.5" >nn..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,171 us., 0.02%)</title><rect x="790.9" y="181" width="0.3" height="15.0" fill="rgb(214,40,26)" rx="2" ry="2" />
<text  x="793.94" y="191.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (211,240 us., 4.37%)</title><rect x="404.6" y="149" width="51.6" height="15.0" fill="rgb(221,184,13)" rx="2" ry="2" />
<text  x="407.65" y="159.5" >torch..</text>
</g>
<g >
<title>&lt;built-in_method_cumsum_of_type_object_at_0x7fdb4edaa9c0&gt; (897 us., 0.02%)</title><rect x="83.1" y="261" width="0.3" height="15.0" fill="rgb(211,120,0)" rx="2" ry="2" />
<text  x="86.15" y="271.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (215,297 us., 4.46%)</title><rect x="792.0" y="133" width="52.6" height="15.0" fill="rgb(248,120,14)" rx="2" ry="2" />
<text  x="795.05" y="143.5" >trans..</text>
</g>
<g >
<title>torch_int/nn/opt.py(213):_forward (211,240 us., 4.37%)</title><rect x="404.6" y="181" width="51.6" height="15.0" fill="rgb(231,118,2)" rx="2" ry="2" />
<text  x="407.65" y="191.5" >torch..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (2,097 us., 0.04%)</title><rect x="404.1" y="149" width="0.5" height="15.0" fill="rgb(216,187,38)" rx="2" ry="2" />
<text  x="407.14" y="159.5" ></text>
</g>
<g >
<title>&lt;built-in_method_linear_a8_w8_bfp32_ofp32_of_PyCapsule_object_at_0x7fda5a2457b0&gt; (162,196 us., 3.36%)</title><rect x="877.3" y="261" width="39.6" height="15.0" fill="rgb(218,80,49)" rx="2" ry="2" />
<text  x="880.26" y="271.5" >&lt;bu..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (3,976 us., 0.08%)</title><rect x="84.5" y="165" width="0.9" height="15.0" fill="rgb(238,167,52)" rx="2" ry="2" />
<text  x="87.47" y="175.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (897 us., 0.02%)</title><rect x="83.1" y="245" width="0.3" height="15.0" fill="rgb(207,45,3)" rx="2" ry="2" />
<text  x="86.15" y="255.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (897 us., 0.02%)</title><rect x="83.1" y="181" width="0.3" height="15.0" fill="rgb(245,4,20)" rx="2" ry="2" />
<text  x="86.15" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (489,439 us., 10.13%)</title><rect x="164.2" y="197" width="119.5" height="15.0" fill="rgb(216,0,17)" rx="2" ry="2" />
<text  x="167.20" y="207.5" >nn.Module:_Int..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (83,742 us., 1.73%)</title><rect x="896.4" y="37" width="20.5" height="15.0" fill="rgb(229,101,21)" rx="2" ry="2" />
<text  x="899.42" y="47.5" ></text>
</g>
<g >
<title>&lt;built-in_function_linear&gt; (299,497 us., 6.20%)</title><rect x="10.0" y="261" width="73.1" height="15.0" fill="rgb(239,224,36)" rx="2" ry="2" />
<text  x="13.00" y="271.5" >&lt;built-i..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (600 us., 0.01%)</title><rect x="1189.9" y="181" width="0.1" height="15.0" fill="rgb(228,76,32)" rx="2" ry="2" />
<text  x="1192.85" y="191.5" ></text>
</g>
<g >
<title>all (4,831,326 us., 100%)</title><rect x="10.0" y="277" width="1180.0" height="15.0" fill="rgb(229,101,18)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (320,687 us., 6.64%)</title><rect x="951.0" y="181" width="78.3" height="15.0" fill="rgb(254,39,12)" rx="2" ry="2" />
<text  x="954.01" y="191.5" >nn.Module..</text>
</g>
<g >
<title>torch_int/nn/linear.py(40):_forward (133,613 us., 2.77%)</title><rect x="844.6" y="245" width="32.7" height="15.0" fill="rgb(233,148,16)" rx="2" ry="2" />
<text  x="847.63" y="255.5" >to..</text>
</g>
<g >
<title>torch_int/nn/opt.py(213):_forward (215,297 us., 4.46%)</title><rect x="792.0" y="197" width="52.6" height="15.0" fill="rgb(254,72,23)" rx="2" ry="2" />
<text  x="795.05" y="207.5" >torch..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (600 us., 0.01%)</title><rect x="1189.9" y="261" width="0.1" height="15.0" fill="rgb(250,209,21)" rx="2" ry="2" />
<text  x="1192.85" y="271.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (489,439 us., 10.13%)</title><rect x="164.2" y="149" width="119.5" height="15.0" fill="rgb(214,155,12)" rx="2" ry="2" />
<text  x="167.20" y="159.5" >transformers/m..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (133,613 us., 2.77%)</title><rect x="844.6" y="229" width="32.7" height="15.0" fill="rgb(224,91,51)" rx="2" ry="2" />
<text  x="847.63" y="239.5" >to..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (211,240 us., 4.37%)</title><rect x="404.6" y="133" width="51.6" height="15.0" fill="rgb(235,158,33)" rx="2" ry="2" />
<text  x="407.65" y="143.5" >nn.Mo..</text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (652,731 us., 13.51%)</title><rect x="1030.4" y="229" width="159.5" height="15.0" fill="rgb(239,168,29)" rx="2" ry="2" />
<text  x="1033.43" y="239.5" >nn.Module:_Int8OPTAt..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (139,765 us., 2.89%)</title><rect x="916.9" y="117" width="34.1" height="15.0" fill="rgb(224,181,52)" rx="2" ry="2" />
<text  x="919.88" y="127.5" >nn..</text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (1,370,062 us., 28.36%)</title><rect x="456.2" y="213" width="334.7" height="15.0" fill="rgb(225,140,35)" rx="2" ry="2" />
<text  x="459.24" y="223.5" >nn.Module:_Int8OPTAttention</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (492,947 us., 10.20%)</title><rect x="283.7" y="133" width="120.4" height="15.0" fill="rgb(238,16,34)" rx="2" ry="2" />
<text  x="286.74" y="143.5" >torch/autograd/..</text>
</g>
<g >
<title>nn.Module:_Linear (299,497 us., 6.20%)</title><rect x="10.0" y="229" width="73.1" height="15.0" fill="rgb(226,77,6)" rx="2" ry="2" />
<text  x="13.00" y="239.5" >nn.Modul..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (299,497 us., 6.20%)</title><rect x="10.0" y="181" width="73.1" height="15.0" fill="rgb(254,1,51)" rx="2" ry="2" />
<text  x="13.00" y="191.5" >profilin..</text>
</g>
<g >
<title>torch_int/nn/opt.py(213):_forward (139,765 us., 2.89%)</title><rect x="916.9" y="197" width="34.1" height="15.0" fill="rgb(239,159,3)" rx="2" ry="2" />
<text  x="919.88" y="207.5" >to..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (652,731 us., 13.51%)</title><rect x="1030.4" y="245" width="159.5" height="15.0" fill="rgb(213,89,34)" rx="2" ry="2" />
<text  x="1033.43" y="255.5" >torch/autograd/grad_..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (489,439 us., 10.13%)</title><rect x="164.2" y="165" width="119.5" height="15.0" fill="rgb(206,194,38)" rx="2" ry="2" />
<text  x="167.20" y="175.5" >nn.Module:_Int..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,370,062 us., 28.36%)</title><rect x="456.2" y="85" width="334.7" height="15.0" fill="rgb(240,218,5)" rx="2" ry="2" />
<text  x="459.24" y="95.5" >torch/autograd/grad_mode.py(27):_decorate_con..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (78,454 us., 1.62%)</title><rect x="877.3" y="85" width="19.1" height="15.0" fill="rgb(222,217,32)" rx="2" ry="2" />
<text  x="880.26" y="95.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (322,467 us., 6.67%)</title><rect x="85.4" y="117" width="78.8" height="15.0" fill="rgb(231,160,22)" rx="2" ry="2" />
<text  x="88.44" y="127.5" >transform..</text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (1,370,062 us., 28.36%)</title><rect x="456.2" y="165" width="334.7" height="15.0" fill="rgb(205,164,51)" rx="2" ry="2" />
<text  x="459.24" y="175.5" >torch_int/nn/opt.py(346):_forward</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (600 us., 0.01%)</title><rect x="1189.9" y="165" width="0.1" height="15.0" fill="rgb(233,7,8)" rx="2" ry="2" />
<text  x="1192.85" y="175.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (2,097 us., 0.04%)</title><rect x="404.1" y="197" width="0.5" height="15.0" fill="rgb(231,201,0)" rx="2" ry="2" />
<text  x="407.14" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (322,467 us., 6.67%)</title><rect x="85.4" y="133" width="78.8" height="15.0" fill="rgb(235,118,37)" rx="2" ry="2" />
<text  x="88.44" y="143.5" >nn.Module..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (3,976 us., 0.08%)</title><rect x="84.5" y="133" width="0.9" height="15.0" fill="rgb(252,8,44)" rx="2" ry="2" />
<text  x="87.47" y="143.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (211,240 us., 4.37%)</title><rect x="404.6" y="69" width="51.6" height="15.0" fill="rgb(250,155,20)" rx="2" ry="2" />
<text  x="407.65" y="79.5" >torch..</text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (322,467 us., 6.67%)</title><rect x="85.4" y="149" width="78.8" height="15.0" fill="rgb(246,229,46)" rx="2" ry="2" />
<text  x="88.44" y="159.5" >torch_int..</text>
</g>
<g >
<title>torch_int/nn/opt.py(69):__shape (211,240 us., 4.37%)</title><rect x="404.6" y="245" width="51.6" height="15.0" fill="rgb(239,72,36)" rx="2" ry="2" />
<text  x="407.65" y="255.5" >torch..</text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (3,976 us., 0.08%)</title><rect x="84.5" y="181" width="0.9" height="15.0" fill="rgb(218,78,34)" rx="2" ry="2" />
<text  x="87.47" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (2,097 us., 0.04%)</title><rect x="404.1" y="213" width="0.5" height="15.0" fill="rgb(244,22,49)" rx="2" ry="2" />
<text  x="407.14" y="223.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(213):_forward (78,454 us., 1.62%)</title><rect x="877.3" y="197" width="19.1" height="15.0" fill="rgb(232,62,6)" rx="2" ry="2" />
<text  x="880.26" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_LayerNormQ (215,297 us., 4.46%)</title><rect x="792.0" y="213" width="52.6" height="15.0" fill="rgb(251,168,18)" rx="2" ry="2" />
<text  x="795.05" y="223.5" >nn.Mo..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (322,467 us., 6.67%)</title><rect x="85.4" y="213" width="78.8" height="15.0" fill="rgb(254,209,53)" rx="2" ry="2" />
<text  x="88.44" y="223.5" >torch/aut..</text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (652,731 us., 13.51%)</title><rect x="1030.4" y="181" width="159.5" height="15.0" fill="rgb(229,26,35)" rx="2" ry="2" />
<text  x="1033.43" y="191.5" >torch_int/nn/opt.py(..</text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (133,613 us., 2.77%)</title><rect x="844.6" y="165" width="32.7" height="15.0" fill="rgb(251,193,30)" rx="2" ry="2" />
<text  x="847.63" y="175.5" >nn..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (1,171 us., 0.02%)</title><rect x="790.9" y="165" width="0.3" height="15.0" fill="rgb(242,94,28)" rx="2" ry="2" />
<text  x="793.94" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (492,947 us., 10.20%)</title><rect x="283.7" y="197" width="120.4" height="15.0" fill="rgb(207,185,30)" rx="2" ry="2" />
<text  x="286.74" y="207.5" >nn.Module:_Int8..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (4,512 us., 0.09%)</title><rect x="83.4" y="133" width="1.1" height="15.0" fill="rgb(239,209,27)" rx="2" ry="2" />
<text  x="86.37" y="143.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (322,467 us., 6.67%)</title><rect x="85.4" y="165" width="78.8" height="15.0" fill="rgb(236,29,26)" rx="2" ry="2" />
<text  x="88.44" y="175.5" >nn.Module..</text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (83,742 us., 1.73%)</title><rect x="896.4" y="165" width="20.5" height="15.0" fill="rgb(205,67,32)" rx="2" ry="2" />
<text  x="899.42" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (897 us., 0.02%)</title><rect x="83.1" y="197" width="0.3" height="15.0" fill="rgb(216,154,16)" rx="2" ry="2" />
<text  x="86.15" y="207.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (299,497 us., 6.20%)</title><rect x="10.0" y="165" width="73.1" height="15.0" fill="rgb(223,87,33)" rx="2" ry="2" />
<text  x="13.00" y="175.5" >torch/au..</text>
</g>
<g >
<title>torch_int/nn/opt.py(325):__prepare_decoder_attention_mask (2,097 us., 0.04%)</title><rect x="404.1" y="245" width="0.5" height="15.0" fill="rgb(205,188,23)" rx="2" ry="2" />
<text  x="407.14" y="255.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,370,062 us., 28.36%)</title><rect x="456.2" y="101" width="334.7" height="15.0" fill="rgb(251,151,18)" rx="2" ry="2" />
<text  x="459.24" y="111.5" >profiling/utils.py(18):_profile_model</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (139,765 us., 2.89%)</title><rect x="916.9" y="101" width="34.1" height="15.0" fill="rgb(213,24,53)" rx="2" ry="2" />
<text  x="919.88" y="111.5" >pr..</text>
</g>
<g >
<title>torch_int/nn/opt.py(213):_forward (489,439 us., 10.13%)</title><rect x="164.2" y="213" width="119.5" height="15.0" fill="rgb(238,48,20)" rx="2" ry="2" />
<text  x="167.20" y="223.5" >torch_int/nn/o..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (299,497 us., 6.20%)</title><rect x="10.0" y="197" width="73.1" height="15.0" fill="rgb(215,223,34)" rx="2" ry="2" />
<text  x="13.00" y="207.5" >nn.Modul..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (3,976 us., 0.08%)</title><rect x="84.5" y="117" width="0.9" height="15.0" fill="rgb(230,111,33)" rx="2" ry="2" />
<text  x="87.47" y="127.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (652,731 us., 13.51%)</title><rect x="1030.4" y="149" width="159.5" height="15.0" fill="rgb(238,22,19)" rx="2" ry="2" />
<text  x="1033.43" y="159.5" >transformers/models/..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (139,765 us., 2.89%)</title><rect x="916.9" y="133" width="34.1" height="15.0" fill="rgb(242,95,1)" rx="2" ry="2" />
<text  x="919.88" y="143.5" >tr..</text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (3,359 us., 0.07%)</title><rect x="791.2" y="197" width="0.8" height="15.0" fill="rgb(218,66,30)" rx="2" ry="2" />
<text  x="794.23" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (211,240 us., 4.37%)</title><rect x="404.6" y="101" width="51.6" height="15.0" fill="rgb(230,153,5)" rx="2" ry="2" />
<text  x="407.65" y="111.5" >nn.Mo..</text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (2,097 us., 0.04%)</title><rect x="404.1" y="229" width="0.5" height="15.0" fill="rgb(224,180,24)" rx="2" ry="2" />
<text  x="407.14" y="239.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (600 us., 0.01%)</title><rect x="1189.9" y="229" width="0.1" height="15.0" fill="rgb(212,189,18)" rx="2" ry="2" />
<text  x="1192.85" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (1,370,062 us., 28.36%)</title><rect x="456.2" y="181" width="334.7" height="15.0" fill="rgb(210,43,0)" rx="2" ry="2" />
<text  x="459.24" y="191.5" >nn.Module:_Int8OPTDecoderLayer</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (139,765 us., 2.89%)</title><rect x="916.9" y="181" width="34.1" height="15.0" fill="rgb(216,75,43)" rx="2" ry="2" />
<text  x="919.88" y="191.5" >nn..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (215,297 us., 4.46%)</title><rect x="792.0" y="149" width="52.6" height="15.0" fill="rgb(238,8,24)" rx="2" ry="2" />
<text  x="795.05" y="159.5" >nn.Mo..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (4,512 us., 0.09%)</title><rect x="83.4" y="149" width="1.1" height="15.0" fill="rgb(226,209,45)" rx="2" ry="2" />
<text  x="86.37" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (78,454 us., 1.62%)</title><rect x="877.3" y="149" width="19.1" height="15.0" fill="rgb(226,218,51)" rx="2" ry="2" />
<text  x="880.26" y="159.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (139,765 us., 2.89%)</title><rect x="916.9" y="85" width="34.1" height="15.0" fill="rgb(205,39,36)" rx="2" ry="2" />
<text  x="919.88" y="95.5" >to..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (489,439 us., 10.13%)</title><rect x="164.2" y="101" width="119.5" height="15.0" fill="rgb(208,86,50)" rx="2" ry="2" />
<text  x="167.20" y="111.5" >torch/autograd..</text>
</g>
<g >
<title>torch_int/nn/fused.py(13):_forward (489,439 us., 10.13%)</title><rect x="164.2" y="245" width="119.5" height="15.0" fill="rgb(249,92,19)" rx="2" ry="2" />
<text  x="167.20" y="255.5" >torch_int/nn/f..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (1,370,062 us., 28.36%)</title><rect x="456.2" y="149" width="334.7" height="15.0" fill="rgb(245,160,42)" rx="2" ry="2" />
<text  x="459.24" y="159.5" >nn.Module:_Int8OPTDecoder</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (133,613 us., 2.77%)</title><rect x="844.6" y="181" width="32.7" height="15.0" fill="rgb(211,218,11)" rx="2" ry="2" />
<text  x="847.63" y="191.5" >to..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (1,171 us., 0.02%)</title><rect x="790.9" y="197" width="0.3" height="15.0" fill="rgb(210,34,43)" rx="2" ry="2" />
<text  x="793.94" y="207.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,171 us., 0.02%)</title><rect x="790.9" y="149" width="0.3" height="15.0" fill="rgb(247,194,2)" rx="2" ry="2" />
<text  x="793.94" y="159.5" ></text>
</g>
<g >
<title>&lt;built-in_method_max_of_type_object_at_0x7fdb4edaa9c0&gt; (320,687 us., 6.64%)</title><rect x="951.0" y="261" width="78.3" height="15.0" fill="rgb(253,126,43)" rx="2" ry="2" />
<text  x="954.01" y="271.5" >&lt;built-in..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (897 us., 0.02%)</title><rect x="83.1" y="165" width="0.3" height="15.0" fill="rgb(243,145,26)" rx="2" ry="2" />
<text  x="86.15" y="175.5" ></text>
</g>
<g >
<title>torch_int/nn/linear.py(90):_forward (139,765 us., 2.89%)</title><rect x="916.9" y="245" width="34.1" height="15.0" fill="rgb(226,184,52)" rx="2" ry="2" />
<text  x="919.88" y="255.5" >to..</text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (492,947 us., 10.20%)</title><rect x="283.7" y="213" width="120.4" height="15.0" fill="rgb(205,88,43)" rx="2" ry="2" />
<text  x="286.74" y="223.5" >torch_int/nn/op..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (322,467 us., 6.67%)</title><rect x="85.4" y="101" width="78.8" height="15.0" fill="rgb(210,196,37)" rx="2" ry="2" />
<text  x="88.44" y="111.5" >nn.Module..</text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (215,297 us., 4.46%)</title><rect x="792.0" y="165" width="52.6" height="15.0" fill="rgb(238,101,39)" rx="2" ry="2" />
<text  x="795.05" y="175.5" >torch..</text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (4,512 us., 0.09%)</title><rect x="83.4" y="197" width="1.1" height="15.0" fill="rgb(222,223,41)" rx="2" ry="2" />
<text  x="86.37" y="207.5" ></text>
</g>
<g >
<title>torch/nn/functional.py(2488):_layer_norm (218,656 us., 4.53%)</title><rect x="791.2" y="245" width="53.4" height="15.0" fill="rgb(210,198,9)" rx="2" ry="2" />
<text  x="794.23" y="255.5" >torch..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (133,613 us., 2.77%)</title><rect x="844.6" y="133" width="32.7" height="15.0" fill="rgb(224,78,37)" rx="2" ry="2" />
<text  x="847.63" y="143.5" >nn..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,370,062 us., 28.36%)</title><rect x="456.2" y="133" width="334.7" height="15.0" fill="rgb(215,220,53)" rx="2" ry="2" />
<text  x="459.24" y="143.5" >transformers/models/opt/modeling_opt.py(840):..</text>
</g>
</g>
</svg>
