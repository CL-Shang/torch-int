<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="326" onload="init(evt)" viewBox="0 0 1200 326" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="326.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >CUDA Time</text>
<text id="details" x="10.00" y="309" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="309" > </text>
<g id="frames">
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (177,603 us., 14.45%)</title><rect x="1018.9" y="245" width="170.5" height="15.0" fill="rgb(225,48,44)" rx="2" ry="2" />
<text  x="1021.95" y="255.5" >torch/autograd/grad_mo..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (359,005 us., 29.20%)</title><rect x="398.0" y="101" width="344.6" height="15.0" fill="rgb(244,170,41)" rx="2" ry="2" />
<text  x="400.97" y="111.5" >profiling/utils.py(18):_profile_model</text>
</g>
<g >
<title>&lt;built-in_method_encode_of_str_object_at_0x7f1b6ba8b4b0&gt; (673,846 us., 54.82%)</title><rect x="97.0" y="261" width="646.8" height="15.0" fill="rgb(234,142,47)" rx="2" ry="2" />
<text  x="100.01" y="271.5" >&lt;built-in_method_encode_of_str_object_at_0x7f1b6ba8b4b0&gt;</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (359,005 us., 29.20%)</title><rect x="398.0" y="181" width="344.6" height="15.0" fill="rgb(251,206,49)" rx="2" ry="2" />
<text  x="400.97" y="191.5" >nn.Module:_Int8OPTDecoderLayer</text>
</g>
<g >
<title>torch_int/nn/opt.py(325):__prepare_decoder_attention_mask (200 us., 0.02%)</title><rect x="1018.0" y="197" width="0.2" height="15.0" fill="rgb(217,119,15)" rx="2" ry="2" />
<text  x="1020.97" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (200 us., 0.02%)</title><rect x="1018.0" y="133" width="0.2" height="15.0" fill="rgb(207,84,19)" rx="2" ry="2" />
<text  x="1020.97" y="143.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (200 us., 0.02%)</title><rect x="1017.8" y="197" width="0.2" height="15.0" fill="rgb(237,119,9)" rx="2" ry="2" />
<text  x="1020.78" y="207.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (58,859 us., 4.79%)</title><rect x="744.7" y="133" width="56.5" height="15.0" fill="rgb(206,20,15)" rx="2" ry="2" />
<text  x="747.71" y="143.5" >trans..</text>
</g>
<g >
<title>&lt;built-in_method_rsub_of_type_object_at_0x7f1c5ff939c0&gt; (200 us., 0.02%)</title><rect x="1018.0" y="261" width="0.2" height="15.0" fill="rgb(230,197,38)" rx="2" ry="2" />
<text  x="1020.97" y="271.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (719 us., 0.06%)</title><rect x="338.6" y="181" width="0.7" height="15.0" fill="rgb(237,222,24)" rx="2" ry="2" />
<text  x="341.65" y="191.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (21,425 us., 1.74%)</title><rect x="875.8" y="85" width="20.6" height="15.0" fill="rgb(223,19,23)" rx="2" ry="2" />
<text  x="878.83" y="95.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (203 us., 0.02%)</title><rect x="742.6" y="197" width="0.2" height="15.0" fill="rgb(213,112,26)" rx="2" ry="2" />
<text  x="745.58" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (84,368 us., 6.86%)</title><rect x="936.8" y="117" width="81.0" height="15.0" fill="rgb(230,31,3)" rx="2" ry="2" />
<text  x="939.80" y="127.5" >nn.Module..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (200 us., 0.02%)</title><rect x="1017.8" y="165" width="0.2" height="15.0" fill="rgb(239,217,35)" rx="2" ry="2" />
<text  x="1020.78" y="175.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(72):_forward (177,603 us., 14.45%)</title><rect x="1018.9" y="261" width="170.5" height="15.0" fill="rgb(207,17,5)" rx="2" ry="2" />
<text  x="1021.95" y="271.5" >torch_int/nn/opt.py(72..</text>
</g>
<g >
<title>torch_int/nn/opt.py(213):_forward (21,425 us., 1.74%)</title><rect x="875.8" y="149" width="20.6" height="15.0" fill="rgb(233,101,9)" rx="2" ry="2" />
<text  x="878.83" y="159.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (77,272 us., 6.29%)</title><rect x="178.4" y="117" width="74.2" height="15.0" fill="rgb(253,29,9)" rx="2" ry="2" />
<text  x="181.43" y="127.5" >profilin..</text>
</g>
<g >
<title>&lt;built-in_method_embedding_of_type_object_at_0x7f1c5ff939c0&gt; (2,644 us., 0.22%)</title><rect x="94.5" y="261" width="2.5" height="15.0" fill="rgb(230,62,9)" rx="2" ry="2" />
<text  x="97.47" y="271.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (177,603 us., 14.45%)</title><rect x="1018.9" y="101" width="170.5" height="15.0" fill="rgb(245,103,46)" rx="2" ry="2" />
<text  x="1021.95" y="111.5" >torch/autograd/grad_mo..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (203 us., 0.02%)</title><rect x="742.6" y="165" width="0.2" height="15.0" fill="rgb(241,215,43)" rx="2" ry="2" />
<text  x="745.58" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (359,005 us., 29.20%)</title><rect x="398.0" y="149" width="344.6" height="15.0" fill="rgb(228,191,15)" rx="2" ry="2" />
<text  x="400.97" y="159.5" >nn.Module:_Int8OPTDecoder</text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (61,081 us., 4.97%)</title><rect x="339.3" y="149" width="58.7" height="15.0" fill="rgb(249,54,47)" rx="2" ry="2" />
<text  x="342.34" y="159.5" >torch_..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (19,525 us., 1.59%)</title><rect x="857.1" y="85" width="18.7" height="15.0" fill="rgb(226,106,36)" rx="2" ry="2" />
<text  x="860.08" y="95.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (200 us., 0.02%)</title><rect x="1018.2" y="245" width="0.2" height="15.0" fill="rgb(231,145,26)" rx="2" ry="2" />
<text  x="1021.17" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (84,368 us., 6.86%)</title><rect x="936.8" y="149" width="81.0" height="15.0" fill="rgb(242,167,40)" rx="2" ry="2" />
<text  x="939.80" y="159.5" >nn.Module..</text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (203 us., 0.02%)</title><rect x="742.6" y="229" width="0.2" height="15.0" fill="rgb(210,60,48)" rx="2" ry="2" />
<text  x="745.58" y="239.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (719 us., 0.06%)</title><rect x="338.6" y="197" width="0.7" height="15.0" fill="rgb(238,16,15)" rx="2" ry="2" />
<text  x="341.65" y="207.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (42,093 us., 3.42%)</title><rect x="896.4" y="165" width="40.4" height="15.0" fill="rgb(217,157,36)" rx="2" ry="2" />
<text  x="899.39" y="175.5" >tor..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,254 us., 0.10%)</title><rect x="95.8" y="101" width="1.2" height="15.0" fill="rgb(227,165,23)" rx="2" ry="2" />
<text  x="98.80" y="111.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (42,093 us., 3.42%)</title><rect x="896.4" y="149" width="40.4" height="15.0" fill="rgb(254,218,47)" rx="2" ry="2" />
<text  x="899.39" y="159.5" >nn...</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (19,525 us., 1.59%)</title><rect x="857.1" y="101" width="18.7" height="15.0" fill="rgb(215,6,22)" rx="2" ry="2" />
<text  x="860.08" y="111.5" ></text>
</g>
<g >
<title>nn.Module:_W8A8BFP32OFP32Linear (40,950 us., 3.33%)</title><rect x="857.1" y="213" width="39.3" height="15.0" fill="rgb(214,63,47)" rx="2" ry="2" />
<text  x="860.08" y="223.5" >nn...</text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (200 us., 0.02%)</title><rect x="1017.8" y="245" width="0.2" height="15.0" fill="rgb(250,202,19)" rx="2" ry="2" />
<text  x="1020.78" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (84,368 us., 6.86%)</title><rect x="936.8" y="213" width="81.0" height="15.0" fill="rgb(224,135,0)" rx="2" ry="2" />
<text  x="939.80" y="223.5" >nn.Module..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (84,830 us., 6.90%)</title><rect x="97.0" y="213" width="81.4" height="15.0" fill="rgb(208,93,11)" rx="2" ry="2" />
<text  x="100.01" y="223.5" >torch/aut..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (359,005 us., 29.20%)</title><rect x="398.0" y="85" width="344.6" height="15.0" fill="rgb(240,26,20)" rx="2" ry="2" />
<text  x="400.97" y="95.5" >torch/autograd/grad_mode.py(27):_decorate_cont..</text>
</g>
<g >
<title>torch/nn/functional.py(2488):_layer_norm (59,776 us., 4.86%)</title><rect x="743.8" y="245" width="57.4" height="15.0" fill="rgb(206,1,24)" rx="2" ry="2" />
<text  x="746.83" y="255.5" >torch/..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,100 us., 0.09%)</title><rect x="742.8" y="133" width="1.0" height="15.0" fill="rgb(206,155,32)" rx="2" ry="2" />
<text  x="745.77" y="143.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (58,210 us., 4.74%)</title><rect x="801.2" y="37" width="55.9" height="15.0" fill="rgb(211,176,28)" rx="2" ry="2" />
<text  x="804.21" y="47.5" >torch..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (200 us., 0.02%)</title><rect x="1018.2" y="197" width="0.2" height="15.0" fill="rgb(241,23,37)" rx="2" ry="2" />
<text  x="1021.17" y="207.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (203 us., 0.02%)</title><rect x="742.6" y="181" width="0.2" height="15.0" fill="rgb(246,149,30)" rx="2" ry="2" />
<text  x="745.58" y="191.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (1,254 us., 0.10%)</title><rect x="95.8" y="213" width="1.2" height="15.0" fill="rgb(229,187,32)" rx="2" ry="2" />
<text  x="98.80" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (61,081 us., 4.97%)</title><rect x="339.3" y="165" width="58.7" height="15.0" fill="rgb(246,18,3)" rx="2" ry="2" />
<text  x="342.34" y="175.5" >nn.Mod..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (61,081 us., 4.97%)</title><rect x="339.3" y="117" width="58.7" height="15.0" fill="rgb(235,30,50)" rx="2" ry="2" />
<text  x="342.34" y="127.5" >transf..</text>
</g>
<g >
<title>torch_int/nn/opt.py(72):_forward (21,425 us., 1.74%)</title><rect x="875.8" y="197" width="20.6" height="15.0" fill="rgb(208,76,29)" rx="2" ry="2" />
<text  x="878.83" y="207.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(213):_forward (19,525 us., 1.59%)</title><rect x="857.1" y="197" width="18.7" height="15.0" fill="rgb(237,185,10)" rx="2" ry="2" />
<text  x="860.08" y="207.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (21,425 us., 1.74%)</title><rect x="875.8" y="53" width="20.6" height="15.0" fill="rgb(237,92,7)" rx="2" ry="2" />
<text  x="878.83" y="63.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (203 us., 0.02%)</title><rect x="742.6" y="213" width="0.2" height="15.0" fill="rgb(214,46,29)" rx="2" ry="2" />
<text  x="745.58" y="223.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (323 us., 0.03%)</title><rect x="94.2" y="149" width="0.3" height="15.0" fill="rgb(247,176,27)" rx="2" ry="2" />
<text  x="97.16" y="159.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (58,859 us., 4.79%)</title><rect x="744.7" y="165" width="56.5" height="15.0" fill="rgb(231,150,5)" rx="2" ry="2" />
<text  x="747.71" y="175.5" >torch..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,254 us., 0.10%)</title><rect x="95.8" y="149" width="1.2" height="15.0" fill="rgb(224,104,3)" rx="2" ry="2" />
<text  x="98.80" y="159.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (84,830 us., 6.90%)</title><rect x="97.0" y="69" width="81.4" height="15.0" fill="rgb(244,119,25)" rx="2" ry="2" />
<text  x="100.01" y="79.5" >torch/aut..</text>
</g>
<g >
<title>torch_int/nn/opt.py(213):_forward (42,093 us., 3.42%)</title><rect x="896.4" y="197" width="40.4" height="15.0" fill="rgb(246,24,18)" rx="2" ry="2" />
<text  x="899.39" y="207.5" >tor..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (77,272 us., 6.29%)</title><rect x="178.4" y="149" width="74.2" height="15.0" fill="rgb(232,188,17)" rx="2" ry="2" />
<text  x="181.43" y="159.5" >transfor..</text>
</g>
<g >
<title>&lt;built-in_method_cumsum_of_type_object_at_0x7f1c5ff939c0&gt; (323 us., 0.03%)</title><rect x="94.2" y="261" width="0.3" height="15.0" fill="rgb(212,189,42)" rx="2" ry="2" />
<text  x="97.16" y="271.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (42,093 us., 3.42%)</title><rect x="896.4" y="117" width="40.4" height="15.0" fill="rgb(208,202,41)" rx="2" ry="2" />
<text  x="899.39" y="127.5" >nn...</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (61,081 us., 4.97%)</title><rect x="339.3" y="133" width="58.7" height="15.0" fill="rgb(240,105,1)" rx="2" ry="2" />
<text  x="342.34" y="143.5" >nn.Mod..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (21,425 us., 1.74%)</title><rect x="875.8" y="101" width="20.6" height="15.0" fill="rgb(234,36,0)" rx="2" ry="2" />
<text  x="878.83" y="111.5" ></text>
</g>
<g >
<title>nn.Module:_W8A8B8O8LinearReLU (42,093 us., 3.42%)</title><rect x="896.4" y="213" width="40.4" height="15.0" fill="rgb(247,209,0)" rx="2" ry="2" />
<text  x="899.39" y="223.5" >nn...</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (323 us., 0.03%)</title><rect x="94.2" y="165" width="0.3" height="15.0" fill="rgb(208,147,32)" rx="2" ry="2" />
<text  x="97.16" y="175.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (21,425 us., 1.74%)</title><rect x="875.8" y="181" width="20.6" height="15.0" fill="rgb(222,111,29)" rx="2" ry="2" />
<text  x="878.83" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (58,210 us., 4.74%)</title><rect x="801.2" y="69" width="55.9" height="15.0" fill="rgb(210,114,50)" rx="2" ry="2" />
<text  x="804.21" y="79.5" >nn.Mo..</text>
</g>
<g >
<title>torch_int/nn/fused.py(13):_forward (58,859 us., 4.79%)</title><rect x="744.7" y="229" width="56.5" height="15.0" fill="rgb(241,146,18)" rx="2" ry="2" />
<text  x="747.71" y="239.5" >torch..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (323 us., 0.03%)</title><rect x="94.2" y="133" width="0.3" height="15.0" fill="rgb(230,32,25)" rx="2" ry="2" />
<text  x="97.16" y="143.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (89,636 us., 7.29%)</title><rect x="252.6" y="229" width="86.0" height="15.0" fill="rgb(225,187,1)" rx="2" ry="2" />
<text  x="255.61" y="239.5" >nn.Module:..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (58,859 us., 4.79%)</title><rect x="744.7" y="181" width="56.5" height="15.0" fill="rgb(214,167,36)" rx="2" ry="2" />
<text  x="747.71" y="191.5" >nn.Mo..</text>
</g>
<g >
<title>torch_int/nn/opt.py(72):_forward (61,081 us., 4.97%)</title><rect x="339.3" y="229" width="58.7" height="15.0" fill="rgb(250,105,21)" rx="2" ry="2" />
<text  x="342.34" y="239.5" >torch_..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (58,210 us., 4.74%)</title><rect x="801.2" y="53" width="55.9" height="15.0" fill="rgb(219,5,11)" rx="2" ry="2" />
<text  x="804.21" y="63.5" >profi..</text>
</g>
<g >
<title>torch_int/nn/opt.py(213):_forward (58,210 us., 4.74%)</title><rect x="801.2" y="149" width="55.9" height="15.0" fill="rgb(206,180,13)" rx="2" ry="2" />
<text  x="804.21" y="159.5" >torch..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,254 us., 0.10%)</title><rect x="95.8" y="117" width="1.2" height="15.0" fill="rgb(207,116,42)" rx="2" ry="2" />
<text  x="98.80" y="127.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (19,525 us., 1.59%)</title><rect x="857.1" y="165" width="18.7" height="15.0" fill="rgb(254,105,3)" rx="2" ry="2" />
<text  x="860.08" y="175.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (58,859 us., 4.79%)</title><rect x="744.7" y="85" width="56.5" height="15.0" fill="rgb(228,61,38)" rx="2" ry="2" />
<text  x="747.71" y="95.5" >torch..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (200 us., 0.02%)</title><rect x="1018.0" y="165" width="0.2" height="15.0" fill="rgb(243,30,14)" rx="2" ry="2" />
<text  x="1020.97" y="175.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (598 us., 0.05%)</title><rect x="1189.4" y="261" width="0.6" height="15.0" fill="rgb(245,123,3)" rx="2" ry="2" />
<text  x="1192.43" y="271.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(213):_forward (84,368 us., 6.86%)</title><rect x="936.8" y="197" width="81.0" height="15.0" fill="rgb(239,49,13)" rx="2" ry="2" />
<text  x="939.80" y="207.5" >torch_int..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (87,675 us., 7.13%)</title><rect x="10.0" y="181" width="84.2" height="15.0" fill="rgb(249,128,40)" rx="2" ry="2" />
<text  x="13.00" y="191.5" >profiling..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (84,368 us., 6.86%)</title><rect x="936.8" y="181" width="81.0" height="15.0" fill="rgb(208,52,46)" rx="2" ry="2" />
<text  x="939.80" y="191.5" >nn.Module..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (177,603 us., 14.45%)</title><rect x="1018.9" y="165" width="170.5" height="15.0" fill="rgb(216,152,7)" rx="2" ry="2" />
<text  x="1021.95" y="175.5" >nn.Module:_Int8OPTDeco..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (917 us., 0.07%)</title><rect x="743.8" y="149" width="0.9" height="15.0" fill="rgb(248,127,42)" rx="2" ry="2" />
<text  x="746.83" y="159.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (719 us., 0.06%)</title><rect x="338.6" y="165" width="0.7" height="15.0" fill="rgb(208,187,43)" rx="2" ry="2" />
<text  x="341.65" y="175.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (203 us., 0.02%)</title><rect x="742.6" y="133" width="0.2" height="15.0" fill="rgb(205,199,31)" rx="2" ry="2" />
<text  x="745.58" y="143.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,390 us., 0.11%)</title><rect x="94.5" y="117" width="1.3" height="15.0" fill="rgb(219,24,38)" rx="2" ry="2" />
<text  x="97.47" y="127.5" ></text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (1,254 us., 0.10%)</title><rect x="95.8" y="197" width="1.2" height="15.0" fill="rgb(242,96,3)" rx="2" ry="2" />
<text  x="98.80" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (598 us., 0.05%)</title><rect x="1189.4" y="181" width="0.6" height="15.0" fill="rgb(230,188,31)" rx="2" ry="2" />
<text  x="1192.43" y="191.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (917 us., 0.07%)</title><rect x="743.8" y="197" width="0.9" height="15.0" fill="rgb(229,136,19)" rx="2" ry="2" />
<text  x="746.83" y="207.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(89):__expand_mask (1,100 us., 0.09%)</title><rect x="742.8" y="245" width="1.0" height="15.0" fill="rgb(248,36,46)" rx="2" ry="2" />
<text  x="745.77" y="255.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(325):__prepare_decoder_attention_mask (1,100 us., 0.09%)</title><rect x="742.8" y="229" width="1.0" height="15.0" fill="rgb(220,120,40)" rx="2" ry="2" />
<text  x="745.77" y="239.5" ></text>
</g>
<g >
<title>&lt;built-in_method_linear_relu_a8_w8_b8_o8_of_PyCapsule_object_at_0x7f1b6b42d750&gt; (42,093 us., 3.42%)</title><rect x="896.4" y="261" width="40.4" height="15.0" fill="rgb(215,104,16)" rx="2" ry="2" />
<text  x="899.39" y="271.5" >&lt;bu..</text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (21,425 us., 1.74%)</title><rect x="875.8" y="117" width="20.6" height="15.0" fill="rgb(216,108,39)" rx="2" ry="2" />
<text  x="878.83" y="127.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (323 us., 0.03%)</title><rect x="94.2" y="181" width="0.3" height="15.0" fill="rgb(226,207,35)" rx="2" ry="2" />
<text  x="97.16" y="191.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (87,675 us., 7.13%)</title><rect x="10.0" y="165" width="84.2" height="15.0" fill="rgb(246,174,0)" rx="2" ry="2" />
<text  x="13.00" y="175.5" >torch/aut..</text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (200 us., 0.02%)</title><rect x="1018.0" y="181" width="0.2" height="15.0" fill="rgb(225,165,12)" rx="2" ry="2" />
<text  x="1020.97" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (1,100 us., 0.09%)</title><rect x="742.8" y="197" width="1.0" height="15.0" fill="rgb(229,188,47)" rx="2" ry="2" />
<text  x="745.77" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (42,093 us., 3.42%)</title><rect x="896.4" y="181" width="40.4" height="15.0" fill="rgb(246,22,32)" rx="2" ry="2" />
<text  x="899.39" y="191.5" >nn...</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (177,603 us., 14.45%)</title><rect x="1018.9" y="117" width="170.5" height="15.0" fill="rgb(248,79,6)" rx="2" ry="2" />
<text  x="1021.95" y="127.5" >profiling/utils.py(18)..</text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (323 us., 0.03%)</title><rect x="94.2" y="213" width="0.3" height="15.0" fill="rgb(220,153,32)" rx="2" ry="2" />
<text  x="97.16" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (89,636 us., 7.29%)</title><rect x="252.6" y="165" width="86.0" height="15.0" fill="rgb(205,190,9)" rx="2" ry="2" />
<text  x="255.61" y="175.5" >nn.Module:..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (19,525 us., 1.59%)</title><rect x="857.1" y="181" width="18.7" height="15.0" fill="rgb(206,14,49)" rx="2" ry="2" />
<text  x="860.08" y="191.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (200 us., 0.02%)</title><rect x="1018.0" y="101" width="0.2" height="15.0" fill="rgb(205,155,47)" rx="2" ry="2" />
<text  x="1020.97" y="111.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (1,390 us., 0.11%)</title><rect x="94.5" y="197" width="1.3" height="15.0" fill="rgb(211,64,25)" rx="2" ry="2" />
<text  x="97.47" y="207.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (89,636 us., 7.29%)</title><rect x="252.6" y="213" width="86.0" height="15.0" fill="rgb(233,169,50)" rx="2" ry="2" />
<text  x="255.61" y="223.5" >torch_int/..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (61,081 us., 4.97%)</title><rect x="339.3" y="101" width="58.7" height="15.0" fill="rgb(240,194,20)" rx="2" ry="2" />
<text  x="342.34" y="111.5" >nn.Mod..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(89):__expand_mask (200 us., 0.02%)</title><rect x="1018.0" y="213" width="0.2" height="15.0" fill="rgb(228,64,40)" rx="2" ry="2" />
<text  x="1020.97" y="223.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (61,081 us., 4.97%)</title><rect x="339.3" y="69" width="58.7" height="15.0" fill="rgb(228,3,4)" rx="2" ry="2" />
<text  x="342.34" y="79.5" >torch/..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (177,603 us., 14.45%)</title><rect x="1018.9" y="197" width="170.5" height="15.0" fill="rgb(217,24,45)" rx="2" ry="2" />
<text  x="1021.95" y="207.5" >nn.Module:_Int8OPTDeco..</text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (598 us., 0.05%)</title><rect x="1189.4" y="245" width="0.6" height="15.0" fill="rgb(212,160,5)" rx="2" ry="2" />
<text  x="1192.43" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (1,254 us., 0.10%)</title><rect x="95.8" y="165" width="1.2" height="15.0" fill="rgb(233,85,27)" rx="2" ry="2" />
<text  x="98.80" y="175.5" ></text>
</g>
<g >
<title>torch_int/nn/linear.py(225):_forward (40,950 us., 3.33%)</title><rect x="857.1" y="245" width="39.3" height="15.0" fill="rgb(220,162,25)" rx="2" ry="2" />
<text  x="860.08" y="255.5" >tor..</text>
</g>
<g >
<title>torch_int/nn/opt.py(213):_forward (77,272 us., 6.29%)</title><rect x="178.4" y="213" width="74.2" height="15.0" fill="rgb(210,225,51)" rx="2" ry="2" />
<text  x="181.43" y="223.5" >torch_in..</text>
</g>
<g >
<title>torch_int/nn/linear.py(90):_forward (42,093 us., 3.42%)</title><rect x="896.4" y="245" width="40.4" height="15.0" fill="rgb(238,7,11)" rx="2" ry="2" />
<text  x="899.39" y="255.5" >tor..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (58,859 us., 4.79%)</title><rect x="744.7" y="117" width="56.5" height="15.0" fill="rgb(212,167,40)" rx="2" ry="2" />
<text  x="747.71" y="127.5" >nn.Mo..</text>
</g>
<g >
<title>all (1,229,299 us., 100%)</title><rect x="10.0" y="277" width="1180.0" height="15.0" fill="rgb(237,13,32)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>&lt;built-in_method_ones_of_type_object_at_0x7f1c5ff939c0&gt; (200 us., 0.02%)</title><rect x="1017.8" y="261" width="0.2" height="15.0" fill="rgb(234,182,35)" rx="2" ry="2" />
<text  x="1020.78" y="271.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (359,005 us., 29.20%)</title><rect x="398.0" y="117" width="344.6" height="15.0" fill="rgb(238,156,32)" rx="2" ry="2" />
<text  x="400.97" y="127.5" >nn.Module:_Int8OPTForCausalLM</text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (1,100 us., 0.09%)</title><rect x="742.8" y="213" width="1.0" height="15.0" fill="rgb(228,61,48)" rx="2" ry="2" />
<text  x="745.77" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (84,830 us., 6.90%)</title><rect x="97.0" y="165" width="81.4" height="15.0" fill="rgb(238,22,26)" rx="2" ry="2" />
<text  x="100.01" y="175.5" >nn.Module..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (19,525 us., 1.59%)</title><rect x="857.1" y="133" width="18.7" height="15.0" fill="rgb(231,188,35)" rx="2" ry="2" />
<text  x="860.08" y="143.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (84,368 us., 6.86%)</title><rect x="936.8" y="101" width="81.0" height="15.0" fill="rgb(235,58,21)" rx="2" ry="2" />
<text  x="939.80" y="111.5" >profiling..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (200 us., 0.02%)</title><rect x="1018.0" y="149" width="0.2" height="15.0" fill="rgb(238,24,48)" rx="2" ry="2" />
<text  x="1020.97" y="159.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(72):_forward (359,005 us., 29.20%)</title><rect x="398.0" y="245" width="344.6" height="15.0" fill="rgb(208,93,38)" rx="2" ry="2" />
<text  x="400.97" y="255.5" >torch_int/nn/opt.py(72):_forward</text>
</g>
<g >
<title>torch_int/nn/opt.py(325):__prepare_decoder_attention_mask (719 us., 0.06%)</title><rect x="338.6" y="245" width="0.7" height="15.0" fill="rgb(208,39,12)" rx="2" ry="2" />
<text  x="341.65" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (323 us., 0.03%)</title><rect x="94.2" y="229" width="0.3" height="15.0" fill="rgb(220,60,51)" rx="2" ry="2" />
<text  x="97.16" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (19,525 us., 1.59%)</title><rect x="857.1" y="149" width="18.7" height="15.0" fill="rgb(209,77,42)" rx="2" ry="2" />
<text  x="860.08" y="159.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (1,254 us., 0.10%)</title><rect x="95.8" y="181" width="1.2" height="15.0" fill="rgb(252,86,12)" rx="2" ry="2" />
<text  x="98.80" y="191.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (200 us., 0.02%)</title><rect x="1018.2" y="165" width="0.2" height="15.0" fill="rgb(224,184,29)" rx="2" ry="2" />
<text  x="1021.17" y="175.5" ></text>
</g>
<g >
<title>torch/nn/functional.py(1804):_softmax (84,830 us., 6.90%)</title><rect x="97.0" y="245" width="81.4" height="15.0" fill="rgb(252,25,44)" rx="2" ry="2" />
<text  x="100.01" y="255.5" >torch/nn/..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (200 us., 0.02%)</title><rect x="1018.0" y="117" width="0.2" height="15.0" fill="rgb(248,106,4)" rx="2" ry="2" />
<text  x="1020.97" y="127.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (200 us., 0.02%)</title><rect x="1018.2" y="181" width="0.2" height="15.0" fill="rgb(228,61,41)" rx="2" ry="2" />
<text  x="1021.17" y="191.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (87,675 us., 7.13%)</title><rect x="10.0" y="213" width="84.2" height="15.0" fill="rgb(245,207,40)" rx="2" ry="2" />
<text  x="13.00" y="223.5" >transform..</text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (177,603 us., 14.45%)</title><rect x="1018.9" y="181" width="170.5" height="15.0" fill="rgb(253,142,22)" rx="2" ry="2" />
<text  x="1021.95" y="191.5" >torch_int/nn/opt.py(34..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,100 us., 0.09%)</title><rect x="742.8" y="149" width="1.0" height="15.0" fill="rgb(228,218,21)" rx="2" ry="2" />
<text  x="745.77" y="159.5" ></text>
</g>
<g >
<title>torch/nn/functional.py(2099):_embedding (2,644 us., 0.22%)</title><rect x="94.5" y="245" width="2.5" height="15.0" fill="rgb(229,172,48)" rx="2" ry="2" />
<text  x="97.47" y="255.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(213):_forward (61,081 us., 4.97%)</title><rect x="339.3" y="181" width="58.7" height="15.0" fill="rgb(208,68,36)" rx="2" ry="2" />
<text  x="342.34" y="191.5" >torch_..</text>
</g>
<g >
<title>torch_int/nn/opt.py(325):__prepare_decoder_attention_mask (200 us., 0.02%)</title><rect x="1018.2" y="261" width="0.2" height="15.0" fill="rgb(219,156,5)" rx="2" ry="2" />
<text  x="1021.17" y="271.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (200 us., 0.02%)</title><rect x="1017.8" y="213" width="0.2" height="15.0" fill="rgb(233,93,10)" rx="2" ry="2" />
<text  x="1020.78" y="223.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (42,093 us., 3.42%)</title><rect x="896.4" y="229" width="40.4" height="15.0" fill="rgb(214,44,2)" rx="2" ry="2" />
<text  x="899.39" y="239.5" >tor..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (200 us., 0.02%)</title><rect x="1018.2" y="229" width="0.2" height="15.0" fill="rgb(244,48,5)" rx="2" ry="2" />
<text  x="1021.17" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (58,210 us., 4.74%)</title><rect x="801.2" y="165" width="55.9" height="15.0" fill="rgb(222,224,25)" rx="2" ry="2" />
<text  x="804.21" y="175.5" >nn.Mo..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (61,081 us., 4.97%)</title><rect x="339.3" y="213" width="58.7" height="15.0" fill="rgb(207,97,22)" rx="2" ry="2" />
<text  x="342.34" y="223.5" >torch/..</text>
</g>
<g >
<title>torch_int/nn/opt.py(72):_forward (84,368 us., 6.86%)</title><rect x="936.8" y="245" width="81.0" height="15.0" fill="rgb(210,208,0)" rx="2" ry="2" />
<text  x="939.80" y="255.5" >torch_int..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (200 us., 0.02%)</title><rect x="1018.2" y="213" width="0.2" height="15.0" fill="rgb(222,165,15)" rx="2" ry="2" />
<text  x="1021.17" y="223.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (359,005 us., 29.20%)</title><rect x="398.0" y="229" width="344.6" height="15.0" fill="rgb(232,41,44)" rx="2" ry="2" />
<text  x="400.97" y="239.5" >torch/autograd/grad_mode.py(24):_decorate_cont..</text>
</g>
<g >
<title>torch_int/nn/opt.py(72):_forward (84,830 us., 6.90%)</title><rect x="97.0" y="229" width="81.4" height="15.0" fill="rgb(208,133,10)" rx="2" ry="2" />
<text  x="100.01" y="239.5" >torch_int..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (89,636 us., 7.29%)</title><rect x="252.6" y="149" width="86.0" height="15.0" fill="rgb(208,30,10)" rx="2" ry="2" />
<text  x="255.61" y="159.5" >profiling/..</text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (84,368 us., 6.86%)</title><rect x="936.8" y="165" width="81.0" height="15.0" fill="rgb(235,52,54)" rx="2" ry="2" />
<text  x="939.80" y="175.5" >torch_int..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (58,210 us., 4.74%)</title><rect x="801.2" y="85" width="55.9" height="15.0" fill="rgb(248,217,11)" rx="2" ry="2" />
<text  x="804.21" y="95.5" >trans..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (84,830 us., 6.90%)</title><rect x="97.0" y="101" width="81.4" height="15.0" fill="rgb(239,119,23)" rx="2" ry="2" />
<text  x="100.01" y="111.5" >nn.Module..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (917 us., 0.07%)</title><rect x="743.8" y="181" width="0.9" height="15.0" fill="rgb(246,174,18)" rx="2" ry="2" />
<text  x="746.83" y="191.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(213):_forward (359,005 us., 29.20%)</title><rect x="398.0" y="197" width="344.6" height="15.0" fill="rgb(219,142,23)" rx="2" ry="2" />
<text  x="400.97" y="207.5" >torch_int/nn/opt.py(213):_forward</text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (359,005 us., 29.20%)</title><rect x="398.0" y="165" width="344.6" height="15.0" fill="rgb(247,65,51)" rx="2" ry="2" />
<text  x="400.97" y="175.5" >torch_int/nn/opt.py(346):_forward</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (1,100 us., 0.09%)</title><rect x="742.8" y="165" width="1.0" height="15.0" fill="rgb(207,136,12)" rx="2" ry="2" />
<text  x="745.77" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (613 us., 0.05%)</title><rect x="1018.4" y="213" width="0.5" height="15.0" fill="rgb(237,207,17)" rx="2" ry="2" />
<text  x="1021.36" y="223.5" ></text>
</g>
<g >
<title>torch/nn/modules/normalization.py(188):_forward (917 us., 0.07%)</title><rect x="743.8" y="229" width="0.9" height="15.0" fill="rgb(242,22,46)" rx="2" ry="2" />
<text  x="746.83" y="239.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (77,272 us., 6.29%)</title><rect x="178.4" y="101" width="74.2" height="15.0" fill="rgb(212,98,47)" rx="2" ry="2" />
<text  x="181.43" y="111.5" >torch/au..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (1,390 us., 0.11%)</title><rect x="94.5" y="149" width="1.3" height="15.0" fill="rgb(206,180,7)" rx="2" ry="2" />
<text  x="97.47" y="159.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (58,210 us., 4.74%)</title><rect x="801.2" y="229" width="55.9" height="15.0" fill="rgb(251,207,38)" rx="2" ry="2" />
<text  x="804.21" y="239.5" >torch..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (77,272 us., 6.29%)</title><rect x="178.4" y="197" width="74.2" height="15.0" fill="rgb(212,39,19)" rx="2" ry="2" />
<text  x="181.43" y="207.5" >nn.Modul..</text>
</g>
<g >
<title>torch/_tensor.py(637):___rsub__ (200 us., 0.02%)</title><rect x="1018.0" y="245" width="0.2" height="15.0" fill="rgb(214,94,49)" rx="2" ry="2" />
<text  x="1020.97" y="255.5" ></text>
</g>
<g >
<title>&lt;built-in_method_max_of_type_object_at_0x7f1c5ff939c0&gt; (84,368 us., 6.86%)</title><rect x="936.8" y="261" width="81.0" height="15.0" fill="rgb(236,2,36)" rx="2" ry="2" />
<text  x="939.80" y="271.5" >&lt;built-in..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (203 us., 0.02%)</title><rect x="742.6" y="149" width="0.2" height="15.0" fill="rgb(213,98,35)" rx="2" ry="2" />
<text  x="745.58" y="159.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (598 us., 0.05%)</title><rect x="1189.4" y="229" width="0.6" height="15.0" fill="rgb(250,6,38)" rx="2" ry="2" />
<text  x="1192.43" y="239.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(213):_forward (177,603 us., 14.45%)</title><rect x="1018.9" y="213" width="170.5" height="15.0" fill="rgb(233,138,9)" rx="2" ry="2" />
<text  x="1021.95" y="223.5" >torch_int/nn/opt.py(21..</text>
</g>
<g >
<title>nn.Module:_Embedding (1,390 us., 0.11%)</title><rect x="94.5" y="213" width="1.3" height="15.0" fill="rgb(224,107,46)" rx="2" ry="2" />
<text  x="97.47" y="223.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (613 us., 0.05%)</title><rect x="1018.4" y="181" width="0.5" height="15.0" fill="rgb(237,85,12)" rx="2" ry="2" />
<text  x="1021.36" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Linear (87,675 us., 7.13%)</title><rect x="10.0" y="229" width="84.2" height="15.0" fill="rgb(207,80,36)" rx="2" ry="2" />
<text  x="13.00" y="239.5" >nn.Module..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (89,636 us., 7.29%)</title><rect x="252.6" y="181" width="86.0" height="15.0" fill="rgb(238,42,24)" rx="2" ry="2" />
<text  x="255.61" y="191.5" >transforme..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (598 us., 0.05%)</title><rect x="1189.4" y="213" width="0.6" height="15.0" fill="rgb(217,131,35)" rx="2" ry="2" />
<text  x="1192.43" y="223.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,100 us., 0.09%)</title><rect x="742.8" y="181" width="1.0" height="15.0" fill="rgb(234,160,52)" rx="2" ry="2" />
<text  x="745.77" y="191.5" ></text>
</g>
<g >
<title>torch/_tensor.py(26):_wrapped (200 us., 0.02%)</title><rect x="1018.0" y="229" width="0.2" height="15.0" fill="rgb(241,10,41)" rx="2" ry="2" />
<text  x="1020.97" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (613 us., 0.05%)</title><rect x="1018.4" y="245" width="0.5" height="15.0" fill="rgb(238,86,47)" rx="2" ry="2" />
<text  x="1021.36" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (58,210 us., 4.74%)</title><rect x="801.2" y="133" width="55.9" height="15.0" fill="rgb(254,95,29)" rx="2" ry="2" />
<text  x="804.21" y="143.5" >nn.Mo..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (200 us., 0.02%)</title><rect x="1017.8" y="229" width="0.2" height="15.0" fill="rgb(212,77,36)" rx="2" ry="2" />
<text  x="1020.78" y="239.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (598 us., 0.05%)</title><rect x="1189.4" y="149" width="0.6" height="15.0" fill="rgb(220,183,22)" rx="2" ry="2" />
<text  x="1192.43" y="159.5" ></text>
</g>
<g >
<title>torch/nn/modules/linear.py(113):_forward (87,675 us., 7.13%)</title><rect x="10.0" y="245" width="84.2" height="15.0" fill="rgb(214,71,14)" rx="2" ry="2" />
<text  x="13.00" y="255.5" >torch/nn/..</text>
</g>
<g >
<title>&lt;built-in_method_linear_a8_w8_b8_o8_of_PyCapsule_object_at_0x7f1b6b42d810&gt; (58,210 us., 4.74%)</title><rect x="801.2" y="261" width="55.9" height="15.0" fill="rgb(224,114,15)" rx="2" ry="2" />
<text  x="804.21" y="271.5" >&lt;buil..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (1,254 us., 0.10%)</title><rect x="95.8" y="133" width="1.2" height="15.0" fill="rgb(222,59,45)" rx="2" ry="2" />
<text  x="98.80" y="143.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (42,093 us., 3.42%)</title><rect x="896.4" y="101" width="40.4" height="15.0" fill="rgb(249,16,26)" rx="2" ry="2" />
<text  x="899.39" y="111.5" >pro..</text>
</g>
<g >
<title>torch_int/nn/opt.py(213):_forward (84,830 us., 6.90%)</title><rect x="97.0" y="181" width="81.4" height="15.0" fill="rgb(254,51,2)" rx="2" ry="2" />
<text  x="100.01" y="191.5" >torch_int..</text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (21,425 us., 1.74%)</title><rect x="875.8" y="165" width="20.6" height="15.0" fill="rgb(219,37,0)" rx="2" ry="2" />
<text  x="878.83" y="175.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (917 us., 0.07%)</title><rect x="743.8" y="165" width="0.9" height="15.0" fill="rgb(236,105,3)" rx="2" ry="2" />
<text  x="746.83" y="175.5" ></text>
</g>
<g >
<title>torch_int/nn/linear.py(40):_forward (58,210 us., 4.74%)</title><rect x="801.2" y="245" width="55.9" height="15.0" fill="rgb(248,170,13)" rx="2" ry="2" />
<text  x="804.21" y="255.5" >torch..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (19,525 us., 1.59%)</title><rect x="857.1" y="117" width="18.7" height="15.0" fill="rgb(207,35,48)" rx="2" ry="2" />
<text  x="860.08" y="127.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (200 us., 0.02%)</title><rect x="1017.8" y="181" width="0.2" height="15.0" fill="rgb(232,33,34)" rx="2" ry="2" />
<text  x="1020.78" y="191.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (719 us., 0.06%)</title><rect x="338.6" y="229" width="0.7" height="15.0" fill="rgb(250,99,13)" rx="2" ry="2" />
<text  x="341.65" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (58,210 us., 4.74%)</title><rect x="801.2" y="101" width="55.9" height="15.0" fill="rgb(214,8,49)" rx="2" ry="2" />
<text  x="804.21" y="111.5" >nn.Mo..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (917 us., 0.07%)</title><rect x="743.8" y="133" width="0.9" height="15.0" fill="rgb(246,31,13)" rx="2" ry="2" />
<text  x="746.83" y="143.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(213):_forward (89,636 us., 7.29%)</title><rect x="252.6" y="245" width="86.0" height="15.0" fill="rgb(245,210,34)" rx="2" ry="2" />
<text  x="255.61" y="255.5" >torch_int/..</text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (359,005 us., 29.20%)</title><rect x="398.0" y="213" width="344.6" height="15.0" fill="rgb(230,63,21)" rx="2" ry="2" />
<text  x="400.97" y="223.5" >nn.Module:_Int8OPTAttention</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (177,603 us., 14.45%)</title><rect x="1018.9" y="133" width="170.5" height="15.0" fill="rgb(212,71,52)" rx="2" ry="2" />
<text  x="1021.95" y="143.5" >nn.Module:_Int8OPTForC..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (58,859 us., 4.79%)</title><rect x="744.7" y="149" width="56.5" height="15.0" fill="rgb(205,139,23)" rx="2" ry="2" />
<text  x="747.71" y="159.5" >nn.Mo..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (1,390 us., 0.11%)</title><rect x="94.5" y="181" width="1.3" height="15.0" fill="rgb(248,223,54)" rx="2" ry="2" />
<text  x="97.47" y="191.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,390 us., 0.11%)</title><rect x="94.5" y="165" width="1.3" height="15.0" fill="rgb(231,18,12)" rx="2" ry="2" />
<text  x="97.47" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (719 us., 0.06%)</title><rect x="338.6" y="213" width="0.7" height="15.0" fill="rgb(213,10,6)" rx="2" ry="2" />
<text  x="341.65" y="223.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (359,005 us., 29.20%)</title><rect x="398.0" y="133" width="344.6" height="15.0" fill="rgb(217,54,10)" rx="2" ry="2" />
<text  x="400.97" y="143.5" >transformers/models/opt/modeling_opt.py(840):_..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (719 us., 0.06%)</title><rect x="338.6" y="149" width="0.7" height="15.0" fill="rgb(227,2,40)" rx="2" ry="2" />
<text  x="341.65" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_LayerNormQ (77,272 us., 6.29%)</title><rect x="178.4" y="229" width="74.2" height="15.0" fill="rgb(221,211,47)" rx="2" ry="2" />
<text  x="181.43" y="239.5" >nn.Modul..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (323 us., 0.03%)</title><rect x="94.2" y="245" width="0.3" height="15.0" fill="rgb(238,113,19)" rx="2" ry="2" />
<text  x="97.16" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (77,272 us., 6.29%)</title><rect x="178.4" y="133" width="74.2" height="15.0" fill="rgb(247,226,37)" rx="2" ry="2" />
<text  x="181.43" y="143.5" >nn.Modul..</text>
</g>
<g >
<title>&lt;built-in_method_layer_norm_of_type_object_at_0x7f1c5ff939c0&gt; (59,776 us., 4.86%)</title><rect x="743.8" y="261" width="57.4" height="15.0" fill="rgb(232,37,34)" rx="2" ry="2" />
<text  x="746.83" y="271.5" >&lt;built..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (598 us., 0.05%)</title><rect x="1189.4" y="197" width="0.6" height="15.0" fill="rgb(235,135,6)" rx="2" ry="2" />
<text  x="1192.43" y="207.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (84,830 us., 6.90%)</title><rect x="97.0" y="117" width="81.4" height="15.0" fill="rgb(222,39,19)" rx="2" ry="2" />
<text  x="100.01" y="127.5" >transform..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (84,830 us., 6.90%)</title><rect x="97.0" y="85" width="81.4" height="15.0" fill="rgb(232,162,21)" rx="2" ry="2" />
<text  x="100.01" y="95.5" >profiling..</text>
</g>
<g >
<title>torch_int/nn/fused.py(13):_forward (77,272 us., 6.29%)</title><rect x="178.4" y="245" width="74.2" height="15.0" fill="rgb(225,170,39)" rx="2" ry="2" />
<text  x="181.43" y="255.5" >torch_in..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (61,081 us., 4.97%)</title><rect x="339.3" y="85" width="58.7" height="15.0" fill="rgb(217,166,23)" rx="2" ry="2" />
<text  x="342.34" y="95.5" >profil..</text>
</g>
<g >
<title>nn.Module:_LayerNormQ (58,859 us., 4.79%)</title><rect x="744.7" y="213" width="56.5" height="15.0" fill="rgb(220,90,0)" rx="2" ry="2" />
<text  x="747.71" y="223.5" >nn.Mo..</text>
</g>
<g >
<title>torch_int/nn/opt.py(213):_forward (58,859 us., 4.79%)</title><rect x="744.7" y="197" width="56.5" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="747.71" y="207.5" >torch..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (84,830 us., 6.90%)</title><rect x="97.0" y="133" width="81.4" height="15.0" fill="rgb(220,170,4)" rx="2" ry="2" />
<text  x="100.01" y="143.5" >nn.Module..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (598 us., 0.05%)</title><rect x="1189.4" y="165" width="0.6" height="15.0" fill="rgb(251,40,13)" rx="2" ry="2" />
<text  x="1192.43" y="175.5" ></text>
</g>
<g >
<title>&lt;built-in_method_linear_a8_w8_bfp32_ofp32_of_PyCapsule_object_at_0x7f1b6b42d7b0&gt; (40,950 us., 3.33%)</title><rect x="857.1" y="261" width="39.3" height="15.0" fill="rgb(231,18,38)" rx="2" ry="2" />
<text  x="860.08" y="271.5" >&lt;bu..</text>
</g>
<g >
<title>torch_int/nn/opt.py(72):_forward (58,210 us., 4.74%)</title><rect x="801.2" y="197" width="55.9" height="15.0" fill="rgb(239,117,31)" rx="2" ry="2" />
<text  x="804.21" y="207.5" >torch..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (177,603 us., 14.45%)</title><rect x="1018.9" y="149" width="170.5" height="15.0" fill="rgb(232,78,31)" rx="2" ry="2" />
<text  x="1021.95" y="159.5" >transformers/models/op..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (613 us., 0.05%)</title><rect x="1018.4" y="229" width="0.5" height="15.0" fill="rgb(234,192,35)" rx="2" ry="2" />
<text  x="1021.36" y="239.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (58,210 us., 4.74%)</title><rect x="801.2" y="181" width="55.9" height="15.0" fill="rgb(246,163,35)" rx="2" ry="2" />
<text  x="804.21" y="191.5" >torch..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (89,636 us., 7.29%)</title><rect x="252.6" y="133" width="86.0" height="15.0" fill="rgb(248,188,18)" rx="2" ry="2" />
<text  x="255.61" y="143.5" >torch/auto..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (84,368 us., 6.86%)</title><rect x="936.8" y="133" width="81.0" height="15.0" fill="rgb(234,108,38)" rx="2" ry="2" />
<text  x="939.80" y="143.5" >transform..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (21,425 us., 1.74%)</title><rect x="875.8" y="133" width="20.6" height="15.0" fill="rgb(252,62,5)" rx="2" ry="2" />
<text  x="878.83" y="143.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (40,950 us., 3.33%)</title><rect x="857.1" y="229" width="39.3" height="15.0" fill="rgb(251,184,54)" rx="2" ry="2" />
<text  x="860.08" y="239.5" >tor..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (21,425 us., 1.74%)</title><rect x="875.8" y="69" width="20.6" height="15.0" fill="rgb(224,193,12)" rx="2" ry="2" />
<text  x="878.83" y="79.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (61,081 us., 4.97%)</title><rect x="339.3" y="197" width="58.7" height="15.0" fill="rgb(210,40,2)" rx="2" ry="2" />
<text  x="342.34" y="207.5" >nn.Mod..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (42,093 us., 3.42%)</title><rect x="896.4" y="133" width="40.4" height="15.0" fill="rgb(210,9,2)" rx="2" ry="2" />
<text  x="899.39" y="143.5" >tra..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (84,368 us., 6.86%)</title><rect x="936.8" y="229" width="81.0" height="15.0" fill="rgb(205,66,18)" rx="2" ry="2" />
<text  x="939.80" y="239.5" >torch/aut..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (84,368 us., 6.86%)</title><rect x="936.8" y="85" width="81.0" height="15.0" fill="rgb(235,101,53)" rx="2" ry="2" />
<text  x="939.80" y="95.5" >torch/aut..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (42,093 us., 3.42%)</title><rect x="896.4" y="85" width="40.4" height="15.0" fill="rgb(209,49,34)" rx="2" ry="2" />
<text  x="899.39" y="95.5" >tor..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (203 us., 0.02%)</title><rect x="742.6" y="245" width="0.2" height="15.0" fill="rgb(236,142,36)" rx="2" ry="2" />
<text  x="745.58" y="255.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (917 us., 0.07%)</title><rect x="743.8" y="117" width="0.9" height="15.0" fill="rgb(216,225,29)" rx="2" ry="2" />
<text  x="746.83" y="127.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (323 us., 0.03%)</title><rect x="94.2" y="197" width="0.3" height="15.0" fill="rgb(232,14,18)" rx="2" ry="2" />
<text  x="97.16" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (177,603 us., 14.45%)</title><rect x="1018.9" y="229" width="170.5" height="15.0" fill="rgb(231,210,22)" rx="2" ry="2" />
<text  x="1021.95" y="239.5" >nn.Module:_Int8OPTAtte..</text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (77,272 us., 6.29%)</title><rect x="178.4" y="181" width="74.2" height="15.0" fill="rgb(226,21,26)" rx="2" ry="2" />
<text  x="181.43" y="191.5" >torch_in..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (613 us., 0.05%)</title><rect x="1018.4" y="197" width="0.5" height="15.0" fill="rgb(236,67,46)" rx="2" ry="2" />
<text  x="1021.36" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_W8A8B8O8Linear (58,210 us., 4.74%)</title><rect x="801.2" y="213" width="55.9" height="15.0" fill="rgb(219,220,20)" rx="2" ry="2" />
<text  x="804.21" y="223.5" >nn.Mo..</text>
</g>
<g >
<title>torch/nn/modules/sparse.py(157):_forward (2,644 us., 0.22%)</title><rect x="94.5" y="229" width="2.5" height="15.0" fill="rgb(221,193,25)" rx="2" ry="2" />
<text  x="97.47" y="239.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (58,210 us., 4.74%)</title><rect x="801.2" y="117" width="55.9" height="15.0" fill="rgb(218,61,35)" rx="2" ry="2" />
<text  x="804.21" y="127.5" >torch..</text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (613 us., 0.05%)</title><rect x="1018.4" y="261" width="0.5" height="15.0" fill="rgb(246,111,48)" rx="2" ry="2" />
<text  x="1021.36" y="271.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (21,425 us., 1.74%)</title><rect x="875.8" y="37" width="20.6" height="15.0" fill="rgb(227,177,44)" rx="2" ry="2" />
<text  x="878.83" y="47.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (84,830 us., 6.90%)</title><rect x="97.0" y="197" width="81.4" height="15.0" fill="rgb(216,171,5)" rx="2" ry="2" />
<text  x="100.01" y="207.5" >nn.Module..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (58,859 us., 4.79%)</title><rect x="744.7" y="101" width="56.5" height="15.0" fill="rgb(206,169,6)" rx="2" ry="2" />
<text  x="747.71" y="111.5" >profi..</text>
</g>
<g >
<title>nn.Module:_LayerNorm (917 us., 0.07%)</title><rect x="743.8" y="213" width="0.9" height="15.0" fill="rgb(245,201,26)" rx="2" ry="2" />
<text  x="746.83" y="223.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (84,830 us., 6.90%)</title><rect x="97.0" y="149" width="81.4" height="15.0" fill="rgb(212,168,30)" rx="2" ry="2" />
<text  x="100.01" y="159.5" >torch_int..</text>
</g>
<g >
<title>torch_int/nn/opt.py(69):__shape (61,081 us., 4.97%)</title><rect x="339.3" y="245" width="58.7" height="15.0" fill="rgb(248,228,33)" rx="2" ry="2" />
<text  x="342.34" y="255.5" >torch_..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (87,675 us., 7.13%)</title><rect x="10.0" y="197" width="84.2" height="15.0" fill="rgb(222,20,51)" rx="2" ry="2" />
<text  x="13.00" y="207.5" >nn.Module..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,390 us., 0.11%)</title><rect x="94.5" y="133" width="1.3" height="15.0" fill="rgb(220,170,50)" rx="2" ry="2" />
<text  x="97.47" y="143.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (89,636 us., 7.29%)</title><rect x="252.6" y="197" width="86.0" height="15.0" fill="rgb(222,108,4)" rx="2" ry="2" />
<text  x="255.61" y="207.5" >nn.Module:..</text>
</g>
<g >
<title>&lt;built-in_function_linear&gt; (87,675 us., 7.13%)</title><rect x="10.0" y="261" width="84.2" height="15.0" fill="rgb(234,88,0)" rx="2" ry="2" />
<text  x="13.00" y="271.5" >&lt;built-in..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (77,272 us., 6.29%)</title><rect x="178.4" y="165" width="74.2" height="15.0" fill="rgb(217,78,46)" rx="2" ry="2" />
<text  x="181.43" y="175.5" >nn.Modul..</text>
</g>
</g>
</svg>
