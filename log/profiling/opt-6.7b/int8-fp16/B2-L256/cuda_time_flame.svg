<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="326" onload="init(evt)" viewBox="0 0 1200 326" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="326.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >CUDA Time</text>
<text id="details" x="10.00" y="309" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="309" > </text>
<g id="frames">
<g >
<title>nn.Module:_Int8OPTAttention (106,697 us., 4.46%)</title><rect x="376.8" y="197" width="52.7" height="15.0" fill="rgb(234,53,7)" rx="2" ry="2" />
<text  x="379.83" y="207.5" >nn.Mo..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (2,413 us., 0.10%)</title><rect x="91.4" y="149" width="1.2" height="15.0" fill="rgb(252,179,7)" rx="2" ry="2" />
<text  x="94.44" y="159.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (302 us., 0.01%)</title><rect x="779.3" y="245" width="0.2" height="15.0" fill="rgb(243,30,4)" rx="2" ry="2" />
<text  x="782.32" y="255.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (708,738 us., 29.65%)</title><rect x="429.5" y="101" width="349.8" height="15.0" fill="rgb(217,141,23)" rx="2" ry="2" />
<text  x="432.50" y="111.5" >profiling/utils.py(18):_profile_model</text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (83,016 us., 3.47%)</title><rect x="818.3" y="117" width="41.0" height="15.0" fill="rgb(216,186,16)" rx="2" ry="2" />
<text  x="821.34" y="127.5" >tor..</text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (44,800 us., 1.87%)</title><rect x="859.3" y="165" width="22.1" height="15.0" fill="rgb(219,72,45)" rx="2" ry="2" />
<text  x="862.32" y="175.5" >t..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,913 us., 0.08%)</title><rect x="1022.4" y="229" width="0.9" height="15.0" fill="rgb(243,52,29)" rx="2" ry="2" />
<text  x="1025.38" y="239.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (708,738 us., 29.65%)</title><rect x="429.5" y="229" width="349.8" height="15.0" fill="rgb(216,156,20)" rx="2" ry="2" />
<text  x="432.50" y="239.5" >torch/autograd/grad_mode.py(24):_decorate_context</text>
</g>
<g >
<title>torch_int/nn/linear.py(225):_forward (89,587 us., 3.75%)</title><rect x="859.3" y="245" width="44.2" height="15.0" fill="rgb(212,220,42)" rx="2" ry="2" />
<text  x="862.32" y="255.5" >torc..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (163,475 us., 6.84%)</title><rect x="941.4" y="85" width="80.7" height="15.0" fill="rgb(217,37,5)" rx="2" ry="2" />
<text  x="944.40" y="95.5" >torch/aut..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (76,461 us., 3.20%)</title><rect x="780.6" y="149" width="37.7" height="15.0" fill="rgb(242,195,0)" rx="2" ry="2" />
<text  x="783.60" y="159.5" >nn...</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (190,415 us., 7.96%)</title><rect x="175.2" y="133" width="94.0" height="15.0" fill="rgb(213,12,17)" rx="2" ry="2" />
<text  x="178.23" y="143.5" >nn.Module:_..</text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (337,081 us., 14.10%)</title><rect x="1023.3" y="229" width="166.4" height="15.0" fill="rgb(234,42,14)" rx="2" ry="2" />
<text  x="1026.33" y="239.5" >nn.Module:_Int8OPTAtt..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,121 us., 0.05%)</title><rect x="376.3" y="165" width="0.5" height="15.0" fill="rgb(219,141,9)" rx="2" ry="2" />
<text  x="379.28" y="175.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (44,787 us., 1.87%)</title><rect x="881.4" y="85" width="22.1" height="15.0" fill="rgb(225,154,8)" rx="2" ry="2" />
<text  x="884.43" y="95.5" >t..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (708,738 us., 29.65%)</title><rect x="429.5" y="117" width="349.8" height="15.0" fill="rgb(205,96,25)" rx="2" ry="2" />
<text  x="432.50" y="127.5" >nn.Module:_Int8OPTForCausalLM</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (190,415 us., 7.96%)</title><rect x="175.2" y="101" width="94.0" height="15.0" fill="rgb(237,87,6)" rx="2" ry="2" />
<text  x="178.23" y="111.5" >torch/autog..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (106,697 us., 4.46%)</title><rect x="376.8" y="69" width="52.7" height="15.0" fill="rgb(205,156,18)" rx="2" ry="2" />
<text  x="379.83" y="79.5" >torch..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (83,016 us., 3.47%)</title><rect x="818.3" y="101" width="41.0" height="15.0" fill="rgb(254,210,9)" rx="2" ry="2" />
<text  x="821.34" y="111.5" >nn...</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (76,461 us., 3.20%)</title><rect x="780.6" y="85" width="37.7" height="15.0" fill="rgb(210,41,39)" rx="2" ry="2" />
<text  x="783.60" y="95.5" >tor..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (44,787 us., 1.87%)</title><rect x="881.4" y="69" width="22.1" height="15.0" fill="rgb(224,146,4)" rx="2" ry="2" />
<text  x="884.43" y="79.5" >n..</text>
</g>
<g >
<title>torch_int/nn/opt.py(72):_forward (163,475 us., 6.84%)</title><rect x="941.4" y="245" width="80.7" height="15.0" fill="rgb(240,49,45)" rx="2" ry="2" />
<text  x="944.40" y="255.5" >torch_int..</text>
</g>
<g >
<title>&lt;built-in_method_linear_a8_w8_b8_o8_of_PyCapsule_object_at_0x7fcfb24c4810&gt; (83,016 us., 3.47%)</title><rect x="818.3" y="261" width="41.0" height="15.0" fill="rgb(241,5,26)" rx="2" ry="2" />
<text  x="821.34" y="271.5" >&lt;bu..</text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (44,787 us., 1.87%)</title><rect x="881.4" y="165" width="22.1" height="15.0" fill="rgb(228,26,49)" rx="2" ry="2" />
<text  x="884.43" y="175.5" >n..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (76,461 us., 3.20%)</title><rect x="780.6" y="181" width="37.7" height="15.0" fill="rgb(254,186,48)" rx="2" ry="2" />
<text  x="783.60" y="191.5" >nn...</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (600 us., 0.03%)</title><rect x="1189.7" y="149" width="0.3" height="15.0" fill="rgb(242,36,2)" rx="2" ry="2" />
<text  x="1192.70" y="159.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,913 us., 0.08%)</title><rect x="1022.4" y="181" width="0.9" height="15.0" fill="rgb(216,33,13)" rx="2" ry="2" />
<text  x="1025.38" y="191.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (600 us., 0.03%)</title><rect x="1189.7" y="229" width="0.3" height="15.0" fill="rgb(219,204,27)" rx="2" ry="2" />
<text  x="1192.70" y="239.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (76,704 us., 3.21%)</title><rect x="903.5" y="165" width="37.9" height="15.0" fill="rgb(229,132,49)" rx="2" ry="2" />
<text  x="906.54" y="175.5" >tor..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(89):__expand_mask (1,098 us., 0.05%)</title><rect x="779.5" y="245" width="0.5" height="15.0" fill="rgb(226,226,5)" rx="2" ry="2" />
<text  x="782.47" y="255.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(213):_forward (44,787 us., 1.87%)</title><rect x="881.4" y="149" width="22.1" height="15.0" fill="rgb(217,9,33)" rx="2" ry="2" />
<text  x="884.43" y="159.5" >t..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (216,913 us., 9.07%)</title><rect x="269.2" y="181" width="107.1" height="15.0" fill="rgb(229,7,46)" rx="2" ry="2" />
<text  x="272.22" y="191.5" >transformers/..</text>
</g>
<g >
<title>&lt;built-in_method_max_of_type_object_at_0x7fd0a702a9c0&gt; (163,475 us., 6.84%)</title><rect x="941.4" y="261" width="80.7" height="15.0" fill="rgb(227,191,49)" rx="2" ry="2" />
<text  x="944.40" y="271.5" >&lt;built-in..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (2,130 us., 0.09%)</title><rect x="92.6" y="149" width="1.1" height="15.0" fill="rgb(217,183,32)" rx="2" ry="2" />
<text  x="95.63" y="159.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (83,016 us., 3.47%)</title><rect x="818.3" y="37" width="41.0" height="15.0" fill="rgb(229,127,46)" rx="2" ry="2" />
<text  x="821.34" y="47.5" >tor..</text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (1,193 us., 0.05%)</title><rect x="780.0" y="197" width="0.6" height="15.0" fill="rgb(222,23,40)" rx="2" ry="2" />
<text  x="783.01" y="207.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (106,697 us., 4.46%)</title><rect x="376.8" y="85" width="52.7" height="15.0" fill="rgb(228,63,14)" rx="2" ry="2" />
<text  x="379.83" y="95.5" >profi..</text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (2,413 us., 0.10%)</title><rect x="91.4" y="197" width="1.2" height="15.0" fill="rgb(222,123,20)" rx="2" ry="2" />
<text  x="94.44" y="207.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (76,704 us., 3.21%)</title><rect x="903.5" y="85" width="37.9" height="15.0" fill="rgb(227,23,4)" rx="2" ry="2" />
<text  x="906.54" y="95.5" >tor..</text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (302 us., 0.01%)</title><rect x="779.3" y="213" width="0.2" height="15.0" fill="rgb(242,203,35)" rx="2" ry="2" />
<text  x="782.32" y="223.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (2,130 us., 0.09%)</title><rect x="92.6" y="101" width="1.1" height="15.0" fill="rgb(236,145,38)" rx="2" ry="2" />
<text  x="95.63" y="111.5" ></text>
</g>
<g >
<title>torch/nn/modules/normalization.py(188):_forward (1,193 us., 0.05%)</title><rect x="780.0" y="229" width="0.6" height="15.0" fill="rgb(210,191,12)" rx="2" ry="2" />
<text  x="783.01" y="239.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (1,121 us., 0.05%)</title><rect x="376.3" y="229" width="0.5" height="15.0" fill="rgb(245,139,6)" rx="2" ry="2" />
<text  x="379.28" y="239.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (708,738 us., 29.65%)</title><rect x="429.5" y="85" width="349.8" height="15.0" fill="rgb(243,12,49)" rx="2" ry="2" />
<text  x="432.50" y="95.5" >torch/autograd/grad_mode.py(27):_decorate_context</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (163,475 us., 6.84%)</title><rect x="941.4" y="229" width="80.7" height="15.0" fill="rgb(250,20,25)" rx="2" ry="2" />
<text  x="944.40" y="239.5" >torch/aut..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (337,081 us., 14.10%)</title><rect x="1023.3" y="149" width="166.4" height="15.0" fill="rgb(211,72,39)" rx="2" ry="2" />
<text  x="1026.33" y="159.5" >transformers/models/o..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (76,704 us., 3.21%)</title><rect x="903.5" y="181" width="37.9" height="15.0" fill="rgb(219,69,24)" rx="2" ry="2" />
<text  x="906.54" y="191.5" >nn...</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (600 us., 0.03%)</title><rect x="1189.7" y="197" width="0.3" height="15.0" fill="rgb(251,37,53)" rx="2" ry="2" />
<text  x="1192.70" y="207.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (897 us., 0.04%)</title><rect x="91.0" y="213" width="0.4" height="15.0" fill="rgb(212,120,44)" rx="2" ry="2" />
<text  x="94.00" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (216,913 us., 9.07%)</title><rect x="269.2" y="197" width="107.1" height="15.0" fill="rgb(246,55,14)" rx="2" ry="2" />
<text  x="272.22" y="207.5" >nn.Module:_In..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (76,704 us., 3.21%)</title><rect x="903.5" y="101" width="37.9" height="15.0" fill="rgb(208,153,12)" rx="2" ry="2" />
<text  x="906.54" y="111.5" >pro..</text>
</g>
<g >
<title>&lt;built-in_function_linear&gt; (164,103 us., 6.86%)</title><rect x="10.0" y="261" width="81.0" height="15.0" fill="rgb(215,19,33)" rx="2" ry="2" />
<text  x="13.00" y="271.5" >&lt;built-in..</text>
</g>
<g >
<title>&lt;built-in_method_layer_norm_of_type_object_at_0x7fd0a702a9c0&gt; (77,654 us., 3.25%)</title><rect x="780.0" y="261" width="38.3" height="15.0" fill="rgb(251,89,32)" rx="2" ry="2" />
<text  x="783.01" y="271.5" >&lt;bu..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (89,587 us., 3.75%)</title><rect x="859.3" y="229" width="44.2" height="15.0" fill="rgb(223,168,24)" rx="2" ry="2" />
<text  x="862.32" y="239.5" >torc..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (163,475 us., 6.84%)</title><rect x="941.4" y="133" width="80.7" height="15.0" fill="rgb(219,164,31)" rx="2" ry="2" />
<text  x="944.40" y="143.5" >transform..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (44,800 us., 1.87%)</title><rect x="859.3" y="149" width="22.1" height="15.0" fill="rgb(236,187,44)" rx="2" ry="2" />
<text  x="862.32" y="159.5" >n..</text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (216,913 us., 9.07%)</title><rect x="269.2" y="213" width="107.1" height="15.0" fill="rgb(221,64,38)" rx="2" ry="2" />
<text  x="272.22" y="223.5" >torch_int/nn/..</text>
</g>
<g >
<title>nn.Module:_Linear (164,103 us., 6.86%)</title><rect x="10.0" y="229" width="81.0" height="15.0" fill="rgb(248,49,39)" rx="2" ry="2" />
<text  x="13.00" y="239.5" >nn.Module..</text>
</g>
<g >
<title>nn.Module:_W8A8BFP32OFP32Linear (89,587 us., 3.75%)</title><rect x="859.3" y="213" width="44.2" height="15.0" fill="rgb(237,222,22)" rx="2" ry="2" />
<text  x="862.32" y="223.5" >nn.M..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (83,016 us., 3.47%)</title><rect x="818.3" y="181" width="41.0" height="15.0" fill="rgb(248,122,21)" rx="2" ry="2" />
<text  x="821.34" y="191.5" >tor..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (1,098 us., 0.05%)</title><rect x="779.5" y="197" width="0.5" height="15.0" fill="rgb(212,202,10)" rx="2" ry="2" />
<text  x="782.47" y="207.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (897 us., 0.04%)</title><rect x="91.0" y="181" width="0.4" height="15.0" fill="rgb(238,7,46)" rx="2" ry="2" />
<text  x="94.00" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_LayerNormQ (190,415 us., 7.96%)</title><rect x="175.2" y="229" width="94.0" height="15.0" fill="rgb(247,104,31)" rx="2" ry="2" />
<text  x="178.23" y="239.5" >nn.Module:_..</text>
</g>
<g >
<title>nn.Module:_W8A8B8O8Linear (83,016 us., 3.47%)</title><rect x="818.3" y="213" width="41.0" height="15.0" fill="rgb(216,63,33)" rx="2" ry="2" />
<text  x="821.34" y="223.5" >nn...</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (2,130 us., 0.09%)</title><rect x="92.6" y="133" width="1.1" height="15.0" fill="rgb(242,164,45)" rx="2" ry="2" />
<text  x="95.63" y="143.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (106,697 us., 4.46%)</title><rect x="376.8" y="213" width="52.7" height="15.0" fill="rgb(206,39,7)" rx="2" ry="2" />
<text  x="379.83" y="223.5" >torch..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (2,413 us., 0.10%)</title><rect x="91.4" y="133" width="1.2" height="15.0" fill="rgb(210,145,18)" rx="2" ry="2" />
<text  x="94.44" y="143.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (165,209 us., 6.91%)</title><rect x="93.7" y="149" width="81.5" height="15.0" fill="rgb(233,64,27)" rx="2" ry="2" />
<text  x="96.68" y="159.5" >torch_int..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (76,704 us., 3.21%)</title><rect x="903.5" y="133" width="37.9" height="15.0" fill="rgb(219,32,50)" rx="2" ry="2" />
<text  x="906.54" y="143.5" >tra..</text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (302 us., 0.01%)</title><rect x="779.3" y="229" width="0.2" height="15.0" fill="rgb(230,61,23)" rx="2" ry="2" />
<text  x="782.32" y="239.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(213):_forward (165,209 us., 6.91%)</title><rect x="93.7" y="181" width="81.5" height="15.0" fill="rgb(230,58,11)" rx="2" ry="2" />
<text  x="96.68" y="191.5" >torch_int..</text>
</g>
<g >
<title>torch_int/nn/opt.py(213):_forward (83,016 us., 3.47%)</title><rect x="818.3" y="149" width="41.0" height="15.0" fill="rgb(247,89,21)" rx="2" ry="2" />
<text  x="821.34" y="159.5" >tor..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (600 us., 0.03%)</title><rect x="1189.7" y="213" width="0.3" height="15.0" fill="rgb(220,226,54)" rx="2" ry="2" />
<text  x="1192.70" y="223.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (2,413 us., 0.10%)</title><rect x="91.4" y="117" width="1.2" height="15.0" fill="rgb(221,214,43)" rx="2" ry="2" />
<text  x="94.44" y="127.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (2,130 us., 0.09%)</title><rect x="92.6" y="165" width="1.1" height="15.0" fill="rgb(250,67,43)" rx="2" ry="2" />
<text  x="95.63" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (216,913 us., 9.07%)</title><rect x="269.2" y="165" width="107.1" height="15.0" fill="rgb(230,145,53)" rx="2" ry="2" />
<text  x="272.22" y="175.5" >nn.Module:_In..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (106,697 us., 4.46%)</title><rect x="376.8" y="101" width="52.7" height="15.0" fill="rgb(239,41,4)" rx="2" ry="2" />
<text  x="379.83" y="111.5" >nn.Mo..</text>
</g>
<g >
<title>torch_int/nn/opt.py(72):_forward (708,738 us., 29.65%)</title><rect x="429.5" y="245" width="349.8" height="15.0" fill="rgb(249,153,3)" rx="2" ry="2" />
<text  x="432.50" y="255.5" >torch_int/nn/opt.py(72):_forward</text>
</g>
<g >
<title>torch_int/nn/fused.py(13):_forward (190,415 us., 7.96%)</title><rect x="175.2" y="245" width="94.0" height="15.0" fill="rgb(239,42,16)" rx="2" ry="2" />
<text  x="178.23" y="255.5" >torch_int/n..</text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (708,738 us., 29.65%)</title><rect x="429.5" y="213" width="349.8" height="15.0" fill="rgb(207,107,37)" rx="2" ry="2" />
<text  x="432.50" y="223.5" >nn.Module:_Int8OPTAttention</text>
</g>
<g >
<title>torch_int/nn/opt.py(213):_forward (76,461 us., 3.20%)</title><rect x="780.6" y="197" width="37.7" height="15.0" fill="rgb(217,70,34)" rx="2" ry="2" />
<text  x="783.60" y="207.5" >tor..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (165,209 us., 6.91%)</title><rect x="93.7" y="213" width="81.5" height="15.0" fill="rgb(253,185,4)" rx="2" ry="2" />
<text  x="96.68" y="223.5" >torch/aut..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (83,016 us., 3.47%)</title><rect x="818.3" y="69" width="41.0" height="15.0" fill="rgb(240,18,13)" rx="2" ry="2" />
<text  x="821.34" y="79.5" >nn...</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (76,704 us., 3.21%)</title><rect x="903.5" y="229" width="37.9" height="15.0" fill="rgb(233,20,31)" rx="2" ry="2" />
<text  x="906.54" y="239.5" >tor..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (302 us., 0.01%)</title><rect x="779.3" y="181" width="0.2" height="15.0" fill="rgb(241,170,34)" rx="2" ry="2" />
<text  x="782.32" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (163,475 us., 6.84%)</title><rect x="941.4" y="117" width="80.7" height="15.0" fill="rgb(227,179,19)" rx="2" ry="2" />
<text  x="944.40" y="127.5" >nn.Module..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (897 us., 0.04%)</title><rect x="91.0" y="245" width="0.4" height="15.0" fill="rgb(231,14,41)" rx="2" ry="2" />
<text  x="94.00" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (165,209 us., 6.91%)</title><rect x="93.7" y="165" width="81.5" height="15.0" fill="rgb(229,219,0)" rx="2" ry="2" />
<text  x="96.68" y="175.5" >nn.Module..</text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (1,098 us., 0.05%)</title><rect x="779.5" y="213" width="0.5" height="15.0" fill="rgb(227,56,37)" rx="2" ry="2" />
<text  x="782.47" y="223.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (302 us., 0.01%)</title><rect x="779.3" y="133" width="0.2" height="15.0" fill="rgb(249,102,30)" rx="2" ry="2" />
<text  x="782.32" y="143.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (164,103 us., 6.86%)</title><rect x="10.0" y="181" width="81.0" height="15.0" fill="rgb(236,121,22)" rx="2" ry="2" />
<text  x="13.00" y="191.5" >profiling..</text>
</g>
<g >
<title>&lt;built-in_method_linear_a8_w8_bfp32_ofp32_of_PyCapsule_object_at_0x7fcfb24c47b0&gt; (89,587 us., 3.75%)</title><rect x="859.3" y="261" width="44.2" height="15.0" fill="rgb(214,44,9)" rx="2" ry="2" />
<text  x="862.32" y="271.5" >&lt;bui..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (600 us., 0.03%)</title><rect x="1189.7" y="181" width="0.3" height="15.0" fill="rgb(206,48,48)" rx="2" ry="2" />
<text  x="1192.70" y="191.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (76,461 us., 3.20%)</title><rect x="780.6" y="133" width="37.7" height="15.0" fill="rgb(254,139,44)" rx="2" ry="2" />
<text  x="783.60" y="143.5" >tra..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (216,913 us., 9.07%)</title><rect x="269.2" y="133" width="107.1" height="15.0" fill="rgb(238,23,36)" rx="2" ry="2" />
<text  x="272.22" y="143.5" >torch/autogra..</text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (600 us., 0.03%)</title><rect x="1189.7" y="245" width="0.3" height="15.0" fill="rgb(239,156,27)" rx="2" ry="2" />
<text  x="1192.70" y="255.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,193 us., 0.05%)</title><rect x="780.0" y="133" width="0.6" height="15.0" fill="rgb(206,87,5)" rx="2" ry="2" />
<text  x="783.01" y="143.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (44,800 us., 1.87%)</title><rect x="859.3" y="101" width="22.1" height="15.0" fill="rgb(236,136,10)" rx="2" ry="2" />
<text  x="862.32" y="111.5" >p..</text>
</g>
<g >
<title>nn.Module:_LayerNorm (1,193 us., 0.05%)</title><rect x="780.0" y="213" width="0.6" height="15.0" fill="rgb(251,83,20)" rx="2" ry="2" />
<text  x="783.01" y="223.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(213):_forward (190,415 us., 7.96%)</title><rect x="175.2" y="213" width="94.0" height="15.0" fill="rgb(225,58,6)" rx="2" ry="2" />
<text  x="178.23" y="223.5" >torch_int/n..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (1,193 us., 0.05%)</title><rect x="780.0" y="149" width="0.6" height="15.0" fill="rgb(215,108,54)" rx="2" ry="2" />
<text  x="783.01" y="159.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,121 us., 0.05%)</title><rect x="376.3" y="149" width="0.5" height="15.0" fill="rgb(249,84,5)" rx="2" ry="2" />
<text  x="379.28" y="159.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (165,209 us., 6.91%)</title><rect x="93.7" y="85" width="81.5" height="15.0" fill="rgb(243,13,33)" rx="2" ry="2" />
<text  x="96.68" y="95.5" >profiling..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,121 us., 0.05%)</title><rect x="376.3" y="197" width="0.5" height="15.0" fill="rgb(239,108,7)" rx="2" ry="2" />
<text  x="379.28" y="207.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(72):_forward (337,081 us., 14.10%)</title><rect x="1023.3" y="261" width="166.4" height="15.0" fill="rgb(235,28,46)" rx="2" ry="2" />
<text  x="1026.33" y="271.5" >torch_int/nn/opt.py(7..</text>
</g>
<g >
<title>torch_int/nn/opt.py(72):_forward (165,209 us., 6.91%)</title><rect x="93.7" y="229" width="81.5" height="15.0" fill="rgb(212,26,37)" rx="2" ry="2" />
<text  x="96.68" y="239.5" >torch_int..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (1,098 us., 0.05%)</title><rect x="779.5" y="165" width="0.5" height="15.0" fill="rgb(214,148,51)" rx="2" ry="2" />
<text  x="782.47" y="175.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (708,738 us., 29.65%)</title><rect x="429.5" y="165" width="349.8" height="15.0" fill="rgb(232,23,52)" rx="2" ry="2" />
<text  x="432.50" y="175.5" >torch_int/nn/opt.py(346):_forward</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (106,697 us., 4.46%)</title><rect x="376.8" y="165" width="52.7" height="15.0" fill="rgb(249,154,10)" rx="2" ry="2" />
<text  x="379.83" y="175.5" >nn.Mo..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (216,913 us., 9.07%)</title><rect x="269.2" y="229" width="107.1" height="15.0" fill="rgb(245,142,9)" rx="2" ry="2" />
<text  x="272.22" y="239.5" >nn.Module:_In..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (1,913 us., 0.08%)</title><rect x="1022.4" y="245" width="0.9" height="15.0" fill="rgb(209,37,31)" rx="2" ry="2" />
<text  x="1025.38" y="255.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(72):_forward (83,016 us., 3.47%)</title><rect x="818.3" y="197" width="41.0" height="15.0" fill="rgb(240,28,42)" rx="2" ry="2" />
<text  x="821.34" y="207.5" >tor..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (163,475 us., 6.84%)</title><rect x="941.4" y="149" width="80.7" height="15.0" fill="rgb(206,118,52)" rx="2" ry="2" />
<text  x="944.40" y="159.5" >nn.Module..</text>
</g>
<g >
<title>torch_int/nn/opt.py(69):__shape (106,697 us., 4.46%)</title><rect x="376.8" y="245" width="52.7" height="15.0" fill="rgb(241,72,49)" rx="2" ry="2" />
<text  x="379.83" y="255.5" >torch..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (165,209 us., 6.91%)</title><rect x="93.7" y="101" width="81.5" height="15.0" fill="rgb(238,35,11)" rx="2" ry="2" />
<text  x="96.68" y="111.5" >nn.Module..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (165,209 us., 6.91%)</title><rect x="93.7" y="117" width="81.5" height="15.0" fill="rgb(206,58,42)" rx="2" ry="2" />
<text  x="96.68" y="127.5" >transform..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (163,475 us., 6.84%)</title><rect x="941.4" y="181" width="80.7" height="15.0" fill="rgb(207,148,46)" rx="2" ry="2" />
<text  x="944.40" y="191.5" >nn.Module..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (83,016 us., 3.47%)</title><rect x="818.3" y="133" width="41.0" height="15.0" fill="rgb(234,191,43)" rx="2" ry="2" />
<text  x="821.34" y="143.5" >nn...</text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (83,016 us., 3.47%)</title><rect x="818.3" y="165" width="41.0" height="15.0" fill="rgb(206,170,15)" rx="2" ry="2" />
<text  x="821.34" y="175.5" >nn...</text>
</g>
<g >
<title>torch/nn/functional.py(2488):_layer_norm (77,654 us., 3.25%)</title><rect x="780.0" y="245" width="38.3" height="15.0" fill="rgb(238,62,44)" rx="2" ry="2" />
<text  x="783.01" y="255.5" >tor..</text>
</g>
<g >
<title>torch_int/nn/opt.py(72):_forward (106,697 us., 4.46%)</title><rect x="376.8" y="229" width="52.7" height="15.0" fill="rgb(208,32,47)" rx="2" ry="2" />
<text  x="379.83" y="239.5" >torch..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (190,415 us., 7.96%)</title><rect x="175.2" y="165" width="94.0" height="15.0" fill="rgb(208,186,26)" rx="2" ry="2" />
<text  x="178.23" y="175.5" >nn.Module:_..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,098 us., 0.05%)</title><rect x="779.5" y="149" width="0.5" height="15.0" fill="rgb(244,81,39)" rx="2" ry="2" />
<text  x="782.47" y="159.5" ></text>
</g>
<g >
<title>&lt;built-in_method_embedding_of_type_object_at_0x7fd0a702a9c0&gt; (4,543 us., 0.19%)</title><rect x="91.4" y="261" width="2.3" height="15.0" fill="rgb(248,10,45)" rx="2" ry="2" />
<text  x="94.44" y="271.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (163,475 us., 6.84%)</title><rect x="941.4" y="213" width="80.7" height="15.0" fill="rgb(205,210,3)" rx="2" ry="2" />
<text  x="944.40" y="223.5" >nn.Module..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (190,415 us., 7.96%)</title><rect x="175.2" y="197" width="94.0" height="15.0" fill="rgb(231,19,46)" rx="2" ry="2" />
<text  x="178.23" y="207.5" >nn.Module:_..</text>
</g>
<g >
<title>torch_int/nn/opt.py(213):_forward (106,697 us., 4.46%)</title><rect x="376.8" y="181" width="52.7" height="15.0" fill="rgb(213,95,22)" rx="2" ry="2" />
<text  x="379.83" y="191.5" >torch..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (164,103 us., 6.86%)</title><rect x="10.0" y="165" width="81.0" height="15.0" fill="rgb(219,120,25)" rx="2" ry="2" />
<text  x="13.00" y="175.5" >torch/aut..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (600 us., 0.03%)</title><rect x="1189.7" y="165" width="0.3" height="15.0" fill="rgb(249,218,6)" rx="2" ry="2" />
<text  x="1192.70" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (2,413 us., 0.10%)</title><rect x="91.4" y="181" width="1.2" height="15.0" fill="rgb(226,17,5)" rx="2" ry="2" />
<text  x="94.44" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (337,081 us., 14.10%)</title><rect x="1023.3" y="197" width="166.4" height="15.0" fill="rgb(249,161,15)" rx="2" ry="2" />
<text  x="1026.33" y="207.5" >nn.Module:_Int8OPTDec..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (708,738 us., 29.65%)</title><rect x="429.5" y="133" width="349.8" height="15.0" fill="rgb(223,4,32)" rx="2" ry="2" />
<text  x="432.50" y="143.5" >transformers/models/opt/modeling_opt.py(840):_f..</text>
</g>
<g >
<title>torch/nn/modules/linear.py(113):_forward (164,103 us., 6.86%)</title><rect x="10.0" y="245" width="81.0" height="15.0" fill="rgb(244,78,44)" rx="2" ry="2" />
<text  x="13.00" y="255.5" >torch/nn/..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (302 us., 0.01%)</title><rect x="779.3" y="149" width="0.2" height="15.0" fill="rgb(209,206,6)" rx="2" ry="2" />
<text  x="782.32" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_Embedding (2,413 us., 0.10%)</title><rect x="91.4" y="213" width="1.2" height="15.0" fill="rgb(222,67,54)" rx="2" ry="2" />
<text  x="94.44" y="223.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (190,415 us., 7.96%)</title><rect x="175.2" y="181" width="94.0" height="15.0" fill="rgb(243,118,46)" rx="2" ry="2" />
<text  x="178.23" y="191.5" >torch_int/n..</text>
</g>
<g >
<title>torch_int/nn/linear.py(90):_forward (76,704 us., 3.21%)</title><rect x="903.5" y="245" width="37.9" height="15.0" fill="rgb(228,100,3)" rx="2" ry="2" />
<text  x="906.54" y="255.5" >tor..</text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (897 us., 0.04%)</title><rect x="91.0" y="229" width="0.4" height="15.0" fill="rgb(247,77,35)" rx="2" ry="2" />
<text  x="94.00" y="239.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (897 us., 0.04%)</title><rect x="91.0" y="133" width="0.4" height="15.0" fill="rgb(212,73,40)" rx="2" ry="2" />
<text  x="94.00" y="143.5" ></text>
</g>
<g >
<title>torch/nn/functional.py(1804):_softmax (165,209 us., 6.91%)</title><rect x="93.7" y="245" width="81.5" height="15.0" fill="rgb(213,192,26)" rx="2" ry="2" />
<text  x="96.68" y="255.5" >torch/nn/..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (164,103 us., 6.86%)</title><rect x="10.0" y="197" width="81.0" height="15.0" fill="rgb(208,39,6)" rx="2" ry="2" />
<text  x="13.00" y="207.5" >nn.Module..</text>
</g>
<g >
<title>torch/nn/modules/sparse.py(157):_forward (4,543 us., 0.19%)</title><rect x="91.4" y="229" width="2.3" height="15.0" fill="rgb(213,10,4)" rx="2" ry="2" />
<text  x="94.44" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (708,738 us., 29.65%)</title><rect x="429.5" y="181" width="349.8" height="15.0" fill="rgb(226,112,41)" rx="2" ry="2" />
<text  x="432.50" y="191.5" >nn.Module:_Int8OPTDecoderLayer</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,098 us., 0.05%)</title><rect x="779.5" y="181" width="0.5" height="15.0" fill="rgb(216,7,51)" rx="2" ry="2" />
<text  x="782.47" y="191.5" ></text>
</g>
<g >
<title>all (2,390,667 us., 100%)</title><rect x="10.0" y="277" width="1180.0" height="15.0" fill="rgb(227,157,48)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (44,800 us., 1.87%)</title><rect x="859.3" y="85" width="22.1" height="15.0" fill="rgb(223,93,2)" rx="2" ry="2" />
<text  x="862.32" y="95.5" >t..</text>
</g>
<g >
<title>torch/nn/functional.py(2099):_embedding (4,543 us., 0.19%)</title><rect x="91.4" y="245" width="2.3" height="15.0" fill="rgb(235,99,8)" rx="2" ry="2" />
<text  x="94.44" y="255.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (76,461 us., 3.20%)</title><rect x="780.6" y="117" width="37.7" height="15.0" fill="rgb(234,104,6)" rx="2" ry="2" />
<text  x="783.60" y="127.5" >nn...</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (44,800 us., 1.87%)</title><rect x="859.3" y="133" width="22.1" height="15.0" fill="rgb(221,177,23)" rx="2" ry="2" />
<text  x="862.32" y="143.5" >t..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (163,475 us., 6.84%)</title><rect x="941.4" y="101" width="80.7" height="15.0" fill="rgb(231,169,29)" rx="2" ry="2" />
<text  x="944.40" y="111.5" >profiling..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (190,415 us., 7.96%)</title><rect x="175.2" y="117" width="94.0" height="15.0" fill="rgb(253,195,14)" rx="2" ry="2" />
<text  x="178.23" y="127.5" >profiling/u..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (44,800 us., 1.87%)</title><rect x="859.3" y="181" width="22.1" height="15.0" fill="rgb(248,70,15)" rx="2" ry="2" />
<text  x="862.32" y="191.5" >n..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (165,209 us., 6.91%)</title><rect x="93.7" y="69" width="81.5" height="15.0" fill="rgb(234,220,39)" rx="2" ry="2" />
<text  x="96.68" y="79.5" >torch/aut..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (302 us., 0.01%)</title><rect x="779.3" y="165" width="0.2" height="15.0" fill="rgb(232,197,39)" rx="2" ry="2" />
<text  x="782.32" y="175.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (83,016 us., 3.47%)</title><rect x="818.3" y="229" width="41.0" height="15.0" fill="rgb(218,81,20)" rx="2" ry="2" />
<text  x="821.34" y="239.5" >tor..</text>
</g>
<g >
<title>torch_int/nn/linear.py(40):_forward (83,016 us., 3.47%)</title><rect x="818.3" y="245" width="41.0" height="15.0" fill="rgb(220,176,36)" rx="2" ry="2" />
<text  x="821.34" y="255.5" >tor..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (2,413 us., 0.10%)</title><rect x="91.4" y="165" width="1.2" height="15.0" fill="rgb(231,101,13)" rx="2" ry="2" />
<text  x="94.44" y="175.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (337,081 us., 14.10%)</title><rect x="1023.3" y="101" width="166.4" height="15.0" fill="rgb(206,127,34)" rx="2" ry="2" />
<text  x="1026.33" y="111.5" >torch/autograd/grad_m..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (76,461 us., 3.20%)</title><rect x="780.6" y="101" width="37.7" height="15.0" fill="rgb(249,109,35)" rx="2" ry="2" />
<text  x="783.60" y="111.5" >pro..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (106,697 us., 4.46%)</title><rect x="376.8" y="133" width="52.7" height="15.0" fill="rgb(251,192,35)" rx="2" ry="2" />
<text  x="379.83" y="143.5" >nn.Mo..</text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (163,475 us., 6.84%)</title><rect x="941.4" y="165" width="80.7" height="15.0" fill="rgb(246,227,3)" rx="2" ry="2" />
<text  x="944.40" y="175.5" >torch_int..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (44,800 us., 1.87%)</title><rect x="859.3" y="117" width="22.1" height="15.0" fill="rgb(250,226,52)" rx="2" ry="2" />
<text  x="862.32" y="127.5" >n..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (2,130 us., 0.09%)</title><rect x="92.6" y="117" width="1.1" height="15.0" fill="rgb(224,190,35)" rx="2" ry="2" />
<text  x="95.63" y="127.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (83,016 us., 3.47%)</title><rect x="818.3" y="85" width="41.0" height="15.0" fill="rgb(215,77,49)" rx="2" ry="2" />
<text  x="821.34" y="95.5" >tra..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (164,103 us., 6.86%)</title><rect x="10.0" y="213" width="81.0" height="15.0" fill="rgb(234,157,20)" rx="2" ry="2" />
<text  x="13.00" y="223.5" >transform..</text>
</g>
<g >
<title>torch_int/nn/opt.py(72):_forward (44,787 us., 1.87%)</title><rect x="881.4" y="197" width="22.1" height="15.0" fill="rgb(251,66,26)" rx="2" ry="2" />
<text  x="884.43" y="207.5" >t..</text>
</g>
<g >
<title>torch_int/nn/opt.py(325):__prepare_decoder_attention_mask (1,098 us., 0.05%)</title><rect x="779.5" y="229" width="0.5" height="15.0" fill="rgb(241,52,40)" rx="2" ry="2" />
<text  x="782.47" y="239.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(213):_forward (337,081 us., 14.10%)</title><rect x="1023.3" y="213" width="166.4" height="15.0" fill="rgb(223,145,27)" rx="2" ry="2" />
<text  x="1026.33" y="223.5" >torch_int/nn/opt.py(2..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (1,121 us., 0.05%)</title><rect x="376.3" y="181" width="0.5" height="15.0" fill="rgb(236,161,49)" rx="2" ry="2" />
<text  x="379.28" y="191.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (337,081 us., 14.10%)</title><rect x="1023.3" y="117" width="166.4" height="15.0" fill="rgb(246,16,49)" rx="2" ry="2" />
<text  x="1026.33" y="127.5" >profiling/utils.py(18..</text>
</g>
<g >
<title>&lt;built-in_method_encode_of_str_object_at_0x7fcfb2b214b0&gt; (1,390,493 us., 58.16%)</title><rect x="93.7" y="261" width="686.3" height="15.0" fill="rgb(208,20,29)" rx="2" ry="2" />
<text  x="96.68" y="271.5" >&lt;built-in_method_encode_of_str_object_at_0x7fcfb2b214b0&gt;</text>
</g>
<g >
<title>nn.Module:_LayerNormQ (76,461 us., 3.20%)</title><rect x="780.6" y="213" width="37.7" height="15.0" fill="rgb(228,177,29)" rx="2" ry="2" />
<text  x="783.60" y="223.5" >nn...</text>
</g>
<g >
<title>torch_int/nn/opt.py(213):_forward (76,704 us., 3.21%)</title><rect x="903.5" y="197" width="37.9" height="15.0" fill="rgb(207,220,45)" rx="2" ry="2" />
<text  x="906.54" y="207.5" >tor..</text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (106,697 us., 4.46%)</title><rect x="376.8" y="149" width="52.7" height="15.0" fill="rgb(238,218,11)" rx="2" ry="2" />
<text  x="379.83" y="159.5" >torch..</text>
</g>
<g >
<title>nn.Module:_W8A8B8O8LinearReLU (76,704 us., 3.21%)</title><rect x="903.5" y="213" width="37.9" height="15.0" fill="rgb(225,19,25)" rx="2" ry="2" />
<text  x="906.54" y="223.5" >nn...</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (44,787 us., 1.87%)</title><rect x="881.4" y="53" width="22.1" height="15.0" fill="rgb(251,185,43)" rx="2" ry="2" />
<text  x="884.43" y="63.5" >p..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (897 us., 0.04%)</title><rect x="91.0" y="197" width="0.4" height="15.0" fill="rgb(215,1,47)" rx="2" ry="2" />
<text  x="94.00" y="207.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (600 us., 0.03%)</title><rect x="1189.7" y="261" width="0.3" height="15.0" fill="rgb(245,155,18)" rx="2" ry="2" />
<text  x="1192.70" y="271.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (897 us., 0.04%)</title><rect x="91.0" y="149" width="0.4" height="15.0" fill="rgb(227,199,42)" rx="2" ry="2" />
<text  x="94.00" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (1,121 us., 0.05%)</title><rect x="376.3" y="213" width="0.5" height="15.0" fill="rgb(222,117,12)" rx="2" ry="2" />
<text  x="379.28" y="223.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (44,787 us., 1.87%)</title><rect x="881.4" y="117" width="22.1" height="15.0" fill="rgb(239,36,31)" rx="2" ry="2" />
<text  x="884.43" y="127.5" >t..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,098 us., 0.05%)</title><rect x="779.5" y="133" width="0.5" height="15.0" fill="rgb(205,53,8)" rx="2" ry="2" />
<text  x="782.47" y="143.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(213):_forward (163,475 us., 6.84%)</title><rect x="941.4" y="197" width="80.7" height="15.0" fill="rgb(212,130,46)" rx="2" ry="2" />
<text  x="944.40" y="207.5" >torch_int..</text>
</g>
<g >
<title>&lt;built-in_method_linear_relu_a8_w8_b8_o8_of_PyCapsule_object_at_0x7fcfb24c4750&gt; (76,704 us., 3.21%)</title><rect x="903.5" y="261" width="37.9" height="15.0" fill="rgb(249,142,6)" rx="2" ry="2" />
<text  x="906.54" y="271.5" >&lt;bu..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (76,704 us., 3.21%)</title><rect x="903.5" y="117" width="37.9" height="15.0" fill="rgb(244,90,32)" rx="2" ry="2" />
<text  x="906.54" y="127.5" >nn...</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoderLayer (44,787 us., 1.87%)</title><rect x="881.4" y="133" width="22.1" height="15.0" fill="rgb(215,203,44)" rx="2" ry="2" />
<text  x="884.43" y="143.5" >n..</text>
</g>
<g >
<title>&lt;built-in_method_cumsum_of_type_object_at_0x7fd0a702a9c0&gt; (897 us., 0.04%)</title><rect x="91.0" y="261" width="0.4" height="15.0" fill="rgb(219,6,16)" rx="2" ry="2" />
<text  x="94.00" y="271.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (44,787 us., 1.87%)</title><rect x="881.4" y="101" width="22.1" height="15.0" fill="rgb(251,99,32)" rx="2" ry="2" />
<text  x="884.43" y="111.5" >n..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (44,787 us., 1.87%)</title><rect x="881.4" y="37" width="22.1" height="15.0" fill="rgb(216,70,18)" rx="2" ry="2" />
<text  x="884.43" y="47.5" >t..</text>
</g>
<g >
<title>nn.Module:_Int8OPTAttention (165,209 us., 6.91%)</title><rect x="93.7" y="197" width="81.5" height="15.0" fill="rgb(239,1,31)" rx="2" ry="2" />
<text  x="96.68" y="207.5" >nn.Module..</text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (76,461 us., 3.20%)</title><rect x="780.6" y="165" width="37.7" height="15.0" fill="rgb(238,61,5)" rx="2" ry="2" />
<text  x="783.60" y="175.5" >tor..</text>
</g>
<g >
<title>torch_int/nn/opt.py(213):_forward (708,738 us., 29.65%)</title><rect x="429.5" y="197" width="349.8" height="15.0" fill="rgb(237,180,19)" rx="2" ry="2" />
<text  x="432.50" y="207.5" >torch_int/nn/opt.py(213):_forward</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (165,209 us., 6.91%)</title><rect x="93.7" y="133" width="81.5" height="15.0" fill="rgb(206,81,48)" rx="2" ry="2" />
<text  x="96.68" y="143.5" >nn.Module..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (1,913 us., 0.08%)</title><rect x="1022.4" y="213" width="0.9" height="15.0" fill="rgb(209,208,17)" rx="2" ry="2" />
<text  x="1025.38" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (2,130 us., 0.09%)</title><rect x="92.6" y="197" width="1.1" height="15.0" fill="rgb(245,102,51)" rx="2" ry="2" />
<text  x="95.63" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (1,193 us., 0.05%)</title><rect x="780.0" y="181" width="0.6" height="15.0" fill="rgb(216,113,33)" rx="2" ry="2" />
<text  x="783.01" y="191.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (337,081 us., 14.10%)</title><rect x="1023.3" y="181" width="166.4" height="15.0" fill="rgb(245,141,35)" rx="2" ry="2" />
<text  x="1026.33" y="191.5" >torch_int/nn/opt.py(3..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,913 us., 0.08%)</title><rect x="1022.4" y="197" width="0.9" height="15.0" fill="rgb(209,136,18)" rx="2" ry="2" />
<text  x="1025.38" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (337,081 us., 14.10%)</title><rect x="1023.3" y="165" width="166.4" height="15.0" fill="rgb(248,171,43)" rx="2" ry="2" />
<text  x="1026.33" y="175.5" >nn.Module:_Int8OPTDec..</text>
</g>
<g >
<title>torch_int/nn/fused.py(13):_forward (76,461 us., 3.20%)</title><rect x="780.6" y="229" width="37.7" height="15.0" fill="rgb(246,181,54)" rx="2" ry="2" />
<text  x="783.60" y="239.5" >tor..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (76,704 us., 3.21%)</title><rect x="903.5" y="149" width="37.9" height="15.0" fill="rgb(236,22,12)" rx="2" ry="2" />
<text  x="906.54" y="159.5" >nn...</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (2,130 us., 0.09%)</title><rect x="92.6" y="213" width="1.1" height="15.0" fill="rgb(219,177,22)" rx="2" ry="2" />
<text  x="95.63" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (302 us., 0.01%)</title><rect x="779.3" y="197" width="0.2" height="15.0" fill="rgb(243,1,8)" rx="2" ry="2" />
<text  x="782.32" y="207.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (106,697 us., 4.46%)</title><rect x="376.8" y="117" width="52.7" height="15.0" fill="rgb(238,12,42)" rx="2" ry="2" />
<text  x="379.83" y="127.5" >trans..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,193 us., 0.05%)</title><rect x="780.0" y="117" width="0.6" height="15.0" fill="rgb(224,131,12)" rx="2" ry="2" />
<text  x="783.01" y="127.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(213):_forward (44,800 us., 1.87%)</title><rect x="859.3" y="197" width="22.1" height="15.0" fill="rgb(254,20,38)" rx="2" ry="2" />
<text  x="862.32" y="207.5" >t..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (897 us., 0.04%)</title><rect x="91.0" y="165" width="0.4" height="15.0" fill="rgb(230,155,25)" rx="2" ry="2" />
<text  x="94.00" y="175.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (190,415 us., 7.96%)</title><rect x="175.2" y="149" width="94.0" height="15.0" fill="rgb(241,63,22)" rx="2" ry="2" />
<text  x="178.23" y="159.5" >transformer..</text>
</g>
<g >
<title>nn.Module:_Int8OPTDecoder (708,738 us., 29.65%)</title><rect x="429.5" y="149" width="349.8" height="15.0" fill="rgb(212,220,35)" rx="2" ry="2" />
<text  x="432.50" y="159.5" >nn.Module:_Int8OPTDecoder</text>
</g>
<g >
<title>torch_int/nn/opt.py(325):__prepare_decoder_attention_mask (1,121 us., 0.05%)</title><rect x="376.3" y="245" width="0.5" height="15.0" fill="rgb(212,129,54)" rx="2" ry="2" />
<text  x="379.28" y="255.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (216,913 us., 9.07%)</title><rect x="269.2" y="149" width="107.1" height="15.0" fill="rgb(247,114,26)" rx="2" ry="2" />
<text  x="272.22" y="159.5" >profiling/uti..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,193 us., 0.05%)</title><rect x="780.0" y="165" width="0.6" height="15.0" fill="rgb(234,210,36)" rx="2" ry="2" />
<text  x="783.01" y="175.5" ></text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (1,913 us., 0.08%)</title><rect x="1022.4" y="261" width="0.9" height="15.0" fill="rgb(238,9,11)" rx="2" ry="2" />
<text  x="1025.38" y="271.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (337,081 us., 14.10%)</title><rect x="1023.3" y="245" width="166.4" height="15.0" fill="rgb(239,73,22)" rx="2" ry="2" />
<text  x="1026.33" y="255.5" >torch/autograd/grad_m..</text>
</g>
<g >
<title>nn.Module:_Int8OPTForCausalLM (337,081 us., 14.10%)</title><rect x="1023.3" y="133" width="166.4" height="15.0" fill="rgb(214,127,8)" rx="2" ry="2" />
<text  x="1026.33" y="143.5" >nn.Module:_Int8OPTFor..</text>
</g>
<g >
<title>torch_int/nn/opt.py(346):_forward (2,130 us., 0.09%)</title><rect x="92.6" y="181" width="1.1" height="15.0" fill="rgb(247,53,26)" rx="2" ry="2" />
<text  x="95.63" y="191.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(24):_decorate_context (44,787 us., 1.87%)</title><rect x="881.4" y="181" width="22.1" height="15.0" fill="rgb(254,136,36)" rx="2" ry="2" />
<text  x="884.43" y="191.5" >t..</text>
</g>
<g >
<title>torch_int/nn/opt.py(213):_forward (216,913 us., 9.07%)</title><rect x="269.2" y="245" width="107.1" height="15.0" fill="rgb(239,23,0)" rx="2" ry="2" />
<text  x="272.22" y="255.5" >torch_int/nn/..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (83,016 us., 3.47%)</title><rect x="818.3" y="53" width="41.0" height="15.0" fill="rgb(210,104,45)" rx="2" ry="2" />
<text  x="821.34" y="63.5" >pro..</text>
</g>
</g>
</svg>
