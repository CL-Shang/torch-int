<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="294" onload="init(evt)" viewBox="0 0 1200 294" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="294.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >CUDA Time</text>
<text id="details" x="10.00" y="277" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="277" > </text>
<g id="frames">
<g >
<title>nn.Module:_OPTForCausalLM (11,611 us., 0.02%)</title><rect x="1030.3" y="133" width="0.2" height="15.0" fill="rgb(242,229,2)" rx="2" ry="2" />
<text  x="1033.27" y="143.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (19,381 us., 0.03%)</title><rect x="882.0" y="85" width="0.3" height="15.0" fill="rgb(221,179,36)" rx="2" ry="2" />
<text  x="885.00" y="95.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (16,627,401 us., 23.27%)</title><rect x="10.0" y="85" width="274.6" height="15.0" fill="rgb(244,209,54)" rx="2" ry="2" />
<text  x="13.00" y="95.5" >transformers/models/opt/modeling_opt..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (936,713 us., 1.31%)</title><rect x="1030.5" y="165" width="15.4" height="15.0" fill="rgb(218,8,48)" rx="2" ry="2" />
<text  x="1033.46" y="175.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (3,787,091 us., 5.30%)</title><rect x="882.3" y="69" width="62.6" height="15.0" fill="rgb(249,79,7)" rx="2" ry="2" />
<text  x="885.32" y="79.5" >profil..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (14,576 us., 0.02%)</title><rect x="1045.9" y="165" width="0.3" height="15.0" fill="rgb(228,31,39)" rx="2" ry="2" />
<text  x="1048.93" y="175.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (31,225,893 us., 43.70%)</title><rect x="284.6" y="149" width="515.7" height="15.0" fill="rgb(232,213,4)" rx="2" ry="2" />
<text  x="287.59" y="159.5" >transformers/models/opt/modeling_opt.py(553):_forward</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (3,596,485 us., 5.03%)</title><rect x="822.2" y="101" width="59.4" height="15.0" fill="rgb(225,141,33)" rx="2" ry="2" />
<text  x="825.22" y="111.5" >nn.Mod..</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (2,520,344 us., 3.53%)</title><rect x="1046.2" y="101" width="41.6" height="15.0" fill="rgb(208,181,8)" rx="2" ry="2" />
<text  x="1049.17" y="111.5" >nn...</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (4,060,758 us., 5.68%)</title><rect x="961.9" y="181" width="67.1" height="15.0" fill="rgb(235,115,35)" rx="2" ry="2" />
<text  x="964.92" y="191.5" >transfo..</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (4,060,758 us., 5.68%)</title><rect x="961.9" y="101" width="67.1" height="15.0" fill="rgb(234,92,40)" rx="2" ry="2" />
<text  x="964.92" y="111.5" >nn.Modu..</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (941,870 us., 1.32%)</title><rect x="1174.1" y="149" width="15.6" height="15.0" fill="rgb(238,156,22)" rx="2" ry="2" />
<text  x="1177.13" y="159.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (2,520,344 us., 3.53%)</title><rect x="1046.2" y="117" width="41.6" height="15.0" fill="rgb(253,151,15)" rx="2" ry="2" />
<text  x="1049.17" y="127.5" >tra..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(160):_forward (3,787,091 us., 5.30%)</title><rect x="882.3" y="197" width="62.6" height="15.0" fill="rgb(241,194,13)" rx="2" ry="2" />
<text  x="885.32" y="207.5" >transf..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (1,032,872 us., 1.45%)</title><rect x="944.9" y="117" width="17.0" height="15.0" fill="rgb(229,79,54)" rx="2" ry="2" />
<text  x="947.86" y="127.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (2,520,344 us., 3.53%)</title><rect x="1046.2" y="165" width="41.6" height="15.0" fill="rgb(206,194,12)" rx="2" ry="2" />
<text  x="1049.17" y="175.5" >nn...</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (14,576 us., 0.02%)</title><rect x="1045.9" y="117" width="0.3" height="15.0" fill="rgb(243,153,47)" rx="2" ry="2" />
<text  x="1048.93" y="127.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (78,299 us., 0.11%)</title><rect x="1029.0" y="133" width="1.3" height="15.0" fill="rgb(221,54,31)" rx="2" ry="2" />
<text  x="1031.98" y="143.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (1,032,872 us., 1.45%)</title><rect x="944.9" y="133" width="17.0" height="15.0" fill="rgb(220,83,34)" rx="2" ry="2" />
<text  x="947.86" y="143.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoder (4,060,758 us., 5.68%)</title><rect x="961.9" y="133" width="67.1" height="15.0" fill="rgb(241,137,3)" rx="2" ry="2" />
<text  x="964.92" y="143.5" >nn.Modu..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (941,870 us., 1.32%)</title><rect x="1174.1" y="229" width="15.6" height="15.0" fill="rgb(244,67,9)" rx="2" ry="2" />
<text  x="1177.13" y="239.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (19,503 us., 0.03%)</title><rect x="881.7" y="101" width="0.3" height="15.0" fill="rgb(228,156,26)" rx="2" ry="2" />
<text  x="884.67" y="111.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (941,870 us., 1.32%)</title><rect x="1174.1" y="133" width="15.6" height="15.0" fill="rgb(213,70,39)" rx="2" ry="2" />
<text  x="1177.13" y="143.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (2,520,344 us., 3.53%)</title><rect x="1046.2" y="85" width="41.6" height="15.0" fill="rgb(229,97,15)" rx="2" ry="2" />
<text  x="1049.17" y="95.5" >pro..</text>
</g>
<g >
<title>torch/nn/modules/linear.py(113):_forward (49,183,460 us., 68.83%)</title><rect x="10.0" y="213" width="812.2" height="15.0" fill="rgb(221,156,48)" rx="2" ry="2" />
<text  x="13.00" y="223.5" >torch/nn/modules/linear.py(113):_forward</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (3,962,168 us., 5.55%)</title><rect x="1108.7" y="165" width="65.4" height="15.0" fill="rgb(252,155,30)" rx="2" ry="2" />
<text  x="1111.70" y="175.5" >transfo..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (3,596,485 us., 5.03%)</title><rect x="822.2" y="181" width="59.4" height="15.0" fill="rgb(223,104,48)" rx="2" ry="2" />
<text  x="825.22" y="191.5" >transf..</text>
</g>
<g >
<title>torch/nn/modules/sparse.py(157):_forward (38,884 us., 0.05%)</title><rect x="881.7" y="197" width="0.6" height="15.0" fill="rgb(207,147,21)" rx="2" ry="2" />
<text  x="884.67" y="207.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (3,962,168 us., 5.55%)</title><rect x="1108.7" y="197" width="65.4" height="15.0" fill="rgb(224,174,4)" rx="2" ry="2" />
<text  x="1111.70" y="207.5" >transfo..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (14,576 us., 0.02%)</title><rect x="1045.9" y="85" width="0.3" height="15.0" fill="rgb(254,194,47)" rx="2" ry="2" />
<text  x="1048.93" y="95.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (3,787,091 us., 5.30%)</title><rect x="882.3" y="53" width="62.6" height="15.0" fill="rgb(248,195,41)" rx="2" ry="2" />
<text  x="885.32" y="63.5" >torch/..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (78,299 us., 0.11%)</title><rect x="1029.0" y="197" width="1.3" height="15.0" fill="rgb(220,78,49)" rx="2" ry="2" />
<text  x="1031.98" y="207.5" ></text>
</g>
<g >
<title>torch/nn/modules/activation.py(97):_forward (1,262,609 us., 1.77%)</title><rect x="1087.8" y="197" width="20.8" height="15.0" fill="rgb(225,115,18)" rx="2" ry="2" />
<text  x="1090.80" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (1,032,872 us., 1.45%)</title><rect x="944.9" y="149" width="17.0" height="15.0" fill="rgb(210,211,52)" rx="2" ry="2" />
<text  x="947.86" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (3,787,091 us., 5.30%)</title><rect x="882.3" y="149" width="62.6" height="15.0" fill="rgb(221,2,26)" rx="2" ry="2" />
<text  x="885.32" y="159.5" >nn.Mod..</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (1,262,609 us., 1.77%)</title><rect x="1087.8" y="85" width="20.8" height="15.0" fill="rgb(217,83,22)" rx="2" ry="2" />
<text  x="1090.80" y="95.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (4,060,758 us., 5.68%)</title><rect x="961.9" y="149" width="67.1" height="15.0" fill="rgb(228,10,0)" rx="2" ry="2" />
<text  x="964.92" y="159.5" >transfo..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(89):__expand_mask (11,611 us., 0.02%)</title><rect x="1030.3" y="213" width="0.2" height="15.0" fill="rgb(240,132,16)" rx="2" ry="2" />
<text  x="1033.27" y="223.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (3,787,091 us., 5.30%)</title><rect x="882.3" y="165" width="62.6" height="15.0" fill="rgb(207,80,6)" rx="2" ry="2" />
<text  x="885.32" y="175.5" >transf..</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (1,032,872 us., 1.45%)</title><rect x="944.9" y="85" width="17.0" height="15.0" fill="rgb(230,220,51)" rx="2" ry="2" />
<text  x="947.86" y="95.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoder (3,962,168 us., 5.55%)</title><rect x="1108.7" y="149" width="65.4" height="15.0" fill="rgb(213,64,35)" rx="2" ry="2" />
<text  x="1111.70" y="159.5" >nn.Modu..</text>
</g>
<g >
<title>nn.Module:_OPTAttention (3,787,091 us., 5.30%)</title><rect x="882.3" y="181" width="62.6" height="15.0" fill="rgb(240,153,36)" rx="2" ry="2" />
<text  x="885.32" y="191.5" >nn.Mod..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (14,982 us., 0.02%)</title><rect x="1189.8" y="197" width="0.2" height="15.0" fill="rgb(213,187,12)" rx="2" ry="2" />
<text  x="1192.75" y="207.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (3,787,091 us., 5.30%)</title><rect x="882.3" y="101" width="62.6" height="15.0" fill="rgb(241,180,11)" rx="2" ry="2" />
<text  x="885.32" y="111.5" >transf..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (936,713 us., 1.31%)</title><rect x="1030.5" y="133" width="15.4" height="15.0" fill="rgb(218,76,39)" rx="2" ry="2" />
<text  x="1033.46" y="143.5" ></text>
</g>
<g >
<title>torch/nn/functional.py(1446):_relu (1,262,609 us., 1.77%)</title><rect x="1087.8" y="213" width="20.8" height="15.0" fill="rgb(225,166,11)" rx="2" ry="2" />
<text  x="1090.80" y="223.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (936,713 us., 1.31%)</title><rect x="1030.5" y="69" width="15.4" height="15.0" fill="rgb(212,33,14)" rx="2" ry="2" />
<text  x="1033.46" y="79.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoder (936,713 us., 1.31%)</title><rect x="1030.5" y="117" width="15.4" height="15.0" fill="rgb(229,193,28)" rx="2" ry="2" />
<text  x="1033.46" y="127.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (11,611 us., 0.02%)</title><rect x="1030.3" y="181" width="0.2" height="15.0" fill="rgb(233,148,22)" rx="2" ry="2" />
<text  x="1033.27" y="191.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(160):_forward (2,520,344 us., 3.53%)</title><rect x="1046.2" y="213" width="41.6" height="15.0" fill="rgb(227,93,38)" rx="2" ry="2" />
<text  x="1049.17" y="223.5" >tra..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (11,611 us., 0.02%)</title><rect x="1030.3" y="101" width="0.2" height="15.0" fill="rgb(229,5,39)" rx="2" ry="2" />
<text  x="1033.27" y="111.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (19,503 us., 0.03%)</title><rect x="881.7" y="85" width="0.3" height="15.0" fill="rgb(240,166,19)" rx="2" ry="2" />
<text  x="884.67" y="95.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(533):__prepare_decoder_attention_mask (78,299 us., 0.11%)</title><rect x="1029.0" y="213" width="1.3" height="15.0" fill="rgb(230,96,7)" rx="2" ry="2" />
<text  x="1031.98" y="223.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(160):_forward (16,627,401 us., 23.27%)</title><rect x="10.0" y="181" width="274.6" height="15.0" fill="rgb(210,97,33)" rx="2" ry="2" />
<text  x="13.00" y="191.5" >transformers/models/opt/modeling_opt..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(533):__prepare_decoder_attention_mask (11,611 us., 0.02%)</title><rect x="1030.3" y="197" width="0.2" height="15.0" fill="rgb(221,66,9)" rx="2" ry="2" />
<text  x="1033.27" y="207.5" ></text>
</g>
<g >
<title>torch/nn/functional.py(1804):_softmax (3,787,091 us., 5.30%)</title><rect x="882.3" y="213" width="62.6" height="15.0" fill="rgb(221,212,31)" rx="2" ry="2" />
<text  x="885.32" y="223.5" >torch/..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (19,503 us., 0.03%)</title><rect x="881.7" y="165" width="0.3" height="15.0" fill="rgb(227,124,47)" rx="2" ry="2" />
<text  x="884.67" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (1,330,166 us., 1.86%)</title><rect x="800.3" y="165" width="21.9" height="15.0" fill="rgb(227,84,24)" rx="2" ry="2" />
<text  x="803.25" y="175.5" >n..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (1,262,609 us., 1.77%)</title><rect x="1087.8" y="117" width="20.8" height="15.0" fill="rgb(246,148,52)" rx="2" ry="2" />
<text  x="1090.80" y="127.5" ></text>
</g>
<g >
<title>torch/nn/functional.py(2099):_embedding (38,884 us., 0.05%)</title><rect x="881.7" y="213" width="0.6" height="15.0" fill="rgb(249,37,53)" rx="2" ry="2" />
<text  x="884.67" y="223.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,262,609 us., 1.77%)</title><rect x="1087.8" y="69" width="20.8" height="15.0" fill="rgb(253,129,33)" rx="2" ry="2" />
<text  x="1090.80" y="79.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (936,713 us., 1.31%)</title><rect x="1030.5" y="53" width="15.4" height="15.0" fill="rgb(225,100,22)" rx="2" ry="2" />
<text  x="1033.46" y="63.5" ></text>
</g>
<g >
<title>nn.Module:_Linear (49,183,460 us., 68.83%)</title><rect x="10.0" y="197" width="812.2" height="15.0" fill="rgb(217,22,28)" rx="2" ry="2" />
<text  x="13.00" y="207.5" >nn.Module:_Linear</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (14,982 us., 0.02%)</title><rect x="1189.8" y="149" width="0.2" height="15.0" fill="rgb(212,14,28)" rx="2" ry="2" />
<text  x="1192.75" y="159.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,330,166 us., 1.86%)</title><rect x="800.3" y="133" width="21.9" height="15.0" fill="rgb(240,72,20)" rx="2" ry="2" />
<text  x="803.25" y="143.5" >t..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(160):_forward (3,596,485 us., 5.03%)</title><rect x="822.2" y="213" width="59.4" height="15.0" fill="rgb(205,17,47)" rx="2" ry="2" />
<text  x="825.22" y="223.5" >transf..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (19,503 us., 0.03%)</title><rect x="881.7" y="133" width="0.3" height="15.0" fill="rgb(241,17,7)" rx="2" ry="2" />
<text  x="884.67" y="143.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (16,627,401 us., 23.27%)</title><rect x="10.0" y="149" width="274.6" height="15.0" fill="rgb(218,66,11)" rx="2" ry="2" />
<text  x="13.00" y="159.5" >transformers/models/opt/modeling_opt..</text>
</g>
<g >
<title>torch/nn/functional.py(2488):_layer_norm (951,289 us., 1.33%)</title><rect x="1030.5" y="213" width="15.7" height="15.0" fill="rgb(225,108,52)" rx="2" ry="2" />
<text  x="1033.46" y="223.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(160):_forward (3,962,168 us., 5.55%)</title><rect x="1108.7" y="229" width="65.4" height="15.0" fill="rgb(205,141,0)" rx="2" ry="2" />
<text  x="1111.70" y="239.5" >transfo..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (1,262,609 us., 1.77%)</title><rect x="1087.8" y="165" width="20.8" height="15.0" fill="rgb(244,59,36)" rx="2" ry="2" />
<text  x="1090.80" y="175.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (11,611 us., 0.02%)</title><rect x="1030.3" y="117" width="0.2" height="15.0" fill="rgb(239,99,42)" rx="2" ry="2" />
<text  x="1033.27" y="127.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (1,032,872 us., 1.45%)</title><rect x="944.9" y="165" width="17.0" height="15.0" fill="rgb(243,118,18)" rx="2" ry="2" />
<text  x="947.86" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (19,503 us., 0.03%)</title><rect x="881.7" y="117" width="0.3" height="15.0" fill="rgb(214,227,16)" rx="2" ry="2" />
<text  x="884.67" y="127.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (14,576 us., 0.02%)</title><rect x="1045.9" y="133" width="0.3" height="15.0" fill="rgb(205,44,50)" rx="2" ry="2" />
<text  x="1048.93" y="143.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (941,870 us., 1.32%)</title><rect x="1174.1" y="117" width="15.6" height="15.0" fill="rgb(214,205,38)" rx="2" ry="2" />
<text  x="1177.13" y="127.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (3,596,485 us., 5.03%)</title><rect x="822.2" y="117" width="59.4" height="15.0" fill="rgb(243,101,32)" rx="2" ry="2" />
<text  x="825.22" y="127.5" >transf..</text>
</g>
<g >
<title>nn.Module:_OPTAttention (1,032,872 us., 1.45%)</title><rect x="944.9" y="181" width="17.0" height="15.0" fill="rgb(244,184,7)" rx="2" ry="2" />
<text  x="947.86" y="191.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (936,713 us., 1.31%)</title><rect x="1030.5" y="101" width="15.4" height="15.0" fill="rgb(223,1,35)" rx="2" ry="2" />
<text  x="1033.46" y="111.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,262,609 us., 1.77%)</title><rect x="1087.8" y="101" width="20.8" height="15.0" fill="rgb(222,24,14)" rx="2" ry="2" />
<text  x="1090.80" y="111.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,330,166 us., 1.86%)</title><rect x="800.3" y="149" width="21.9" height="15.0" fill="rgb(211,27,52)" rx="2" ry="2" />
<text  x="803.25" y="159.5" >p..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (941,870 us., 1.32%)</title><rect x="1174.1" y="197" width="15.6" height="15.0" fill="rgb(208,27,17)" rx="2" ry="2" />
<text  x="1177.13" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoder (78,299 us., 0.11%)</title><rect x="1029.0" y="181" width="1.3" height="15.0" fill="rgb(230,196,20)" rx="2" ry="2" />
<text  x="1031.98" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_OPTAttention (3,596,485 us., 5.03%)</title><rect x="822.2" y="197" width="59.4" height="15.0" fill="rgb(217,145,54)" rx="2" ry="2" />
<text  x="825.22" y="207.5" >nn.Mod..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (14,982 us., 0.02%)</title><rect x="1189.8" y="165" width="0.2" height="15.0" fill="rgb(205,14,2)" rx="2" ry="2" />
<text  x="1192.75" y="175.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (19,381 us., 0.03%)</title><rect x="882.0" y="117" width="0.3" height="15.0" fill="rgb(225,100,27)" rx="2" ry="2" />
<text  x="885.00" y="127.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (941,870 us., 1.32%)</title><rect x="1174.1" y="165" width="15.6" height="15.0" fill="rgb(211,18,31)" rx="2" ry="2" />
<text  x="1177.13" y="175.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,032,872 us., 1.45%)</title><rect x="944.9" y="69" width="17.0" height="15.0" fill="rgb(228,47,22)" rx="2" ry="2" />
<text  x="947.86" y="79.5" ></text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (936,713 us., 1.31%)</title><rect x="1030.5" y="85" width="15.4" height="15.0" fill="rgb(211,68,33)" rx="2" ry="2" />
<text  x="1033.46" y="95.5" ></text>
</g>
<g >
<title>&lt;built-in_function_linear&gt; (49,183,460 us., 68.83%)</title><rect x="10.0" y="229" width="812.2" height="15.0" fill="rgb(249,81,14)" rx="2" ry="2" />
<text  x="13.00" y="239.5" >&lt;built-in_function_linear&gt;</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (941,870 us., 1.32%)</title><rect x="1174.1" y="181" width="15.6" height="15.0" fill="rgb(251,73,8)" rx="2" ry="2" />
<text  x="1177.13" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_ReLU (1,262,609 us., 1.77%)</title><rect x="1087.8" y="181" width="20.8" height="15.0" fill="rgb(235,88,33)" rx="2" ry="2" />
<text  x="1090.80" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoder (19,503 us., 0.03%)</title><rect x="881.7" y="149" width="0.3" height="15.0" fill="rgb(242,163,2)" rx="2" ry="2" />
<text  x="884.67" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_OPTAttention (4,060,758 us., 5.68%)</title><rect x="961.9" y="197" width="67.1" height="15.0" fill="rgb(226,53,36)" rx="2" ry="2" />
<text  x="964.92" y="207.5" >nn.Modu..</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (31,225,893 us., 43.70%)</title><rect x="284.6" y="101" width="515.7" height="15.0" fill="rgb(228,193,16)" rx="2" ry="2" />
<text  x="287.59" y="111.5" >nn.Module:_OPTForCausalLM</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (3,787,091 us., 5.30%)</title><rect x="882.3" y="117" width="62.6" height="15.0" fill="rgb(232,153,12)" rx="2" ry="2" />
<text  x="885.32" y="127.5" >nn.Mod..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(157):__shape (1,032,872 us., 1.45%)</title><rect x="944.9" y="213" width="17.0" height="15.0" fill="rgb(212,136,47)" rx="2" ry="2" />
<text  x="947.86" y="223.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (16,627,401 us., 23.27%)</title><rect x="10.0" y="37" width="274.6" height="15.0" fill="rgb(227,163,52)" rx="2" ry="2" />
<text  x="13.00" y="47.5" >torch/autograd/grad_mode.py(27):_dec..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (4,060,758 us., 5.68%)</title><rect x="961.9" y="85" width="67.1" height="15.0" fill="rgb(253,117,4)" rx="2" ry="2" />
<text  x="964.92" y="95.5" >profili..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (3,596,485 us., 5.03%)</title><rect x="822.2" y="133" width="59.4" height="15.0" fill="rgb(237,104,34)" rx="2" ry="2" />
<text  x="825.22" y="143.5" >nn.Mod..</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (78,299 us., 0.11%)</title><rect x="1029.0" y="149" width="1.3" height="15.0" fill="rgb(237,196,37)" rx="2" ry="2" />
<text  x="1031.98" y="159.5" ></text>
</g>
<g >
<title>torch/nn/modules/normalization.py(188):_forward (951,289 us., 1.33%)</title><rect x="1030.5" y="197" width="15.7" height="15.0" fill="rgb(208,93,35)" rx="2" ry="2" />
<text  x="1033.46" y="207.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (2,520,344 us., 3.53%)</title><rect x="1046.2" y="149" width="41.6" height="15.0" fill="rgb(244,212,13)" rx="2" ry="2" />
<text  x="1049.17" y="159.5" >tra..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (3,596,485 us., 5.03%)</title><rect x="822.2" y="69" width="59.4" height="15.0" fill="rgb(223,77,3)" rx="2" ry="2" />
<text  x="825.22" y="79.5" >torch/..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (3,962,168 us., 5.55%)</title><rect x="1108.7" y="133" width="65.4" height="15.0" fill="rgb(217,60,52)" rx="2" ry="2" />
<text  x="1111.70" y="143.5" >transfo..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (19,381 us., 0.03%)</title><rect x="882.0" y="181" width="0.3" height="15.0" fill="rgb(222,207,33)" rx="2" ry="2" />
<text  x="885.00" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Embedding (19,503 us., 0.03%)</title><rect x="881.7" y="181" width="0.3" height="15.0" fill="rgb(252,156,0)" rx="2" ry="2" />
<text  x="884.67" y="191.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (19,381 us., 0.03%)</title><rect x="882.0" y="69" width="0.3" height="15.0" fill="rgb(254,193,8)" rx="2" ry="2" />
<text  x="885.00" y="79.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(160):_forward (1,032,872 us., 1.45%)</title><rect x="944.9" y="197" width="17.0" height="15.0" fill="rgb(249,78,54)" rx="2" ry="2" />
<text  x="947.86" y="207.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (78,299 us., 0.11%)</title><rect x="1029.0" y="117" width="1.3" height="15.0" fill="rgb(235,68,36)" rx="2" ry="2" />
<text  x="1031.98" y="127.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (78,299 us., 0.11%)</title><rect x="1029.0" y="165" width="1.3" height="15.0" fill="rgb(244,154,40)" rx="2" ry="2" />
<text  x="1031.98" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoder (14,982 us., 0.02%)</title><rect x="1189.8" y="213" width="0.2" height="15.0" fill="rgb(216,105,3)" rx="2" ry="2" />
<text  x="1192.75" y="223.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (2,520,344 us., 3.53%)</title><rect x="1046.2" y="181" width="41.6" height="15.0" fill="rgb(227,121,20)" rx="2" ry="2" />
<text  x="1049.17" y="191.5" >tra..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (14,982 us., 0.02%)</title><rect x="1189.8" y="229" width="0.2" height="15.0" fill="rgb(229,24,39)" rx="2" ry="2" />
<text  x="1192.75" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (941,870 us., 1.32%)</title><rect x="1174.1" y="213" width="15.6" height="15.0" fill="rgb(244,61,45)" rx="2" ry="2" />
<text  x="1177.13" y="223.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (4,060,758 us., 5.68%)</title><rect x="961.9" y="69" width="67.1" height="15.0" fill="rgb(205,210,4)" rx="2" ry="2" />
<text  x="964.92" y="79.5" >torch/a..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (3,596,485 us., 5.03%)</title><rect x="822.2" y="85" width="59.4" height="15.0" fill="rgb(250,72,28)" rx="2" ry="2" />
<text  x="825.22" y="95.5" >profil..</text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (1,262,609 us., 1.77%)</title><rect x="1087.8" y="149" width="20.8" height="15.0" fill="rgb(234,109,2)" rx="2" ry="2" />
<text  x="1090.80" y="159.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (16,627,401 us., 23.27%)</title><rect x="10.0" y="117" width="274.6" height="15.0" fill="rgb(222,62,50)" rx="2" ry="2" />
<text  x="13.00" y="127.5" >transformers/models/opt/modeling_opt..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,032,872 us., 1.45%)</title><rect x="944.9" y="101" width="17.0" height="15.0" fill="rgb(248,7,28)" rx="2" ry="2" />
<text  x="947.86" y="111.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,032,872 us., 1.45%)</title><rect x="944.9" y="53" width="17.0" height="15.0" fill="rgb(254,6,37)" rx="2" ry="2" />
<text  x="947.86" y="63.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (3,962,168 us., 5.55%)</title><rect x="1108.7" y="101" width="65.4" height="15.0" fill="rgb(233,84,4)" rx="2" ry="2" />
<text  x="1111.70" y="111.5" >profili..</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (3,962,168 us., 5.55%)</title><rect x="1108.7" y="117" width="65.4" height="15.0" fill="rgb(252,92,12)" rx="2" ry="2" />
<text  x="1111.70" y="127.5" >nn.Modu..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (31,225,893 us., 43.70%)</title><rect x="284.6" y="85" width="515.7" height="15.0" fill="rgb(235,4,7)" rx="2" ry="2" />
<text  x="287.59" y="95.5" >profiling/utils.py(18):_profile_model</text>
</g>
<g >
<title>nn.Module:_OPTAttention (2,520,344 us., 3.53%)</title><rect x="1046.2" y="197" width="41.6" height="15.0" fill="rgb(205,162,29)" rx="2" ry="2" />
<text  x="1049.17" y="207.5" >nn...</text>
</g>
<g >
<title>&lt;built-in_method_relu_of_type_object_at_0x7fb2d38739c0&gt; (1,262,609 us., 1.77%)</title><rect x="1087.8" y="229" width="20.8" height="15.0" fill="rgb(240,207,8)" rx="2" ry="2" />
<text  x="1090.80" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (4,060,758 us., 5.68%)</title><rect x="961.9" y="165" width="67.1" height="15.0" fill="rgb(212,95,23)" rx="2" ry="2" />
<text  x="964.92" y="175.5" >nn.Modu..</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (14,982 us., 0.02%)</title><rect x="1189.8" y="181" width="0.2" height="15.0" fill="rgb(215,106,22)" rx="2" ry="2" />
<text  x="1192.75" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (936,713 us., 1.31%)</title><rect x="1030.5" y="149" width="15.4" height="15.0" fill="rgb(214,27,41)" rx="2" ry="2" />
<text  x="1033.46" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoder (19,381 us., 0.03%)</title><rect x="882.0" y="133" width="0.3" height="15.0" fill="rgb(244,144,40)" rx="2" ry="2" />
<text  x="885.00" y="143.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (16,627,401 us., 23.27%)</title><rect x="10.0" y="133" width="274.6" height="15.0" fill="rgb(234,155,50)" rx="2" ry="2" />
<text  x="13.00" y="143.5" >nn.Module:_OPTDecoderLayer</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (3,596,485 us., 5.03%)</title><rect x="822.2" y="149" width="59.4" height="15.0" fill="rgb(235,89,30)" rx="2" ry="2" />
<text  x="825.22" y="159.5" >transf..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (11,611 us., 0.02%)</title><rect x="1030.3" y="165" width="0.2" height="15.0" fill="rgb(214,93,33)" rx="2" ry="2" />
<text  x="1033.27" y="175.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,330,166 us., 1.86%)</title><rect x="800.3" y="181" width="21.9" height="15.0" fill="rgb(206,65,32)" rx="2" ry="2" />
<text  x="803.25" y="191.5" >t..</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (3,787,091 us., 5.30%)</title><rect x="882.3" y="85" width="62.6" height="15.0" fill="rgb(220,9,17)" rx="2" ry="2" />
<text  x="885.32" y="95.5" >nn.Mod..</text>
</g>
<g >
<title>&lt;built-in_method_max_of_type_object_at_0x7fb2d38739c0&gt; (2,520,344 us., 3.53%)</title><rect x="1046.2" y="229" width="41.6" height="15.0" fill="rgb(223,21,9)" rx="2" ry="2" />
<text  x="1049.17" y="239.5" >&lt;bu..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (3,787,091 us., 5.30%)</title><rect x="882.3" y="133" width="62.6" height="15.0" fill="rgb(225,129,45)" rx="2" ry="2" />
<text  x="885.32" y="143.5" >transf..</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (19,381 us., 0.03%)</title><rect x="882.0" y="101" width="0.3" height="15.0" fill="rgb(230,32,27)" rx="2" ry="2" />
<text  x="885.00" y="111.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (31,225,893 us., 43.70%)</title><rect x="284.6" y="181" width="515.7" height="15.0" fill="rgb(211,77,52)" rx="2" ry="2" />
<text  x="287.59" y="191.5" >transformers/models/opt/modeling_opt.py(298):_forward</text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (3,962,168 us., 5.55%)</title><rect x="1108.7" y="181" width="65.4" height="15.0" fill="rgb(213,126,10)" rx="2" ry="2" />
<text  x="1111.70" y="191.5" >nn.Modu..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(160):_forward (4,060,758 us., 5.68%)</title><rect x="961.9" y="213" width="67.1" height="15.0" fill="rgb(234,184,12)" rx="2" ry="2" />
<text  x="964.92" y="223.5" >transfo..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (31,225,893 us., 43.70%)</title><rect x="284.6" y="117" width="515.7" height="15.0" fill="rgb(240,85,25)" rx="2" ry="2" />
<text  x="287.59" y="127.5" >transformers/models/opt/modeling_opt.py(840):_forward</text>
</g>
<g >
<title>all (71,454,405 us., 100%)</title><rect x="10.0" y="245" width="1180.0" height="15.0" fill="rgb(230,71,45)" rx="2" ry="2" />
<text  x="13.00" y="255.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (31,225,893 us., 43.70%)</title><rect x="284.6" y="69" width="515.7" height="15.0" fill="rgb(240,192,2)" rx="2" ry="2" />
<text  x="287.59" y="79.5" >torch/autograd/grad_mode.py(27):_decorate_context</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (11,611 us., 0.02%)</title><rect x="1030.3" y="149" width="0.2" height="15.0" fill="rgb(225,15,17)" rx="2" ry="2" />
<text  x="1033.27" y="159.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (2,520,344 us., 3.53%)</title><rect x="1046.2" y="69" width="41.6" height="15.0" fill="rgb(207,180,17)" rx="2" ry="2" />
<text  x="1049.17" y="79.5" >tor..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (3,962,168 us., 5.55%)</title><rect x="1108.7" y="85" width="65.4" height="15.0" fill="rgb(238,48,24)" rx="2" ry="2" />
<text  x="1111.70" y="95.5" >torch/a..</text>
</g>
<g >
<title>&lt;built-in_method_layer_norm_of_type_object_at_0x7fb2d38739c0&gt; (951,289 us., 1.33%)</title><rect x="1030.5" y="229" width="15.7" height="15.0" fill="rgb(241,224,22)" rx="2" ry="2" />
<text  x="1033.46" y="239.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (14,576 us., 0.02%)</title><rect x="1045.9" y="101" width="0.3" height="15.0" fill="rgb(209,0,42)" rx="2" ry="2" />
<text  x="1048.93" y="111.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoder (2,520,344 us., 3.53%)</title><rect x="1046.2" y="133" width="41.6" height="15.0" fill="rgb(249,151,36)" rx="2" ry="2" />
<text  x="1049.17" y="143.5" >nn...</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (16,627,401 us., 23.27%)</title><rect x="10.0" y="53" width="274.6" height="15.0" fill="rgb(216,198,7)" rx="2" ry="2" />
<text  x="13.00" y="63.5" >profiling/utils.py(18):_profile_model</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (19,381 us., 0.03%)</title><rect x="882.0" y="149" width="0.3" height="15.0" fill="rgb(228,227,19)" rx="2" ry="2" />
<text  x="885.00" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_LayerNorm (951,289 us., 1.33%)</title><rect x="1030.5" y="181" width="15.7" height="15.0" fill="rgb(222,89,6)" rx="2" ry="2" />
<text  x="1033.46" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoder (14,576 us., 0.02%)</title><rect x="1045.9" y="149" width="0.3" height="15.0" fill="rgb(238,170,16)" rx="2" ry="2" />
<text  x="1048.93" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (31,225,893 us., 43.70%)</title><rect x="284.6" y="165" width="515.7" height="15.0" fill="rgb(238,48,27)" rx="2" ry="2" />
<text  x="287.59" y="175.5" >nn.Module:_OPTDecoderLayer</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (16,627,401 us., 23.27%)</title><rect x="10.0" y="101" width="274.6" height="15.0" fill="rgb(207,64,44)" rx="2" ry="2" />
<text  x="13.00" y="111.5" >nn.Module:_OPTDecoder</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (1,262,609 us., 1.77%)</title><rect x="1087.8" y="133" width="20.8" height="15.0" fill="rgb(235,35,32)" rx="2" ry="2" />
<text  x="1090.80" y="143.5" ></text>
</g>
<g >
<title>&lt;built-in_method_embedding_of_type_object_at_0x7fb2d38739c0&gt; (38,884 us., 0.05%)</title><rect x="881.7" y="229" width="0.6" height="15.0" fill="rgb(232,184,11)" rx="2" ry="2" />
<text  x="884.67" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_OPTAttention (3,962,168 us., 5.55%)</title><rect x="1108.7" y="213" width="65.4" height="15.0" fill="rgb(254,186,29)" rx="2" ry="2" />
<text  x="1111.70" y="223.5" >nn.Modu..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (31,225,893 us., 43.70%)</title><rect x="284.6" y="133" width="515.7" height="15.0" fill="rgb(219,118,32)" rx="2" ry="2" />
<text  x="287.59" y="143.5" >nn.Module:_OPTDecoder</text>
</g>
<g >
<title>&lt;built-in_method_encode_of_str_object_at_0x7fb1df36a4b0&gt; (8,971,030 us., 12.55%)</title><rect x="882.3" y="229" width="148.2" height="15.0" fill="rgb(217,24,39)" rx="2" ry="2" />
<text  x="885.32" y="239.5" >&lt;built-in_method_e..</text>
</g>
<g >
<title>nn.Module:_OPTAttention (16,627,401 us., 23.27%)</title><rect x="10.0" y="165" width="274.6" height="15.0" fill="rgb(231,223,25)" rx="2" ry="2" />
<text  x="13.00" y="175.5" >nn.Module:_OPTAttention</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (16,627,401 us., 23.27%)</title><rect x="10.0" y="69" width="274.6" height="15.0" fill="rgb(239,35,27)" rx="2" ry="2" />
<text  x="13.00" y="79.5" >nn.Module:_OPTForCausalLM</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,262,609 us., 1.77%)</title><rect x="1087.8" y="53" width="20.8" height="15.0" fill="rgb(241,89,47)" rx="2" ry="2" />
<text  x="1090.80" y="63.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (4,060,758 us., 5.68%)</title><rect x="961.9" y="117" width="67.1" height="15.0" fill="rgb(253,54,39)" rx="2" ry="2" />
<text  x="964.92" y="127.5" >transfo..</text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (19,381 us., 0.03%)</title><rect x="882.0" y="165" width="0.3" height="15.0" fill="rgb(216,220,25)" rx="2" ry="2" />
<text  x="885.00" y="175.5" ></text>
</g>
<g >
<title>&lt;built-in_method_bmm_of_type_object_at_0x7fb2d38739c0&gt; (3,596,485 us., 5.03%)</title><rect x="822.2" y="229" width="59.4" height="15.0" fill="rgb(253,180,2)" rx="2" ry="2" />
<text  x="825.22" y="239.5" >&lt;built..</text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (3,596,485 us., 5.03%)</title><rect x="822.2" y="165" width="59.4" height="15.0" fill="rgb(214,192,26)" rx="2" ry="2" />
<text  x="825.22" y="175.5" >nn.Mod..</text>
</g>
</g>
</svg>
