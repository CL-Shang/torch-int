<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="294" onload="init(evt)" viewBox="0 0 1200 294" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="294.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >CUDA Time</text>
<text id="details" x="10.00" y="277" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="277" > </text>
<g id="frames">
<g >
<title>nn.Module:_OPTDecoder (487,456 us., 2.93%)</title><rect x="986.4" y="117" width="34.6" height="15.0" fill="rgb(219,119,13)" rx="2" ry="2" />
<text  x="989.41" y="127.5" >nn..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (234,555 us., 1.41%)</title><rect x="1173.1" y="181" width="16.6" height="15.0" fill="rgb(205,19,43)" rx="2" ry="2" />
<text  x="1176.07" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (224,776 us., 1.35%)</title><rect x="1081.6" y="149" width="15.9" height="15.0" fill="rgb(222,4,23)" rx="2" ry="2" />
<text  x="1084.57" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoder (4,893,926 us., 29.40%)</title><rect x="10.0" y="101" width="346.9" height="15.0" fill="rgb(236,153,52)" rx="2" ry="2" />
<text  x="13.00" y="111.5" >nn.Module:_OPTDecoder</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (224,776 us., 1.35%)</title><rect x="1081.6" y="117" width="15.9" height="15.0" fill="rgb(214,110,50)" rx="2" ry="2" />
<text  x="1084.57" y="127.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (487,456 us., 2.93%)</title><rect x="986.4" y="133" width="34.6" height="15.0" fill="rgb(242,156,0)" rx="2" ry="2" />
<text  x="989.41" y="143.5" >tr..</text>
</g>
<g >
<title>torch/nn/modules/sparse.py(157):_forward (10,001 us., 0.06%)</title><rect x="985.7" y="197" width="0.7" height="15.0" fill="rgb(250,65,7)" rx="2" ry="2" />
<text  x="988.70" y="207.5" ></text>
</g>
<g >
<title>torch/nn/modules/activation.py(97):_forward (318,644 us., 1.91%)</title><rect x="1120.7" y="197" width="22.6" height="15.0" fill="rgb(239,143,9)" rx="2" ry="2" />
<text  x="1123.69" y="207.5" >t..</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (616,082 us., 3.70%)</title><rect x="941.9" y="101" width="43.7" height="15.0" fill="rgb(249,217,30)" rx="2" ry="2" />
<text  x="944.90" y="111.5" >nn.M..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (356,427 us., 2.14%)</title><rect x="916.6" y="133" width="25.3" height="15.0" fill="rgb(220,99,53)" rx="2" ry="2" />
<text  x="919.63" y="143.5" >t..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(160):_forward (323,556 us., 1.94%)</title><rect x="1097.7" y="213" width="23.0" height="15.0" fill="rgb(237,9,48)" rx="2" ry="2" />
<text  x="1100.75" y="223.5" >t..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (4,900 us., 0.03%)</title><rect x="986.1" y="133" width="0.3" height="15.0" fill="rgb(235,121,7)" rx="2" ry="2" />
<text  x="989.06" y="143.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (276,887 us., 1.66%)</title><rect x="1021.0" y="133" width="19.6" height="15.0" fill="rgb(212,166,13)" rx="2" ry="2" />
<text  x="1023.99" y="143.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (323,556 us., 1.94%)</title><rect x="1097.7" y="117" width="23.0" height="15.0" fill="rgb(215,123,54)" rx="2" ry="2" />
<text  x="1100.75" y="127.5" >t..</text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (487,456 us., 2.93%)</title><rect x="986.4" y="149" width="34.6" height="15.0" fill="rgb(235,95,13)" rx="2" ry="2" />
<text  x="989.41" y="159.5" >nn..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (571,941 us., 3.44%)</title><rect x="1040.6" y="85" width="40.6" height="15.0" fill="rgb(218,225,22)" rx="2" ry="2" />
<text  x="1043.61" y="95.5" >pro..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (7,897,097 us., 47.44%)</title><rect x="356.9" y="85" width="559.7" height="15.0" fill="rgb(228,44,28)" rx="2" ry="2" />
<text  x="359.88" y="95.5" >profiling/utils.py(18):_profile_model</text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (1,902 us., 0.01%)</title><rect x="985.6" y="197" width="0.1" height="15.0" fill="rgb(244,57,22)" rx="2" ry="2" />
<text  x="988.56" y="207.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (5,101 us., 0.03%)</title><rect x="985.7" y="165" width="0.4" height="15.0" fill="rgb(218,46,31)" rx="2" ry="2" />
<text  x="988.70" y="175.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (276,887 us., 1.66%)</title><rect x="1021.0" y="69" width="19.6" height="15.0" fill="rgb(217,160,48)" rx="2" ry="2" />
<text  x="1023.99" y="79.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (616,082 us., 3.70%)</title><rect x="941.9" y="181" width="43.7" height="15.0" fill="rgb(223,222,8)" rx="2" ry="2" />
<text  x="944.90" y="191.5" >tran..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (318,644 us., 1.91%)</title><rect x="1120.7" y="165" width="22.6" height="15.0" fill="rgb(225,153,30)" rx="2" ry="2" />
<text  x="1123.69" y="175.5" >t..</text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (276,887 us., 1.66%)</title><rect x="1021.0" y="149" width="19.6" height="15.0" fill="rgb(220,187,21)" rx="2" ry="2" />
<text  x="1023.99" y="159.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (4,056 us., 0.02%)</title><rect x="1081.2" y="117" width="0.2" height="15.0" fill="rgb(237,73,32)" rx="2" ry="2" />
<text  x="1084.15" y="127.5" ></text>
</g>
<g >
<title>torch/nn/modules/linear.py(113):_forward (13,147,450 us., 78.97%)</title><rect x="10.0" y="213" width="931.9" height="15.0" fill="rgb(209,73,49)" rx="2" ry="2" />
<text  x="13.00" y="223.5" >torch/nn/modules/linear.py(113):_forward</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (1,797 us., 0.01%)</title><rect x="1081.4" y="133" width="0.2" height="15.0" fill="rgb(241,25,8)" rx="2" ry="2" />
<text  x="1084.44" y="143.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (5,101 us., 0.03%)</title><rect x="985.7" y="133" width="0.4" height="15.0" fill="rgb(215,114,25)" rx="2" ry="2" />
<text  x="988.70" y="143.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (224,776 us., 1.35%)</title><rect x="1081.6" y="69" width="15.9" height="15.0" fill="rgb(253,43,1)" rx="2" ry="2" />
<text  x="1084.57" y="79.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (4,056 us., 0.02%)</title><rect x="1081.2" y="197" width="0.2" height="15.0" fill="rgb(252,89,30)" rx="2" ry="2" />
<text  x="1084.15" y="207.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (3,491 us., 0.02%)</title><rect x="1097.5" y="101" width="0.2" height="15.0" fill="rgb(246,125,52)" rx="2" ry="2" />
<text  x="1100.50" y="111.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (234,555 us., 1.41%)</title><rect x="1173.1" y="197" width="16.6" height="15.0" fill="rgb(216,108,6)" rx="2" ry="2" />
<text  x="1176.07" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoder (323,556 us., 1.94%)</title><rect x="1097.7" y="133" width="23.0" height="15.0" fill="rgb(247,56,27)" rx="2" ry="2" />
<text  x="1100.75" y="143.5" >n..</text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (323,556 us., 1.94%)</title><rect x="1097.7" y="165" width="23.0" height="15.0" fill="rgb(240,137,38)" rx="2" ry="2" />
<text  x="1100.75" y="175.5" >n..</text>
</g>
<g >
<title>&lt;built-in_method_layer_norm_of_type_object_at_0x7f1d14a119c0&gt; (228,267 us., 1.37%)</title><rect x="1081.6" y="229" width="16.1" height="15.0" fill="rgb(228,122,15)" rx="2" ry="2" />
<text  x="1084.57" y="239.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (616,082 us., 3.70%)</title><rect x="941.9" y="117" width="43.7" height="15.0" fill="rgb(236,1,40)" rx="2" ry="2" />
<text  x="944.90" y="127.5" >tran..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(160):_forward (571,941 us., 3.44%)</title><rect x="1040.6" y="213" width="40.6" height="15.0" fill="rgb(252,127,39)" rx="2" ry="2" />
<text  x="1043.61" y="223.5" >tra..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (318,644 us., 1.91%)</title><rect x="1120.7" y="101" width="22.6" height="15.0" fill="rgb(243,98,48)" rx="2" ry="2" />
<text  x="1123.69" y="111.5" >t..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (7,897,097 us., 47.44%)</title><rect x="356.9" y="149" width="559.7" height="15.0" fill="rgb(211,104,38)" rx="2" ry="2" />
<text  x="359.88" y="159.5" >transformers/models/opt/modeling_opt.py(553):_forward</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (1,902 us., 0.01%)</title><rect x="985.6" y="133" width="0.1" height="15.0" fill="rgb(253,192,45)" rx="2" ry="2" />
<text  x="988.56" y="143.5" ></text>
</g>
<g >
<title>&lt;built-in_method_max_of_type_object_at_0x7f1d14a119c0&gt; (323,556 us., 1.94%)</title><rect x="1097.7" y="229" width="23.0" height="15.0" fill="rgb(242,218,30)" rx="2" ry="2" />
<text  x="1100.75" y="239.5" >&lt;..</text>
</g>
<g >
<title>&lt;built-in_method_encode_of_str_object_at_0x7f1c205084b0&gt; (1,342,536 us., 8.06%)</title><rect x="986.4" y="229" width="95.2" height="15.0" fill="rgb(226,126,39)" rx="2" ry="2" />
<text  x="989.41" y="239.5" >&lt;built-in_m..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (323,556 us., 1.94%)</title><rect x="1097.7" y="181" width="23.0" height="15.0" fill="rgb(221,153,1)" rx="2" ry="2" />
<text  x="1100.75" y="191.5" >t..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (318,644 us., 1.91%)</title><rect x="1120.7" y="53" width="22.6" height="15.0" fill="rgb(210,81,34)" rx="2" ry="2" />
<text  x="1123.69" y="63.5" >t..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (234,555 us., 1.41%)</title><rect x="1173.1" y="165" width="16.6" height="15.0" fill="rgb(216,220,30)" rx="2" ry="2" />
<text  x="1176.07" y="175.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (7,897,097 us., 47.44%)</title><rect x="356.9" y="69" width="559.7" height="15.0" fill="rgb(241,63,1)" rx="2" ry="2" />
<text  x="359.88" y="79.5" >torch/autograd/grad_mode.py(27):_decorate_context</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (3,491 us., 0.02%)</title><rect x="1097.5" y="85" width="0.2" height="15.0" fill="rgb(227,158,19)" rx="2" ry="2" />
<text  x="1100.50" y="95.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (571,941 us., 3.44%)</title><rect x="1040.6" y="181" width="40.6" height="15.0" fill="rgb(240,178,34)" rx="2" ry="2" />
<text  x="1043.61" y="191.5" >tra..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (487,456 us., 2.93%)</title><rect x="986.4" y="53" width="34.6" height="15.0" fill="rgb(228,111,38)" rx="2" ry="2" />
<text  x="989.41" y="63.5" >to..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (3,910 us., 0.02%)</title><rect x="1189.7" y="165" width="0.3" height="15.0" fill="rgb(251,81,12)" rx="2" ry="2" />
<text  x="1192.72" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (224,776 us., 1.35%)</title><rect x="1081.6" y="85" width="15.9" height="15.0" fill="rgb(227,65,45)" rx="2" ry="2" />
<text  x="1084.57" y="95.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoder (4,056 us., 0.02%)</title><rect x="1081.2" y="181" width="0.2" height="15.0" fill="rgb(207,158,31)" rx="2" ry="2" />
<text  x="1084.15" y="191.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (419,357 us., 2.52%)</title><rect x="1143.3" y="101" width="29.8" height="15.0" fill="rgb(218,26,50)" rx="2" ry="2" />
<text  x="1146.34" y="111.5" >pr..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (323,556 us., 1.94%)</title><rect x="1097.7" y="69" width="23.0" height="15.0" fill="rgb(230,89,28)" rx="2" ry="2" />
<text  x="1100.75" y="79.5" >t..</text>
</g>
<g >
<title>nn.Module:_OPTAttention (487,456 us., 2.93%)</title><rect x="986.4" y="181" width="34.6" height="15.0" fill="rgb(231,31,20)" rx="2" ry="2" />
<text  x="989.41" y="191.5" >nn..</text>
</g>
<g >
<title>nn.Module:_ReLU (318,644 us., 1.91%)</title><rect x="1120.7" y="181" width="22.6" height="15.0" fill="rgb(250,220,42)" rx="2" ry="2" />
<text  x="1123.69" y="191.5" >n..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (616,082 us., 3.70%)</title><rect x="941.9" y="69" width="43.7" height="15.0" fill="rgb(211,152,21)" rx="2" ry="2" />
<text  x="944.90" y="79.5" >torc..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (224,776 us., 1.35%)</title><rect x="1081.6" y="53" width="15.9" height="15.0" fill="rgb(250,92,25)" rx="2" ry="2" />
<text  x="1084.57" y="63.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (356,427 us., 2.14%)</title><rect x="916.6" y="149" width="25.3" height="15.0" fill="rgb(245,171,2)" rx="2" ry="2" />
<text  x="919.63" y="159.5" >p..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(533):__prepare_decoder_attention_mask (4,056 us., 0.02%)</title><rect x="1081.2" y="213" width="0.2" height="15.0" fill="rgb(222,86,13)" rx="2" ry="2" />
<text  x="1084.15" y="223.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (4,900 us., 0.03%)</title><rect x="986.1" y="149" width="0.3" height="15.0" fill="rgb(223,108,11)" rx="2" ry="2" />
<text  x="989.06" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_OPTAttention (419,357 us., 2.52%)</title><rect x="1143.3" y="213" width="29.8" height="15.0" fill="rgb(212,138,6)" rx="2" ry="2" />
<text  x="1146.34" y="223.5" >nn..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (5,101 us., 0.03%)</title><rect x="985.7" y="85" width="0.4" height="15.0" fill="rgb(245,172,40)" rx="2" ry="2" />
<text  x="988.70" y="95.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (487,456 us., 2.93%)</title><rect x="986.4" y="165" width="34.6" height="15.0" fill="rgb(205,66,15)" rx="2" ry="2" />
<text  x="989.41" y="175.5" >tr..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(160):_forward (616,082 us., 3.70%)</title><rect x="941.9" y="213" width="43.7" height="15.0" fill="rgb(220,126,52)" rx="2" ry="2" />
<text  x="944.90" y="223.5" >tran..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (487,456 us., 2.93%)</title><rect x="986.4" y="69" width="34.6" height="15.0" fill="rgb(247,65,33)" rx="2" ry="2" />
<text  x="989.41" y="79.5" >pr..</text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (4,900 us., 0.03%)</title><rect x="986.1" y="165" width="0.3" height="15.0" fill="rgb(243,188,0)" rx="2" ry="2" />
<text  x="989.06" y="175.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (4,900 us., 0.03%)</title><rect x="986.1" y="181" width="0.3" height="15.0" fill="rgb(215,4,54)" rx="2" ry="2" />
<text  x="989.06" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoder (5,101 us., 0.03%)</title><rect x="985.7" y="149" width="0.4" height="15.0" fill="rgb(228,79,32)" rx="2" ry="2" />
<text  x="988.70" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_Embedding (5,101 us., 0.03%)</title><rect x="985.7" y="181" width="0.4" height="15.0" fill="rgb(213,162,16)" rx="2" ry="2" />
<text  x="988.70" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_Linear (13,147,450 us., 78.97%)</title><rect x="10.0" y="197" width="931.9" height="15.0" fill="rgb(234,100,52)" rx="2" ry="2" />
<text  x="13.00" y="207.5" >nn.Module:_Linear</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (318,644 us., 1.91%)</title><rect x="1120.7" y="85" width="22.6" height="15.0" fill="rgb(230,22,44)" rx="2" ry="2" />
<text  x="1123.69" y="95.5" >n..</text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (4,893,926 us., 29.40%)</title><rect x="10.0" y="133" width="346.9" height="15.0" fill="rgb(239,20,12)" rx="2" ry="2" />
<text  x="13.00" y="143.5" >nn.Module:_OPTDecoderLayer</text>
</g>
<g >
<title>&lt;built-in_method_relu_of_type_object_at_0x7f1d14a119c0&gt; (318,644 us., 1.91%)</title><rect x="1120.7" y="229" width="22.6" height="15.0" fill="rgb(223,179,3)" rx="2" ry="2" />
<text  x="1123.69" y="239.5" >&lt;..</text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (616,082 us., 3.70%)</title><rect x="941.9" y="165" width="43.7" height="15.0" fill="rgb(231,195,51)" rx="2" ry="2" />
<text  x="944.90" y="175.5" >nn.M..</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (5,101 us., 0.03%)</title><rect x="985.7" y="117" width="0.4" height="15.0" fill="rgb(222,69,52)" rx="2" ry="2" />
<text  x="988.70" y="127.5" ></text>
</g>
<g >
<title>torch/nn/modules/normalization.py(188):_forward (228,267 us., 1.37%)</title><rect x="1081.6" y="197" width="16.1" height="15.0" fill="rgb(231,154,5)" rx="2" ry="2" />
<text  x="1084.57" y="207.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (4,900 us., 0.03%)</title><rect x="986.1" y="85" width="0.3" height="15.0" fill="rgb(220,82,2)" rx="2" ry="2" />
<text  x="989.06" y="95.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (234,555 us., 1.41%)</title><rect x="1173.1" y="117" width="16.6" height="15.0" fill="rgb(224,134,26)" rx="2" ry="2" />
<text  x="1176.07" y="127.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (4,056 us., 0.02%)</title><rect x="1081.2" y="165" width="0.2" height="15.0" fill="rgb(250,166,29)" rx="2" ry="2" />
<text  x="1084.15" y="175.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (1,902 us., 0.01%)</title><rect x="985.6" y="181" width="0.1" height="15.0" fill="rgb(228,28,12)" rx="2" ry="2" />
<text  x="988.56" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (234,555 us., 1.41%)</title><rect x="1173.1" y="213" width="16.6" height="15.0" fill="rgb(249,117,17)" rx="2" ry="2" />
<text  x="1176.07" y="223.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(160):_forward (4,893,926 us., 29.40%)</title><rect x="10.0" y="181" width="346.9" height="15.0" fill="rgb(238,36,49)" rx="2" ry="2" />
<text  x="13.00" y="191.5" >transformers/models/opt/modeling_opt.py(160):_..</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (356,427 us., 2.14%)</title><rect x="916.6" y="165" width="25.3" height="15.0" fill="rgb(247,113,12)" rx="2" ry="2" />
<text  x="919.63" y="175.5" >n..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,902 us., 0.01%)</title><rect x="985.6" y="101" width="0.1" height="15.0" fill="rgb(250,189,3)" rx="2" ry="2" />
<text  x="988.56" y="111.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (3,491 us., 0.02%)</title><rect x="1097.5" y="133" width="0.2" height="15.0" fill="rgb(208,201,20)" rx="2" ry="2" />
<text  x="1100.50" y="143.5" ></text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (3,910 us., 0.02%)</title><rect x="1189.7" y="181" width="0.3" height="15.0" fill="rgb(242,133,23)" rx="2" ry="2" />
<text  x="1192.72" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (4,893,926 us., 29.40%)</title><rect x="10.0" y="69" width="346.9" height="15.0" fill="rgb(232,11,50)" rx="2" ry="2" />
<text  x="13.00" y="79.5" >nn.Module:_OPTForCausalLM</text>
</g>
<g >
<title>torch/nn/functional.py(2099):_embedding (10,001 us., 0.06%)</title><rect x="985.7" y="213" width="0.7" height="15.0" fill="rgb(219,63,30)" rx="2" ry="2" />
<text  x="988.70" y="223.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (323,556 us., 1.94%)</title><rect x="1097.7" y="85" width="23.0" height="15.0" fill="rgb(246,88,7)" rx="2" ry="2" />
<text  x="1100.75" y="95.5" >p..</text>
</g>
<g >
<title>nn.Module:_OPTAttention (4,893,926 us., 29.40%)</title><rect x="10.0" y="165" width="346.9" height="15.0" fill="rgb(242,86,6)" rx="2" ry="2" />
<text  x="13.00" y="175.5" >nn.Module:_OPTAttention</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,797 us., 0.01%)</title><rect x="1081.4" y="117" width="0.2" height="15.0" fill="rgb(230,20,22)" rx="2" ry="2" />
<text  x="1084.44" y="127.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (571,941 us., 3.44%)</title><rect x="1040.6" y="149" width="40.6" height="15.0" fill="rgb(230,186,0)" rx="2" ry="2" />
<text  x="1043.61" y="159.5" >tra..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (4,900 us., 0.03%)</title><rect x="986.1" y="69" width="0.3" height="15.0" fill="rgb(223,228,34)" rx="2" ry="2" />
<text  x="989.06" y="79.5" ></text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (4,056 us., 0.02%)</title><rect x="1081.2" y="149" width="0.2" height="15.0" fill="rgb(253,143,28)" rx="2" ry="2" />
<text  x="1084.15" y="159.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (4,056 us., 0.02%)</title><rect x="1081.2" y="133" width="0.2" height="15.0" fill="rgb(220,118,46)" rx="2" ry="2" />
<text  x="1084.15" y="143.5" ></text>
</g>
<g >
<title>nn.Module:_OPTAttention (323,556 us., 1.94%)</title><rect x="1097.7" y="197" width="23.0" height="15.0" fill="rgb(226,152,23)" rx="2" ry="2" />
<text  x="1100.75" y="207.5" >n..</text>
</g>
<g >
<title>&lt;built-in_method_cumsum_of_type_object_at_0x7f1d14a119c0&gt; (1,902 us., 0.01%)</title><rect x="985.6" y="229" width="0.1" height="15.0" fill="rgb(217,164,5)" rx="2" ry="2" />
<text  x="988.56" y="239.5" ></text>
</g>
<g >
<title>torch/nn/functional.py(2488):_layer_norm (228,267 us., 1.37%)</title><rect x="1081.6" y="213" width="16.1" height="15.0" fill="rgb(219,226,23)" rx="2" ry="2" />
<text  x="1084.57" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (323,556 us., 1.94%)</title><rect x="1097.7" y="101" width="23.0" height="15.0" fill="rgb(236,133,44)" rx="2" ry="2" />
<text  x="1100.75" y="111.5" >n..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (419,357 us., 2.52%)</title><rect x="1143.3" y="165" width="29.8" height="15.0" fill="rgb(226,138,50)" rx="2" ry="2" />
<text  x="1146.34" y="175.5" >tr..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (3,491 us., 0.02%)</title><rect x="1097.5" y="165" width="0.2" height="15.0" fill="rgb(212,176,2)" rx="2" ry="2" />
<text  x="1100.50" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoder (616,082 us., 3.70%)</title><rect x="941.9" y="133" width="43.7" height="15.0" fill="rgb(239,83,12)" rx="2" ry="2" />
<text  x="944.90" y="143.5" >nn.M..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (3,910 us., 0.02%)</title><rect x="1189.7" y="213" width="0.3" height="15.0" fill="rgb(238,200,16)" rx="2" ry="2" />
<text  x="1192.72" y="223.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (487,456 us., 2.93%)</title><rect x="986.4" y="101" width="34.6" height="15.0" fill="rgb(205,48,11)" rx="2" ry="2" />
<text  x="989.41" y="111.5" >tr..</text>
</g>
<g >
<title>torch/nn/functional.py(1446):_relu (318,644 us., 1.91%)</title><rect x="1120.7" y="213" width="22.6" height="15.0" fill="rgb(233,166,32)" rx="2" ry="2" />
<text  x="1123.69" y="223.5" >t..</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (3,491 us., 0.02%)</title><rect x="1097.5" y="117" width="0.2" height="15.0" fill="rgb(216,87,8)" rx="2" ry="2" />
<text  x="1100.50" y="127.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(160):_forward (419,357 us., 2.52%)</title><rect x="1143.3" y="229" width="29.8" height="15.0" fill="rgb(232,196,12)" rx="2" ry="2" />
<text  x="1146.34" y="239.5" >tr..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(160):_forward (276,887 us., 1.66%)</title><rect x="1021.0" y="197" width="19.6" height="15.0" fill="rgb(216,157,4)" rx="2" ry="2" />
<text  x="1023.99" y="207.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (4,893,926 us., 29.40%)</title><rect x="10.0" y="117" width="346.9" height="15.0" fill="rgb(223,145,5)" rx="2" ry="2" />
<text  x="13.00" y="127.5" >transformers/models/opt/modeling_opt.py(553):_..</text>
</g>
<g >
<title>nn.Module:_OPTAttention (616,082 us., 3.70%)</title><rect x="941.9" y="197" width="43.7" height="15.0" fill="rgb(227,39,2)" rx="2" ry="2" />
<text  x="944.90" y="207.5" >nn.M..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (1,902 us., 0.01%)</title><rect x="985.6" y="213" width="0.1" height="15.0" fill="rgb(228,227,34)" rx="2" ry="2" />
<text  x="988.56" y="223.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,902 us., 0.01%)</title><rect x="985.6" y="149" width="0.1" height="15.0" fill="rgb(237,136,16)" rx="2" ry="2" />
<text  x="988.56" y="159.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (4,893,926 us., 29.40%)</title><rect x="10.0" y="85" width="346.9" height="15.0" fill="rgb(247,55,13)" rx="2" ry="2" />
<text  x="13.00" y="95.5" >transformers/models/opt/modeling_opt.py(840):_..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(157):__shape (276,887 us., 1.66%)</title><rect x="1021.0" y="213" width="19.6" height="15.0" fill="rgb(221,105,20)" rx="2" ry="2" />
<text  x="1023.99" y="223.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (7,897,097 us., 47.44%)</title><rect x="356.9" y="117" width="559.7" height="15.0" fill="rgb(247,10,5)" rx="2" ry="2" />
<text  x="359.88" y="127.5" >transformers/models/opt/modeling_opt.py(840):_forward</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,797 us., 0.01%)</title><rect x="1081.4" y="101" width="0.2" height="15.0" fill="rgb(253,80,46)" rx="2" ry="2" />
<text  x="1084.44" y="111.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (7,897,097 us., 47.44%)</title><rect x="356.9" y="165" width="559.7" height="15.0" fill="rgb(226,90,5)" rx="2" ry="2" />
<text  x="359.88" y="175.5" >nn.Module:_OPTDecoderLayer</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (419,357 us., 2.52%)</title><rect x="1143.3" y="85" width="29.8" height="15.0" fill="rgb(214,28,25)" rx="2" ry="2" />
<text  x="1146.34" y="95.5" >to..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (318,644 us., 1.91%)</title><rect x="1120.7" y="69" width="22.6" height="15.0" fill="rgb(239,139,42)" rx="2" ry="2" />
<text  x="1123.69" y="79.5" >p..</text>
</g>
<g >
<title>nn.Module:_OPTAttention (571,941 us., 3.44%)</title><rect x="1040.6" y="197" width="40.6" height="15.0" fill="rgb(206,72,43)" rx="2" ry="2" />
<text  x="1043.61" y="207.5" >nn...</text>
</g>
<g >
<title>&lt;built-in_function_linear&gt; (13,147,450 us., 78.97%)</title><rect x="10.0" y="229" width="931.9" height="15.0" fill="rgb(223,187,43)" rx="2" ry="2" />
<text  x="13.00" y="239.5" >&lt;built-in_function_linear&gt;</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (616,082 us., 3.70%)</title><rect x="941.9" y="149" width="43.7" height="15.0" fill="rgb(225,228,30)" rx="2" ry="2" />
<text  x="944.90" y="159.5" >tran..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (276,887 us., 1.66%)</title><rect x="1021.0" y="117" width="19.6" height="15.0" fill="rgb(234,67,38)" rx="2" ry="2" />
<text  x="1023.99" y="127.5" ></text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (7,897,097 us., 47.44%)</title><rect x="356.9" y="101" width="559.7" height="15.0" fill="rgb(247,31,39)" rx="2" ry="2" />
<text  x="359.88" y="111.5" >nn.Module:_OPTForCausalLM</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (4,893,926 us., 29.40%)</title><rect x="10.0" y="149" width="346.9" height="15.0" fill="rgb(249,3,25)" rx="2" ry="2" />
<text  x="13.00" y="159.5" >transformers/models/opt/modeling_opt.py(298):_..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (323,556 us., 1.94%)</title><rect x="1097.7" y="149" width="23.0" height="15.0" fill="rgb(236,78,0)" rx="2" ry="2" />
<text  x="1100.75" y="159.5" >t..</text>
</g>
<g >
<title>nn.Module:_OPTAttention (276,887 us., 1.66%)</title><rect x="1021.0" y="181" width="19.6" height="15.0" fill="rgb(208,201,26)" rx="2" ry="2" />
<text  x="1023.99" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoder (7,897,097 us., 47.44%)</title><rect x="356.9" y="133" width="559.7" height="15.0" fill="rgb(228,68,52)" rx="2" ry="2" />
<text  x="359.88" y="143.5" >nn.Module:_OPTDecoder</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (571,941 us., 3.44%)</title><rect x="1040.6" y="101" width="40.6" height="15.0" fill="rgb(218,222,40)" rx="2" ry="2" />
<text  x="1043.61" y="111.5" >nn...</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (224,776 us., 1.35%)</title><rect x="1081.6" y="101" width="15.9" height="15.0" fill="rgb(232,225,8)" rx="2" ry="2" />
<text  x="1084.57" y="111.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoder (1,797 us., 0.01%)</title><rect x="1081.4" y="165" width="0.2" height="15.0" fill="rgb(224,225,51)" rx="2" ry="2" />
<text  x="1084.44" y="175.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (616,082 us., 3.70%)</title><rect x="941.9" y="85" width="43.7" height="15.0" fill="rgb(228,188,26)" rx="2" ry="2" />
<text  x="944.90" y="95.5" >prof..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(160):_forward (487,456 us., 2.93%)</title><rect x="986.4" y="197" width="34.6" height="15.0" fill="rgb(223,79,42)" rx="2" ry="2" />
<text  x="989.41" y="207.5" >tr..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (571,941 us., 3.44%)</title><rect x="1040.6" y="69" width="40.6" height="15.0" fill="rgb(228,167,51)" rx="2" ry="2" />
<text  x="1043.61" y="79.5" >tor..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (276,887 us., 1.66%)</title><rect x="1021.0" y="165" width="19.6" height="15.0" fill="rgb(207,40,54)" rx="2" ry="2" />
<text  x="1023.99" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (234,555 us., 1.41%)</title><rect x="1173.1" y="149" width="16.6" height="15.0" fill="rgb(218,150,41)" rx="2" ry="2" />
<text  x="1176.07" y="159.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (224,776 us., 1.35%)</title><rect x="1081.6" y="133" width="15.9" height="15.0" fill="rgb(214,9,51)" rx="2" ry="2" />
<text  x="1084.57" y="143.5" ></text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (487,456 us., 2.93%)</title><rect x="986.4" y="85" width="34.6" height="15.0" fill="rgb(247,124,18)" rx="2" ry="2" />
<text  x="989.41" y="95.5" >nn..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (318,644 us., 1.91%)</title><rect x="1120.7" y="133" width="22.6" height="15.0" fill="rgb(237,158,36)" rx="2" ry="2" />
<text  x="1123.69" y="143.5" >t..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (4,893,926 us., 29.40%)</title><rect x="10.0" y="37" width="346.9" height="15.0" fill="rgb(239,35,48)" rx="2" ry="2" />
<text  x="13.00" y="47.5" >torch/autograd/grad_mode.py(27):_decorate_cont..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,902 us., 0.01%)</title><rect x="985.6" y="117" width="0.1" height="15.0" fill="rgb(239,105,17)" rx="2" ry="2" />
<text  x="988.56" y="127.5" ></text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (419,357 us., 2.52%)</title><rect x="1143.3" y="117" width="29.8" height="15.0" fill="rgb(210,208,3)" rx="2" ry="2" />
<text  x="1146.34" y="127.5" >nn..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (3,491 us., 0.02%)</title><rect x="1097.5" y="149" width="0.2" height="15.0" fill="rgb(229,120,44)" rx="2" ry="2" />
<text  x="1100.50" y="159.5" ></text>
</g>
<g >
<title>&lt;built-in_method_bmm_of_type_object_at_0x7f1d14a119c0&gt; (616,082 us., 3.70%)</title><rect x="941.9" y="229" width="43.7" height="15.0" fill="rgb(253,177,37)" rx="2" ry="2" />
<text  x="944.90" y="239.5" >&lt;bui..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (3,910 us., 0.02%)</title><rect x="1189.7" y="229" width="0.3" height="15.0" fill="rgb(251,43,10)" rx="2" ry="2" />
<text  x="1192.72" y="239.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (3,910 us., 0.02%)</title><rect x="1189.7" y="197" width="0.3" height="15.0" fill="rgb(223,8,31)" rx="2" ry="2" />
<text  x="1192.72" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (571,941 us., 3.44%)</title><rect x="1040.6" y="165" width="40.6" height="15.0" fill="rgb(225,29,23)" rx="2" ry="2" />
<text  x="1043.61" y="175.5" >nn...</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (3,910 us., 0.02%)</title><rect x="1189.7" y="149" width="0.3" height="15.0" fill="rgb(251,26,17)" rx="2" ry="2" />
<text  x="1192.72" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (318,644 us., 1.91%)</title><rect x="1120.7" y="149" width="22.6" height="15.0" fill="rgb(205,217,38)" rx="2" ry="2" />
<text  x="1123.69" y="159.5" >n..</text>
</g>
<g >
<title>nn.Module:_LayerNorm (228,267 us., 1.37%)</title><rect x="1081.6" y="181" width="16.1" height="15.0" fill="rgb(252,190,4)" rx="2" ry="2" />
<text  x="1084.57" y="191.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (5,101 us., 0.03%)</title><rect x="985.7" y="101" width="0.4" height="15.0" fill="rgb(238,87,43)" rx="2" ry="2" />
<text  x="988.70" y="111.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (4,893,926 us., 29.40%)</title><rect x="10.0" y="53" width="346.9" height="15.0" fill="rgb(242,185,21)" rx="2" ry="2" />
<text  x="13.00" y="63.5" >profiling/utils.py(18):_profile_model</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (419,357 us., 2.52%)</title><rect x="1143.3" y="197" width="29.8" height="15.0" fill="rgb(235,29,43)" rx="2" ry="2" />
<text  x="1146.34" y="207.5" >tr..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (419,357 us., 2.52%)</title><rect x="1143.3" y="149" width="29.8" height="15.0" fill="rgb(235,173,8)" rx="2" ry="2" />
<text  x="1146.34" y="159.5" >nn..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(89):__expand_mask (1,797 us., 0.01%)</title><rect x="1081.4" y="213" width="0.2" height="15.0" fill="rgb(215,191,51)" rx="2" ry="2" />
<text  x="1084.44" y="223.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (276,887 us., 1.66%)</title><rect x="1021.0" y="101" width="19.6" height="15.0" fill="rgb(211,214,42)" rx="2" ry="2" />
<text  x="1023.99" y="111.5" ></text>
</g>
<g >
<title>torch/nn/functional.py(1804):_softmax (487,456 us., 2.93%)</title><rect x="986.4" y="213" width="34.6" height="15.0" fill="rgb(219,120,22)" rx="2" ry="2" />
<text  x="989.41" y="223.5" >to..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (224,776 us., 1.35%)</title><rect x="1081.6" y="165" width="15.9" height="15.0" fill="rgb(242,80,2)" rx="2" ry="2" />
<text  x="1084.57" y="175.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (419,357 us., 2.52%)</title><rect x="1143.3" y="133" width="29.8" height="15.0" fill="rgb(235,127,40)" rx="2" ry="2" />
<text  x="1146.34" y="143.5" >tr..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (356,427 us., 2.14%)</title><rect x="916.6" y="181" width="25.3" height="15.0" fill="rgb(240,226,31)" rx="2" ry="2" />
<text  x="919.63" y="191.5" >t..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (1,902 us., 0.01%)</title><rect x="985.6" y="165" width="0.1" height="15.0" fill="rgb(253,199,43)" rx="2" ry="2" />
<text  x="988.56" y="175.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (276,887 us., 1.66%)</title><rect x="1021.0" y="53" width="19.6" height="15.0" fill="rgb(212,151,53)" rx="2" ry="2" />
<text  x="1023.99" y="63.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (419,357 us., 2.52%)</title><rect x="1143.3" y="181" width="29.8" height="15.0" fill="rgb(241,122,48)" rx="2" ry="2" />
<text  x="1146.34" y="191.5" >nn..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (318,644 us., 1.91%)</title><rect x="1120.7" y="117" width="22.6" height="15.0" fill="rgb(214,78,46)" rx="2" ry="2" />
<text  x="1123.69" y="127.5" >n..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (571,941 us., 3.44%)</title><rect x="1040.6" y="117" width="40.6" height="15.0" fill="rgb(217,86,45)" rx="2" ry="2" />
<text  x="1043.61" y="127.5" >tra..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (234,555 us., 1.41%)</title><rect x="1173.1" y="229" width="16.6" height="15.0" fill="rgb(213,219,1)" rx="2" ry="2" />
<text  x="1176.07" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (4,900 us., 0.03%)</title><rect x="986.1" y="101" width="0.3" height="15.0" fill="rgb(254,81,47)" rx="2" ry="2" />
<text  x="989.06" y="111.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoder (571,941 us., 3.44%)</title><rect x="1040.6" y="133" width="40.6" height="15.0" fill="rgb(216,125,51)" rx="2" ry="2" />
<text  x="1043.61" y="143.5" >nn...</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (276,887 us., 1.66%)</title><rect x="1021.0" y="85" width="19.6" height="15.0" fill="rgb(254,24,15)" rx="2" ry="2" />
<text  x="1023.99" y="95.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (4,900 us., 0.03%)</title><rect x="986.1" y="117" width="0.3" height="15.0" fill="rgb(251,155,51)" rx="2" ry="2" />
<text  x="989.06" y="127.5" ></text>
</g>
<g >
<title>&lt;built-in_method_embedding_of_type_object_at_0x7f1d14a119c0&gt; (10,001 us., 0.06%)</title><rect x="985.7" y="229" width="0.7" height="15.0" fill="rgb(234,100,11)" rx="2" ry="2" />
<text  x="988.70" y="239.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (234,555 us., 1.41%)</title><rect x="1173.1" y="133" width="16.6" height="15.0" fill="rgb(241,193,53)" rx="2" ry="2" />
<text  x="1176.07" y="143.5" ></text>
</g>
<g >
<title>all (16,647,775 us., 100%)</title><rect x="10.0" y="245" width="1180.0" height="15.0" fill="rgb(214,45,28)" rx="2" ry="2" />
<text  x="13.00" y="255.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (1,797 us., 0.01%)</title><rect x="1081.4" y="181" width="0.2" height="15.0" fill="rgb(218,213,16)" rx="2" ry="2" />
<text  x="1084.44" y="191.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,797 us., 0.01%)</title><rect x="1081.4" y="149" width="0.2" height="15.0" fill="rgb(208,174,39)" rx="2" ry="2" />
<text  x="1084.44" y="159.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (7,897,097 us., 47.44%)</title><rect x="356.9" y="181" width="559.7" height="15.0" fill="rgb(251,68,42)" rx="2" ry="2" />
<text  x="359.88" y="191.5" >transformers/models/opt/modeling_opt.py(298):_forward</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(533):__prepare_decoder_attention_mask (1,797 us., 0.01%)</title><rect x="1081.4" y="197" width="0.2" height="15.0" fill="rgb(244,222,44)" rx="2" ry="2" />
<text  x="1084.44" y="207.5" ></text>
</g>
</g>
</svg>
