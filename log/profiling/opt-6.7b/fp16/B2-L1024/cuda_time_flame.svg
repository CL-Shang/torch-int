<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="294" onload="init(evt)" viewBox="0 0 1200 294" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="294.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >CUDA Time</text>
<text id="details" x="10.00" y="277" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="277" > </text>
<g id="frames">
<g >
<title>nn.Module:_OPTAttention (1,987,065 us., 5.46%)</title><rect x="1110.2" y="213" width="64.4" height="15.0" fill="rgb(235,61,22)" rx="2" ry="2" />
<text  x="1113.22" y="223.5" >nn.Modu..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (636,762 us., 1.75%)</title><rect x="1089.5" y="101" width="20.7" height="15.0" fill="rgb(224,50,54)" rx="2" ry="2" />
<text  x="1092.55" y="111.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (474,713 us., 1.30%)</title><rect x="1032.9" y="53" width="15.4" height="15.0" fill="rgb(248,139,39)" rx="2" ry="2" />
<text  x="1035.93" y="63.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoder (474,713 us., 1.30%)</title><rect x="1032.9" y="117" width="15.4" height="15.0" fill="rgb(219,65,4)" rx="2" ry="2" />
<text  x="1035.93" y="127.5" ></text>
</g>
<g >
<title>torch/nn/modules/normalization.py(188):_forward (482,137 us., 1.32%)</title><rect x="1032.9" y="197" width="15.7" height="15.0" fill="rgb(217,165,6)" rx="2" ry="2" />
<text  x="1035.93" y="207.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (7,424 us., 0.02%)</title><rect x="1048.3" y="85" width="0.3" height="15.0" fill="rgb(224,87,21)" rx="2" ry="2" />
<text  x="1051.32" y="95.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoder (2,045,033 us., 5.62%)</title><rect x="965.4" y="133" width="66.3" height="15.0" fill="rgb(248,88,9)" rx="2" ry="2" />
<text  x="968.39" y="143.5" >nn.Modu..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (15,618,826 us., 42.90%)</title><rect x="296.5" y="69" width="506.1" height="15.0" fill="rgb(236,89,1)" rx="2" ry="2" />
<text  x="299.46" y="79.5" >torch/autograd/grad_mode.py(27):_decorate_context</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (474,713 us., 1.30%)</title><rect x="1032.9" y="133" width="15.4" height="15.0" fill="rgb(231,136,11)" rx="2" ry="2" />
<text  x="1035.93" y="143.5" ></text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (465,380 us., 1.28%)</title><rect x="1174.6" y="149" width="15.1" height="15.0" fill="rgb(227,3,36)" rx="2" ry="2" />
<text  x="1177.62" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (33,928 us., 0.09%)</title><rect x="1031.7" y="149" width="1.1" height="15.0" fill="rgb(241,33,38)" rx="2" ry="2" />
<text  x="1034.67" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (636,762 us., 1.75%)</title><rect x="1089.5" y="85" width="20.7" height="15.0" fill="rgb(248,27,9)" rx="2" ry="2" />
<text  x="1092.55" y="95.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (7,590 us., 0.02%)</title><rect x="1189.8" y="165" width="0.2" height="15.0" fill="rgb(215,107,48)" rx="2" ry="2" />
<text  x="1192.75" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (528,837 us., 1.45%)</title><rect x="948.3" y="149" width="17.1" height="15.0" fill="rgb(238,170,50)" rx="2" ry="2" />
<text  x="951.25" y="159.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(533):__prepare_decoder_attention_mask (5,122 us., 0.01%)</title><rect x="1032.8" y="197" width="0.1" height="15.0" fill="rgb(206,159,24)" rx="2" ry="2" />
<text  x="1035.77" y="207.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (1,264,664 us., 3.47%)</title><rect x="1048.6" y="181" width="40.9" height="15.0" fill="rgb(213,147,8)" rx="2" ry="2" />
<text  x="1051.56" y="191.5" >tra..</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (8,839,242 us., 24.28%)</title><rect x="10.0" y="69" width="286.5" height="15.0" fill="rgb(213,13,12)" rx="2" ry="2" />
<text  x="13.00" y="79.5" >nn.Module:_OPTForCausalLM</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (7,424 us., 0.02%)</title><rect x="1048.3" y="117" width="0.3" height="15.0" fill="rgb(221,39,13)" rx="2" ry="2" />
<text  x="1051.32" y="127.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (2,045,033 us., 5.62%)</title><rect x="965.4" y="69" width="66.3" height="15.0" fill="rgb(207,161,48)" rx="2" ry="2" />
<text  x="968.39" y="79.5" >torch/a..</text>
</g>
<g >
<title>torch/nn/modules/sparse.py(157):_forward (19,253 us., 0.05%)</title><rect x="885.9" y="197" width="0.6" height="15.0" fill="rgb(239,208,10)" rx="2" ry="2" />
<text  x="888.85" y="207.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (15,618,826 us., 42.90%)</title><rect x="296.5" y="165" width="506.1" height="15.0" fill="rgb(234,125,2)" rx="2" ry="2" />
<text  x="299.46" y="175.5" >nn.Module:_OPTDecoderLayer</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (5,122 us., 0.01%)</title><rect x="1032.8" y="165" width="0.1" height="15.0" fill="rgb(238,121,33)" rx="2" ry="2" />
<text  x="1035.77" y="175.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,264,664 us., 3.47%)</title><rect x="1048.6" y="69" width="40.9" height="15.0" fill="rgb(211,191,20)" rx="2" ry="2" />
<text  x="1051.56" y="79.5" >tor..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (2,045,033 us., 5.62%)</title><rect x="965.4" y="181" width="66.3" height="15.0" fill="rgb(241,40,51)" rx="2" ry="2" />
<text  x="968.39" y="191.5" >transfo..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (9,585 us., 0.03%)</title><rect x="886.2" y="69" width="0.3" height="15.0" fill="rgb(226,40,50)" rx="2" ry="2" />
<text  x="889.16" y="79.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (8,839,242 us., 24.28%)</title><rect x="10.0" y="149" width="286.5" height="15.0" fill="rgb(248,139,37)" rx="2" ry="2" />
<text  x="13.00" y="159.5" >transformers/models/opt/modeling_opt.p..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(160):_forward (1,987,065 us., 5.46%)</title><rect x="1110.2" y="229" width="64.4" height="15.0" fill="rgb(216,8,1)" rx="2" ry="2" />
<text  x="1113.22" y="239.5" >transfo..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (33,928 us., 0.09%)</title><rect x="1031.7" y="197" width="1.1" height="15.0" fill="rgb(253,31,9)" rx="2" ry="2" />
<text  x="1034.67" y="207.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(160):_forward (1,264,664 us., 3.47%)</title><rect x="1048.6" y="213" width="40.9" height="15.0" fill="rgb(218,135,5)" rx="2" ry="2" />
<text  x="1051.56" y="223.5" >tra..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (3,634 us., 0.01%)</title><rect x="885.7" y="213" width="0.2" height="15.0" fill="rgb(237,25,37)" rx="2" ry="2" />
<text  x="888.73" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_Linear (25,111,629 us., 68.97%)</title><rect x="10.0" y="197" width="813.8" height="15.0" fill="rgb(239,93,34)" rx="2" ry="2" />
<text  x="13.00" y="207.5" >nn.Module:_Linear</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (9,585 us., 0.03%)</title><rect x="886.2" y="149" width="0.3" height="15.0" fill="rgb(221,214,34)" rx="2" ry="2" />
<text  x="889.16" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (2,045,033 us., 5.62%)</title><rect x="965.4" y="165" width="66.3" height="15.0" fill="rgb(243,127,16)" rx="2" ry="2" />
<text  x="968.39" y="175.5" >nn.Modu..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (8,839,242 us., 24.28%)</title><rect x="10.0" y="85" width="286.5" height="15.0" fill="rgb(225,96,30)" rx="2" ry="2" />
<text  x="13.00" y="95.5" >transformers/models/opt/modeling_opt.p..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (1,905,871 us., 5.23%)</title><rect x="886.5" y="117" width="61.7" height="15.0" fill="rgb(218,114,36)" rx="2" ry="2" />
<text  x="889.47" y="127.5" >nn.Mod..</text>
</g>
<g >
<title>nn.Module:_OPTAttention (528,837 us., 1.45%)</title><rect x="948.3" y="181" width="17.1" height="15.0" fill="rgb(219,128,10)" rx="2" ry="2" />
<text  x="951.25" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (9,668 us., 0.03%)</title><rect x="885.9" y="117" width="0.3" height="15.0" fill="rgb(226,133,23)" rx="2" ry="2" />
<text  x="888.85" y="127.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (465,380 us., 1.28%)</title><rect x="1174.6" y="165" width="15.1" height="15.0" fill="rgb(205,10,16)" rx="2" ry="2" />
<text  x="1177.62" y="175.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(157):__shape (528,837 us., 1.45%)</title><rect x="948.3" y="213" width="17.1" height="15.0" fill="rgb(244,69,28)" rx="2" ry="2" />
<text  x="951.25" y="223.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoder (7,424 us., 0.02%)</title><rect x="1048.3" y="149" width="0.3" height="15.0" fill="rgb(244,62,34)" rx="2" ry="2" />
<text  x="1051.32" y="159.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (15,618,826 us., 42.90%)</title><rect x="296.5" y="181" width="506.1" height="15.0" fill="rgb(220,181,0)" rx="2" ry="2" />
<text  x="299.46" y="191.5" >transformers/models/opt/modeling_opt.py(298):_forward</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (465,380 us., 1.28%)</title><rect x="1174.6" y="133" width="15.1" height="15.0" fill="rgb(226,12,47)" rx="2" ry="2" />
<text  x="1177.62" y="143.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (653,561 us., 1.79%)</title><rect x="802.6" y="133" width="21.2" height="15.0" fill="rgb(210,15,32)" rx="2" ry="2" />
<text  x="805.63" y="143.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (2,045,033 us., 5.62%)</title><rect x="965.4" y="85" width="66.3" height="15.0" fill="rgb(231,37,53)" rx="2" ry="2" />
<text  x="968.39" y="95.5" >profili..</text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (636,762 us., 1.75%)</title><rect x="1089.5" y="149" width="20.7" height="15.0" fill="rgb(242,34,52)" rx="2" ry="2" />
<text  x="1092.55" y="159.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (9,585 us., 0.03%)</title><rect x="886.2" y="117" width="0.3" height="15.0" fill="rgb(243,22,42)" rx="2" ry="2" />
<text  x="889.16" y="127.5" ></text>
</g>
<g >
<title>&lt;built-in_method_cumsum_of_type_object_at_0x7fc7384e99c0&gt; (3,634 us., 0.01%)</title><rect x="885.7" y="229" width="0.2" height="15.0" fill="rgb(230,25,46)" rx="2" ry="2" />
<text  x="888.73" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoder (9,585 us., 0.03%)</title><rect x="886.2" y="133" width="0.3" height="15.0" fill="rgb(209,114,20)" rx="2" ry="2" />
<text  x="889.16" y="143.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (1,905,871 us., 5.23%)</title><rect x="886.5" y="133" width="61.7" height="15.0" fill="rgb(209,140,25)" rx="2" ry="2" />
<text  x="889.47" y="143.5" >transf..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (1,910,604 us., 5.25%)</title><rect x="823.8" y="181" width="61.9" height="15.0" fill="rgb(251,105,15)" rx="2" ry="2" />
<text  x="826.81" y="191.5" >transf..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (33,928 us., 0.09%)</title><rect x="1031.7" y="181" width="1.1" height="15.0" fill="rgb(206,155,19)" rx="2" ry="2" />
<text  x="1034.67" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (9,585 us., 0.03%)</title><rect x="886.2" y="101" width="0.3" height="15.0" fill="rgb(239,165,51)" rx="2" ry="2" />
<text  x="889.16" y="111.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,987,065 us., 5.46%)</title><rect x="1110.2" y="133" width="64.4" height="15.0" fill="rgb(246,138,19)" rx="2" ry="2" />
<text  x="1113.22" y="143.5" >transfo..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (1,910,604 us., 5.25%)</title><rect x="823.8" y="149" width="61.9" height="15.0" fill="rgb(225,92,37)" rx="2" ry="2" />
<text  x="826.81" y="159.5" >transf..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (33,928 us., 0.09%)</title><rect x="1031.7" y="133" width="1.1" height="15.0" fill="rgb(216,174,52)" rx="2" ry="2" />
<text  x="1034.67" y="143.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (1,264,664 us., 3.47%)</title><rect x="1048.6" y="165" width="40.9" height="15.0" fill="rgb(208,177,14)" rx="2" ry="2" />
<text  x="1051.56" y="175.5" >nn...</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (7,590 us., 0.02%)</title><rect x="1189.8" y="197" width="0.2" height="15.0" fill="rgb(247,180,29)" rx="2" ry="2" />
<text  x="1192.75" y="207.5" ></text>
</g>
<g >
<title>torch/nn/functional.py(1804):_softmax (1,905,871 us., 5.23%)</title><rect x="886.5" y="213" width="61.7" height="15.0" fill="rgb(238,2,51)" rx="2" ry="2" />
<text  x="889.47" y="223.5" >torch/..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (33,928 us., 0.09%)</title><rect x="1031.7" y="117" width="1.1" height="15.0" fill="rgb(254,5,12)" rx="2" ry="2" />
<text  x="1034.67" y="127.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (465,380 us., 1.28%)</title><rect x="1174.6" y="229" width="15.1" height="15.0" fill="rgb(236,86,18)" rx="2" ry="2" />
<text  x="1177.62" y="239.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (636,762 us., 1.75%)</title><rect x="1089.5" y="165" width="20.7" height="15.0" fill="rgb(249,82,2)" rx="2" ry="2" />
<text  x="1092.55" y="175.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (15,618,826 us., 42.90%)</title><rect x="296.5" y="117" width="506.1" height="15.0" fill="rgb(244,59,15)" rx="2" ry="2" />
<text  x="299.46" y="127.5" >transformers/models/opt/modeling_opt.py(840):_forward</text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (8,839,242 us., 24.28%)</title><rect x="10.0" y="133" width="286.5" height="15.0" fill="rgb(254,205,47)" rx="2" ry="2" />
<text  x="13.00" y="143.5" >nn.Module:_OPTDecoderLayer</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(160):_forward (1,910,604 us., 5.25%)</title><rect x="823.8" y="213" width="61.9" height="15.0" fill="rgb(222,82,34)" rx="2" ry="2" />
<text  x="826.81" y="223.5" >transf..</text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (465,380 us., 1.28%)</title><rect x="1174.6" y="213" width="15.1" height="15.0" fill="rgb(213,68,14)" rx="2" ry="2" />
<text  x="1177.62" y="223.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (9,668 us., 0.03%)</title><rect x="885.9" y="85" width="0.3" height="15.0" fill="rgb(239,8,15)" rx="2" ry="2" />
<text  x="888.85" y="95.5" ></text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (528,837 us., 1.45%)</title><rect x="948.3" y="85" width="17.1" height="15.0" fill="rgb(244,98,32)" rx="2" ry="2" />
<text  x="951.25" y="95.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (1,264,664 us., 3.47%)</title><rect x="1048.6" y="149" width="40.9" height="15.0" fill="rgb(245,208,21)" rx="2" ry="2" />
<text  x="1051.56" y="159.5" >tra..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (474,713 us., 1.30%)</title><rect x="1032.9" y="101" width="15.4" height="15.0" fill="rgb(216,122,48)" rx="2" ry="2" />
<text  x="1035.93" y="111.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (5,122 us., 0.01%)</title><rect x="1032.8" y="181" width="0.1" height="15.0" fill="rgb(232,15,13)" rx="2" ry="2" />
<text  x="1035.77" y="191.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(160):_forward (528,837 us., 1.45%)</title><rect x="948.3" y="197" width="17.1" height="15.0" fill="rgb(248,189,15)" rx="2" ry="2" />
<text  x="951.25" y="207.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (15,618,826 us., 42.90%)</title><rect x="296.5" y="149" width="506.1" height="15.0" fill="rgb(221,175,34)" rx="2" ry="2" />
<text  x="299.46" y="159.5" >transformers/models/opt/modeling_opt.py(553):_forward</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(160):_forward (2,045,033 us., 5.62%)</title><rect x="965.4" y="213" width="66.3" height="15.0" fill="rgb(240,61,48)" rx="2" ry="2" />
<text  x="968.39" y="223.5" >transfo..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (5,122 us., 0.01%)</title><rect x="1032.8" y="149" width="0.1" height="15.0" fill="rgb(235,95,25)" rx="2" ry="2" />
<text  x="1035.77" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (653,561 us., 1.79%)</title><rect x="802.6" y="165" width="21.2" height="15.0" fill="rgb(228,71,31)" rx="2" ry="2" />
<text  x="805.63" y="175.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (636,762 us., 1.75%)</title><rect x="1089.5" y="133" width="20.7" height="15.0" fill="rgb(220,80,36)" rx="2" ry="2" />
<text  x="1092.55" y="143.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (8,839,242 us., 24.28%)</title><rect x="10.0" y="37" width="286.5" height="15.0" fill="rgb(243,148,4)" rx="2" ry="2" />
<text  x="13.00" y="47.5" >torch/autograd/grad_mode.py(27):_decor..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (15,618,826 us., 42.90%)</title><rect x="296.5" y="85" width="506.1" height="15.0" fill="rgb(236,162,27)" rx="2" ry="2" />
<text  x="299.46" y="95.5" >profiling/utils.py(18):_profile_model</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (2,045,033 us., 5.62%)</title><rect x="965.4" y="117" width="66.3" height="15.0" fill="rgb(245,128,27)" rx="2" ry="2" />
<text  x="968.39" y="127.5" >transfo..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (7,590 us., 0.02%)</title><rect x="1189.8" y="149" width="0.2" height="15.0" fill="rgb(241,0,4)" rx="2" ry="2" />
<text  x="1192.75" y="159.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(114):_forward (9,585 us., 0.03%)</title><rect x="886.2" y="181" width="0.3" height="15.0" fill="rgb(236,52,53)" rx="2" ry="2" />
<text  x="889.16" y="191.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (528,837 us., 1.45%)</title><rect x="948.3" y="133" width="17.1" height="15.0" fill="rgb(236,38,38)" rx="2" ry="2" />
<text  x="951.25" y="143.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (465,380 us., 1.28%)</title><rect x="1174.6" y="197" width="15.1" height="15.0" fill="rgb(211,226,29)" rx="2" ry="2" />
<text  x="1177.62" y="207.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (653,561 us., 1.79%)</title><rect x="802.6" y="181" width="21.2" height="15.0" fill="rgb(238,104,24)" rx="2" ry="2" />
<text  x="805.63" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (1,264,664 us., 3.47%)</title><rect x="1048.6" y="101" width="40.9" height="15.0" fill="rgb(206,222,19)" rx="2" ry="2" />
<text  x="1051.56" y="111.5" >nn...</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (1,910,604 us., 5.25%)</title><rect x="823.8" y="101" width="61.9" height="15.0" fill="rgb(208,139,1)" rx="2" ry="2" />
<text  x="826.81" y="111.5" >nn.Mod..</text>
</g>
<g >
<title>nn.Module:_OPTAttention (1,910,604 us., 5.25%)</title><rect x="823.8" y="197" width="61.9" height="15.0" fill="rgb(227,135,44)" rx="2" ry="2" />
<text  x="826.81" y="207.5" >nn.Mod..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(533):__prepare_decoder_attention_mask (33,928 us., 0.09%)</title><rect x="1031.7" y="213" width="1.1" height="15.0" fill="rgb(218,116,43)" rx="2" ry="2" />
<text  x="1034.67" y="223.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (9,668 us., 0.03%)</title><rect x="885.9" y="101" width="0.3" height="15.0" fill="rgb(217,5,50)" rx="2" ry="2" />
<text  x="888.85" y="111.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (8,839,242 us., 24.28%)</title><rect x="10.0" y="53" width="286.5" height="15.0" fill="rgb(221,173,27)" rx="2" ry="2" />
<text  x="13.00" y="63.5" >profiling/utils.py(18):_profile_model</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,905,871 us., 5.23%)</title><rect x="886.5" y="69" width="61.7" height="15.0" fill="rgb(248,105,37)" rx="2" ry="2" />
<text  x="889.47" y="79.5" >profil..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (7,590 us., 0.02%)</title><rect x="1189.8" y="213" width="0.2" height="15.0" fill="rgb(219,64,22)" rx="2" ry="2" />
<text  x="1192.75" y="223.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (9,668 us., 0.03%)</title><rect x="885.9" y="165" width="0.3" height="15.0" fill="rgb(224,130,45)" rx="2" ry="2" />
<text  x="888.85" y="175.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (1,905,871 us., 5.23%)</title><rect x="886.5" y="165" width="61.7" height="15.0" fill="rgb(214,201,48)" rx="2" ry="2" />
<text  x="889.47" y="175.5" >transf..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (15,618,826 us., 42.90%)</title><rect x="296.5" y="133" width="506.1" height="15.0" fill="rgb(215,195,4)" rx="2" ry="2" />
<text  x="299.46" y="143.5" >nn.Module:_OPTDecoder</text>
</g>
<g >
<title>torch/nn/functional.py(2099):_embedding (19,253 us., 0.05%)</title><rect x="885.9" y="213" width="0.6" height="15.0" fill="rgb(225,133,1)" rx="2" ry="2" />
<text  x="888.85" y="223.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,910,604 us., 5.25%)</title><rect x="823.8" y="69" width="61.9" height="15.0" fill="rgb(251,15,10)" rx="2" ry="2" />
<text  x="826.81" y="79.5" >torch/..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (3,634 us., 0.01%)</title><rect x="885.7" y="181" width="0.2" height="15.0" fill="rgb(247,69,54)" rx="2" ry="2" />
<text  x="888.73" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoder (9,668 us., 0.03%)</title><rect x="885.9" y="149" width="0.3" height="15.0" fill="rgb(254,8,5)" rx="2" ry="2" />
<text  x="888.85" y="159.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (3,634 us., 0.01%)</title><rect x="885.7" y="149" width="0.2" height="15.0" fill="rgb(249,143,14)" rx="2" ry="2" />
<text  x="888.73" y="159.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (5,122 us., 0.01%)</title><rect x="1032.8" y="117" width="0.1" height="15.0" fill="rgb(232,51,46)" rx="2" ry="2" />
<text  x="1035.77" y="127.5" ></text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (3,634 us., 0.01%)</title><rect x="885.7" y="197" width="0.2" height="15.0" fill="rgb(242,4,43)" rx="2" ry="2" />
<text  x="888.73" y="207.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (636,762 us., 1.75%)</title><rect x="1089.5" y="53" width="20.7" height="15.0" fill="rgb(243,54,34)" rx="2" ry="2" />
<text  x="1092.55" y="63.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (8,839,242 us., 24.28%)</title><rect x="10.0" y="117" width="286.5" height="15.0" fill="rgb(205,51,30)" rx="2" ry="2" />
<text  x="13.00" y="127.5" >transformers/models/opt/modeling_opt.p..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (3,634 us., 0.01%)</title><rect x="885.7" y="117" width="0.2" height="15.0" fill="rgb(243,175,5)" rx="2" ry="2" />
<text  x="888.73" y="127.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (7,424 us., 0.02%)</title><rect x="1048.3" y="101" width="0.3" height="15.0" fill="rgb(245,24,16)" rx="2" ry="2" />
<text  x="1051.32" y="111.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (1,910,604 us., 5.25%)</title><rect x="823.8" y="165" width="61.9" height="15.0" fill="rgb(243,71,5)" rx="2" ry="2" />
<text  x="826.81" y="175.5" >nn.Mod..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,264,664 us., 3.47%)</title><rect x="1048.6" y="85" width="40.9" height="15.0" fill="rgb(238,110,52)" rx="2" ry="2" />
<text  x="1051.56" y="95.5" >pro..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (1,910,604 us., 5.25%)</title><rect x="823.8" y="133" width="61.9" height="15.0" fill="rgb(235,70,15)" rx="2" ry="2" />
<text  x="826.81" y="143.5" >nn.Mod..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (8,839,242 us., 24.28%)</title><rect x="10.0" y="101" width="286.5" height="15.0" fill="rgb(228,6,0)" rx="2" ry="2" />
<text  x="13.00" y="111.5" >nn.Module:_OPTDecoder</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(160):_forward (1,905,871 us., 5.23%)</title><rect x="886.5" y="197" width="61.7" height="15.0" fill="rgb(240,199,25)" rx="2" ry="2" />
<text  x="889.47" y="207.5" >transf..</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (474,713 us., 1.30%)</title><rect x="1032.9" y="85" width="15.4" height="15.0" fill="rgb(248,79,27)" rx="2" ry="2" />
<text  x="1035.93" y="95.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,987,065 us., 5.46%)</title><rect x="1110.2" y="85" width="64.4" height="15.0" fill="rgb(234,201,25)" rx="2" ry="2" />
<text  x="1113.22" y="95.5" >torch/a..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (2,045,033 us., 5.62%)</title><rect x="965.4" y="149" width="66.3" height="15.0" fill="rgb(231,95,7)" rx="2" ry="2" />
<text  x="968.39" y="159.5" >transfo..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (653,561 us., 1.79%)</title><rect x="802.6" y="149" width="21.2" height="15.0" fill="rgb(229,87,42)" rx="2" ry="2" />
<text  x="805.63" y="159.5" ></text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (1,905,871 us., 5.23%)</title><rect x="886.5" y="85" width="61.7" height="15.0" fill="rgb(236,224,14)" rx="2" ry="2" />
<text  x="889.47" y="95.5" >nn.Mod..</text>
</g>
<g >
<title>&lt;built-in_method_relu_of_type_object_at_0x7fc7384e99c0&gt; (636,762 us., 1.75%)</title><rect x="1089.5" y="229" width="20.7" height="15.0" fill="rgb(249,66,49)" rx="2" ry="2" />
<text  x="1092.55" y="239.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (474,713 us., 1.30%)</title><rect x="1032.9" y="165" width="15.4" height="15.0" fill="rgb(230,216,23)" rx="2" ry="2" />
<text  x="1035.93" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoder (3,634 us., 0.01%)</title><rect x="885.7" y="165" width="0.2" height="15.0" fill="rgb(217,10,11)" rx="2" ry="2" />
<text  x="888.73" y="175.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (528,837 us., 1.45%)</title><rect x="948.3" y="53" width="17.1" height="15.0" fill="rgb(217,190,51)" rx="2" ry="2" />
<text  x="951.25" y="63.5" ></text>
</g>
<g >
<title>nn.Module:_ReLU (636,762 us., 1.75%)</title><rect x="1089.5" y="181" width="20.7" height="15.0" fill="rgb(207,14,41)" rx="2" ry="2" />
<text  x="1092.55" y="191.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (7,590 us., 0.02%)</title><rect x="1189.8" y="229" width="0.2" height="15.0" fill="rgb(218,177,21)" rx="2" ry="2" />
<text  x="1192.75" y="239.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (3,634 us., 0.01%)</title><rect x="885.7" y="101" width="0.2" height="15.0" fill="rgb(226,159,2)" rx="2" ry="2" />
<text  x="888.73" y="111.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (1,987,065 us., 5.46%)</title><rect x="1110.2" y="197" width="64.4" height="15.0" fill="rgb(227,35,43)" rx="2" ry="2" />
<text  x="1113.22" y="207.5" >transfo..</text>
</g>
<g >
<title>&lt;built-in_method_max_of_type_object_at_0x7fc7384e99c0&gt; (1,264,664 us., 3.47%)</title><rect x="1048.6" y="229" width="40.9" height="15.0" fill="rgb(212,192,9)" rx="2" ry="2" />
<text  x="1051.56" y="239.5" >&lt;bu..</text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (1,905,871 us., 5.23%)</title><rect x="886.5" y="53" width="61.7" height="15.0" fill="rgb(231,112,23)" rx="2" ry="2" />
<text  x="889.47" y="63.5" >torch/..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (33,928 us., 0.09%)</title><rect x="1031.7" y="165" width="1.1" height="15.0" fill="rgb(218,187,38)" rx="2" ry="2" />
<text  x="1034.67" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (15,618,826 us., 42.90%)</title><rect x="296.5" y="101" width="506.1" height="15.0" fill="rgb(206,207,54)" rx="2" ry="2" />
<text  x="299.46" y="111.5" >nn.Module:_OPTForCausalLM</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (9,585 us., 0.03%)</title><rect x="886.2" y="85" width="0.3" height="15.0" fill="rgb(225,62,30)" rx="2" ry="2" />
<text  x="889.16" y="95.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (528,837 us., 1.45%)</title><rect x="948.3" y="69" width="17.1" height="15.0" fill="rgb(238,5,36)" rx="2" ry="2" />
<text  x="951.25" y="79.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (5,122 us., 0.01%)</title><rect x="1032.8" y="101" width="0.1" height="15.0" fill="rgb(219,35,28)" rx="2" ry="2" />
<text  x="1035.77" y="111.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (474,713 us., 1.30%)</title><rect x="1032.9" y="149" width="15.4" height="15.0" fill="rgb(241,29,18)" rx="2" ry="2" />
<text  x="1035.93" y="159.5" ></text>
</g>
<g >
<title>&lt;built-in_method_encode_of_str_object_at_0x7fc643fe04b0&gt; (4,519,188 us., 12.41%)</title><rect x="886.5" y="229" width="146.4" height="15.0" fill="rgb(231,128,31)" rx="2" ry="2" />
<text  x="889.47" y="239.5" >&lt;built-in_method_e..</text>
</g>
<g >
<title>&lt;built-in_method_embedding_of_type_object_at_0x7fc7384e99c0&gt; (19,253 us., 0.05%)</title><rect x="885.9" y="229" width="0.6" height="15.0" fill="rgb(209,208,16)" rx="2" ry="2" />
<text  x="888.85" y="239.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(89):__expand_mask (5,122 us., 0.01%)</title><rect x="1032.8" y="213" width="0.1" height="15.0" fill="rgb(235,111,49)" rx="2" ry="2" />
<text  x="1035.77" y="223.5" ></text>
</g>
<g >
<title>torch/autograd/grad_mode.py(27):_decorate_context (465,380 us., 1.28%)</title><rect x="1174.6" y="117" width="15.1" height="15.0" fill="rgb(216,90,34)" rx="2" ry="2" />
<text  x="1177.62" y="127.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoder (636,762 us., 1.75%)</title><rect x="1089.5" y="117" width="20.7" height="15.0" fill="rgb(217,118,41)" rx="2" ry="2" />
<text  x="1092.55" y="127.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,905,871 us., 5.23%)</title><rect x="886.5" y="101" width="61.7" height="15.0" fill="rgb(207,157,19)" rx="2" ry="2" />
<text  x="889.47" y="111.5" >transf..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(160):_forward (8,839,242 us., 24.28%)</title><rect x="10.0" y="181" width="286.5" height="15.0" fill="rgb(233,153,12)" rx="2" ry="2" />
<text  x="13.00" y="191.5" >transformers/models/opt/modeling_opt.p..</text>
</g>
<g >
<title>nn.Module:_OPTLearnedPositionalEmbedding (9,585 us., 0.03%)</title><rect x="886.2" y="165" width="0.3" height="15.0" fill="rgb(227,159,1)" rx="2" ry="2" />
<text  x="889.16" y="175.5" ></text>
</g>
<g >
<title>all (36,410,930 us., 100%)</title><rect x="10.0" y="245" width="1180.0" height="15.0" fill="rgb(226,33,5)" rx="2" ry="2" />
<text  x="13.00" y="255.5" ></text>
</g>
<g >
<title>torch/nn/functional.py(1446):_relu (636,762 us., 1.75%)</title><rect x="1089.5" y="213" width="20.7" height="15.0" fill="rgb(241,161,33)" rx="2" ry="2" />
<text  x="1092.55" y="223.5" ></text>
</g>
<g >
<title>torch/nn/modules/activation.py(97):_forward (636,762 us., 1.75%)</title><rect x="1089.5" y="197" width="20.7" height="15.0" fill="rgb(245,115,39)" rx="2" ry="2" />
<text  x="1092.55" y="207.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (7,424 us., 0.02%)</title><rect x="1048.3" y="133" width="0.3" height="15.0" fill="rgb(230,21,36)" rx="2" ry="2" />
<text  x="1051.32" y="143.5" ></text>
</g>
<g >
<title>torch/nn/functional.py(2488):_layer_norm (482,137 us., 1.32%)</title><rect x="1032.9" y="213" width="15.7" height="15.0" fill="rgb(245,118,37)" rx="2" ry="2" />
<text  x="1035.93" y="223.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (636,762 us., 1.75%)</title><rect x="1089.5" y="69" width="20.7" height="15.0" fill="rgb(205,59,36)" rx="2" ry="2" />
<text  x="1092.55" y="79.5" ></text>
</g>
<g >
<title>torch/nn/modules/linear.py(113):_forward (25,111,629 us., 68.97%)</title><rect x="10.0" y="213" width="813.8" height="15.0" fill="rgb(224,96,42)" rx="2" ry="2" />
<text  x="13.00" y="223.5" >torch/nn/modules/linear.py(113):_forward</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (1,987,065 us., 5.46%)</title><rect x="1110.2" y="165" width="64.4" height="15.0" fill="rgb(250,52,47)" rx="2" ry="2" />
<text  x="1113.22" y="175.5" >transfo..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,264,664 us., 3.47%)</title><rect x="1048.6" y="117" width="40.9" height="15.0" fill="rgb(233,46,40)" rx="2" ry="2" />
<text  x="1051.56" y="127.5" >tra..</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (7,590 us., 0.02%)</title><rect x="1189.8" y="181" width="0.2" height="15.0" fill="rgb(253,190,23)" rx="2" ry="2" />
<text  x="1192.75" y="191.5" ></text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (1,987,065 us., 5.46%)</title><rect x="1110.2" y="117" width="64.4" height="15.0" fill="rgb(251,117,31)" rx="2" ry="2" />
<text  x="1113.22" y="127.5" >nn.Modu..</text>
</g>
<g >
<title>nn.Module:_OPTAttention (8,839,242 us., 24.28%)</title><rect x="10.0" y="165" width="286.5" height="15.0" fill="rgb(215,58,9)" rx="2" ry="2" />
<text  x="13.00" y="175.5" >nn.Module:_OPTAttention</text>
</g>
<g >
<title>nn.Module:_OPTAttention (2,045,033 us., 5.62%)</title><rect x="965.4" y="197" width="66.3" height="15.0" fill="rgb(237,205,27)" rx="2" ry="2" />
<text  x="968.39" y="207.5" >nn.Modu..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(553):_forward (7,424 us., 0.02%)</title><rect x="1048.3" y="165" width="0.3" height="15.0" fill="rgb(208,195,10)" rx="2" ry="2" />
<text  x="1051.32" y="175.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoder (1,987,065 us., 5.46%)</title><rect x="1110.2" y="149" width="64.4" height="15.0" fill="rgb(254,160,44)" rx="2" ry="2" />
<text  x="1113.22" y="159.5" >nn.Modu..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (528,837 us., 1.45%)</title><rect x="948.3" y="117" width="17.1" height="15.0" fill="rgb(238,12,23)" rx="2" ry="2" />
<text  x="951.25" y="127.5" ></text>
</g>
<g >
<title>&lt;built-in_function_linear&gt; (25,111,629 us., 68.97%)</title><rect x="10.0" y="229" width="813.8" height="15.0" fill="rgb(225,31,20)" rx="2" ry="2" />
<text  x="13.00" y="239.5" >&lt;built-in_function_linear&gt;</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (528,837 us., 1.45%)</title><rect x="948.3" y="101" width="17.1" height="15.0" fill="rgb(223,130,53)" rx="2" ry="2" />
<text  x="951.25" y="111.5" ></text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (1,987,065 us., 5.46%)</title><rect x="1110.2" y="181" width="64.4" height="15.0" fill="rgb(224,48,35)" rx="2" ry="2" />
<text  x="1113.22" y="191.5" >nn.Modu..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (9,668 us., 0.03%)</title><rect x="885.9" y="133" width="0.3" height="15.0" fill="rgb(224,145,3)" rx="2" ry="2" />
<text  x="888.85" y="143.5" ></text>
</g>
<g >
<title>&lt;built-in_method_layer_norm_of_type_object_at_0x7fc7384e99c0&gt; (482,137 us., 1.32%)</title><rect x="1032.9" y="229" width="15.7" height="15.0" fill="rgb(210,8,38)" rx="2" ry="2" />
<text  x="1035.93" y="239.5" ></text>
</g>
<g >
<title>nn.Module:_OPTAttention (1,264,664 us., 3.47%)</title><rect x="1048.6" y="197" width="40.9" height="15.0" fill="rgb(223,141,17)" rx="2" ry="2" />
<text  x="1051.56" y="207.5" >nn...</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (3,634 us., 0.01%)</title><rect x="885.7" y="133" width="0.2" height="15.0" fill="rgb(245,18,38)" rx="2" ry="2" />
<text  x="888.73" y="143.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,910,604 us., 5.25%)</title><rect x="823.8" y="85" width="61.9" height="15.0" fill="rgb(207,202,16)" rx="2" ry="2" />
<text  x="826.81" y="95.5" >profil..</text>
</g>
<g >
<title>nn.Module:_OPTDecoderLayer (1,905,871 us., 5.23%)</title><rect x="886.5" y="149" width="61.7" height="15.0" fill="rgb(229,128,11)" rx="2" ry="2" />
<text  x="889.47" y="159.5" >nn.Mod..</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (2,045,033 us., 5.62%)</title><rect x="965.4" y="101" width="66.3" height="15.0" fill="rgb(230,81,39)" rx="2" ry="2" />
<text  x="968.39" y="111.5" >nn.Modu..</text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(298):_forward (528,837 us., 1.45%)</title><rect x="948.3" y="165" width="17.1" height="15.0" fill="rgb(210,57,23)" rx="2" ry="2" />
<text  x="951.25" y="175.5" ></text>
</g>
<g >
<title>&lt;built-in_method_bmm_of_type_object_at_0x7fc7384e99c0&gt; (1,910,604 us., 5.25%)</title><rect x="823.8" y="229" width="61.9" height="15.0" fill="rgb(225,221,17)" rx="2" ry="2" />
<text  x="826.81" y="239.5" >&lt;built..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (1,264,664 us., 3.47%)</title><rect x="1048.6" y="133" width="40.9" height="15.0" fill="rgb(254,97,39)" rx="2" ry="2" />
<text  x="1051.56" y="143.5" >nn...</text>
</g>
<g >
<title>nn.Module:_OPTForCausalLM (5,122 us., 0.01%)</title><rect x="1032.8" y="133" width="0.1" height="15.0" fill="rgb(243,113,15)" rx="2" ry="2" />
<text  x="1035.77" y="143.5" ></text>
</g>
<g >
<title>nn.Module:_LayerNorm (482,137 us., 1.32%)</title><rect x="1032.9" y="181" width="15.7" height="15.0" fill="rgb(225,79,19)" rx="2" ry="2" />
<text  x="1035.93" y="191.5" ></text>
</g>
<g >
<title>transformers/models/opt/modeling_opt.py(840):_forward (1,910,604 us., 5.25%)</title><rect x="823.8" y="117" width="61.9" height="15.0" fill="rgb(232,208,35)" rx="2" ry="2" />
<text  x="826.81" y="127.5" >transf..</text>
</g>
<g >
<title>nn.Module:_Embedding (9,668 us., 0.03%)</title><rect x="885.9" y="181" width="0.3" height="15.0" fill="rgb(254,20,54)" rx="2" ry="2" />
<text  x="888.85" y="191.5" ></text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (1,987,065 us., 5.46%)</title><rect x="1110.2" y="101" width="64.4" height="15.0" fill="rgb(231,170,11)" rx="2" ry="2" />
<text  x="1113.22" y="111.5" >profili..</text>
</g>
<g >
<title>profiling/utils.py(18):_profile_model (474,713 us., 1.30%)</title><rect x="1032.9" y="69" width="15.4" height="15.0" fill="rgb(233,198,34)" rx="2" ry="2" />
<text  x="1035.93" y="79.5" ></text>
</g>
<g >
<title>nn.Module:_OPTAttention (1,905,871 us., 5.23%)</title><rect x="886.5" y="181" width="61.7" height="15.0" fill="rgb(251,173,40)" rx="2" ry="2" />
<text  x="889.47" y="191.5" >nn.Mod..</text>
</g>
<g >
<title>nn.Module:_OPTDecoder (465,380 us., 1.28%)</title><rect x="1174.6" y="181" width="15.1" height="15.0" fill="rgb(211,4,49)" rx="2" ry="2" />
<text  x="1177.62" y="191.5" ></text>
</g>
</g>
</svg>
